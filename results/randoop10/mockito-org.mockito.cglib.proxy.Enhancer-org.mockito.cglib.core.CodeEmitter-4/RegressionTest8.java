import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest8 {

    public static boolean debug = false;

    @Test
    public void test04001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04001");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter0.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter6 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter0.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter9.getClassInfo();
        org.mockito.cglib.core.Signature signature16 = new org.mockito.cglib.core.Signature("org/mockito/asm/ClassAdapter", "L1933965693");
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        java.lang.Class<?> wildcardClass19 = classAdapter18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        boolean boolean23 = signature16.equals((java.lang.Object) type22);
        org.mockito.asm.Type type24 = type22.getElementType();
        int int25 = type22.getDimensions();
        int int26 = type22.getDimensions();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor37);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classAdapter39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter39);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classAdapter39);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter9.declare_field(119, "L1346580404(VZVDDZ)D", type22, (java.lang.Object) classAdapter39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo32);
    }

    @Test
    public void test04002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04002");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        org.mockito.asm.ClassAdapter classAdapter10 = new org.mockito.asm.ClassAdapter(classVisitor8);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classAdapter10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor13);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classAdapter15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer23.setCallback(callback26);
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer23.setCallback(callback28);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer23.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer23.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor33);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        boolean boolean37 = namingPolicy31.equals((java.lang.Object) classAdapter35);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter40 = classEmitter12.begin_static();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@281faac7");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNotNull(generatorStrategy30);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test04003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04003");
        org.mockito.cglib.core.Signature signature3 = new org.mockito.cglib.core.Signature("", "Z");
        org.mockito.asm.Type type4 = signature3.getReturnType();
        java.lang.String str5 = type4.toString();
        int int7 = type4.getOpcode(112);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        boolean boolean12 = type9.equals((java.lang.Object) classVisitor10);
        int int14 = type9.getOpcode(116);
        java.lang.String str15 = type9.getClassName();
        int int16 = type9.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getObjectType("L313695521");
        org.mockito.asm.Type type20 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.String str21 = type20.toString();
        int int23 = type20.getOpcode(1);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local27 = new org.mockito.cglib.core.Local(0, type26);
        int int28 = type26.getSort();
        java.lang.String str29 = type26.getClassName();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local33 = new org.mockito.cglib.core.Local(0, type32);
        org.mockito.cglib.core.Local local34 = new org.mockito.cglib.core.Local((int) (byte) 100, type32);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        boolean boolean42 = type39.equals((java.lang.Object) classVisitor40);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str44 = type43.getDescriptor();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type46 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor48);
        boolean boolean50 = type47.equals((java.lang.Object) classVisitor48);
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type38, type39, type43, type45, type46, type47 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray51);
        org.mockito.cglib.core.Signature signature53 = new org.mockito.cglib.core.Signature("L1057808593", type36, typeArray51);
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray51);
        org.mockito.cglib.core.Signature signature55 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type26, typeArray51);
        org.mockito.asm.Type type56 = signature55.getReturnType();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback60 = null;
        enhancer57.setCallback(callback60);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter62 = null;
        enhancer57.setCallbackFilter(callbackFilter62);
        org.mockito.cglib.proxy.Callback callback64 = null;
        enhancer57.setCallback(callback64);
        enhancer57.setInterceptDuringConstruction(true);
        boolean boolean68 = signature55.equals((java.lang.Object) true);
        org.mockito.asm.Type[] typeArray69 = signature55.getArgumentTypes();
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray69);
        org.mockito.cglib.core.Signature signature71 = new org.mockito.cglib.core.Signature("L1714799919", type19, typeArray69);
        org.mockito.cglib.core.Signature signature72 = new org.mockito.cglib.core.Signature("L1538369482", type9, typeArray69);
        org.mockito.cglib.core.Signature signature73 = new org.mockito.cglib.core.Signature("L2083275733", type4, typeArray69);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str74 = type4.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Z" + "'", str5, "Z");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 112 + "'", int7 == 112);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 116 + "'", int14 == 116);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "boolean" + "'", str15, "boolean");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "B" + "'", str21, "B");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "double" + "'", str29, "double");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "V" + "'", str44, "V");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(VZVDDZ)V" + "'", str52, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(VZVDDZ)D" + "'", str54, "(VZVDDZ)D");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(VZVDDZ)B" + "'", str70, "(VZVDDZ)B");
    }

    @Test
    public void test04004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04004");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer0.setCallbackFilter(callbackFilter10);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        enhancer0.setAttemptLoad(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer18.setCallback(callback21);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer18.setCallbackFilter(callbackFilter23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer25.setCallback(callback28);
        enhancer25.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass32 = enhancer25.getClass();
        java.lang.String str33 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass32);
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass32);
        enhancer18.setSuperclass((java.lang.Class) wildcardClass32);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer36.setCallback(callback37);
        enhancer36.setInterceptDuringConstruction(true);
        boolean boolean41 = enhancer36.getAttemptLoad();
        boolean boolean42 = enhancer36.getUseCache();
        enhancer36.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer45.setCallback(callback48);
        enhancer45.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy52 = enhancer45.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer53.setCallback(callback56);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        enhancer58.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback61 = null;
        enhancer58.setCallback(callback61);
        org.mockito.cglib.proxy.Callback callback63 = null;
        enhancer58.setCallback(callback63);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        java.lang.Class<?> wildcardClass70 = classAdapter69.getClass();
        java.lang.String str71 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass70);
        org.mockito.asm.ClassVisitor classVisitor72 = null;
        org.mockito.asm.ClassAdapter classAdapter73 = new org.mockito.asm.ClassAdapter(classVisitor72);
        java.lang.Class<?> wildcardClass74 = classAdapter73.getClass();
        java.lang.String str75 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass74);
        org.mockito.asm.ClassVisitor classVisitor76 = null;
        org.mockito.asm.ClassAdapter classAdapter77 = new org.mockito.asm.ClassAdapter(classVisitor76);
        java.lang.Class<?> wildcardClass78 = classAdapter77.getClass();
        java.lang.String str79 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass78);
        org.mockito.asm.ClassVisitor classVisitor80 = null;
        org.mockito.asm.ClassAdapter classAdapter81 = new org.mockito.asm.ClassAdapter(classVisitor80);
        java.lang.Class<?> wildcardClass82 = classAdapter81.getClass();
        boolean boolean83 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass82);
        java.lang.Class[] classArray84 = new java.lang.Class[] { wildcardClass70, wildcardClass74, wildcardClass78, wildcardClass82 };
        enhancer65.setInterfaces(classArray84);
        enhancer58.setInterfaces(classArray84);
        enhancer53.setInterfaces(classArray84);
        enhancer45.setInterfaces(classArray84);
        enhancer36.setInterfaces(classArray84);
        enhancer18.setInterfaces(classArray84);
        enhancer0.setInterfaces(classArray84);
        boolean boolean92 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str33, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str34, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(namingPolicy52);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str71, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str75, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str79, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(classArray84);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test04005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04005");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        java.lang.String str9 = label8.toString();
        boolean boolean10 = namingPolicy7.equals((java.lang.Object) str9);
        java.lang.Object obj11 = null;
        boolean boolean12 = namingPolicy7.equals(obj11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer13.setCallback(callback14);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer13.setCallback(callback16);
        enhancer13.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer13.getNamingPolicy();
        boolean boolean22 = namingPolicy20.equals((java.lang.Object) (byte) 100);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor24);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classAdapter26);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter28.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter30.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter34.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        boolean boolean41 = namingPolicy20.equals((java.lang.Object) classEmitter40);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        classEmitter40.setTarget(classVisitor42);
        boolean boolean44 = namingPolicy7.equals((java.lang.Object) classEmitter40);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setUseFactory(true);
        enhancer49.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        java.lang.Class<?> wildcardClass59 = classAdapter58.getClass();
        java.lang.String str60 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass59);
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        java.lang.Class<?> wildcardClass63 = classAdapter62.getClass();
        java.lang.String str64 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass63);
        org.mockito.asm.ClassVisitor classVisitor65 = null;
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor65);
        java.lang.Class<?> wildcardClass67 = classAdapter66.getClass();
        java.lang.String str68 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass67);
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor69);
        java.lang.Class<?> wildcardClass71 = classAdapter70.getClass();
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        java.lang.Class[] classArray73 = new java.lang.Class[] { wildcardClass59, wildcardClass63, wildcardClass67, wildcardClass71 };
        enhancer54.setInterfaces(classArray73);
        enhancer49.setInterfaces(classArray73);
        org.mockito.asm.ClassVisitor classVisitor76 = null;
        org.mockito.asm.ClassAdapter classAdapter77 = new org.mockito.asm.ClassAdapter(classVisitor76);
        java.lang.Class<?> wildcardClass78 = classAdapter77.getClass();
        java.lang.String str79 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass78);
        java.lang.String str80 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass78);
        org.mockito.asm.ClassVisitor classVisitor81 = null;
        org.mockito.asm.ClassAdapter classAdapter82 = new org.mockito.asm.ClassAdapter(classVisitor81);
        java.lang.Class<?> wildcardClass83 = classAdapter82.getClass();
        boolean boolean84 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass83);
        boolean boolean85 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass83);
        java.lang.Class[] classArray86 = new java.lang.Class[] { wildcardClass78, wildcardClass83 };
        enhancer49.setInterfaces(classArray86);
        enhancer49.setInterceptDuringConstruction(true);
        enhancer49.setInterceptDuringConstruction(true);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor92 = classEmitter40.visitField(0, "L289737711", "", "L607398007", (java.lang.Object) enhancer49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1303937779" + "'", str9, "L1303937779");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str60, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str64, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str68, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str79, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str80, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(classArray86);
    }

    @Test
    public void test04006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04006");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        java.lang.String str18 = label17.toString();
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        label17.info = label19;
        java.lang.String str21 = label17.toString();
        java.lang.String str22 = label17.toString();
        java.lang.String str23 = label17.toString();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        java.lang.String str25 = label24.toString();
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        label24.info = label26;
        java.lang.String str28 = label24.toString();
        java.lang.String str29 = label24.toString();
        label17.info = label24;
        java.lang.Object obj31 = label24.info;
        org.mockito.asm.Label label32 = new org.mockito.asm.Label();
        java.lang.String str33 = label32.toString();
        org.mockito.asm.Label label34 = new org.mockito.asm.Label();
        label32.info = label34;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local38 = new org.mockito.cglib.core.Local(0, type37);
        label32.info = 0;
        java.lang.String str40 = label32.toString();
        label32.info = "Z(VZVDDZ)Z";
        label32.info = 100.0d;
        org.mockito.asm.Label label45 = new org.mockito.asm.Label();
        java.lang.String str46 = label45.toString();
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        label45.info = label47;
        java.lang.Object obj49 = label45.info;
        java.lang.String str50 = label45.toString();
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback54 = null;
        enhancer51.setCallback(callback54);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter56 = null;
        enhancer51.setCallbackFilter(callbackFilter56);
        org.mockito.cglib.proxy.Callback callback58 = null;
        enhancer51.setCallback(callback58);
        enhancer51.setUseFactory(true);
        enhancer51.setUseFactory(false);
        label45.info = enhancer51;
        label32.info = enhancer51;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitLocalVariable("L722658733", "FL73600275", "L10070459", label24, label32, 124);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 124");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1857693384" + "'", str18, "L1857693384");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1857693384" + "'", str21, "L1857693384");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1857693384" + "'", str22, "L1857693384");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1857693384" + "'", str23, "L1857693384");
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L2121826835" + "'", str25, "L2121826835");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L2121826835" + "'", str28, "L2121826835");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L2121826835" + "'", str29, "L2121826835");
        org.junit.Assert.assertNotNull(obj31);
// flaky:         org.junit.Assert.assertEquals(obj31.toString(), "L1372484904");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "L1372484904");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "L1372484904");
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1096890335" + "'", str33, "L1096890335");
        org.junit.Assert.assertNotNull(type37);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1096890335" + "'", str40, "L1096890335");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L1862107737" + "'", str46, "L1862107737");
        org.junit.Assert.assertNotNull(obj49);
// flaky:         org.junit.Assert.assertEquals(obj49.toString(), "L1805389080");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "L1805389080");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "L1805389080");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L1862107737" + "'", str50, "L1862107737");
    }

    @Test
    public void test04007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04007");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter25.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.Signature signature32 = new org.mockito.cglib.core.Signature("org/mockito/asm/ClassAdapter", "L1933965693");
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        java.lang.Class<?> wildcardClass35 = classAdapter34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        boolean boolean39 = signature32.equals((java.lang.Object) type38);
        int int40 = type38.getSort();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor42);
        boolean boolean44 = type41.equals((java.lang.Object) classVisitor42);
        java.lang.String str45 = type41.getDescriptor();
        java.lang.String str46 = type41.getClassName();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor50);
        boolean boolean52 = type49.equals((java.lang.Object) classVisitor50);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str54 = type53.getDescriptor();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        boolean boolean60 = type57.equals((java.lang.Object) classVisitor58);
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type48, type49, type53, type55, type56, type57 };
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray61);
        boolean boolean63 = type41.equals((java.lang.Object) typeArray61);
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray61);
        org.mockito.asm.Type type65 = type38.getElementType();
        int int66 = type65.getDimensions();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter27.declare_field(10, "L1487580142", type65, (java.lang.Object) "L481659617");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Z" + "'", str45, "Z");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "boolean" + "'", str46, "boolean");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(VZVDDZ)V" + "'", str62, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;" + "'", str64, "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
    }

    @Test
    public void test04008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04008");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        java.lang.String str16 = label15.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        label15.info = label17;
        java.lang.String str19 = label15.toString();
        java.lang.String str20 = label15.toString();
        java.lang.String str21 = label15.toString();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        java.lang.String str23 = label22.toString();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        label22.info = label24;
        java.lang.String str26 = label22.toString();
        java.lang.String str27 = label22.toString();
        label15.info = label22;
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        label29.info = 10.0f;
        java.lang.String str32 = label29.toString();
        java.lang.String str33 = label29.toString();
        label22.info = label29;
        java.lang.Object obj35 = label29.info;
        java.lang.String str36 = label29.toString();
        java.lang.Object obj37 = label29.info;
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        java.lang.Object obj39 = label38.info;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        int int41 = type40.getSort();
        label38.info = type40;
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer43.setCallback(callback46);
        enhancer43.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer43.getNamingPolicy();
        boolean boolean52 = namingPolicy50.equals((java.lang.Object) 5);
        label38.info = boolean52;
        java.lang.Object obj54 = label38.info;
        java.lang.Object obj55 = label38.info;
        org.mockito.asm.Label label56 = new org.mockito.asm.Label();
        java.lang.Object obj57 = label56.info;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        int int59 = type58.getSort();
        label56.info = type58;
        java.lang.Object obj61 = label56.info;
        java.lang.String str62 = label56.toString();
        org.mockito.asm.Label[] labelArray63 = new org.mockito.asm.Label[] { label38, label56 };
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter12.visitTableSwitchInsn((-1), 98, label29, labelArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1327304640" + "'", str16, "L1327304640");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1327304640" + "'", str19, "L1327304640");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1327304640" + "'", str20, "L1327304640");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1327304640" + "'", str21, "L1327304640");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1489293005" + "'", str23, "L1489293005");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1489293005" + "'", str26, "L1489293005");
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L1489293005" + "'", str27, "L1489293005");
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L10329939" + "'", str32, "L10329939");
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L10329939" + "'", str33, "L10329939");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L10329939" + "'", str36, "L10329939");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 10.0f + "'", obj37, 10.0f);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 4 + "'", int59 == 4);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "S");
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L1540566379" + "'", str62, "L1540566379");
        org.junit.Assert.assertNotNull(labelArray63);
    }

    @Test
    public void test04009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04009");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        boolean boolean8 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy9 = enhancer0.getStrategy();
        org.mockito.asm.MethodVisitor methodVisitor12 = null;
        org.mockito.asm.MethodAdapter methodAdapter13 = new org.mockito.asm.MethodAdapter(methodVisitor12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.asm.MethodAdapter methodAdapter19 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter18);
        org.mockito.asm.MethodAdapter methodAdapter21 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.asm.MethodAdapter methodAdapter23 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        boolean boolean24 = generatorStrategy9.equals((java.lang.Object) methodAdapter23);
        java.lang.Object obj25 = null;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter23.visitLdcInsn(obj25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(generatorStrategy9);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test04010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04010");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass25, wildcardClass29, wildcardClass33, wildcardClass37 };
        enhancer20.setInterfaces(classArray39);
        boolean boolean41 = enhancer20.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer20.getStrategy();
        enhancer0.setStrategy(generatorStrategy42);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer45.setCallback(callback48);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer45.setCallback(callback50);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer45.getStrategy();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        boolean boolean56 = type53.equals((java.lang.Object) classVisitor54);
        int int58 = type53.getOpcode(116);
        boolean boolean59 = generatorStrategy52.equals((java.lang.Object) 116);
        enhancer0.setStrategy(generatorStrategy52);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor62);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classAdapter64);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor67);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classAdapter69);
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo72 = classEmitter71.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter71.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        boolean boolean78 = generatorStrategy52.equals((java.lang.Object) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo81 = classEmitter80.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter82 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter80.setTarget((org.mockito.asm.ClassVisitor) classEmitter82);
        classEmitter79.setTarget((org.mockito.asm.ClassVisitor) classEmitter80);
        org.mockito.asm.ClassAdapter classAdapter85 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter80);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = classEmitter80.getAccess();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str26, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str34, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 116 + "'", int58 == 116);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(classInfo72);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(classInfo81);
    }

    @Test
    public void test04011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04011");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass25, wildcardClass29, wildcardClass33, wildcardClass37 };
        enhancer20.setInterfaces(classArray39);
        boolean boolean41 = enhancer20.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer20.getStrategy();
        enhancer0.setStrategy(generatorStrategy42);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer45.setCallback(callback48);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer45.setCallback(callback50);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer45.getStrategy();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        boolean boolean56 = type53.equals((java.lang.Object) classVisitor54);
        int int58 = type53.getOpcode(116);
        boolean boolean59 = generatorStrategy52.equals((java.lang.Object) 116);
        enhancer0.setStrategy(generatorStrategy52);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor62);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classAdapter64);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor67);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classAdapter69);
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo72 = classEmitter71.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter71.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        boolean boolean78 = generatorStrategy52.equals((java.lang.Object) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter77);
        org.mockito.asm.ClassAdapter classAdapter80 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter79);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type81 = classEmitter79.getClassType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str26, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str34, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 116 + "'", int58 == 116);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(classInfo72);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test04012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04012");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        enhancer5.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        java.lang.Class<?> wildcardClass15 = classAdapter14.getClass();
        java.lang.String str16 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass15);
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        java.lang.Class<?> wildcardClass19 = classAdapter18.getClass();
        java.lang.String str20 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass19);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.asm.ClassAdapter classAdapter22 = new org.mockito.asm.ClassAdapter(classVisitor21);
        java.lang.Class<?> wildcardClass23 = classAdapter22.getClass();
        java.lang.String str24 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass23);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor25);
        java.lang.Class<?> wildcardClass27 = classAdapter26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Class[] classArray29 = new java.lang.Class[] { wildcardClass15, wildcardClass19, wildcardClass23, wildcardClass27 };
        enhancer10.setInterfaces(classArray29);
        enhancer5.setInterfaces(classArray29);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass34);
        java.lang.String str36 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass34);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        java.lang.Class<?> wildcardClass39 = classAdapter38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Class[] classArray42 = new java.lang.Class[] { wildcardClass34, wildcardClass39 };
        enhancer5.setInterfaces(classArray42);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer5.getStrategy();
        enhancer0.setStrategy(generatorStrategy44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer46.setCallback(callback49);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter51 = null;
        enhancer46.setCallbackFilter(callbackFilter51);
        enhancer46.setSerialVersionUID((java.lang.Long) 0L);
        enhancer46.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy57 = enhancer46.getStrategy();
        boolean boolean59 = generatorStrategy57.equals((java.lang.Object) "L1346519970");
        boolean boolean60 = generatorStrategy44.equals((java.lang.Object) generatorStrategy57);
        boolean boolean62 = generatorStrategy44.equals((java.lang.Object) "L418578472");
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        enhancer63.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback66 = null;
        enhancer63.setCallback(callback66);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter68 = null;
        enhancer63.setCallbackFilter(callbackFilter68);
        enhancer63.setSerialVersionUID((java.lang.Long) 0L);
        enhancer63.setUseCache(false);
        enhancer63.setUseFactory(false);
        enhancer63.setInterceptDuringConstruction(false);
        enhancer63.setUseFactory(false);
        enhancer63.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter82 = null;
        enhancer63.setCallbackFilter(callbackFilter82);
        enhancer63.setUseCache(false);
        enhancer63.setUseFactory(true);
        enhancer63.setSerialVersionUID((java.lang.Long) 0L);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray90 = generatorStrategy44.generate((org.mockito.cglib.core.ClassGenerator) enhancer63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str16, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str20, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str24, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str35, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str36, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(generatorStrategy57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test04013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04013");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.Label label2 = new org.mockito.asm.Label();
        label0.info = label2;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local6 = new org.mockito.cglib.core.Local(0, type5);
        label0.info = 0;
        java.lang.String str8 = label0.toString();
        label0.info = "Z(VZVDDZ)Z";
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer11.setCallback(callback14);
        enhancer11.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass18 = enhancer11.getClass();
        label0.info = wildcardClass18;
        java.lang.String str20 = label0.toString();
        java.lang.Object obj21 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer22.setCallback(callback25);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer22.setCallback(callback27);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy29 = enhancer22.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer22.getNamingPolicy();
        label0.info = enhancer22;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor34);
        boolean boolean36 = type33.equals((java.lang.Object) classVisitor34);
        java.lang.String str37 = type33.getDescriptor();
        java.lang.String str38 = type33.getClassName();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        boolean boolean46 = type43.equals((java.lang.Object) classVisitor44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str48 = type47.getDescriptor();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        boolean boolean54 = type51.equals((java.lang.Object) classVisitor52);
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type42, type43, type47, type49, type50, type51 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray55);
        org.mockito.cglib.core.Signature signature57 = new org.mockito.cglib.core.Signature("L1057808593", type40, typeArray55);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        boolean boolean63 = type60.equals((java.lang.Object) classVisitor61);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str65 = type64.getDescriptor();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor69);
        boolean boolean71 = type68.equals((java.lang.Object) classVisitor69);
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type59, type60, type64, type66, type67, type68 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray72);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray72);
        org.mockito.cglib.core.Signature signature75 = new org.mockito.cglib.core.Signature("", type33, typeArray72);
        label0.info = "";
        label0.info = (short) -1;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getObjectType("L1515721662");
        label0.info = "L1515721662";
        // The following exception was thrown during execution in test generation
        try {
            int int82 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1192308440" + "'", str1, "L1192308440");
        org.junit.Assert.assertNotNull(type5);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "L1192308440" + "'", str8, "L1192308440");
        org.junit.Assert.assertNotNull(wildcardClass18);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1192308440" + "'", str20, "L1192308440");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(generatorStrategy29);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Z" + "'", str37, "Z");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "boolean" + "'", str38, "boolean");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "V" + "'", str48, "V");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(VZVDDZ)V" + "'", str56, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "V" + "'", str65, "V");
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(VZVDDZ)V" + "'", str73, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VZVDDZ)F" + "'", str74, "(VZVDDZ)F");
        org.junit.Assert.assertNotNull(type80);
    }

    @Test
    public void test04014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04014");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter9);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter9);
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        java.lang.String str13 = label12.toString();
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        label12.info = label14;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local18 = new org.mockito.cglib.core.Local(0, type17);
        label12.info = 0;
        java.lang.String str20 = label12.toString();
        label12.info = "Z(VZVDDZ)Z";
        label12.info = 100.0d;
        org.mockito.asm.Label label25 = new org.mockito.asm.Label();
        java.lang.String str26 = label25.toString();
        org.mockito.asm.Label label27 = new org.mockito.asm.Label();
        label25.info = label27;
        java.lang.Object obj29 = label25.info;
        java.lang.String str30 = label25.toString();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer31.setCallback(callback34);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter36 = null;
        enhancer31.setCallbackFilter(callbackFilter36);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer31.setCallback(callback38);
        enhancer31.setUseFactory(true);
        enhancer31.setUseFactory(false);
        label25.info = enhancer31;
        label12.info = enhancer31;
        java.lang.Object obj46 = label12.info;
        java.lang.Object obj47 = null;
        label12.info = obj47;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter11.visitLabel(label12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1446404366" + "'", str13, "L1446404366");
        org.junit.Assert.assertNotNull(type17);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1446404366" + "'", str20, "L1446404366");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L333186406" + "'", str26, "L333186406");
        org.junit.Assert.assertNotNull(obj29);
// flaky:         org.junit.Assert.assertEquals(obj29.toString(), "L1064734312");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "L1064734312");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "L1064734312");
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L333186406" + "'", str30, "L333186406");
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test04015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04015");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter8);
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        java.lang.String str13 = label12.toString();
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        label12.info = label14;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local18 = new org.mockito.cglib.core.Local(0, type17);
        label12.info = 0;
        java.lang.String str20 = label12.toString();
        label12.info = "Z(VZVDDZ)Z";
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer23.setCallback(callback26);
        enhancer23.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass30 = enhancer23.getClass();
        label12.info = wildcardClass30;
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] {};
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter8.visitTableSwitchInsn(18, 130, label12, labelArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1733768775" + "'", str13, "L1733768775");
        org.junit.Assert.assertNotNull(type17);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1733768775" + "'", str20, "L1733768775");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(labelArray32);
    }

    @Test
    public void test04016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04016");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        boolean boolean4 = enhancer1.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        java.lang.Class<?> wildcardClass10 = classAdapter9.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass10, wildcardClass14, wildcardClass18, wildcardClass22 };
        enhancer5.setInterfaces(classArray24);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer5.setCallbackFilter(callbackFilter26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        enhancer28.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer28.setCallbacks(callbackArray34);
        enhancer5.setCallbacks(callbackArray34);
        java.lang.Class class37 = null;
        enhancer5.setSuperclass(class37);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy39 = enhancer5.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer5.getNamingPolicy();
        enhancer1.setNamingPolicy(namingPolicy40);
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        java.lang.Class<?> wildcardClass45 = classAdapter44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass45);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass45);
        java.lang.String str50 = type49.getInternalName();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.Type type54 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor55 = null;
        org.mockito.asm.ClassAdapter classAdapter56 = new org.mockito.asm.ClassAdapter(classVisitor55);
        boolean boolean57 = type54.equals((java.lang.Object) classVisitor55);
        int int59 = type54.getOpcode(116);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type62 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor63);
        boolean boolean65 = type62.equals((java.lang.Object) classVisitor63);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str67 = type66.getDescriptor();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor71 = null;
        org.mockito.asm.ClassAdapter classAdapter72 = new org.mockito.asm.ClassAdapter(classVisitor71);
        boolean boolean73 = type70.equals((java.lang.Object) classVisitor71);
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type61, type62, type66, type68, type69, type70 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray74);
        org.mockito.cglib.core.Signature signature76 = new org.mockito.cglib.core.Signature("V", type54, typeArray74);
        org.mockito.cglib.core.Signature signature77 = new org.mockito.cglib.core.Signature("hi!", type52, typeArray74);
        org.mockito.asm.Type[] typeArray78 = signature77.getArgumentTypes();
        org.mockito.cglib.core.Signature signature79 = new org.mockito.cglib.core.Signature("", type49, typeArray78);
        org.mockito.asm.Type type80 = type49.getElementType();
        boolean boolean81 = namingPolicy40.equals((java.lang.Object) type49);
        java.lang.String str82 = type49.getInternalName();
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        enhancer83.setUseFactory(true);
        enhancer83.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback88 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray89 = new org.mockito.cglib.proxy.Callback[] { callback88 };
        enhancer83.setCallbacks(callbackArray89);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter91 = null;
        enhancer83.setCallbackFilter(callbackFilter91);
        enhancer83.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Callback callback95 = null;
        enhancer83.setCallback(callback95);
        boolean boolean97 = type49.equals((java.lang.Object) callback95);
        int int98 = type49.getSize();
        org.mockito.cglib.core.Local local99 = new org.mockito.cglib.core.Local(137, type49);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str11, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str15, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertNotNull(generatorStrategy39);
        org.junit.Assert.assertNotNull(namingPolicy40);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str50, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 116 + "'", int59 == 116);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "V" + "'", str67, "V");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(VZVDDZ)V" + "'", str75, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str82, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(callbackArray89);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
    }

    @Test
    public void test04017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04017");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer12.setCallback(callback15);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter17 = null;
        enhancer12.setCallbackFilter(callbackFilter17);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer12.setCallback(callback19);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer12.getNamingPolicy();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local24 = new org.mockito.cglib.core.Local(0, type23);
        int int25 = type23.getSort();
        java.lang.String str26 = type23.getClassName();
        java.lang.String str27 = type23.getClassName();
        boolean boolean28 = namingPolicy21.equals((java.lang.Object) type23);
        enhancer11.setNamingPolicy(namingPolicy21);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer11.getNamingPolicy();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str32 = type31.getClassName();
        boolean boolean33 = namingPolicy30.equals((java.lang.Object) str32);
        enhancer0.setNamingPolicy(namingPolicy30);
        boolean boolean35 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter37.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter37.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassInfo classInfo44 = classEmitter37.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "double" + "'", str26, "double");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "double" + "'", str27, "double");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "double" + "'", str32, "double");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo42);
        org.junit.Assert.assertNull(classInfo44);
    }

    @Test
    public void test04018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04018");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        java.lang.String str12 = label11.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        label11.info = label13;
        java.lang.String str15 = label11.toString();
        java.lang.String str16 = label11.toString();
        java.lang.String str17 = label11.toString();
        org.mockito.asm.Label label18 = new org.mockito.asm.Label();
        java.lang.String str19 = label18.toString();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        label18.info = label20;
        java.lang.String str22 = label18.toString();
        java.lang.String str23 = label18.toString();
        label11.info = label18;
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor26);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classAdapter28);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo31 = classEmitter30.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo37 = classEmitter36.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter39);
        label11.info = classEmitter39;
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback45 = null;
        enhancer42.setCallback(callback45);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter47 = null;
        enhancer42.setCallbackFilter(callbackFilter47);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer42.setCallback(callback49);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer42.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback55 = null;
        enhancer52.setCallback(callback55);
        org.mockito.cglib.proxy.Callback callback57 = null;
        enhancer52.setCallback(callback57);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback62 = null;
        enhancer59.setCallback(callback62);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter64 = null;
        enhancer59.setCallbackFilter(callbackFilter64);
        org.mockito.cglib.proxy.Callback callback66 = null;
        enhancer59.setCallback(callback66);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer59.getNamingPolicy();
        enhancer52.setNamingPolicy(namingPolicy68);
        org.mockito.asm.ClassVisitor classVisitor70 = null;
        org.mockito.asm.ClassAdapter classAdapter71 = new org.mockito.asm.ClassAdapter(classVisitor70);
        java.lang.Class<?> wildcardClass72 = classAdapter71.getClass();
        enhancer52.setSuperclass((java.lang.Class) wildcardClass72);
        enhancer42.setSuperclass((java.lang.Class) wildcardClass72);
        enhancer42.setUseCache(true);
        enhancer42.setAttemptLoad(false);
        enhancer42.setAttemptLoad(true);
        org.mockito.asm.ClassVisitor classVisitor81 = null;
        org.mockito.asm.ClassAdapter classAdapter82 = new org.mockito.asm.ClassAdapter(classVisitor81);
        java.lang.Class<?> wildcardClass83 = classAdapter82.getClass();
        boolean boolean84 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass83);
        boolean boolean85 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass83);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass83);
        java.lang.String str87 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass83);
        java.lang.String str88 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass83);
        enhancer42.setSuperclass((java.lang.Class) wildcardClass83);
        label11.info = wildcardClass83;
        java.lang.Object obj91 = label11.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitLabel(label11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1022859590" + "'", str12, "L1022859590");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1022859590" + "'", str15, "L1022859590");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1022859590" + "'", str16, "L1022859590");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1022859590" + "'", str17, "L1022859590");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1475620303" + "'", str19, "L1475620303");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1475620303" + "'", str22, "L1475620303");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1475620303" + "'", str23, "L1475620303");
        org.junit.Assert.assertNull(classInfo31);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertNull(classInfo37);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(namingPolicy68);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str87, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str88, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class org.mockito.asm.ClassAdapter");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class org.mockito.asm.ClassAdapter");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class org.mockito.asm.ClassAdapter");
    }

    @Test
    public void test04019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04019");
        java.lang.Class class0 = null;
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback2 = null;
        enhancer1.setCallback(callback2);
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer5.setCallback(callback8);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer5.setCallback(callback10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer5.getStrategy();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor14);
        boolean boolean16 = type13.equals((java.lang.Object) classVisitor14);
        int int18 = type13.getOpcode(116);
        boolean boolean19 = generatorStrategy12.equals((java.lang.Object) 116);
        enhancer4.setStrategy(generatorStrategy12);
        enhancer1.setStrategy(generatorStrategy12);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        enhancer22.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter27 = null;
        enhancer22.setCallbackFilter(callbackFilter27);
        java.lang.ClassLoader classLoader29 = enhancer22.getClassLoader();
        enhancer1.setClassLoader(classLoader29);
        java.lang.ClassLoader classLoader31 = enhancer1.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        java.lang.String str38 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass37);
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        java.lang.Class<?> wildcardClass41 = classAdapter40.getClass();
        java.lang.String str42 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass41);
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        java.lang.Class<?> wildcardClass45 = classAdapter44.getClass();
        java.lang.String str46 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass45);
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        java.lang.Class<?> wildcardClass49 = classAdapter48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Class[] classArray51 = new java.lang.Class[] { wildcardClass37, wildcardClass41, wildcardClass45, wildcardClass49 };
        enhancer32.setInterfaces(classArray51);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter53 = null;
        enhancer32.setCallbackFilter(callbackFilter53);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        enhancer55.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback60 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray61 = new org.mockito.cglib.proxy.Callback[] { callback60 };
        enhancer55.setCallbacks(callbackArray61);
        enhancer32.setCallbacks(callbackArray61);
        enhancer1.setCallbacks(callbackArray61);
        boolean boolean65 = enhancer1.getAttemptLoad();
        java.lang.ClassLoader classLoader66 = enhancer1.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        enhancer67.setUseFactory(true);
        enhancer67.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        enhancer72.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor75 = null;
        org.mockito.asm.ClassAdapter classAdapter76 = new org.mockito.asm.ClassAdapter(classVisitor75);
        java.lang.Class<?> wildcardClass77 = classAdapter76.getClass();
        java.lang.String str78 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass77);
        org.mockito.asm.ClassVisitor classVisitor79 = null;
        org.mockito.asm.ClassAdapter classAdapter80 = new org.mockito.asm.ClassAdapter(classVisitor79);
        java.lang.Class<?> wildcardClass81 = classAdapter80.getClass();
        java.lang.String str82 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass81);
        org.mockito.asm.ClassVisitor classVisitor83 = null;
        org.mockito.asm.ClassAdapter classAdapter84 = new org.mockito.asm.ClassAdapter(classVisitor83);
        java.lang.Class<?> wildcardClass85 = classAdapter84.getClass();
        java.lang.String str86 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass85);
        org.mockito.asm.ClassVisitor classVisitor87 = null;
        org.mockito.asm.ClassAdapter classAdapter88 = new org.mockito.asm.ClassAdapter(classVisitor87);
        java.lang.Class<?> wildcardClass89 = classAdapter88.getClass();
        boolean boolean90 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass89);
        java.lang.Class[] classArray91 = new java.lang.Class[] { wildcardClass77, wildcardClass81, wildcardClass85, wildcardClass89 };
        enhancer72.setInterfaces(classArray91);
        enhancer67.setInterfaces(classArray91);
        enhancer1.setInterfaces(classArray91);
        java.util.List list95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods(class0, classArray91, list95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 116 + "'", int18 == 116);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str38, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str42, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str46, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(callbackArray61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str78, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str82, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str86, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(classArray91);
    }

    @Test
    public void test04020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04020");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy6 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer16.setCallback(callback19);
        enhancer16.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass23 = enhancer16.getClass();
        enhancer7.setSuperclass((java.lang.Class) wildcardClass23);
        boolean boolean25 = enhancer7.getAttemptLoad();
        boolean boolean26 = enhancer7.getUseCache();
        enhancer7.setUseCache(true);
        boolean boolean29 = enhancer7.getUseCache();
        enhancer7.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer7.setAttemptLoad(true);
        enhancer7.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer7.getNamingPolicy();
        java.lang.ClassLoader classLoader37 = enhancer7.getClassLoader();
        enhancer0.setClassLoader(classLoader37);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer40.setCallback(callback43);
        enhancer40.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass47 = enhancer40.getClass();
        java.lang.String str48 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass47);
        java.lang.String str49 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        boolean boolean54 = type51.equals((java.lang.Object) classVisitor52);
        java.lang.String str55 = type51.getDescriptor();
        java.lang.String str56 = type51.getClassName();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        org.mockito.asm.ClassAdapter classAdapter61 = new org.mockito.asm.ClassAdapter(classVisitor60);
        boolean boolean62 = type59.equals((java.lang.Object) classVisitor60);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str64 = type63.getDescriptor();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        boolean boolean70 = type67.equals((java.lang.Object) classVisitor68);
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type58, type59, type63, type65, type66, type67 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray71);
        boolean boolean73 = type51.equals((java.lang.Object) typeArray71);
        org.mockito.cglib.core.Signature signature74 = new org.mockito.cglib.core.Signature("L1184414938", type50, typeArray71);
        java.lang.Class<?> wildcardClass75 = typeArray71.getClass();
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class [Lorg.mockito.asm.Type;");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(namingPolicy6);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str48, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str49, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Z" + "'", str55, "Z");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "boolean" + "'", str56, "boolean");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "V" + "'", str64, "V");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VZVDDZ)V" + "'", str72, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test04021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04021");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.asm.ClassAdapter classAdapter1 = new org.mockito.asm.ClassAdapter(classVisitor0);
        java.lang.Class<?> wildcardClass2 = classAdapter1.getClass();
        boolean boolean3 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        boolean boolean4 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        int int9 = type7.getOpcode(157);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 161 + "'", int9 == 161);
    }

    @Test
    public void test04022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04022");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass29);
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass29);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor36 = classEmitter22.visitField(39, "L618770809", "L653637347", "L1630856608", (java.lang.Object) wildcardClass29);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
    }

    @Test
    public void test04023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04023");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.asm.Label label10 = new org.mockito.asm.Label();
        java.lang.String str11 = label10.toString();
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        label10.info = label12;
        java.lang.String str14 = label10.toString();
        java.lang.String str15 = label10.toString();
        java.lang.String str16 = label10.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        java.lang.String str18 = label17.toString();
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        label17.info = label19;
        java.lang.String str21 = label17.toString();
        java.lang.String str22 = label17.toString();
        label10.info = label17;
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor25);
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor25);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classAdapter27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter31);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        label10.info = classEmitter38;
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback44 = null;
        enhancer41.setCallback(callback44);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter46 = null;
        enhancer41.setCallbackFilter(callbackFilter46);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer41.setCallback(callback48);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer41.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback54 = null;
        enhancer51.setCallback(callback54);
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer51.setCallback(callback56);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        enhancer58.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback61 = null;
        enhancer58.setCallback(callback61);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter63 = null;
        enhancer58.setCallbackFilter(callbackFilter63);
        org.mockito.cglib.proxy.Callback callback65 = null;
        enhancer58.setCallback(callback65);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer58.getNamingPolicy();
        enhancer51.setNamingPolicy(namingPolicy67);
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor69);
        java.lang.Class<?> wildcardClass71 = classAdapter70.getClass();
        enhancer51.setSuperclass((java.lang.Class) wildcardClass71);
        enhancer41.setSuperclass((java.lang.Class) wildcardClass71);
        enhancer41.setUseCache(true);
        enhancer41.setAttemptLoad(false);
        enhancer41.setAttemptLoad(true);
        org.mockito.asm.ClassVisitor classVisitor80 = null;
        org.mockito.asm.ClassAdapter classAdapter81 = new org.mockito.asm.ClassAdapter(classVisitor80);
        java.lang.Class<?> wildcardClass82 = classAdapter81.getClass();
        boolean boolean83 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass82);
        boolean boolean84 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass82);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass82);
        java.lang.String str86 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass82);
        java.lang.String str87 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass82);
        enhancer41.setSuperclass((java.lang.Class) wildcardClass82);
        label10.info = wildcardClass82;
        java.lang.String str90 = label10.toString();
        org.mockito.asm.Label label91 = new org.mockito.asm.Label();
        java.lang.String str92 = label91.toString();
        org.mockito.asm.Label label93 = new org.mockito.asm.Label();
        label91.info = label93;
        java.lang.Object obj95 = label91.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter6.visitLocalVariable("L63750910", "L598814166boolean", "", label10, label91, 124);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 124");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L621264061" + "'", str11, "L621264061");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L621264061" + "'", str14, "L621264061");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L621264061" + "'", str15, "L621264061");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L621264061" + "'", str16, "L621264061");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1671513728" + "'", str18, "L1671513728");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1671513728" + "'", str21, "L1671513728");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1671513728" + "'", str22, "L1671513728");
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str86, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str87, "Lorg/mockito/asm/ClassAdapter;");
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "L621264061" + "'", str90, "L621264061");
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "L539722499" + "'", str92, "L539722499");
        org.junit.Assert.assertNotNull(obj95);
// flaky:         org.junit.Assert.assertEquals(obj95.toString(), "L314618713");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "L314618713");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "L314618713");
    }

    @Test
    public void test04024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04024");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        enhancer11.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        java.lang.Class<?> wildcardClass21 = classAdapter20.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass21);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Class[] classArray35 = new java.lang.Class[] { wildcardClass21, wildcardClass25, wildcardClass29, wildcardClass33 };
        enhancer16.setInterfaces(classArray35);
        enhancer11.setInterfaces(classArray35);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        java.lang.String str42 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        java.lang.Class<?> wildcardClass45 = classAdapter44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Class[] classArray48 = new java.lang.Class[] { wildcardClass40, wildcardClass45 };
        enhancer11.setInterfaces(classArray48);
        enhancer11.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer11.getStrategy();
        enhancer11.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback58 = null;
        enhancer55.setCallback(callback58);
        org.mockito.cglib.proxy.Callback callback60 = null;
        enhancer55.setCallback(callback60);
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback65 = null;
        enhancer62.setCallback(callback65);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter67 = null;
        enhancer62.setCallbackFilter(callbackFilter67);
        org.mockito.cglib.proxy.Callback callback69 = null;
        enhancer62.setCallback(callback69);
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = enhancer62.getNamingPolicy();
        enhancer55.setNamingPolicy(namingPolicy71);
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor73);
        java.lang.Class<?> wildcardClass75 = classAdapter74.getClass();
        enhancer55.setSuperclass((java.lang.Class) wildcardClass75);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter77 = null;
        enhancer55.setCallbackFilter(callbackFilter77);
        java.lang.ClassLoader classLoader79 = enhancer55.getClassLoader();
        enhancer11.setClassLoader(classLoader79);
        enhancer0.setClassLoader(classLoader79);
        boolean boolean82 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy83 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter84 = null;
        enhancer0.setCallbackFilter(callbackFilter84);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str22, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str26, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str41, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str42, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(classArray48);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertNotNull(namingPolicy71);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classLoader79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(generatorStrategy83);
    }

    @Test
    public void test04025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04025");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        java.lang.ClassLoader classLoader7 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter8 = null;
        enhancer0.setCallbackFilter(callbackFilter8);
        boolean boolean10 = enhancer0.getUseCache();
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test04026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04026");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.Label label2 = new org.mockito.asm.Label();
        label0.info = label2;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local6 = new org.mockito.cglib.core.Local(0, type5);
        label0.info = 0;
        java.lang.String str8 = label0.toString();
        label0.info = "Z(VZVDDZ)Z";
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer11.setCallback(callback14);
        enhancer11.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass18 = enhancer11.getClass();
        label0.info = wildcardClass18;
        java.lang.String str20 = label0.toString();
        java.lang.Object obj21 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer22.setCallback(callback25);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer22.setCallback(callback27);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy29 = enhancer22.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer22.getNamingPolicy();
        label0.info = enhancer22;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor34);
        boolean boolean36 = type33.equals((java.lang.Object) classVisitor34);
        java.lang.String str37 = type33.getDescriptor();
        java.lang.String str38 = type33.getClassName();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        boolean boolean46 = type43.equals((java.lang.Object) classVisitor44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str48 = type47.getDescriptor();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        boolean boolean54 = type51.equals((java.lang.Object) classVisitor52);
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type42, type43, type47, type49, type50, type51 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray55);
        org.mockito.cglib.core.Signature signature57 = new org.mockito.cglib.core.Signature("L1057808593", type40, typeArray55);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        boolean boolean63 = type60.equals((java.lang.Object) classVisitor61);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str65 = type64.getDescriptor();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor69);
        boolean boolean71 = type68.equals((java.lang.Object) classVisitor69);
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type59, type60, type64, type66, type67, type68 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray72);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray72);
        org.mockito.cglib.core.Signature signature75 = new org.mockito.cglib.core.Signature("", type33, typeArray72);
        label0.info = "";
        label0.info = (short) -1;
        // The following exception was thrown during execution in test generation
        try {
            int int79 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L132827087" + "'", str1, "L132827087");
        org.junit.Assert.assertNotNull(type5);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "L132827087" + "'", str8, "L132827087");
        org.junit.Assert.assertNotNull(wildcardClass18);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L132827087" + "'", str20, "L132827087");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(generatorStrategy29);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Z" + "'", str37, "Z");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "boolean" + "'", str38, "boolean");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "V" + "'", str48, "V");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(VZVDDZ)V" + "'", str56, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "V" + "'", str65, "V");
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(VZVDDZ)V" + "'", str73, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VZVDDZ)F" + "'", str74, "(VZVDDZ)F");
    }

    @Test
    public void test04027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04027");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.asm.MethodAdapter methodAdapter13 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter12);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer14.setCallback(callback17);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer14.setCallback(callback19);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy21 = enhancer14.getStrategy();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        boolean boolean23 = generatorStrategy21.equals((java.lang.Object) label22);
        java.lang.Object obj24 = label22.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter12.visitLabel(label22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test04028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04028");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter(classVisitor6);
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor6);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classAdapter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer16.setCallback(callback19);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer16.setCallback(callback21);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = enhancer16.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer16.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor26);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classAdapter28);
        boolean boolean30 = namingPolicy24.equals((java.lang.Object) classAdapter28);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classAdapter28);
        org.mockito.asm.Label label32 = new org.mockito.asm.Label();
        java.lang.String str33 = label32.toString();
        org.mockito.asm.Label label34 = new org.mockito.asm.Label();
        label32.info = label34;
        java.lang.String str36 = label32.toString();
        java.lang.String str37 = label32.toString();
        java.lang.String str38 = label32.toString();
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        java.lang.String str40 = label39.toString();
        org.mockito.asm.Label label41 = new org.mockito.asm.Label();
        label39.info = label41;
        java.lang.String str43 = label39.toString();
        java.lang.String str44 = label39.toString();
        label32.info = label39;
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor47);
        classEmitter46.setTarget((org.mockito.asm.ClassVisitor) classAdapter49);
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo52 = classEmitter51.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter51.setTarget((org.mockito.asm.ClassVisitor) classEmitter53);
        classEmitter46.setTarget((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.cglib.core.ClassInfo classInfo56 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo58 = classEmitter57.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classEmitter60);
        label32.info = classEmitter60;
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter63);
        org.mockito.cglib.core.ClassInfo classInfo65 = classEmitter63.getClassInfo();
        java.lang.String[] strArray70 = new java.lang.String[] {};
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor71 = classEmitter63.visitMethod(158, "L1334651834", "L1185912160", "L819090885", strArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@4f3a3219");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNotNull(generatorStrategy23);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L402571156" + "'", str33, "L402571156");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L402571156" + "'", str36, "L402571156");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L402571156" + "'", str37, "L402571156");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L402571156" + "'", str38, "L402571156");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L111201314" + "'", str40, "L111201314");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L111201314" + "'", str43, "L111201314");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L111201314" + "'", str44, "L111201314");
        org.junit.Assert.assertNull(classInfo52);
        org.junit.Assert.assertNull(classInfo56);
        org.junit.Assert.assertNull(classInfo58);
        org.junit.Assert.assertNull(classInfo65);
        org.junit.Assert.assertNotNull(strArray70);
    }

    @Test
    public void test04029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04029");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer12.setCallback(callback15);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter17 = null;
        enhancer12.setCallbackFilter(callbackFilter17);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer12.setCallback(callback19);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer12.getNamingPolicy();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local24 = new org.mockito.cglib.core.Local(0, type23);
        int int25 = type23.getSort();
        java.lang.String str26 = type23.getClassName();
        java.lang.String str27 = type23.getClassName();
        boolean boolean28 = namingPolicy21.equals((java.lang.Object) type23);
        enhancer11.setNamingPolicy(namingPolicy21);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer11.getNamingPolicy();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str32 = type31.getClassName();
        boolean boolean33 = namingPolicy30.equals((java.lang.Object) str32);
        enhancer0.setNamingPolicy(namingPolicy30);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer0.setCallback(callback37);
        boolean boolean39 = enhancer0.getAttemptLoad();
        enhancer0.setInterceptDuringConstruction(false);
        java.lang.ClassLoader classLoader42 = enhancer0.getClassLoader();
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor44);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classAdapter46);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo49 = classEmitter48.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassInfo classInfo53 = classEmitter50.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo55 = classEmitter54.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter54);
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter54);
        classEmitter50.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter59.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        classEmitter50.setTarget((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter63);
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter63);
        org.mockito.asm.Label label66 = new org.mockito.asm.Label();
        java.lang.String str67 = label66.toString();
        org.mockito.asm.Label label68 = new org.mockito.asm.Label();
        label66.info = label68;
        java.lang.Object obj70 = label68.info;
        java.lang.String str71 = label68.toString();
        java.lang.Object obj72 = label68.info;
        label68.info = "[Ljava/lang/Class;";
        org.mockito.cglib.core.ClassEmitter classEmitter75 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor76 = null;
        org.mockito.asm.ClassAdapter classAdapter77 = new org.mockito.asm.ClassAdapter(classVisitor76);
        org.mockito.asm.ClassAdapter classAdapter78 = new org.mockito.asm.ClassAdapter(classVisitor76);
        classEmitter75.setTarget((org.mockito.asm.ClassVisitor) classAdapter78);
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo81 = classEmitter80.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter82 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter80);
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter80);
        org.mockito.cglib.core.ClassEmitter classEmitter84 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter80);
        classEmitter75.setTarget((org.mockito.asm.ClassVisitor) classEmitter80);
        label68.info = classEmitter80;
        classEmitter63.setTarget((org.mockito.asm.ClassVisitor) classEmitter80);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "double" + "'", str26, "double");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "double" + "'", str27, "double");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "double" + "'", str32, "double");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertNull(classInfo49);
        org.junit.Assert.assertNull(classInfo53);
        org.junit.Assert.assertNull(classInfo55);
        org.junit.Assert.assertNull(classInfo60);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L1435328880" + "'", str67, "L1435328880");
        org.junit.Assert.assertNull(obj70);
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "L86759743" + "'", str71, "L86759743");
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(classInfo81);
    }

    @Test
    public void test04030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04030");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classAdapter12);
        boolean boolean14 = namingPolicy8.equals((java.lang.Object) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter12);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local25 = new org.mockito.cglib.core.Local(0, type24);
        int int26 = type24.getSort();
        java.lang.String str27 = type24.getClassName();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local31 = new org.mockito.cglib.core.Local(0, type30);
        org.mockito.cglib.core.Local local32 = new org.mockito.cglib.core.Local((int) (byte) 100, type30);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        boolean boolean40 = type37.equals((java.lang.Object) classVisitor38);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str42 = type41.getDescriptor();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        boolean boolean48 = type45.equals((java.lang.Object) classVisitor46);
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type36, type37, type41, type43, type44, type45 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray49);
        org.mockito.cglib.core.Signature signature51 = new org.mockito.cglib.core.Signature("L1057808593", type34, typeArray49);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray49);
        org.mockito.cglib.core.Signature signature53 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type24, typeArray49);
        org.mockito.asm.Type[] typeArray54 = signature53.getArgumentTypes();
        org.mockito.asm.Type type55 = signature53.getReturnType();
        java.lang.String str56 = signature53.toString();
        java.lang.String str57 = signature53.getName();
        org.mockito.asm.Type[] typeArray58 = signature53.getArgumentTypes();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor59 = classAdapter17.visitField(35, "S", "L596255821", "L1966521184", (java.lang.Object) typeArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "double" + "'", str27, "double");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "V" + "'", str42, "V");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(VZVDDZ)V" + "'", str50, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(VZVDDZ)D" + "'", str52, "(VZVDDZ)D");
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Lorg/mockito/asm/ClassAdapter;(VZVDDZ)D" + "'", str56, "Lorg/mockito/asm/ClassAdapter;(VZVDDZ)D");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str57, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(typeArray58);
    }

    @Test
    public void test04031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04031");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        java.lang.String str14 = label13.toString();
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        label13.info = label15;
        java.lang.Object obj17 = label15.info;
        java.lang.String str18 = label15.toString();
        java.lang.String str19 = label15.toString();
        java.lang.String str20 = label15.toString();
        org.mockito.asm.Label label21 = new org.mockito.asm.Label();
        java.lang.String str22 = label21.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        label21.info = label23;
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        java.lang.Class<?> wildcardClass30 = classAdapter29.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass34);
        org.mockito.asm.ClassVisitor classVisitor36 = null;
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter(classVisitor36);
        java.lang.Class<?> wildcardClass38 = classAdapter37.getClass();
        java.lang.String str39 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        java.lang.Class<?> wildcardClass42 = classAdapter41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Class[] classArray44 = new java.lang.Class[] { wildcardClass30, wildcardClass34, wildcardClass38, wildcardClass42 };
        enhancer25.setInterfaces(classArray44);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter46 = null;
        enhancer25.setCallbackFilter(callbackFilter46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setUseFactory(true);
        enhancer48.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback53 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray54 = new org.mockito.cglib.proxy.Callback[] { callback53 };
        enhancer48.setCallbacks(callbackArray54);
        enhancer25.setCallbacks(callbackArray54);
        java.lang.Class class57 = null;
        enhancer25.setSuperclass(class57);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy59 = enhancer25.getStrategy();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.Class<?> wildcardClass61 = type60.getClass();
        enhancer25.setSuperclass((java.lang.Class) wildcardClass61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.Class<?> wildcardClass64 = type63.getClass();
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        enhancer25.setSuperclass((java.lang.Class) wildcardClass64);
        java.lang.String str67 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass64);
        label21.info = wildcardClass64;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getReturnType("F");
        int int72 = type70.getOpcode(12);
        label21.info = int72;
        java.lang.String str74 = label21.toString();
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter9.visitLocalVariable("L340079497", "L1110179078", "", label15, label21, 155);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 155");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1819138901" + "'", str14, "L1819138901");
        org.junit.Assert.assertNull(obj17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L2138139597" + "'", str18, "L2138139597");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L2138139597" + "'", str19, "L2138139597");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L2138139597" + "'", str20, "L2138139597");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1462407402" + "'", str22, "L1462407402");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str31, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str35, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str39, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(callbackArray54);
        org.junit.Assert.assertNotNull(generatorStrategy59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str67, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 14 + "'", int72 == 14);
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L1462407402" + "'", str74, "L1462407402");
    }

    @Test
    public void test04032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04032");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        enhancer30.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter35 = null;
        enhancer30.setCallbackFilter(callbackFilter35);
        java.lang.ClassLoader classLoader37 = enhancer30.getClassLoader();
        enhancer0.setClassLoader(classLoader37);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setUseFactory(true);
        enhancer39.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback44 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray45 = new org.mockito.cglib.proxy.Callback[] { callback44 };
        enhancer39.setCallbacks(callbackArray45);
        enhancer39.setSerialVersionUID((java.lang.Long) 1L);
        java.lang.ClassLoader classLoader49 = enhancer39.getClassLoader();
        enhancer0.setClassLoader(classLoader49);
        boolean boolean51 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback55 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray56 = new org.mockito.cglib.proxy.Callback[] { callback55 };
        enhancer52.setCallbacks(callbackArray56);
        enhancer0.setCallbacks(callbackArray56);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback64 = null;
        enhancer61.setCallback(callback64);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter66 = null;
        enhancer61.setCallbackFilter(callbackFilter66);
        enhancer61.setSerialVersionUID((java.lang.Long) 0L);
        enhancer61.setUseCache(false);
        enhancer61.setUseFactory(false);
        boolean boolean74 = enhancer61.getAttemptLoad();
        enhancer61.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        enhancer77.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback80 = null;
        enhancer77.setCallback(callback80);
        enhancer77.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.ClassLoader classLoader84 = enhancer77.getClassLoader();
        enhancer77.setUseCache(false);
        enhancer77.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy89 = enhancer77.getStrategy();
        enhancer61.setStrategy(generatorStrategy89);
        enhancer0.setStrategy(generatorStrategy89);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(callbackArray45);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(callbackArray56);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(classLoader84);
        org.junit.Assert.assertNotNull(generatorStrategy89);
    }

    @Test
    public void test04033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04033");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.asm.ClassAdapter classAdapter1 = new org.mockito.asm.ClassAdapter(classVisitor0);
        java.lang.Class<?> wildcardClass2 = classAdapter1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        boolean boolean5 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.cglib.proxy.Callback callback7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass2, callback7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str3, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str4, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str6, "Lorg/mockito/asm/ClassAdapter;");
    }

    @Test
    public void test04034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04034");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.asm.ClassAdapter classAdapter1 = new org.mockito.asm.ClassAdapter(classVisitor0);
        java.lang.Class<?> wildcardClass2 = classAdapter1.getClass();
        boolean boolean3 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        boolean boolean4 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        boolean boolean5 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer10.setCallback(callback13);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        enhancer15.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass25, wildcardClass29, wildcardClass33, wildcardClass37 };
        enhancer20.setInterfaces(classArray39);
        enhancer15.setInterfaces(classArray39);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor42);
        java.lang.Class<?> wildcardClass44 = classAdapter43.getClass();
        java.lang.String str45 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass44);
        java.lang.String str46 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass44);
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        java.lang.Class<?> wildcardClass49 = classAdapter48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Class[] classArray52 = new java.lang.Class[] { wildcardClass44, wildcardClass49 };
        enhancer15.setInterfaces(classArray52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer15.getStrategy();
        enhancer10.setStrategy(generatorStrategy54);
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setUseFactory(true);
        enhancer56.setInterceptDuringConstruction(true);
        enhancer56.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        enhancer63.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback66 = null;
        enhancer63.setCallback(callback66);
        org.mockito.cglib.proxy.Callback callback68 = null;
        enhancer63.setCallback(callback68);
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor73);
        java.lang.Class<?> wildcardClass75 = classAdapter74.getClass();
        java.lang.String str76 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        org.mockito.asm.ClassVisitor classVisitor77 = null;
        org.mockito.asm.ClassAdapter classAdapter78 = new org.mockito.asm.ClassAdapter(classVisitor77);
        java.lang.Class<?> wildcardClass79 = classAdapter78.getClass();
        java.lang.String str80 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass79);
        org.mockito.asm.ClassVisitor classVisitor81 = null;
        org.mockito.asm.ClassAdapter classAdapter82 = new org.mockito.asm.ClassAdapter(classVisitor81);
        java.lang.Class<?> wildcardClass83 = classAdapter82.getClass();
        java.lang.String str84 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass83);
        org.mockito.asm.ClassVisitor classVisitor85 = null;
        org.mockito.asm.ClassAdapter classAdapter86 = new org.mockito.asm.ClassAdapter(classVisitor85);
        java.lang.Class<?> wildcardClass87 = classAdapter86.getClass();
        boolean boolean88 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass87);
        java.lang.Class[] classArray89 = new java.lang.Class[] { wildcardClass75, wildcardClass79, wildcardClass83, wildcardClass87 };
        enhancer70.setInterfaces(classArray89);
        enhancer63.setInterfaces(classArray89);
        enhancer56.setInterfaces(classArray89);
        enhancer10.setInterfaces(classArray89);
        org.mockito.cglib.proxy.Callback callback94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass2, classArray89, callback94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str7, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str9, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str26, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str34, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str45, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str46, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str76, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str80, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str84, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(classArray89);
    }

    @Test
    public void test04035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04035");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer15.setCallback(callback18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer15.setCallback(callback20);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer15.getStrategy();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        boolean boolean26 = type23.equals((java.lang.Object) classVisitor24);
        int int28 = type23.getOpcode(116);
        boolean boolean29 = generatorStrategy22.equals((java.lang.Object) 116);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer30.setCallback(callback33);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer30.setCallback(callback35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        java.lang.Class<?> wildcardClass42 = classAdapter41.getClass();
        java.lang.String str43 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass42);
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        java.lang.Class<?> wildcardClass46 = classAdapter45.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor48);
        java.lang.Class<?> wildcardClass50 = classAdapter49.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        java.lang.Class<?> wildcardClass54 = classAdapter53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Class[] classArray56 = new java.lang.Class[] { wildcardClass42, wildcardClass46, wildcardClass50, wildcardClass54 };
        enhancer37.setInterfaces(classArray56);
        enhancer30.setInterfaces(classArray56);
        boolean boolean59 = generatorStrategy22.equals((java.lang.Object) enhancer30);
        enhancer0.setStrategy(generatorStrategy22);
        org.mockito.asm.MethodVisitor methodVisitor63 = null;
        org.mockito.asm.MethodAdapter methodAdapter64 = new org.mockito.asm.MethodAdapter(methodVisitor63);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter65 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter64);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter66 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter65);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter67 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter65);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter68 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter65);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter69 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter68);
        org.mockito.asm.MethodAdapter methodAdapter70 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter68);
        boolean boolean71 = generatorStrategy22.equals((java.lang.Object) methodAdapter70);
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter70.visitInsn(139);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 116 + "'", int28 == 116);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str43, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str47, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str51, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test04036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04036");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        boolean boolean9 = generatorStrategy7.equals((java.lang.Object) label8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor11);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classAdapter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter24.getClassInfo();
        label8.info = classEmitter24;
        java.lang.Object obj28 = label8.info;
        java.lang.String str29 = label8.toString();
        java.lang.Object obj30 = label8.info;
        java.lang.String str31 = label8.toString();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor39);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classAdapter41);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo44 = classEmitter43.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        label8.info = classEmitter45;
        java.lang.String[] strArray60 = new java.lang.String[] { "L1275378065", "L350730392", "L1993176919", "L827113664", "L984475054" };
        // The following exception was thrown during execution in test generation
        try {
            classEmitter45.visit(16, (int) (short) 100, "L1996578367", "L1575424982", "L1056781146", strArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNotNull(obj28);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L932779958" + "'", str29, "L932779958");
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L932779958" + "'", str31, "L932779958");
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo44);
        org.junit.Assert.assertNotNull(strArray60);
    }

    @Test
    public void test04037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04037");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        enhancer7.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy14);
        enhancer0.setUseFactory(true);
        enhancer0.setUseCache(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class22 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy14);
    }

    @Test
    public void test04038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04038");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        boolean boolean21 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        enhancer23.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter28 = null;
        enhancer23.setCallbackFilter(callbackFilter28);
        java.lang.ClassLoader classLoader30 = enhancer23.getClassLoader();
        enhancer0.setClassLoader(classLoader30);
        java.lang.ClassLoader classLoader32 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter(classVisitor35);
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classAdapter37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter39.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.cglib.core.ClassInfo classInfo44 = classEmitter41.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter45.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter41.setTarget((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter50.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        classEmitter41.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor55 = null;
        org.mockito.asm.ClassAdapter classAdapter56 = new org.mockito.asm.ClassAdapter(classVisitor55);
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor55);
        classEmitter54.setTarget((org.mockito.asm.ClassVisitor) classAdapter57);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter59.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter59.setTarget((org.mockito.asm.ClassVisitor) classEmitter61);
        classEmitter54.setTarget((org.mockito.asm.ClassVisitor) classEmitter61);
        org.mockito.cglib.core.ClassInfo classInfo64 = classEmitter54.getClassInfo();
        classEmitter41.setTarget((org.mockito.asm.ClassVisitor) classEmitter54);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo44);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo51);
        org.junit.Assert.assertNull(classInfo60);
        org.junit.Assert.assertNull(classInfo64);
    }

    @Test
    public void test04039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04039");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.asm.MethodAdapter methodAdapter7 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.String str10 = type9.toString();
        int int12 = type9.getOpcode(1);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local16 = new org.mockito.cglib.core.Local(0, type15);
        int int17 = type15.getSort();
        java.lang.String str18 = type15.getClassName();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local22 = new org.mockito.cglib.core.Local(0, type21);
        org.mockito.cglib.core.Local local23 = new org.mockito.cglib.core.Local((int) (byte) 100, type21);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        boolean boolean31 = type28.equals((java.lang.Object) classVisitor29);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str33 = type32.getDescriptor();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        boolean boolean39 = type36.equals((java.lang.Object) classVisitor37);
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type27, type28, type32, type34, type35, type36 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray40);
        org.mockito.cglib.core.Signature signature42 = new org.mockito.cglib.core.Signature("L1057808593", type25, typeArray40);
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray40);
        org.mockito.cglib.core.Signature signature44 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type15, typeArray40);
        org.mockito.asm.Type type45 = signature44.getReturnType();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer46.setCallback(callback49);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter51 = null;
        enhancer46.setCallbackFilter(callbackFilter51);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer46.setCallback(callback53);
        enhancer46.setInterceptDuringConstruction(true);
        boolean boolean57 = signature44.equals((java.lang.Object) true);
        org.mockito.asm.Type[] typeArray58 = signature44.getArgumentTypes();
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray58);
        int int60 = type9.getSize();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter4.visitLdcInsn((java.lang.Object) int60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "B" + "'", str10, "B");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "double" + "'", str18, "double");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "V" + "'", str33, "V");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(VZVDDZ)V" + "'", str41, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(VZVDDZ)D" + "'", str43, "(VZVDDZ)D");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VZVDDZ)B" + "'", str59, "(VZVDDZ)B");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
    }

    @Test
    public void test04040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04040");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        java.lang.Object obj12 = label11.info;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        int int14 = type13.getSort();
        label11.info = type13;
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer16.setCallback(callback19);
        enhancer16.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer16.getNamingPolicy();
        boolean boolean25 = namingPolicy23.equals((java.lang.Object) 5);
        label11.info = boolean25;
        java.lang.Object obj27 = label11.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter9.visitJumpInsn(122, label11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(namingPolicy23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
    }

    @Test
    public void test04041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04041");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        java.lang.Class<?> wildcardClass7 = enhancer0.getClass();
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass7, callback9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test04042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04042");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor9 = null;
        org.mockito.asm.ClassAdapter classAdapter10 = new org.mockito.asm.ClassAdapter(classVisitor9);
        boolean boolean11 = type8.equals((java.lang.Object) classVisitor9);
        int int13 = type8.getOpcode(116);
        boolean boolean14 = generatorStrategy7.equals((java.lang.Object) 116);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer15.setCallback(callback18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer15.setCallback(callback20);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor25);
        java.lang.Class<?> wildcardClass27 = classAdapter26.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        java.lang.Class<?> wildcardClass31 = classAdapter30.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass31);
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        java.lang.Class<?> wildcardClass35 = classAdapter34.getClass();
        java.lang.String str36 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass35);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        java.lang.Class<?> wildcardClass39 = classAdapter38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Class[] classArray41 = new java.lang.Class[] { wildcardClass27, wildcardClass31, wildcardClass35, wildcardClass39 };
        enhancer22.setInterfaces(classArray41);
        enhancer15.setInterfaces(classArray41);
        boolean boolean44 = generatorStrategy7.equals((java.lang.Object) enhancer15);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor51);
        boolean boolean53 = type50.equals((java.lang.Object) classVisitor51);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str55 = type54.getDescriptor();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor59 = null;
        org.mockito.asm.ClassAdapter classAdapter60 = new org.mockito.asm.ClassAdapter(classVisitor59);
        boolean boolean61 = type58.equals((java.lang.Object) classVisitor59);
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type49, type50, type54, type56, type57, type58 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray62);
        org.mockito.cglib.core.Signature signature64 = new org.mockito.cglib.core.Signature("L1057808593", type47, typeArray62);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor70 = null;
        org.mockito.asm.ClassAdapter classAdapter71 = new org.mockito.asm.ClassAdapter(classVisitor70);
        boolean boolean72 = type69.equals((java.lang.Object) classVisitor70);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str74 = type73.getDescriptor();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type76 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type77 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor78 = null;
        org.mockito.asm.ClassAdapter classAdapter79 = new org.mockito.asm.ClassAdapter(classVisitor78);
        boolean boolean80 = type77.equals((java.lang.Object) classVisitor78);
        org.mockito.asm.Type[] typeArray81 = new org.mockito.asm.Type[] { type68, type69, type73, type75, type76, type77 };
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray81);
        org.mockito.cglib.core.Signature signature83 = new org.mockito.cglib.core.Signature("L1057808593", type66, typeArray81);
        org.mockito.cglib.core.Signature signature84 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type47, typeArray81);
        boolean boolean85 = generatorStrategy7.equals((java.lang.Object) signature84);
        org.mockito.asm.Type[] typeArray86 = signature84.getArgumentTypes();
        org.mockito.asm.Type[] typeArray87 = signature84.getArgumentTypes();
        org.mockito.asm.Type type88 = signature84.getReturnType();
        java.lang.String str89 = signature84.toString();
        java.lang.String str90 = signature84.getDescriptor();
        org.mockito.asm.Type type91 = signature84.getReturnType();
        org.mockito.asm.Type type92 = signature84.getReturnType();
        java.lang.String str93 = signature84.getName();
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 116 + "'", int13 == 116);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str28, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str32, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str36, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "V" + "'", str55, "V");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VZVDDZ)V" + "'", str63, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "V" + "'", str74, "V");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VZVDDZ)V" + "'", str82, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(VZVDDZ)F" + "'", str89, "Lorg/mockito/cglib/proxy/Enhancer;(VZVDDZ)F");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(VZVDDZ)F" + "'", str90, "(VZVDDZ)F");
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str93, "Lorg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test04043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04043");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass25, wildcardClass29, wildcardClass33, wildcardClass37 };
        enhancer20.setInterfaces(classArray39);
        boolean boolean41 = enhancer20.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer20.getStrategy();
        enhancer0.setStrategy(generatorStrategy42);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer45.setCallback(callback48);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer45.setCallback(callback50);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer45.getStrategy();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        boolean boolean56 = type53.equals((java.lang.Object) classVisitor54);
        int int58 = type53.getOpcode(116);
        boolean boolean59 = generatorStrategy52.equals((java.lang.Object) 116);
        enhancer0.setStrategy(generatorStrategy52);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor62);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classAdapter64);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor67);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classAdapter69);
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo72 = classEmitter71.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter71.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        boolean boolean78 = generatorStrategy52.equals((java.lang.Object) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo81 = classEmitter80.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter82 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter80.setTarget((org.mockito.asm.ClassVisitor) classEmitter82);
        classEmitter79.setTarget((org.mockito.asm.ClassVisitor) classEmitter80);
        org.mockito.asm.ClassAdapter classAdapter85 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter80);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter80.visitInnerClass("L1957109949", "L1714799919", "L77559189", 161);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str26, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str34, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 116 + "'", int58 == 116);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(classInfo72);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(classInfo81);
    }

    @Test
    public void test04044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04044");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter(methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(158, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer12.setCallback(callback15);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer12.setCallback(callback17);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer12.getStrategy();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        boolean boolean21 = generatorStrategy19.equals((java.lang.Object) label20);
        java.lang.String str22 = label20.toString();
        java.lang.String str23 = label20.toString();
        java.lang.Object obj24 = label20.info;
        java.lang.String str25 = label20.toString();
        org.mockito.cglib.core.Signature signature28 = new org.mockito.cglib.core.Signature("L766897279", "L346406196");
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        boolean boolean30 = signature28.equals((java.lang.Object) label29);
        java.lang.Object obj31 = label29.info;
        org.mockito.asm.Label label32 = new org.mockito.asm.Label();
        java.lang.String str33 = label32.toString();
        org.mockito.asm.Label label34 = new org.mockito.asm.Label();
        label32.info = label34;
        java.lang.String str36 = label32.toString();
        java.lang.String str37 = label32.toString();
        java.lang.String str38 = label32.toString();
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        java.lang.String str40 = label39.toString();
        org.mockito.asm.Label label41 = new org.mockito.asm.Label();
        label39.info = label41;
        java.lang.String str43 = label39.toString();
        java.lang.String str44 = label39.toString();
        label32.info = label39;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter10.visitTryCatchBlock(label20, label29, label39, "L1947777222");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1352195630" + "'", str22, "L1352195630");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1352195630" + "'", str23, "L1352195630");
        org.junit.Assert.assertNull(obj24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1352195630" + "'", str25, "L1352195630");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1677106027" + "'", str33, "L1677106027");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1677106027" + "'", str36, "L1677106027");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1677106027" + "'", str37, "L1677106027");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L1677106027" + "'", str38, "L1677106027");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1984914600" + "'", str40, "L1984914600");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L1984914600" + "'", str43, "L1984914600");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L1984914600" + "'", str44, "L1984914600");
    }

    @Test
    public void test04045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04045");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        boolean boolean5 = type2.equals((java.lang.Object) classVisitor3);
        int int7 = type2.getOpcode(116);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        boolean boolean13 = type10.equals((java.lang.Object) classVisitor11);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.getDescriptor();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        boolean boolean21 = type18.equals((java.lang.Object) classVisitor19);
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type9, type10, type14, type16, type17, type18 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray22);
        org.mockito.cglib.core.Signature signature24 = new org.mockito.cglib.core.Signature("V", type2, typeArray22);
        org.mockito.cglib.core.Local local25 = new org.mockito.cglib.core.Local(100, type2);
        int int26 = local25.getIndex();
        int int27 = local25.getIndex();
        org.mockito.asm.Type type28 = local25.getType();
        int int29 = local25.getIndex();
        int int30 = local25.getIndex();
        java.lang.Class<?> wildcardClass31 = local25.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer32.setCallback(callback35);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer32.setCallback(callback37);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy39 = enhancer32.getStrategy();
        enhancer32.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean42 = enhancer32.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer43.setCallback(callback46);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter48 = null;
        enhancer43.setCallbackFilter(callbackFilter48);
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor50);
        java.lang.Class<?> wildcardClass52 = classAdapter51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        enhancer43.setSuperclass((java.lang.Class) wildcardClass52);
        enhancer43.setUseFactory(true);
        boolean boolean57 = enhancer43.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback58 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray59 = new org.mockito.cglib.proxy.Callback[] { callback58 };
        enhancer43.setCallbacks(callbackArray59);
        enhancer32.setCallbacks(callbackArray59);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerStaticCallbacks((java.lang.Class) wildcardClass31, callbackArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.core.Local is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 116 + "'", int7 == 116);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VZVDDZ)V" + "'", str23, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(generatorStrategy39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(callbackArray59);
    }

    @Test
    public void test04046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04046");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter(methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(158, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        java.lang.String str12 = label11.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        label11.info = label13;
        java.lang.Object obj15 = label11.info;
        java.lang.Object obj16 = label11.info;
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer17.setCallback(callback20);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer17.setCallback(callback22);
        boolean boolean24 = enhancer17.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        java.lang.Class<?> wildcardClass30 = classAdapter29.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass34);
        org.mockito.asm.ClassVisitor classVisitor36 = null;
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter(classVisitor36);
        java.lang.Class<?> wildcardClass38 = classAdapter37.getClass();
        java.lang.String str39 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        java.lang.Class<?> wildcardClass42 = classAdapter41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Class[] classArray44 = new java.lang.Class[] { wildcardClass30, wildcardClass34, wildcardClass38, wildcardClass42 };
        enhancer25.setInterfaces(classArray44);
        boolean boolean46 = enhancer25.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer25.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setUseFactory(true);
        enhancer48.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter53 = null;
        enhancer48.setCallbackFilter(callbackFilter53);
        java.lang.ClassLoader classLoader55 = enhancer48.getClassLoader();
        enhancer25.setClassLoader(classLoader55);
        enhancer17.setClassLoader(classLoader55);
        boolean boolean58 = enhancer17.getUseCache();
        boolean boolean59 = enhancer17.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter60 = null;
        enhancer17.setCallbackFilter(callbackFilter60);
        label11.info = enhancer17;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter6.visitLabel(label11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L125866361" + "'", str12, "L125866361");
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals(obj15.toString(), "L2091971828");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "L2091971828");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "L2091971828");
        org.junit.Assert.assertNotNull(obj16);
// flaky:         org.junit.Assert.assertEquals(obj16.toString(), "L2091971828");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "L2091971828");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "L2091971828");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str31, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str35, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str39, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(generatorStrategy47);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test04047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04047");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer12.setCallback(callback15);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer12.setCallback(callback17);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer12.getStrategy();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        boolean boolean21 = generatorStrategy19.equals((java.lang.Object) label20);
        java.lang.String str22 = label20.toString();
        java.lang.String str23 = label20.toString();
        java.lang.Object obj24 = label20.info;
        java.lang.String str25 = label20.toString();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer26.setCallback(callback27);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer30.setCallback(callback33);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer30.setCallback(callback35);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy37 = enhancer30.getStrategy();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        boolean boolean41 = type38.equals((java.lang.Object) classVisitor39);
        int int43 = type38.getOpcode(116);
        boolean boolean44 = generatorStrategy37.equals((java.lang.Object) 116);
        enhancer29.setStrategy(generatorStrategy37);
        enhancer26.setStrategy(generatorStrategy37);
        boolean boolean48 = generatorStrategy37.equals((java.lang.Object) "L1595646795");
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer49.setCallback(callback52);
        org.mockito.cglib.proxy.Callback callback54 = null;
        enhancer49.setCallback(callback54);
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback59 = null;
        enhancer56.setCallback(callback59);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter61 = null;
        enhancer56.setCallbackFilter(callbackFilter61);
        org.mockito.cglib.proxy.Callback callback63 = null;
        enhancer56.setCallback(callback63);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer56.getNamingPolicy();
        enhancer49.setNamingPolicy(namingPolicy65);
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        java.lang.Class<?> wildcardClass69 = classAdapter68.getClass();
        enhancer49.setSuperclass((java.lang.Class) wildcardClass69);
        boolean boolean71 = generatorStrategy37.equals((java.lang.Object) enhancer49);
        label20.info = generatorStrategy37;
        java.lang.String str73 = label20.toString();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter9.visitLdcInsn((java.lang.Object) label20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L781200615" + "'", str22, "L781200615");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L781200615" + "'", str23, "L781200615");
        org.junit.Assert.assertNull(obj24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L781200615" + "'", str25, "L781200615");
        org.junit.Assert.assertNotNull(generatorStrategy37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 116 + "'", int43 == 116);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "L781200615" + "'", str73, "L781200615");
    }

    @Test
    public void test04048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04048");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter7.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor17);
        classEmitter7.setTarget(classVisitor17);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer21.setCallback(callback24);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer21.setCallback(callback26);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer21.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer21.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor31);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classAdapter33);
        boolean boolean35 = namingPolicy29.equals((java.lang.Object) classAdapter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter33);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor38);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classAdapter40);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter42.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassInfo classInfo47 = classEmitter44.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo49 = classEmitter48.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter48);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter51);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter53);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassInfo classInfo59 = classEmitter57.getClassInfo();
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassInfo classInfo61 = classEmitter36.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter7.visitInnerClass("L549231031", "L2139485822", "", 121);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertNull(classInfo47);
        org.junit.Assert.assertNull(classInfo49);
        org.junit.Assert.assertNull(classInfo54);
        org.junit.Assert.assertNull(classInfo59);
        org.junit.Assert.assertNull(classInfo61);
    }

    @Test
    public void test04049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04049");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        java.lang.String str18 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass17);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        java.lang.Class<?> wildcardClass21 = classAdapter20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass9, wildcardClass13, wildcardClass17, wildcardClass21 };
        enhancer4.setInterfaces(classArray23);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer4.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setUseFactory(true);
        enhancer27.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback32 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray33 = new org.mockito.cglib.proxy.Callback[] { callback32 };
        enhancer27.setCallbacks(callbackArray33);
        enhancer4.setCallbacks(callbackArray33);
        java.lang.Class class36 = null;
        enhancer4.setSuperclass(class36);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy38 = enhancer4.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer4.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setUseFactory(true);
        enhancer41.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        java.lang.Class<?> wildcardClass51 = classAdapter50.getClass();
        java.lang.String str52 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass51);
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.asm.ClassAdapter classAdapter54 = new org.mockito.asm.ClassAdapter(classVisitor53);
        java.lang.Class<?> wildcardClass55 = classAdapter54.getClass();
        java.lang.String str56 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass55);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        java.lang.Class<?> wildcardClass59 = classAdapter58.getClass();
        java.lang.String str60 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass59);
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        java.lang.Class<?> wildcardClass63 = classAdapter62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Class[] classArray65 = new java.lang.Class[] { wildcardClass51, wildcardClass55, wildcardClass59, wildcardClass63 };
        enhancer46.setInterfaces(classArray65);
        enhancer41.setInterfaces(classArray65);
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        java.lang.Class<?> wildcardClass70 = classAdapter69.getClass();
        java.lang.String str71 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass70);
        java.lang.String str72 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass70);
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor73);
        java.lang.Class<?> wildcardClass75 = classAdapter74.getClass();
        boolean boolean76 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass75);
        boolean boolean77 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass75);
        java.lang.Class[] classArray78 = new java.lang.Class[] { wildcardClass70, wildcardClass75 };
        enhancer41.setInterfaces(classArray78);
        enhancer41.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy82 = enhancer41.getStrategy();
        enhancer41.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy85 = enhancer41.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy85);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter87 = null;
        enhancer0.setCallbackFilter(callbackFilter87);
        org.mockito.cglib.proxy.Enhancer enhancer89 = new org.mockito.cglib.proxy.Enhancer();
        enhancer89.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback92 = null;
        enhancer89.setCallback(callback92);
        enhancer89.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass96 = enhancer89.getClass();
        boolean boolean97 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass96);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.proxy.Enhancer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str18, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(callbackArray33);
        org.junit.Assert.assertNotNull(generatorStrategy38);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str52, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str56, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str60, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str71, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str72, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(generatorStrategy82);
        org.junit.Assert.assertNotNull(namingPolicy85);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test04050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04050");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        label11.info = 10.0f;
        java.lang.String str14 = label11.toString();
        java.lang.String str15 = label11.toString();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer16.setCallback(callback17);
        enhancer16.setInterceptDuringConstruction(true);
        boolean boolean21 = enhancer16.getAttemptLoad();
        enhancer16.setUseFactory(true);
        enhancer16.setInterceptDuringConstruction(true);
        label11.info = true;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitLineNumber((int) ' ', label11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L10893523" + "'", str14, "L10893523");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L10893523" + "'", str15, "L10893523");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test04051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04051");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        org.mockito.asm.ClassAdapter classAdapter10 = new org.mockito.asm.ClassAdapter(classVisitor8);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classAdapter10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor13);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classAdapter15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer23.setCallback(callback26);
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer23.setCallback(callback28);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer23.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer23.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor33);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        boolean boolean37 = namingPolicy31.equals((java.lang.Object) classAdapter35);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor41);
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classAdapter43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter45.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter40.getClassInfo();
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter40);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter40.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNotNull(generatorStrategy30);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo51);
    }

    @Test
    public void test04052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04052");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter21 = null;
        enhancer0.setCallbackFilter(callbackFilter21);
        enhancer0.setUseCache(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer27.setCallback(callback28);
        java.lang.Class<?> wildcardClass30 = enhancer27.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass30);
        java.lang.String str33 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        java.lang.String str34 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass30);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass30);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setUseFactory(true);
        enhancer36.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter41 = null;
        enhancer36.setCallbackFilter(callbackFilter41);
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        java.lang.Class<?> wildcardClass48 = classAdapter47.getClass();
        java.lang.String str49 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass48);
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor50);
        java.lang.Class<?> wildcardClass52 = classAdapter51.getClass();
        java.lang.String str53 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass52);
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        java.lang.Class<?> wildcardClass56 = classAdapter55.getClass();
        java.lang.String str57 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass56);
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        java.lang.Class<?> wildcardClass60 = classAdapter59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass48, wildcardClass52, wildcardClass56, wildcardClass60 };
        enhancer43.setInterfaces(classArray62);
        enhancer36.setInterfaces(classArray62);
        java.util.List list65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods((java.lang.Class) wildcardClass30, classArray62, list65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str31, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str33, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str34, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str49, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str53, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str57, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classArray62);
    }

    @Test
    public void test04053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04053");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        java.lang.Class<?> wildcardClass12 = classAdapter11.getClass();
        java.lang.String str13 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor14);
        java.lang.Class<?> wildcardClass16 = classAdapter15.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass20);
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.asm.ClassAdapter classAdapter23 = new org.mockito.asm.ClassAdapter(classVisitor22);
        java.lang.Class<?> wildcardClass24 = classAdapter23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass12, wildcardClass16, wildcardClass20, wildcardClass24 };
        enhancer7.setInterfaces(classArray26);
        enhancer0.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer29.setCallback(callback32);
        enhancer29.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer29.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy36);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer38.setCallback(callback41);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer38.setCallback(callback43);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer38.getNamingPolicy();
        boolean boolean46 = namingPolicy36.equals((java.lang.Object) namingPolicy45);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str49 = type48.getClassName();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local53 = new org.mockito.cglib.core.Local(0, type52);
        org.mockito.cglib.core.Local local54 = new org.mockito.cglib.core.Local((int) (byte) 100, type52);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        org.mockito.asm.ClassAdapter classAdapter61 = new org.mockito.asm.ClassAdapter(classVisitor60);
        boolean boolean62 = type59.equals((java.lang.Object) classVisitor60);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str64 = type63.getDescriptor();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        boolean boolean70 = type67.equals((java.lang.Object) classVisitor68);
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type58, type59, type63, type65, type66, type67 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray71);
        org.mockito.cglib.core.Signature signature73 = new org.mockito.cglib.core.Signature("L1057808593", type56, typeArray71);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray71);
        org.mockito.cglib.core.Signature signature75 = new org.mockito.cglib.core.Signature("L1346580404", type48, typeArray71);
        boolean boolean76 = namingPolicy36.equals((java.lang.Object) signature75);
        org.mockito.asm.MethodVisitor methodVisitor79 = null;
        org.mockito.asm.MethodAdapter methodAdapter80 = new org.mockito.asm.MethodAdapter(methodVisitor79);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter81 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter80);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter82 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter81);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter83 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter81);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter84 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter83);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter85 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter83);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter86 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter85);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter87 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter85);
        boolean boolean88 = namingPolicy36.equals((java.lang.Object) localVariablesSorter85);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor92 = localVariablesSorter85.visitParameterAnnotation(121, "L921652879", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str13, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str17, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str21, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "double" + "'", str49, "double");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "V" + "'", str64, "V");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VZVDDZ)V" + "'", str72, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VZVDDZ)D" + "'", str74, "(VZVDDZ)D");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test04054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04054");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        boolean boolean8 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter9 = null;
        enhancer0.setCallbackFilter(callbackFilter9);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        enhancer11.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback16 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray17 = new org.mockito.cglib.proxy.Callback[] { callback16 };
        enhancer11.setCallbacks(callbackArray17);
        boolean boolean19 = enhancer11.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy20 = enhancer11.getStrategy();
        org.mockito.asm.Label label21 = new org.mockito.asm.Label();
        java.lang.String str22 = label21.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        label21.info = label23;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local27 = new org.mockito.cglib.core.Local(0, type26);
        label21.info = 0;
        java.lang.String str29 = label21.toString();
        label21.info = "Z(VZVDDZ)Z";
        boolean boolean32 = generatorStrategy20.equals((java.lang.Object) "Z(VZVDDZ)Z");
        enhancer0.setStrategy(generatorStrategy20);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer36.setCallback(callback39);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter41 = null;
        enhancer36.setCallbackFilter(callbackFilter41);
        enhancer36.setSerialVersionUID((java.lang.Long) 0L);
        enhancer36.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        enhancer47.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor55 = null;
        org.mockito.asm.ClassAdapter classAdapter56 = new org.mockito.asm.ClassAdapter(classVisitor55);
        java.lang.Class<?> wildcardClass57 = classAdapter56.getClass();
        java.lang.String str58 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass57);
        org.mockito.asm.ClassVisitor classVisitor59 = null;
        org.mockito.asm.ClassAdapter classAdapter60 = new org.mockito.asm.ClassAdapter(classVisitor59);
        java.lang.Class<?> wildcardClass61 = classAdapter60.getClass();
        java.lang.String str62 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass61);
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor63);
        java.lang.Class<?> wildcardClass65 = classAdapter64.getClass();
        java.lang.String str66 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass65);
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        java.lang.Class<?> wildcardClass69 = classAdapter68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Class[] classArray71 = new java.lang.Class[] { wildcardClass57, wildcardClass61, wildcardClass65, wildcardClass69 };
        enhancer52.setInterfaces(classArray71);
        enhancer47.setInterfaces(classArray71);
        org.mockito.asm.ClassVisitor classVisitor74 = null;
        org.mockito.asm.ClassAdapter classAdapter75 = new org.mockito.asm.ClassAdapter(classVisitor74);
        java.lang.Class<?> wildcardClass76 = classAdapter75.getClass();
        java.lang.String str77 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass76);
        java.lang.String str78 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass76);
        org.mockito.asm.ClassVisitor classVisitor79 = null;
        org.mockito.asm.ClassAdapter classAdapter80 = new org.mockito.asm.ClassAdapter(classVisitor79);
        java.lang.Class<?> wildcardClass81 = classAdapter80.getClass();
        boolean boolean82 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass81);
        boolean boolean83 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass81);
        java.lang.Class[] classArray84 = new java.lang.Class[] { wildcardClass76, wildcardClass81 };
        enhancer47.setInterfaces(classArray84);
        java.lang.ClassLoader classLoader86 = enhancer47.getClassLoader();
        enhancer36.setClassLoader(classLoader86);
        org.mockito.cglib.proxy.Enhancer enhancer88 = new org.mockito.cglib.proxy.Enhancer();
        enhancer88.setUseFactory(true);
        enhancer88.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter93 = null;
        enhancer88.setCallbackFilter(callbackFilter93);
        java.lang.ClassLoader classLoader95 = enhancer88.getClassLoader();
        enhancer36.setClassLoader(classLoader95);
        java.lang.ClassLoader classLoader97 = enhancer36.getClassLoader();
        enhancer0.setClassLoader(classLoader97);
        boolean boolean99 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(callbackArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(generatorStrategy20);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1087073947" + "'", str22, "L1087073947");
        org.junit.Assert.assertNotNull(type26);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L1087073947" + "'", str29, "L1087073947");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str58, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str62, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str66, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(classArray71);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str77, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str78, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(classArray84);
        org.junit.Assert.assertNotNull(classLoader86);
        org.junit.Assert.assertNotNull(classLoader95);
        org.junit.Assert.assertNotNull(classLoader97);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test04055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04055");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.asm.MethodAdapter methodAdapter7 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.asm.Label label10 = new org.mockito.asm.Label();
        java.lang.String str11 = label10.toString();
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        label10.info = label12;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        boolean boolean21 = type18.equals((java.lang.Object) classVisitor19);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str23 = type22.getDescriptor();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type25 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        boolean boolean29 = type26.equals((java.lang.Object) classVisitor27);
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type17, type18, type22, type24, type25, type26 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray30);
        org.mockito.cglib.core.Signature signature32 = new org.mockito.cglib.core.Signature("L1057808593", type15, typeArray30);
        label12.info = type15;
        org.mockito.asm.Label label34 = new org.mockito.asm.Label();
        java.lang.String str35 = label34.toString();
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        label34.info = label36;
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        java.lang.Class<?> wildcardClass43 = classAdapter42.getClass();
        java.lang.String str44 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass43);
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        java.lang.Class<?> wildcardClass47 = classAdapter46.getClass();
        java.lang.String str48 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        java.lang.Class<?> wildcardClass51 = classAdapter50.getClass();
        java.lang.String str52 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass51);
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.asm.ClassAdapter classAdapter54 = new org.mockito.asm.ClassAdapter(classVisitor53);
        java.lang.Class<?> wildcardClass55 = classAdapter54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Class[] classArray57 = new java.lang.Class[] { wildcardClass43, wildcardClass47, wildcardClass51, wildcardClass55 };
        enhancer38.setInterfaces(classArray57);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter59 = null;
        enhancer38.setCallbackFilter(callbackFilter59);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setUseFactory(true);
        enhancer61.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback66 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray67 = new org.mockito.cglib.proxy.Callback[] { callback66 };
        enhancer61.setCallbacks(callbackArray67);
        enhancer38.setCallbacks(callbackArray67);
        java.lang.Class class70 = null;
        enhancer38.setSuperclass(class70);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy72 = enhancer38.getStrategy();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.Class<?> wildcardClass74 = type73.getClass();
        enhancer38.setSuperclass((java.lang.Class) wildcardClass74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.Class<?> wildcardClass77 = type76.getClass();
        boolean boolean78 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass77);
        enhancer38.setSuperclass((java.lang.Class) wildcardClass77);
        java.lang.String str80 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass77);
        label34.info = wildcardClass77;
        java.lang.Object obj82 = label34.info;
        label12.info = obj82;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter8.visitLineNumber(0, label12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L1143681523" + "'", str11, "L1143681523");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "V" + "'", str23, "V");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(VZVDDZ)V" + "'", str31, "(VZVDDZ)V");
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L808416654" + "'", str35, "L808416654");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str44, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str48, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str52, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(callbackArray67);
        org.junit.Assert.assertNotNull(generatorStrategy72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str80, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class org.mockito.asm.Type");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class org.mockito.asm.Type");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class org.mockito.asm.Type");
    }

    @Test
    public void test04056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04056");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseFactory(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.Class<?> wildcardClass17 = type16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass17);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass17);
        java.lang.ClassLoader classLoader21 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer0.setCallback(callback22);
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/Type" + "'", str19, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(classLoader21);
    }

    @Test
    public void test04057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04057");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        java.lang.ClassLoader classLoader30 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor33);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor38);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classAdapter40);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter42.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor49);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classAdapter51);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassInfo classInfo58 = classEmitter55.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter59.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassInfo classInfo64 = classEmitter62.getClassInfo();
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        boolean boolean66 = namingPolicy31.equals((java.lang.Object) classEmitter37);
        java.lang.String[] strArray76 = new java.lang.String[] { "L368484220", "[Ljava/lang/Class;", "L1488637670", "org/mockito/cglib/core/ClassEmitter" };
        // The following exception was thrown during execution in test generation
        try {
            classEmitter37.visit((int) (byte) 100, 0, "L1050387368", "L1000115415", "L923809696", strArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertNull(classInfo54);
        org.junit.Assert.assertNull(classInfo58);
        org.junit.Assert.assertNull(classInfo60);
        org.junit.Assert.assertNull(classInfo64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strArray76);
    }

    @Test
    public void test04058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04058");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean11 = enhancer0.getUseCache();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class14 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test04059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04059");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.asm.Label label5 = new org.mockito.asm.Label();
        java.lang.String str6 = label5.toString();
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        label5.info = label7;
        java.lang.String str9 = label5.toString();
        java.lang.String str10 = label5.toString();
        java.lang.Object obj11 = label5.info;
        java.lang.String str12 = label5.toString();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer13.setCallback(callback16);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer13.setCallback(callback18);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy20 = enhancer13.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer13.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer13.getNamingPolicy();
        label5.info = enhancer13;
        java.lang.Object obj24 = label5.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter4.visitLabel(label5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1167498206" + "'", str6, "L1167498206");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1167498206" + "'", str9, "L1167498206");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L1167498206" + "'", str10, "L1167498206");
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals(obj11.toString(), "L167664620");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "L167664620");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "L167664620");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1167498206" + "'", str12, "L1167498206");
        org.junit.Assert.assertNotNull(generatorStrategy20);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test04060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04060");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        enhancer0.setAttemptLoad(true);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy34 = enhancer0.getStrategy();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        boolean boolean43 = type40.equals((java.lang.Object) classVisitor41);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.getDescriptor();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        boolean boolean51 = type48.equals((java.lang.Object) classVisitor49);
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type39, type40, type44, type46, type47, type48 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray52);
        org.mockito.cglib.core.Signature signature54 = new org.mockito.cglib.core.Signature("L1057808593", type37, typeArray52);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        org.mockito.asm.ClassAdapter classAdapter61 = new org.mockito.asm.ClassAdapter(classVisitor60);
        boolean boolean62 = type59.equals((java.lang.Object) classVisitor60);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str64 = type63.getDescriptor();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        boolean boolean70 = type67.equals((java.lang.Object) classVisitor68);
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type58, type59, type63, type65, type66, type67 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray71);
        org.mockito.cglib.core.Signature signature73 = new org.mockito.cglib.core.Signature("L1057808593", type56, typeArray71);
        org.mockito.cglib.core.Signature signature74 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type37, typeArray71);
        java.lang.String str75 = signature74.getDescriptor();
        boolean boolean76 = generatorStrategy34.equals((java.lang.Object) str75);
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        enhancer77.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback80 = null;
        enhancer77.setCallback(callback80);
        org.mockito.cglib.proxy.Callback callback82 = null;
        enhancer77.setCallback(callback82);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy84 = enhancer77.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy85 = enhancer77.getNamingPolicy();
        enhancer77.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.CallbackFilter callbackFilter88 = null;
        enhancer77.setCallbackFilter(callbackFilter88);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray90 = generatorStrategy34.generate((org.mockito.cglib.core.ClassGenerator) enhancer77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(generatorStrategy34);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(VZVDDZ)V" + "'", str53, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "V" + "'", str64, "V");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VZVDDZ)V" + "'", str72, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(VZVDDZ)F" + "'", str75, "(VZVDDZ)F");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(generatorStrategy84);
        org.junit.Assert.assertNotNull(namingPolicy85);
    }

    @Test
    public void test04061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04061");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter9);
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        java.lang.String str13 = label12.toString();
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        label12.info = label14;
        java.lang.Object obj16 = label12.info;
        java.lang.String str17 = label12.toString();
        java.lang.String str18 = label12.toString();
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        java.lang.String str20 = label19.toString();
        org.mockito.asm.Label label21 = new org.mockito.asm.Label();
        label19.info = label21;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local25 = new org.mockito.cglib.core.Local(0, type24);
        label19.info = 0;
        java.lang.String str27 = label19.toString();
        label19.info = "Z(VZVDDZ)Z";
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer30.setCallback(callback33);
        enhancer30.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass37 = enhancer30.getClass();
        label19.info = wildcardClass37;
        java.lang.String str39 = label19.toString();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer40.setCallback(callback43);
        boolean boolean45 = enhancer40.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback47 = null;
        enhancer46.setCallback(callback47);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer50.setCallback(callback53);
        org.mockito.cglib.proxy.Callback callback55 = null;
        enhancer50.setCallback(callback55);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy57 = enhancer50.getStrategy();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor59 = null;
        org.mockito.asm.ClassAdapter classAdapter60 = new org.mockito.asm.ClassAdapter(classVisitor59);
        boolean boolean61 = type58.equals((java.lang.Object) classVisitor59);
        int int63 = type58.getOpcode(116);
        boolean boolean64 = generatorStrategy57.equals((java.lang.Object) 116);
        enhancer49.setStrategy(generatorStrategy57);
        enhancer46.setStrategy(generatorStrategy57);
        enhancer40.setStrategy(generatorStrategy57);
        org.mockito.cglib.core.Signature signature70 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        org.mockito.asm.Type[] typeArray71 = signature70.getArgumentTypes();
        java.lang.String str72 = signature70.getDescriptor();
        java.lang.String str73 = signature70.toString();
        boolean boolean74 = generatorStrategy57.equals((java.lang.Object) str73);
        label19.info = boolean74;
        org.mockito.asm.Label label76 = new org.mockito.asm.Label();
        java.lang.String str77 = label76.toString();
        org.mockito.asm.Label label78 = new org.mockito.asm.Label();
        label76.info = label78;
        java.lang.Object obj80 = label78.info;
        java.lang.String str81 = label78.toString();
        java.lang.String str82 = label78.toString();
        org.mockito.cglib.core.Signature signature85 = new org.mockito.cglib.core.Signature("", "V");
        java.lang.String str86 = signature85.getDescriptor();
        java.lang.String str87 = signature85.getDescriptor();
        label78.info = str87;
        java.lang.String str89 = label78.toString();
        java.lang.Object obj90 = label78.info;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter11.visitTryCatchBlock(label12, label19, label78, "L126162820");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1862765588" + "'", str13, "L1862765588");
        org.junit.Assert.assertNotNull(obj16);
// flaky:         org.junit.Assert.assertEquals(obj16.toString(), "L554160865");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "L554160865");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "L554160865");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1862765588" + "'", str17, "L1862765588");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1862765588" + "'", str18, "L1862765588");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1193389903" + "'", str20, "L1193389903");
        org.junit.Assert.assertNotNull(type24);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L1193389903" + "'", str27, "L1193389903");
        org.junit.Assert.assertNotNull(wildcardClass37);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "L1193389903" + "'", str39, "L1193389903");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(generatorStrategy57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 116 + "'", int63 == 116);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VZVDDZ)Z" + "'", str72, "(VZVDDZ)Z");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Z(VZVDDZ)Z" + "'", str73, "Z(VZVDDZ)Z");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L238668896" + "'", str77, "L238668896");
        org.junit.Assert.assertNull(obj80);
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "L1924368271" + "'", str81, "L1924368271");
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "L1924368271" + "'", str82, "L1924368271");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "V" + "'", str86, "V");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "V" + "'", str87, "V");
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "L1924368271" + "'", str89, "L1924368271");
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "V" + "'", obj90, "V");
    }

    @Test
    public void test04062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04062");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        java.lang.Object obj15 = label14.info;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        int int17 = type16.getSort();
        label14.info = type16;
        java.lang.Object obj19 = label14.info;
        java.lang.Object obj20 = label14.info;
        org.mockito.asm.Label label21 = new org.mockito.asm.Label();
        label21.info = 10.0f;
        java.lang.String str24 = label21.toString();
        java.lang.String str25 = label21.toString();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer26.setCallback(callback27);
        enhancer26.setInterceptDuringConstruction(true);
        boolean boolean31 = enhancer26.getAttemptLoad();
        enhancer26.setUseFactory(true);
        enhancer26.setInterceptDuringConstruction(true);
        label21.info = true;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitLocalVariable("L1589238157", "L283735037", "L2134658405", label14, label21, 167);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 167");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "S");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "S");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1068446746" + "'", str24, "L1068446746");
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1068446746" + "'", str25, "L1068446746");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test04063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04063");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        java.lang.Class<?> wildcardClass10 = localVariablesSorter9.getClass();
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        java.lang.String str12 = label11.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        label11.info = label13;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local17 = new org.mockito.cglib.core.Local(0, type16);
        label11.info = 0;
        java.lang.Object obj19 = label11.info;
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer20.setCallback(callback21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer24.setCallback(callback27);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer24.setCallback(callback29);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy31 = enhancer24.getStrategy();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        boolean boolean35 = type32.equals((java.lang.Object) classVisitor33);
        int int37 = type32.getOpcode(116);
        boolean boolean38 = generatorStrategy31.equals((java.lang.Object) 116);
        enhancer23.setStrategy(generatorStrategy31);
        enhancer20.setStrategy(generatorStrategy31);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setUseFactory(true);
        enhancer41.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter46 = null;
        enhancer41.setCallbackFilter(callbackFilter46);
        java.lang.ClassLoader classLoader48 = enhancer41.getClassLoader();
        enhancer20.setClassLoader(classLoader48);
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setUseFactory(true);
        enhancer50.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter55 = null;
        enhancer50.setCallbackFilter(callbackFilter55);
        java.lang.ClassLoader classLoader57 = enhancer50.getClassLoader();
        enhancer20.setClassLoader(classLoader57);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setUseFactory(true);
        enhancer59.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback64 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray65 = new org.mockito.cglib.proxy.Callback[] { callback64 };
        enhancer59.setCallbacks(callbackArray65);
        enhancer59.setSerialVersionUID((java.lang.Long) 1L);
        java.lang.ClassLoader classLoader69 = enhancer59.getClassLoader();
        enhancer20.setClassLoader(classLoader69);
        boolean boolean71 = enhancer20.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        enhancer72.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback75 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray76 = new org.mockito.cglib.proxy.Callback[] { callback75 };
        enhancer72.setCallbacks(callbackArray76);
        enhancer20.setCallbacks(callbackArray76);
        label11.info = callbackArray76;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerStaticCallbacks((java.lang.Class) wildcardClass10, callbackArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.core.LocalVariablesSorter is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass10);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L2083829609" + "'", str12, "L2083829609");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertNotNull(generatorStrategy31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 116 + "'", int37 == 116);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(callbackArray65);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(callbackArray76);
    }

    @Test
    public void test04064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04064");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setUseFactory(true);
        boolean boolean35 = enhancer32.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor36 = null;
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter(classVisitor36);
        java.lang.Class<?> wildcardClass38 = classAdapter37.getClass();
        java.lang.String str39 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        enhancer32.setSuperclass((java.lang.Class) wildcardClass38);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass38);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer0.getNamingPolicy();
        enhancer0.setInterceptDuringConstruction(true);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str39, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(namingPolicy43);
    }

    @Test
    public void test04065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04065");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.asm.ClassAdapter classAdapter1 = new org.mockito.asm.ClassAdapter(classVisitor0);
        java.lang.Class<?> wildcardClass2 = classAdapter1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        java.lang.String str9 = label8.toString();
        org.mockito.asm.Label label10 = new org.mockito.asm.Label();
        label8.info = label10;
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer12.setCallback(callback15);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        enhancer17.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback22 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray23 = new org.mockito.cglib.proxy.Callback[] { callback22 };
        enhancer17.setCallbacks(callbackArray23);
        enhancer12.setCallbacks(callbackArray23);
        boolean boolean26 = enhancer12.getUseCache();
        label8.info = enhancer12;
        org.mockito.cglib.proxy.CallbackFilter callbackFilter28 = null;
        enhancer12.setCallbackFilter(callbackFilter28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        enhancer30.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter35 = null;
        enhancer30.setCallbackFilter(callbackFilter35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        java.lang.Class<?> wildcardClass42 = classAdapter41.getClass();
        java.lang.String str43 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass42);
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        java.lang.Class<?> wildcardClass46 = classAdapter45.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor48);
        java.lang.Class<?> wildcardClass50 = classAdapter49.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        java.lang.Class<?> wildcardClass54 = classAdapter53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Class[] classArray56 = new java.lang.Class[] { wildcardClass42, wildcardClass46, wildcardClass50, wildcardClass54 };
        enhancer37.setInterfaces(classArray56);
        enhancer30.setInterfaces(classArray56);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback62 = null;
        enhancer59.setCallback(callback62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setUseFactory(true);
        enhancer64.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback69 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray70 = new org.mockito.cglib.proxy.Callback[] { callback69 };
        enhancer64.setCallbacks(callbackArray70);
        enhancer59.setCallbacks(callbackArray70);
        enhancer30.setCallbacks(callbackArray70);
        enhancer12.setCallbacks(callbackArray70);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerStaticCallbacks((java.lang.Class) wildcardClass2, callbackArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.asm.ClassAdapter is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str3, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str4, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str5, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str7, "org/mockito/asm/ClassAdapter");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L744896762" + "'", str9, "L744896762");
        org.junit.Assert.assertNotNull(callbackArray23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str43, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str47, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str51, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(callbackArray70);
    }

    @Test
    public void test04066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04066");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter21 = null;
        enhancer0.setCallbackFilter(callbackFilter21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        enhancer23.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback28 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray29 = new org.mockito.cglib.proxy.Callback[] { callback28 };
        enhancer23.setCallbacks(callbackArray29);
        enhancer0.setCallbacks(callbackArray29);
        java.lang.Class class32 = null;
        enhancer0.setSuperclass(class32);
        boolean boolean34 = enhancer0.getAttemptLoad();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(callbackArray29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test04067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04067");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass20);
        boolean boolean22 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer0.setCallbackFilter(callbackFilter23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        java.lang.Class<?> wildcardClass30 = classAdapter29.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass34);
        org.mockito.asm.ClassVisitor classVisitor36 = null;
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter(classVisitor36);
        java.lang.Class<?> wildcardClass38 = classAdapter37.getClass();
        java.lang.String str39 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        java.lang.Class<?> wildcardClass42 = classAdapter41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Class[] classArray44 = new java.lang.Class[] { wildcardClass30, wildcardClass34, wildcardClass38, wildcardClass42 };
        enhancer25.setInterfaces(classArray44);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter46 = null;
        enhancer25.setCallbackFilter(callbackFilter46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setUseFactory(true);
        enhancer48.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback53 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray54 = new org.mockito.cglib.proxy.Callback[] { callback53 };
        enhancer48.setCallbacks(callbackArray54);
        enhancer25.setCallbacks(callbackArray54);
        enhancer0.setCallbacks(callbackArray54);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter58 = null;
        enhancer0.setCallbackFilter(callbackFilter58);
        enhancer0.setUseCache(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str31, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str35, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str39, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(callbackArray54);
    }

    @Test
    public void test04068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04068");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer7.getStrategy();
        enhancer0.setStrategy(generatorStrategy16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor19);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classAdapter21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter25.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter35);
        org.mockito.cglib.core.ClassInfo classInfo37 = classEmitter36.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo37);
    }

    @Test
    public void test04069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04069");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor9 = null;
        org.mockito.asm.ClassAdapter classAdapter10 = new org.mockito.asm.ClassAdapter(classVisitor9);
        boolean boolean11 = type8.equals((java.lang.Object) classVisitor9);
        int int13 = type8.getOpcode(116);
        boolean boolean14 = generatorStrategy7.equals((java.lang.Object) 116);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer15.setCallback(callback18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer15.setCallback(callback20);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor25);
        java.lang.Class<?> wildcardClass27 = classAdapter26.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        java.lang.Class<?> wildcardClass31 = classAdapter30.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass31);
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        java.lang.Class<?> wildcardClass35 = classAdapter34.getClass();
        java.lang.String str36 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass35);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        java.lang.Class<?> wildcardClass39 = classAdapter38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Class[] classArray41 = new java.lang.Class[] { wildcardClass27, wildcardClass31, wildcardClass35, wildcardClass39 };
        enhancer22.setInterfaces(classArray41);
        enhancer15.setInterfaces(classArray41);
        boolean boolean44 = generatorStrategy7.equals((java.lang.Object) enhancer15);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor51);
        boolean boolean53 = type50.equals((java.lang.Object) classVisitor51);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str55 = type54.getDescriptor();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor59 = null;
        org.mockito.asm.ClassAdapter classAdapter60 = new org.mockito.asm.ClassAdapter(classVisitor59);
        boolean boolean61 = type58.equals((java.lang.Object) classVisitor59);
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type49, type50, type54, type56, type57, type58 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray62);
        org.mockito.cglib.core.Signature signature64 = new org.mockito.cglib.core.Signature("L1057808593", type47, typeArray62);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor70 = null;
        org.mockito.asm.ClassAdapter classAdapter71 = new org.mockito.asm.ClassAdapter(classVisitor70);
        boolean boolean72 = type69.equals((java.lang.Object) classVisitor70);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str74 = type73.getDescriptor();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type76 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type77 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor78 = null;
        org.mockito.asm.ClassAdapter classAdapter79 = new org.mockito.asm.ClassAdapter(classVisitor78);
        boolean boolean80 = type77.equals((java.lang.Object) classVisitor78);
        org.mockito.asm.Type[] typeArray81 = new org.mockito.asm.Type[] { type68, type69, type73, type75, type76, type77 };
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray81);
        org.mockito.cglib.core.Signature signature83 = new org.mockito.cglib.core.Signature("L1057808593", type66, typeArray81);
        org.mockito.cglib.core.Signature signature84 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type47, typeArray81);
        boolean boolean85 = generatorStrategy7.equals((java.lang.Object) signature84);
        org.mockito.asm.Type[] typeArray86 = signature84.getArgumentTypes();
        org.mockito.asm.Type[] typeArray87 = signature84.getArgumentTypes();
        org.mockito.asm.Type type88 = signature84.getReturnType();
        java.lang.String str89 = signature84.toString();
        java.lang.String str90 = signature84.getDescriptor();
        org.mockito.asm.Type type91 = signature84.getReturnType();
        java.lang.String str92 = type91.toString();
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 116 + "'", int13 == 116);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str28, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str32, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str36, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "V" + "'", str55, "V");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VZVDDZ)V" + "'", str63, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "V" + "'", str74, "V");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VZVDDZ)V" + "'", str82, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;(VZVDDZ)F" + "'", str89, "Lorg/mockito/cglib/proxy/Enhancer;(VZVDDZ)F");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(VZVDDZ)F" + "'", str90, "(VZVDDZ)F");
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "F" + "'", str92, "F");
    }

    @Test
    public void test04070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04070");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter(methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(153, "(VZVDDZ)LL1948923726;", (org.mockito.asm.MethodVisitor) localVariablesSorter11);
        org.mockito.asm.MethodAdapter methodAdapter13 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        java.lang.String str16 = label15.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        label15.info = label17;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local21 = new org.mockito.cglib.core.Local(0, type20);
        label15.info = 0;
        java.lang.Object obj23 = label15.info;
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer24.setCallback(callback25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer28.setCallback(callback31);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer28.setCallback(callback33);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy35 = enhancer28.getStrategy();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        boolean boolean39 = type36.equals((java.lang.Object) classVisitor37);
        int int41 = type36.getOpcode(116);
        boolean boolean42 = generatorStrategy35.equals((java.lang.Object) 116);
        enhancer27.setStrategy(generatorStrategy35);
        enhancer24.setStrategy(generatorStrategy35);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        enhancer45.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter50 = null;
        enhancer45.setCallbackFilter(callbackFilter50);
        java.lang.ClassLoader classLoader52 = enhancer45.getClassLoader();
        enhancer24.setClassLoader(classLoader52);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setUseFactory(true);
        enhancer54.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter59 = null;
        enhancer54.setCallbackFilter(callbackFilter59);
        java.lang.ClassLoader classLoader61 = enhancer54.getClassLoader();
        enhancer24.setClassLoader(classLoader61);
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        enhancer63.setUseFactory(true);
        enhancer63.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback68 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray69 = new org.mockito.cglib.proxy.Callback[] { callback68 };
        enhancer63.setCallbacks(callbackArray69);
        enhancer63.setSerialVersionUID((java.lang.Long) 1L);
        java.lang.ClassLoader classLoader73 = enhancer63.getClassLoader();
        enhancer24.setClassLoader(classLoader73);
        boolean boolean75 = enhancer24.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        enhancer76.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback79 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray80 = new org.mockito.cglib.proxy.Callback[] { callback79 };
        enhancer76.setCallbacks(callbackArray80);
        enhancer24.setCallbacks(callbackArray80);
        label15.info = callbackArray80;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter14.visitLabel(label15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1531342410" + "'", str16, "L1531342410");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertNotNull(generatorStrategy35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 116 + "'", int41 == 116);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(callbackArray69);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(callbackArray80);
    }

    @Test
    public void test04071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04071");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter(methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(119, "(VZVDDZ)F", (org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        java.lang.String str12 = label11.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        label11.info = label13;
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass20);
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.asm.ClassAdapter classAdapter23 = new org.mockito.asm.ClassAdapter(classVisitor22);
        java.lang.Class<?> wildcardClass24 = classAdapter23.getClass();
        java.lang.String str25 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass24);
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        java.lang.Class<?> wildcardClass28 = classAdapter27.getClass();
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass28);
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor30);
        java.lang.Class<?> wildcardClass32 = classAdapter31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Class[] classArray34 = new java.lang.Class[] { wildcardClass20, wildcardClass24, wildcardClass28, wildcardClass32 };
        enhancer15.setInterfaces(classArray34);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter36 = null;
        enhancer15.setCallbackFilter(callbackFilter36);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        enhancer38.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback43 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray44 = new org.mockito.cglib.proxy.Callback[] { callback43 };
        enhancer38.setCallbacks(callbackArray44);
        enhancer15.setCallbacks(callbackArray44);
        java.lang.Class class47 = null;
        enhancer15.setSuperclass(class47);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy49 = enhancer15.getStrategy();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.Class<?> wildcardClass51 = type50.getClass();
        enhancer15.setSuperclass((java.lang.Class) wildcardClass51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.Class<?> wildcardClass54 = type53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        enhancer15.setSuperclass((java.lang.Class) wildcardClass54);
        java.lang.String str57 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass54);
        label11.info = wildcardClass54;
        int[] intArray61 = new int[] { 10, (byte) 100 };
        org.mockito.asm.Label label62 = new org.mockito.asm.Label();
        java.lang.String str63 = label62.toString();
        org.mockito.asm.Label label64 = new org.mockito.asm.Label();
        label62.info = label64;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local68 = new org.mockito.cglib.core.Local(0, type67);
        label62.info = 0;
        java.lang.String str70 = label62.toString();
        label62.info = "Z(VZVDDZ)Z";
        java.lang.String str73 = label62.toString();
        java.lang.String str74 = label62.toString();
        java.lang.Object obj75 = label62.info;
        org.mockito.asm.Label label76 = new org.mockito.asm.Label();
        java.lang.String str77 = label76.toString();
        org.mockito.asm.Label label78 = new org.mockito.asm.Label();
        label76.info = label78;
        java.lang.String str80 = label76.toString();
        java.lang.String str81 = label76.toString();
        java.lang.Object obj82 = label76.info;
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] { label62, label76 };
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitLookupSwitchInsn(label11, intArray61, labelArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L872300265" + "'", str12, "L872300265");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str21, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str25, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str29, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(callbackArray44);
        org.junit.Assert.assertNotNull(generatorStrategy49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str57, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[10, 100]");
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L1704181171" + "'", str63, "L1704181171");
        org.junit.Assert.assertNotNull(type67);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L1704181171" + "'", str70, "L1704181171");
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "L1704181171" + "'", str73, "L1704181171");
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L1704181171" + "'", str74, "L1704181171");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "Z(VZVDDZ)Z" + "'", obj75, "Z(VZVDDZ)Z");
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L1780497298" + "'", str77, "L1780497298");
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L1780497298" + "'", str80, "L1780497298");
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "L1780497298" + "'", str81, "L1780497298");
        org.junit.Assert.assertNotNull(obj82);
// flaky:         org.junit.Assert.assertEquals(obj82.toString(), "L1456829357");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "L1456829357");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "L1456829357");
        org.junit.Assert.assertNotNull(labelArray83);
    }

    @Test
    public void test04072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04072");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        boolean boolean13 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy14 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer15.setCallback(callback18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer15.setCallback(callback20);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer15.getStrategy();
        boolean boolean23 = enhancer15.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer24.setCallback(callback25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer28.setCallback(callback31);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer28.setCallback(callback33);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy35 = enhancer28.getStrategy();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        boolean boolean39 = type36.equals((java.lang.Object) classVisitor37);
        int int41 = type36.getOpcode(116);
        boolean boolean42 = generatorStrategy35.equals((java.lang.Object) 116);
        enhancer27.setStrategy(generatorStrategy35);
        enhancer24.setStrategy(generatorStrategy35);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        enhancer45.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter50 = null;
        enhancer45.setCallbackFilter(callbackFilter50);
        java.lang.ClassLoader classLoader52 = enhancer45.getClassLoader();
        enhancer24.setClassLoader(classLoader52);
        java.lang.ClassLoader classLoader54 = enhancer24.getClassLoader();
        enhancer15.setClassLoader(classLoader54);
        boolean boolean56 = enhancer15.getUseCache();
        java.lang.ClassLoader classLoader57 = enhancer15.getClassLoader();
        boolean boolean58 = enhancer15.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback62 = null;
        enhancer59.setCallback(callback62);
        org.mockito.cglib.proxy.Callback callback64 = null;
        enhancer59.setCallback(callback64);
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        enhancer66.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor69);
        java.lang.Class<?> wildcardClass71 = classAdapter70.getClass();
        java.lang.String str72 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass71);
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor73);
        java.lang.Class<?> wildcardClass75 = classAdapter74.getClass();
        java.lang.String str76 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        org.mockito.asm.ClassVisitor classVisitor77 = null;
        org.mockito.asm.ClassAdapter classAdapter78 = new org.mockito.asm.ClassAdapter(classVisitor77);
        java.lang.Class<?> wildcardClass79 = classAdapter78.getClass();
        java.lang.String str80 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass79);
        org.mockito.asm.ClassVisitor classVisitor81 = null;
        org.mockito.asm.ClassAdapter classAdapter82 = new org.mockito.asm.ClassAdapter(classVisitor81);
        java.lang.Class<?> wildcardClass83 = classAdapter82.getClass();
        boolean boolean84 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass83);
        java.lang.Class[] classArray85 = new java.lang.Class[] { wildcardClass71, wildcardClass75, wildcardClass79, wildcardClass83 };
        enhancer66.setInterfaces(classArray85);
        enhancer59.setInterfaces(classArray85);
        enhancer15.setInterfaces(classArray85);
        enhancer0.setInterfaces(classArray85);
        boolean boolean90 = enhancer0.getUseCache();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class91 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(generatorStrategy14);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(generatorStrategy35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 116 + "'", int41 == 116);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str72, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str76, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str80, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(classArray85);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test04073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04073");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local3 = new org.mockito.cglib.core.Local(0, type2);
        org.mockito.cglib.core.Local local4 = new org.mockito.cglib.core.Local(0, type2);
        org.mockito.asm.Type type5 = local4.getType();
        java.lang.Class<?> wildcardClass6 = local4.getClass();
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test04074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04074");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer1.setCallback(callback4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer1.setCallbackFilter(callbackFilter6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer1.setCallback(callback8);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer1.getNamingPolicy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(0, type12);
        int int14 = type12.getSort();
        java.lang.String str15 = type12.getClassName();
        java.lang.String str16 = type12.getClassName();
        boolean boolean17 = namingPolicy10.equals((java.lang.Object) type12);
        java.lang.String str18 = type12.getDescriptor();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int20 = type19.getSort();
        java.lang.String str21 = type19.getDescriptor();
        org.mockito.asm.Type[] typeArray23 = org.mockito.asm.Type.getArgumentTypes("(VZVDDZ)Z");
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray23);
        boolean boolean25 = type12.equals((java.lang.Object) typeArray23);
        org.mockito.cglib.core.Local local26 = new org.mockito.cglib.core.Local((int) (byte) 0, type12);
        org.mockito.asm.Type type27 = local26.getType();
        org.mockito.asm.Type type28 = local26.getType();
        int int29 = local26.getIndex();
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double" + "'", str15, "double");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double" + "'", str16, "double");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "D" + "'", str18, "D");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Z" + "'", str21, "Z");
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VZVDDZ)Z" + "'", str24, "(VZVDDZ)Z");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test04075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04075");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer9.setCallback(callback12);
        enhancer9.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass16 = enhancer9.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass16);
        boolean boolean18 = enhancer0.getAttemptLoad();
        boolean boolean19 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader20 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter22 = null;
        enhancer0.setCallbackFilter(callbackFilter22);
        java.lang.Class<?> wildcardClass24 = enhancer0.getClass();
        java.lang.String str25 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass24);
        java.lang.String str26 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass24);
        java.lang.String str27 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass24);
        org.mockito.cglib.proxy.Callback callback28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass24, callback28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(classLoader20);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str25, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str26, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str27, "Lorg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test04076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04076");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classAdapter12);
        boolean boolean14 = namingPolicy8.equals((java.lang.Object) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter15.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test04077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04077");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("", "L361914688");
        org.mockito.asm.MethodVisitor methodVisitor5 = null;
        org.mockito.asm.MethodAdapter methodAdapter6 = new org.mockito.asm.MethodAdapter(methodVisitor5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        boolean boolean9 = signature2.equals((java.lang.Object) localVariablesSorter7);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer12.setCallback(callback15);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer12.setCallback(callback17);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer19.setCallback(callback22);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter24 = null;
        enhancer19.setCallbackFilter(callbackFilter24);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer19.setCallback(callback26);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer19.getNamingPolicy();
        enhancer12.setNamingPolicy(namingPolicy28);
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor30);
        java.lang.Class<?> wildcardClass32 = classAdapter31.getClass();
        enhancer12.setSuperclass((java.lang.Class) wildcardClass32);
        boolean boolean34 = enhancer12.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter35 = null;
        enhancer12.setCallbackFilter(callbackFilter35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        java.lang.Class<?> wildcardClass42 = classAdapter41.getClass();
        java.lang.String str43 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass42);
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        java.lang.Class<?> wildcardClass46 = classAdapter45.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor48);
        java.lang.Class<?> wildcardClass50 = classAdapter49.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        java.lang.Class<?> wildcardClass54 = classAdapter53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Class[] classArray56 = new java.lang.Class[] { wildcardClass42, wildcardClass46, wildcardClass50, wildcardClass54 };
        enhancer37.setInterfaces(classArray56);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter58 = null;
        enhancer37.setCallbackFilter(callbackFilter58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setUseFactory(true);
        enhancer60.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback65 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray66 = new org.mockito.cglib.proxy.Callback[] { callback65 };
        enhancer60.setCallbacks(callbackArray66);
        enhancer37.setCallbacks(callbackArray66);
        enhancer12.setCallbacks(callbackArray66);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.FLOAT_TYPE;
        int int72 = type71.getSize();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type75 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type76 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type77 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor78 = null;
        org.mockito.asm.ClassAdapter classAdapter79 = new org.mockito.asm.ClassAdapter(classVisitor78);
        boolean boolean80 = type77.equals((java.lang.Object) classVisitor78);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str82 = type81.getDescriptor();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type84 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type85 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor86 = null;
        org.mockito.asm.ClassAdapter classAdapter87 = new org.mockito.asm.ClassAdapter(classVisitor86);
        boolean boolean88 = type85.equals((java.lang.Object) classVisitor86);
        org.mockito.asm.Type[] typeArray89 = new org.mockito.asm.Type[] { type76, type77, type81, type83, type84, type85 };
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type75, typeArray89);
        org.mockito.cglib.core.Signature signature91 = new org.mockito.cglib.core.Signature("L1057808593", type74, typeArray89);
        java.lang.String str92 = signature91.toString();
        boolean boolean94 = signature91.equals((java.lang.Object) "(VZVDDZ)B");
        java.lang.String str95 = signature91.getName();
        org.mockito.asm.Type[] typeArray96 = signature91.getArgumentTypes();
        boolean boolean97 = type71.equals((java.lang.Object) typeArray96);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter7.visitFrame(126, 156, (java.lang.Object[]) callbackArray66, 7, (java.lang.Object[]) typeArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str43, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str47, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str51, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(callbackArray66);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "V" + "'", str82, "V");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(VZVDDZ)V" + "'", str90, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "L1057808593(VZVDDZ)F" + "'", str92, "L1057808593(VZVDDZ)F");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "L1057808593" + "'", str95, "L1057808593");
        org.junit.Assert.assertNotNull(typeArray96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test04078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04078");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter21 = null;
        enhancer0.setCallbackFilter(callbackFilter21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        enhancer23.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback28 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray29 = new org.mockito.cglib.proxy.Callback[] { callback28 };
        enhancer23.setCallbacks(callbackArray29);
        enhancer0.setCallbacks(callbackArray29);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setUseFactory(true);
        enhancer32.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback37 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray38 = new org.mockito.cglib.proxy.Callback[] { callback37 };
        enhancer32.setCallbacks(callbackArray38);
        boolean boolean40 = enhancer32.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer32.getStrategy();
        enhancer0.setStrategy(generatorStrategy41);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy43 = enhancer0.getStrategy();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor45);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classAdapter47);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo50 = classEmitter49.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter49.setTarget((org.mockito.asm.ClassVisitor) classEmitter51);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter51);
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter51.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo56 = classEmitter55.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        classEmitter51.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo61 = classEmitter60.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        classEmitter51.setTarget((org.mockito.asm.ClassVisitor) classEmitter60);
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo65 = classEmitter64.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter64.setTarget((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter64);
        classEmitter51.setTarget((org.mockito.asm.ClassVisitor) classAdapter68);
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classAdapter68);
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter68);
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter68);
        org.mockito.asm.ClassAdapter classAdapter73 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter72);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(callbackArray29);
        org.junit.Assert.assertNotNull(callbackArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(generatorStrategy43);
        org.junit.Assert.assertNull(classInfo50);
        org.junit.Assert.assertNull(classInfo54);
        org.junit.Assert.assertNull(classInfo56);
        org.junit.Assert.assertNull(classInfo61);
        org.junit.Assert.assertNull(classInfo65);
    }

    @Test
    public void test04079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04079");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local3 = new org.mockito.cglib.core.Local(0, type2);
        int int4 = type2.getSort();
        java.lang.String str5 = type2.getClassName();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local9 = new org.mockito.cglib.core.Local(0, type8);
        org.mockito.cglib.core.Local local10 = new org.mockito.cglib.core.Local((int) (byte) 100, type8);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        boolean boolean18 = type15.equals((java.lang.Object) classVisitor16);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str20 = type19.getDescriptor();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        boolean boolean26 = type23.equals((java.lang.Object) classVisitor24);
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type14, type15, type19, type21, type22, type23 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray27);
        org.mockito.cglib.core.Signature signature29 = new org.mockito.cglib.core.Signature("L1057808593", type12, typeArray27);
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray27);
        org.mockito.cglib.core.Signature signature31 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type2, typeArray27);
        org.mockito.asm.Type type32 = signature31.getReturnType();
        java.lang.String str33 = signature31.getDescriptor();
        java.lang.String str34 = signature31.getDescriptor();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer35.setCallback(callback38);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer35.setCallback(callback40);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer35.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer35.getNamingPolicy();
        enhancer35.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter52 = null;
        enhancer47.setCallbackFilter(callbackFilter52);
        org.mockito.cglib.proxy.Callback callback54 = null;
        enhancer47.setCallback(callback54);
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = enhancer47.getNamingPolicy();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local59 = new org.mockito.cglib.core.Local(0, type58);
        int int60 = type58.getSort();
        java.lang.String str61 = type58.getClassName();
        java.lang.String str62 = type58.getClassName();
        boolean boolean63 = namingPolicy56.equals((java.lang.Object) type58);
        enhancer46.setNamingPolicy(namingPolicy56);
        org.mockito.cglib.core.NamingPolicy namingPolicy65 = enhancer46.getNamingPolicy();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str67 = type66.getClassName();
        boolean boolean68 = namingPolicy65.equals((java.lang.Object) str67);
        enhancer35.setNamingPolicy(namingPolicy65);
        java.lang.ClassLoader classLoader70 = enhancer35.getClassLoader();
        boolean boolean71 = signature31.equals((java.lang.Object) enhancer35);
        boolean boolean72 = enhancer35.getUseCache();
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor73);
        java.lang.Class<?> wildcardClass75 = classAdapter74.getClass();
        java.lang.String str76 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        java.lang.String str77 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        boolean boolean78 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass75);
        // The following exception was thrown during execution in test generation
        try {
            enhancer35.setCallbackType((java.lang.Class) wildcardClass75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.asm.ClassAdapter");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "double" + "'", str5, "double");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "V" + "'", str20, "V");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(VZVDDZ)V" + "'", str28, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(VZVDDZ)D" + "'", str30, "(VZVDDZ)D");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(VZVDDZ)D" + "'", str33, "(VZVDDZ)D");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(VZVDDZ)D" + "'", str34, "(VZVDDZ)D");
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(namingPolicy56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 8 + "'", int60 == 8);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "double" + "'", str61, "double");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "double" + "'", str62, "double");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(namingPolicy65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "double" + "'", str67, "double");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str76, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str77, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test04080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04080");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.Label label2 = new org.mockito.asm.Label();
        label0.info = label2;
        java.lang.String str4 = label0.toString();
        java.lang.String str5 = label0.toString();
        java.lang.String str6 = label0.toString();
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        java.lang.String str8 = label7.toString();
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        label7.info = label9;
        java.lang.String str11 = label7.toString();
        java.lang.String str12 = label7.toString();
        label0.info = label7;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        boolean boolean18 = type15.equals((java.lang.Object) classVisitor16);
        int int20 = type15.getOpcode(116);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        boolean boolean26 = type23.equals((java.lang.Object) classVisitor24);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str28 = type27.getDescriptor();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        boolean boolean34 = type31.equals((java.lang.Object) classVisitor32);
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type22, type23, type27, type29, type30, type31 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray35);
        org.mockito.cglib.core.Signature signature37 = new org.mockito.cglib.core.Signature("V", type15, typeArray35);
        int int39 = type15.getOpcode((-1));
        int int41 = type15.getOpcode((int) 'a');
        label0.info = type15;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        boolean boolean47 = type44.equals((java.lang.Object) classVisitor45);
        int int49 = type44.getOpcode(116);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.asm.ClassAdapter classAdapter54 = new org.mockito.asm.ClassAdapter(classVisitor53);
        boolean boolean55 = type52.equals((java.lang.Object) classVisitor53);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str57 = type56.getDescriptor();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        boolean boolean63 = type60.equals((java.lang.Object) classVisitor61);
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type51, type52, type56, type58, type59, type60 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray64);
        org.mockito.cglib.core.Signature signature66 = new org.mockito.cglib.core.Signature("V", type44, typeArray64);
        java.lang.String str67 = signature66.toString();
        java.lang.String str68 = signature66.getName();
        label0.info = str68;
        java.lang.Object obj70 = label0.info;
        java.lang.String str71 = label0.toString();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getReturnType("LL1948923726;");
        org.mockito.asm.Type type74 = type73.getElementType();
        label0.info = type73;
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        enhancer76.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback79 = null;
        enhancer76.setCallback(callback79);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter81 = null;
        enhancer76.setCallbackFilter(callbackFilter81);
        enhancer76.setSerialVersionUID((java.lang.Long) 0L);
        enhancer76.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy87 = enhancer76.getStrategy();
        enhancer76.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback90 = null;
        enhancer76.setCallback(callback90);
        enhancer76.setUseCache(true);
        label0.info = enhancer76;
        java.lang.String str95 = label0.toString();
        java.lang.String str96 = label0.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1156320843" + "'", str1, "L1156320843");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L1156320843" + "'", str4, "L1156320843");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L1156320843" + "'", str5, "L1156320843");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1156320843" + "'", str6, "L1156320843");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "L2047987864" + "'", str8, "L2047987864");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L2047987864" + "'", str11, "L2047987864");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L2047987864" + "'", str12, "L2047987864");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 116 + "'", int20 == 116);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(VZVDDZ)V" + "'", str36, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 97 + "'", int41 == 97);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 116 + "'", int49 == 116);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "V" + "'", str57, "V");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(VZVDDZ)V" + "'", str65, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "V(VZVDDZ)Z" + "'", str67, "V(VZVDDZ)Z");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "V" + "'", str68, "V");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "V" + "'", obj70, "V");
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "L1156320843" + "'", str71, "L1156320843");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(generatorStrategy87);
// flaky:         org.junit.Assert.assertEquals("'" + str95 + "' != '" + "L1156320843" + "'", str95, "L1156320843");
// flaky:         org.junit.Assert.assertEquals("'" + str96 + "' != '" + "L1156320843" + "'", str96, "L1156320843");
    }

    @Test
    public void test04081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04081");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        boolean boolean5 = type2.equals((java.lang.Object) classVisitor3);
        int int7 = type2.getOpcode(116);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        boolean boolean13 = type10.equals((java.lang.Object) classVisitor11);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.getDescriptor();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        boolean boolean21 = type18.equals((java.lang.Object) classVisitor19);
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type9, type10, type14, type16, type17, type18 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray22);
        org.mockito.cglib.core.Signature signature24 = new org.mockito.cglib.core.Signature("V", type2, typeArray22);
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray22);
        java.lang.String str26 = type0.toString();
        java.lang.String str27 = type0.getClassName();
        java.lang.Class<?> wildcardClass28 = type0.getClass();
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor34);
        java.lang.Class<?> wildcardClass36 = classAdapter35.getClass();
        java.lang.String str37 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass36);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor42);
        java.lang.Class<?> wildcardClass44 = classAdapter43.getClass();
        java.lang.String str45 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass44);
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        java.lang.Class<?> wildcardClass48 = classAdapter47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Class[] classArray50 = new java.lang.Class[] { wildcardClass36, wildcardClass40, wildcardClass44, wildcardClass48 };
        enhancer31.setInterfaces(classArray50);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter52 = null;
        enhancer31.setCallbackFilter(callbackFilter52);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setUseFactory(true);
        enhancer54.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback59 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray60 = new org.mockito.cglib.proxy.Callback[] { callback59 };
        enhancer54.setCallbacks(callbackArray60);
        enhancer31.setCallbacks(callbackArray60);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer31.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback67 = null;
        enhancer64.setCallback(callback67);
        org.mockito.cglib.proxy.Callback callback69 = null;
        enhancer64.setCallback(callback69);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor74 = null;
        org.mockito.asm.ClassAdapter classAdapter75 = new org.mockito.asm.ClassAdapter(classVisitor74);
        java.lang.Class<?> wildcardClass76 = classAdapter75.getClass();
        java.lang.String str77 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass76);
        org.mockito.asm.ClassVisitor classVisitor78 = null;
        org.mockito.asm.ClassAdapter classAdapter79 = new org.mockito.asm.ClassAdapter(classVisitor78);
        java.lang.Class<?> wildcardClass80 = classAdapter79.getClass();
        java.lang.String str81 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass80);
        org.mockito.asm.ClassVisitor classVisitor82 = null;
        org.mockito.asm.ClassAdapter classAdapter83 = new org.mockito.asm.ClassAdapter(classVisitor82);
        java.lang.Class<?> wildcardClass84 = classAdapter83.getClass();
        java.lang.String str85 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass84);
        org.mockito.asm.ClassVisitor classVisitor86 = null;
        org.mockito.asm.ClassAdapter classAdapter87 = new org.mockito.asm.ClassAdapter(classVisitor86);
        java.lang.Class<?> wildcardClass88 = classAdapter87.getClass();
        boolean boolean89 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass88);
        java.lang.Class[] classArray90 = new java.lang.Class[] { wildcardClass76, wildcardClass80, wildcardClass84, wildcardClass88 };
        enhancer71.setInterfaces(classArray90);
        enhancer64.setInterfaces(classArray90);
        enhancer31.setInterfaces(classArray90);
        java.util.List list94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods((java.lang.Class) wildcardClass28, classArray90, list94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 116 + "'", int7 == 116);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VZVDDZ)V" + "'", str23, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(VZVDDZ)B" + "'", str25, "(VZVDDZ)B");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "B" + "'", str26, "B");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "byte" + "'", str27, "byte");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/asm/Type" + "'", str29, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str37, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str41, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str45, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(callbackArray60);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str77, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str81, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str85, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(classArray90);
    }

    @Test
    public void test04082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04082");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        java.lang.Class<?> wildcardClass10 = classAdapter9.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass10, wildcardClass14, wildcardClass18, wildcardClass22 };
        enhancer5.setInterfaces(classArray24);
        enhancer0.setInterfaces(classArray24);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass29, wildcardClass34 };
        enhancer0.setInterfaces(classArray37);
        boolean boolean39 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer40.setCallback(callback41);
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback47 = null;
        enhancer44.setCallback(callback47);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer44.setCallback(callback49);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy51 = enhancer44.getStrategy();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.asm.ClassAdapter classAdapter54 = new org.mockito.asm.ClassAdapter(classVisitor53);
        boolean boolean55 = type52.equals((java.lang.Object) classVisitor53);
        int int57 = type52.getOpcode(116);
        boolean boolean58 = generatorStrategy51.equals((java.lang.Object) 116);
        enhancer43.setStrategy(generatorStrategy51);
        enhancer40.setStrategy(generatorStrategy51);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setUseFactory(true);
        enhancer61.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter66 = null;
        enhancer61.setCallbackFilter(callbackFilter66);
        java.lang.ClassLoader classLoader68 = enhancer61.getClassLoader();
        enhancer40.setClassLoader(classLoader68);
        enhancer40.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter72 = null;
        enhancer40.setCallbackFilter(callbackFilter72);
        boolean boolean74 = enhancer40.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        enhancer75.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback78 = null;
        enhancer75.setCallback(callback78);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter80 = null;
        enhancer75.setCallbackFilter(callbackFilter80);
        org.mockito.asm.ClassVisitor classVisitor82 = null;
        org.mockito.asm.ClassAdapter classAdapter83 = new org.mockito.asm.ClassAdapter(classVisitor82);
        java.lang.Class<?> wildcardClass84 = classAdapter83.getClass();
        boolean boolean85 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass84);
        enhancer75.setSuperclass((java.lang.Class) wildcardClass84);
        enhancer75.setUseFactory(true);
        boolean boolean89 = enhancer75.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback90 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray91 = new org.mockito.cglib.proxy.Callback[] { callback90 };
        enhancer75.setCallbacks(callbackArray91);
        enhancer40.setCallbacks(callbackArray91);
        enhancer0.setCallbacks(callbackArray91);
        boolean boolean95 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str11, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str15, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str31, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(generatorStrategy51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 116 + "'", int57 == 116);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classLoader68);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(callbackArray91);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test04083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04083");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("org/mockito/asm/ClassAdapter", "L1933965693");
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        boolean boolean9 = signature2.equals((java.lang.Object) type8);
        int int10 = type8.getSort();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        boolean boolean14 = type11.equals((java.lang.Object) classVisitor12);
        java.lang.String str15 = type11.getDescriptor();
        java.lang.String str16 = type11.getClassName();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        boolean boolean22 = type19.equals((java.lang.Object) classVisitor20);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str24 = type23.getDescriptor();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        boolean boolean30 = type27.equals((java.lang.Object) classVisitor28);
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type18, type19, type23, type25, type26, type27 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray31);
        boolean boolean33 = type11.equals((java.lang.Object) typeArray31);
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray31);
        java.lang.String str35 = type8.getInternalName();
        java.lang.String str36 = type8.getClassName();
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Z" + "'", str15, "Z");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "boolean" + "'", str16, "boolean");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "V" + "'", str24, "V");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(VZVDDZ)V" + "'", str32, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;" + "'", str34, "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str35, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.mockito.asm.ClassAdapter" + "'", str36, "org.mockito.asm.ClassAdapter");
    }

    @Test
    public void test04084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04084");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer11.setCallback(callback14);
        enhancer11.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = enhancer11.getNamingPolicy();
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        java.lang.String str20 = label19.toString();
        boolean boolean21 = namingPolicy18.equals((java.lang.Object) str20);
        boolean boolean23 = namingPolicy18.equals((java.lang.Object) 1);
        enhancer0.setNamingPolicy(namingPolicy18);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setUseFactory(true);
        enhancer25.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        java.lang.Class<?> wildcardClass35 = classAdapter34.getClass();
        java.lang.String str36 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass35);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        java.lang.Class<?> wildcardClass39 = classAdapter38.getClass();
        java.lang.String str40 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        java.lang.Class<?> wildcardClass43 = classAdapter42.getClass();
        java.lang.String str44 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass43);
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        java.lang.Class<?> wildcardClass47 = classAdapter46.getClass();
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass47);
        java.lang.Class[] classArray49 = new java.lang.Class[] { wildcardClass35, wildcardClass39, wildcardClass43, wildcardClass47 };
        enhancer30.setInterfaces(classArray49);
        enhancer25.setInterfaces(classArray49);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        java.lang.Class<?> wildcardClass54 = classAdapter53.getClass();
        java.lang.String str55 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass54);
        java.lang.String str56 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass54);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        java.lang.Class<?> wildcardClass59 = classAdapter58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass54, wildcardClass59 };
        enhancer25.setInterfaces(classArray62);
        enhancer25.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy66 = enhancer25.getStrategy();
        enhancer25.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy69 = enhancer25.getStrategy();
        java.lang.Class<?> wildcardClass70 = generatorStrategy69.getClass();
        boolean boolean71 = namingPolicy18.equals((java.lang.Object) generatorStrategy69);
        org.junit.Assert.assertNotNull(namingPolicy18);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1122676030" + "'", str20, "L1122676030");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str36, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str40, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str44, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(classArray49);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str55, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str56, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(generatorStrategy66);
        org.junit.Assert.assertNotNull(generatorStrategy69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test04085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04085");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor29);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classAdapter31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter44.getClassInfo();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer47.setCallback(callback52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer47.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer47.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor57);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        boolean boolean61 = namingPolicy55.equals((java.lang.Object) classAdapter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter59);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor66);
        classEmitter65.setTarget((org.mockito.asm.ClassVisitor) classAdapter68);
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo71 = classEmitter70.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter70.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        classEmitter65.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        org.mockito.cglib.core.ClassInfo classInfo75 = classEmitter72.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo77 = classEmitter76.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter76);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter76);
        classEmitter72.setTarget((org.mockito.asm.ClassVisitor) classEmitter79);
        org.mockito.cglib.core.ClassEmitter classEmitter81 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo82 = classEmitter81.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter81);
        classEmitter72.setTarget((org.mockito.asm.ClassVisitor) classEmitter81);
        org.mockito.cglib.core.ClassInfo classInfo85 = classEmitter81.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter86 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter81);
        org.mockito.asm.ClassAdapter classAdapter87 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter81);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classAdapter87);
        org.mockito.cglib.core.ClassEmitter classEmitter89 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter87);
        java.lang.String[] strArray96 = new java.lang.String[] { "L857987359" };
        // The following exception was thrown during execution in test generation
        try {
            classEmitter89.visit((int) (short) 1, (int) (byte) 0, "L1889535241", "L2125274142", "L1449343869", strArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(classInfo71);
        org.junit.Assert.assertNull(classInfo75);
        org.junit.Assert.assertNull(classInfo77);
        org.junit.Assert.assertNull(classInfo82);
        org.junit.Assert.assertNull(classInfo85);
        org.junit.Assert.assertNotNull(strArray96);
    }

    @Test
    public void test04086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04086");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        java.lang.String str14 = label13.toString();
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        label13.info = label15;
        java.lang.String str17 = label13.toString();
        java.lang.String str18 = label13.toString();
        java.lang.Object obj19 = label13.info;
        java.lang.String str20 = label13.toString();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer21.setCallback(callback24);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer21.setCallback(callback26);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer21.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer21.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer21.getNamingPolicy();
        label13.info = enhancer21;
        java.lang.Object obj32 = label13.info;
        java.lang.String str33 = label13.toString();
        org.mockito.asm.Label label34 = new org.mockito.asm.Label();
        java.lang.String str35 = label34.toString();
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        label34.info = label36;
        java.lang.Object obj38 = label36.info;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter9.visitLocalVariable("L1352150287", "L24285898", "L1546961225", label13, label36, 101);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 101");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L524771334" + "'", str14, "L524771334");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L524771334" + "'", str17, "L524771334");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L524771334" + "'", str18, "L524771334");
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals(obj19.toString(), "L1084088307");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "L1084088307");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "L1084088307");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L524771334" + "'", str20, "L524771334");
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(obj32);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L524771334" + "'", str33, "L524771334");
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L2035192240" + "'", str35, "L2035192240");
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test04087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04087");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter(methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(119, "(VZVDDZ)F", (org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        java.lang.String str14 = label13.toString();
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        label13.info = label15;
        java.lang.String str17 = label13.toString();
        java.lang.String str18 = label13.toString();
        java.lang.String str19 = label13.toString();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        java.lang.String str21 = label20.toString();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        label20.info = label22;
        java.lang.String str24 = label20.toString();
        java.lang.String str25 = label20.toString();
        label13.info = label20;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        boolean boolean31 = type28.equals((java.lang.Object) classVisitor29);
        int int33 = type28.getOpcode(116);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        boolean boolean39 = type36.equals((java.lang.Object) classVisitor37);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.getDescriptor();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        boolean boolean47 = type44.equals((java.lang.Object) classVisitor45);
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type35, type36, type40, type42, type43, type44 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray48);
        org.mockito.cglib.core.Signature signature50 = new org.mockito.cglib.core.Signature("V", type28, typeArray48);
        int int52 = type28.getOpcode((-1));
        int int54 = type28.getOpcode((int) 'a');
        label13.info = type28;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        boolean boolean60 = type57.equals((java.lang.Object) classVisitor58);
        int int62 = type57.getOpcode(116);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        boolean boolean68 = type65.equals((java.lang.Object) classVisitor66);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str70 = type69.getDescriptor();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type72 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type73 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor74 = null;
        org.mockito.asm.ClassAdapter classAdapter75 = new org.mockito.asm.ClassAdapter(classVisitor74);
        boolean boolean76 = type73.equals((java.lang.Object) classVisitor74);
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] { type64, type65, type69, type71, type72, type73 };
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray77);
        org.mockito.cglib.core.Signature signature79 = new org.mockito.cglib.core.Signature("V", type57, typeArray77);
        java.lang.String str80 = signature79.toString();
        java.lang.String str81 = signature79.getName();
        label13.info = str81;
        org.mockito.cglib.core.Signature signature85 = new org.mockito.cglib.core.Signature("org/mockito/asm/ClassAdapter", "L1933965693");
        org.mockito.asm.ClassVisitor classVisitor86 = null;
        org.mockito.asm.ClassAdapter classAdapter87 = new org.mockito.asm.ClassAdapter(classVisitor86);
        java.lang.Class<?> wildcardClass88 = classAdapter87.getClass();
        boolean boolean89 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass88);
        boolean boolean90 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass88);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        boolean boolean92 = signature85.equals((java.lang.Object) type91);
        label13.info = boolean92;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitLineNumber((int) (short) 0, label13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1601793380" + "'", str14, "L1601793380");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1601793380" + "'", str17, "L1601793380");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1601793380" + "'", str18, "L1601793380");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1601793380" + "'", str19, "L1601793380");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1168270039" + "'", str21, "L1168270039");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1168270039" + "'", str24, "L1168270039");
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1168270039" + "'", str25, "L1168270039");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 116 + "'", int33 == 116);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(VZVDDZ)V" + "'", str49, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 97 + "'", int54 == 97);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 116 + "'", int62 == 116);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "V" + "'", str70, "V");
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(VZVDDZ)V" + "'", str78, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "V(VZVDDZ)Z" + "'", str80, "V(VZVDDZ)Z");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "V" + "'", str81, "V");
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test04088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04088");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        boolean boolean9 = generatorStrategy7.equals((java.lang.Object) label8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor11);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classAdapter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter24.getClassInfo();
        label8.info = classEmitter24;
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer28.setCallback(callback31);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter33 = null;
        enhancer28.setCallbackFilter(callbackFilter33);
        enhancer28.setSerialVersionUID((java.lang.Long) 0L);
        enhancer28.setUseCache(false);
        enhancer28.setUseFactory(false);
        boolean boolean41 = enhancer28.getAttemptLoad();
        enhancer28.setUseFactory(false);
        label8.info = enhancer28;
        java.lang.String str45 = label8.toString();
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor47);
        classEmitter46.setTarget((org.mockito.asm.ClassVisitor) classAdapter49);
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo52 = classEmitter51.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter51.setTarget((org.mockito.asm.ClassVisitor) classEmitter53);
        classEmitter46.setTarget((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.cglib.core.ClassInfo classInfo56 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo58 = classEmitter57.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classEmitter60);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter62);
        label8.info = classEmitter65;
        // The following exception was thrown during execution in test generation
        try {
            classEmitter65.visitSource("g.mockito.asm.ClassAdapter", "L1282235101");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L1938756507" + "'", str45, "L1938756507");
        org.junit.Assert.assertNull(classInfo52);
        org.junit.Assert.assertNull(classInfo56);
        org.junit.Assert.assertNull(classInfo58);
    }

    @Test
    public void test04089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04089");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        java.lang.Class<?> wildcardClass10 = classAdapter9.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass10, wildcardClass14, wildcardClass18, wildcardClass22 };
        enhancer5.setInterfaces(classArray24);
        enhancer0.setInterfaces(classArray24);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass29, wildcardClass34 };
        enhancer0.setInterfaces(classArray37);
        java.lang.ClassLoader classLoader39 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback44 = null;
        enhancer41.setCallback(callback44);
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer41.setCallback(callback46);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer41.getStrategy();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor50);
        boolean boolean52 = type49.equals((java.lang.Object) classVisitor50);
        int int54 = type49.getOpcode(116);
        boolean boolean55 = generatorStrategy48.equals((java.lang.Object) 116);
        enhancer40.setStrategy(generatorStrategy48);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local60 = new org.mockito.cglib.core.Local(0, type59);
        int int61 = type59.getSort();
        java.lang.String str62 = type59.getClassName();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local66 = new org.mockito.cglib.core.Local(0, type65);
        org.mockito.cglib.core.Local local67 = new org.mockito.cglib.core.Local((int) (byte) 100, type65);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type72 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor73);
        boolean boolean75 = type72.equals((java.lang.Object) classVisitor73);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str77 = type76.getDescriptor();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type79 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor81 = null;
        org.mockito.asm.ClassAdapter classAdapter82 = new org.mockito.asm.ClassAdapter(classVisitor81);
        boolean boolean83 = type80.equals((java.lang.Object) classVisitor81);
        org.mockito.asm.Type[] typeArray84 = new org.mockito.asm.Type[] { type71, type72, type76, type78, type79, type80 };
        java.lang.String str85 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray84);
        org.mockito.cglib.core.Signature signature86 = new org.mockito.cglib.core.Signature("L1057808593", type69, typeArray84);
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray84);
        org.mockito.cglib.core.Signature signature88 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type59, typeArray84);
        boolean boolean89 = generatorStrategy48.equals((java.lang.Object) signature88);
        enhancer0.setStrategy(generatorStrategy48);
        enhancer0.setUseFactory(true);
        enhancer0.setUseFactory(false);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy97 = enhancer0.getStrategy();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str11, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str15, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str31, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 116 + "'", int54 == 116);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 8 + "'", int61 == 8);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "double" + "'", str62, "double");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "V" + "'", str77, "V");
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(VZVDDZ)V" + "'", str85, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(VZVDDZ)D" + "'", str87, "(VZVDDZ)D");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(generatorStrategy97);
    }

    @Test
    public void test04090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04090");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        java.lang.Class<?> wildcardClass10 = classAdapter9.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass10, wildcardClass14, wildcardClass18, wildcardClass22 };
        enhancer5.setInterfaces(classArray24);
        enhancer0.setInterfaces(classArray24);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass29, wildcardClass34 };
        enhancer0.setInterfaces(classArray37);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseFactory(true);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer45.setCallback(callback48);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer45.setCallback(callback50);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer45.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer45.getNamingPolicy();
        enhancer45.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer45.setCallback(callback56);
        java.lang.ClassLoader classLoader58 = enhancer45.getClassLoader();
        enhancer0.setClassLoader(classLoader58);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo63 = classEmitter62.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        classEmitter67.setTarget(classVisitor68);
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter67);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str11, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str15, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str31, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNull(classInfo63);
    }

    @Test
    public void test04091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04091");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        enhancer7.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy14);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer18.setCallback(callback21);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer18.setCallback(callback23);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer18.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy25);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer0.getStrategy();
        org.mockito.asm.MethodVisitor methodVisitor28 = null;
        org.mockito.asm.MethodAdapter methodAdapter29 = new org.mockito.asm.MethodAdapter(methodVisitor28);
        org.mockito.asm.MethodAdapter methodAdapter30 = new org.mockito.asm.MethodAdapter(methodVisitor28);
        org.mockito.asm.MethodAdapter methodAdapter31 = new org.mockito.asm.MethodAdapter(methodVisitor28);
        org.mockito.asm.MethodAdapter methodAdapter32 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter31);
        boolean boolean33 = generatorStrategy27.equals((java.lang.Object) methodAdapter32);
        org.mockito.asm.Attribute attribute34 = null;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter32.visitAttribute(attribute34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test04092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04092");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter7.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor17);
        classEmitter7.setTarget(classVisitor17);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor23);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classAdapter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter38.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo45 = classEmitter44.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor51);
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor51);
        classEmitter50.setTarget((org.mockito.asm.ClassVisitor) classAdapter53);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo56 = classEmitter55.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        classEmitter50.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter57.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo62 = classEmitter61.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        classEmitter57.setTarget((org.mockito.asm.ClassVisitor) classEmitter64);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter64);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.cglib.core.ClassInfo classInfo68 = classEmitter66.getClassInfo();
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback72 = null;
        enhancer69.setCallback(callback72);
        org.mockito.cglib.proxy.Callback callback74 = null;
        enhancer69.setCallback(callback74);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer69.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer69.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor79 = null;
        org.mockito.asm.ClassAdapter classAdapter80 = new org.mockito.asm.ClassAdapter(classVisitor79);
        org.mockito.asm.ClassAdapter classAdapter81 = new org.mockito.asm.ClassAdapter(classVisitor79);
        classEmitter78.setTarget((org.mockito.asm.ClassVisitor) classAdapter81);
        boolean boolean83 = namingPolicy77.equals((java.lang.Object) classAdapter81);
        org.mockito.cglib.core.ClassEmitter classEmitter84 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter81);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classAdapter81);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter66);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type87 = classEmitter66.getClassType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNull(classInfo45);
        org.junit.Assert.assertNull(classInfo56);
        org.junit.Assert.assertNull(classInfo60);
        org.junit.Assert.assertNull(classInfo62);
        org.junit.Assert.assertNull(classInfo68);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test04093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04093");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter21 = null;
        enhancer0.setCallbackFilter(callbackFilter21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        enhancer23.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback28 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray29 = new org.mockito.cglib.proxy.Callback[] { callback28 };
        enhancer23.setCallbacks(callbackArray29);
        enhancer0.setCallbacks(callbackArray29);
        java.lang.Class class32 = null;
        enhancer0.setSuperclass(class32);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy34 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter36 = null;
        enhancer0.setCallbackFilter(callbackFilter36);
        boolean boolean38 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(callbackArray29);
        org.junit.Assert.assertNotNull(generatorStrategy34);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test04094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04094");
        org.mockito.cglib.core.Signature signature3 = new org.mockito.cglib.core.Signature("org/mockito/asm/ClassAdapter", "L1933965693");
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.asm.ClassAdapter classAdapter5 = new org.mockito.asm.ClassAdapter(classVisitor4);
        java.lang.Class<?> wildcardClass6 = classAdapter5.getClass();
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        boolean boolean10 = signature3.equals((java.lang.Object) type9);
        int int11 = type9.getSort();
        int int12 = type9.getSort();
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        java.lang.String str18 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass17);
        org.mockito.cglib.core.Local local20 = new org.mockito.cglib.core.Local(1, type19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer22.setCallback(callback25);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter27 = null;
        enhancer22.setCallbackFilter(callbackFilter27);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer22.setCallback(callback29);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer22.getNamingPolicy();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local34 = new org.mockito.cglib.core.Local(0, type33);
        int int35 = type33.getSort();
        java.lang.String str36 = type33.getClassName();
        java.lang.String str37 = type33.getClassName();
        boolean boolean38 = namingPolicy31.equals((java.lang.Object) type33);
        enhancer21.setNamingPolicy(namingPolicy31);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer40.setCallback(callback43);
        org.mockito.cglib.proxy.Callback callback45 = null;
        enhancer40.setCallback(callback45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter52 = null;
        enhancer47.setCallbackFilter(callbackFilter52);
        org.mockito.cglib.proxy.Callback callback54 = null;
        enhancer47.setCallback(callback54);
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = enhancer47.getNamingPolicy();
        enhancer40.setNamingPolicy(namingPolicy56);
        boolean boolean58 = namingPolicy31.equals((java.lang.Object) enhancer40);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        boolean boolean63 = type60.equals((java.lang.Object) classVisitor61);
        int int65 = type60.getOpcode(116);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor69);
        boolean boolean71 = type68.equals((java.lang.Object) classVisitor69);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str73 = type72.getDescriptor();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type75 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type76 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor77 = null;
        org.mockito.asm.ClassAdapter classAdapter78 = new org.mockito.asm.ClassAdapter(classVisitor77);
        boolean boolean79 = type76.equals((java.lang.Object) classVisitor77);
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type67, type68, type72, type74, type75, type76 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray80);
        org.mockito.cglib.core.Signature signature82 = new org.mockito.cglib.core.Signature("V", type60, typeArray80);
        java.lang.String str83 = signature82.getDescriptor();
        boolean boolean84 = namingPolicy31.equals((java.lang.Object) signature82);
        org.mockito.asm.Type[] typeArray85 = signature82.getArgumentTypes();
        org.mockito.cglib.core.Signature signature86 = new org.mockito.cglib.core.Signature("L1352150287", type19, typeArray85);
        org.mockito.cglib.core.Signature signature87 = new org.mockito.cglib.core.Signature("L1210778352", type9, typeArray85);
        java.lang.String str88 = signature87.getDescriptor();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str18, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 8 + "'", int35 == 8);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "double" + "'", str36, "double");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "double" + "'", str37, "double");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(namingPolicy56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 116 + "'", int65 == 116);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "V" + "'", str73, "V");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(VZVDDZ)V" + "'", str81, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(VZVDDZ)Z" + "'", str83, "(VZVDDZ)Z");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;" + "'", str88, "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;");
    }

    @Test
    public void test04095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04095");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        java.lang.Class<?> wildcardClass28 = classAdapter27.getClass();
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass28);
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor30);
        java.lang.Class<?> wildcardClass32 = classAdapter31.getClass();
        java.lang.String str33 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass32);
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor34);
        java.lang.Class<?> wildcardClass36 = classAdapter35.getClass();
        java.lang.String str37 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass36);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Class[] classArray42 = new java.lang.Class[] { wildcardClass28, wildcardClass32, wildcardClass36, wildcardClass40 };
        enhancer23.setInterfaces(classArray42);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter44 = null;
        enhancer23.setCallbackFilter(callbackFilter44);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor46 = classEmitter18.visitField(0, "float", "L1684479687", "LL1446612185;", (java.lang.Object) callbackFilter44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str29, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str33, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str37, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classArray42);
    }

    @Test
    public void test04096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04096");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local3 = new org.mockito.cglib.core.Local(0, type2);
        int int4 = type2.getSort();
        java.lang.String str5 = type2.getClassName();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local9 = new org.mockito.cglib.core.Local(0, type8);
        org.mockito.cglib.core.Local local10 = new org.mockito.cglib.core.Local((int) (byte) 100, type8);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        boolean boolean18 = type15.equals((java.lang.Object) classVisitor16);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str20 = type19.getDescriptor();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        boolean boolean26 = type23.equals((java.lang.Object) classVisitor24);
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type14, type15, type19, type21, type22, type23 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray27);
        org.mockito.cglib.core.Signature signature29 = new org.mockito.cglib.core.Signature("L1057808593", type12, typeArray27);
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray27);
        org.mockito.cglib.core.Signature signature31 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type2, typeArray27);
        org.mockito.asm.Type[] typeArray32 = signature31.getArgumentTypes();
        java.lang.String str33 = signature31.toString();
        java.lang.String str34 = signature31.getName();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer35.setCallback(callback38);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter40 = null;
        enhancer35.setCallbackFilter(callbackFilter40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback45 = null;
        enhancer42.setCallback(callback45);
        enhancer42.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass49 = enhancer42.getClass();
        java.lang.String str50 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass49);
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass49);
        enhancer35.setSuperclass((java.lang.Class) wildcardClass49);
        boolean boolean53 = signature31.equals((java.lang.Object) enhancer35);
        java.lang.String str54 = signature31.getName();
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor56);
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classAdapter58);
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo61 = classEmitter60.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter60.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassInfo classInfo65 = classEmitter62.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo67 = classEmitter66.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        classEmitter62.setTarget((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo72 = classEmitter71.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter71);
        classEmitter62.setTarget((org.mockito.asm.ClassVisitor) classEmitter71);
        org.mockito.asm.ClassAdapter classAdapter75 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter71);
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter71);
        boolean boolean77 = signature31.equals((java.lang.Object) classEmitter76);
        java.lang.String str78 = signature31.getDescriptor();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "double" + "'", str5, "double");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "V" + "'", str20, "V");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(VZVDDZ)V" + "'", str28, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(VZVDDZ)D" + "'", str30, "(VZVDDZ)D");
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lorg/mockito/asm/ClassAdapter;(VZVDDZ)D" + "'", str33, "Lorg/mockito/asm/ClassAdapter;(VZVDDZ)D");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str34, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str50, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str51, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str54, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNull(classInfo61);
        org.junit.Assert.assertNull(classInfo65);
        org.junit.Assert.assertNull(classInfo67);
        org.junit.Assert.assertNull(classInfo72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(VZVDDZ)D" + "'", str78, "(VZVDDZ)D");
    }

    @Test
    public void test04097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04097");
        java.lang.Class class0 = null;
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer1.setCallback(callback4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer1.setCallbackFilter(callbackFilter6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer8.setCallback(callback11);
        enhancer8.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass15 = enhancer8.getClass();
        java.lang.String str16 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass15);
        java.lang.String str17 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass15);
        enhancer1.setSuperclass((java.lang.Class) wildcardClass15);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer19.setCallback(callback20);
        enhancer19.setInterceptDuringConstruction(true);
        boolean boolean24 = enhancer19.getAttemptLoad();
        boolean boolean25 = enhancer19.getUseCache();
        enhancer19.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer28.setCallback(callback31);
        enhancer28.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer28.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer36.setCallback(callback39);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback44 = null;
        enhancer41.setCallback(callback44);
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer41.setCallback(callback46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor51);
        java.lang.Class<?> wildcardClass53 = classAdapter52.getClass();
        java.lang.String str54 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass53);
        org.mockito.asm.ClassVisitor classVisitor55 = null;
        org.mockito.asm.ClassAdapter classAdapter56 = new org.mockito.asm.ClassAdapter(classVisitor55);
        java.lang.Class<?> wildcardClass57 = classAdapter56.getClass();
        java.lang.String str58 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass57);
        org.mockito.asm.ClassVisitor classVisitor59 = null;
        org.mockito.asm.ClassAdapter classAdapter60 = new org.mockito.asm.ClassAdapter(classVisitor59);
        java.lang.Class<?> wildcardClass61 = classAdapter60.getClass();
        java.lang.String str62 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass61);
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor63);
        java.lang.Class<?> wildcardClass65 = classAdapter64.getClass();
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass65);
        java.lang.Class[] classArray67 = new java.lang.Class[] { wildcardClass53, wildcardClass57, wildcardClass61, wildcardClass65 };
        enhancer48.setInterfaces(classArray67);
        enhancer41.setInterfaces(classArray67);
        enhancer36.setInterfaces(classArray67);
        enhancer28.setInterfaces(classArray67);
        enhancer19.setInterfaces(classArray67);
        enhancer1.setInterfaces(classArray67);
        java.util.List list74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods(class0, classArray67, list74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str16, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str17, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str54, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str58, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str62, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(classArray67);
    }

    @Test
    public void test04098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04098");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer15.setCallback(callback18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer15.setCallback(callback20);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer15.getStrategy();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        boolean boolean26 = type23.equals((java.lang.Object) classVisitor24);
        int int28 = type23.getOpcode(116);
        boolean boolean29 = generatorStrategy22.equals((java.lang.Object) 116);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer30.setCallback(callback33);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer30.setCallback(callback35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        java.lang.Class<?> wildcardClass42 = classAdapter41.getClass();
        java.lang.String str43 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass42);
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        java.lang.Class<?> wildcardClass46 = classAdapter45.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor48);
        java.lang.Class<?> wildcardClass50 = classAdapter49.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        java.lang.Class<?> wildcardClass54 = classAdapter53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        java.lang.Class[] classArray56 = new java.lang.Class[] { wildcardClass42, wildcardClass46, wildcardClass50, wildcardClass54 };
        enhancer37.setInterfaces(classArray56);
        enhancer30.setInterfaces(classArray56);
        boolean boolean59 = generatorStrategy22.equals((java.lang.Object) enhancer30);
        enhancer0.setStrategy(generatorStrategy22);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy61 = enhancer0.getStrategy();
        enhancer0.setUseCache(true);
        boolean boolean64 = enhancer0.getUseCache();
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 116 + "'", int28 == 116);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str43, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str47, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str51, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(generatorStrategy61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test04099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04099");
        java.lang.Class class0 = null;
        java.lang.Class[] classArray1 = new java.lang.Class[] {};
        java.util.List list2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods(class0, classArray1, list2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
    }

    @Test
    public void test04100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04100");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer9.setCallback(callback12);
        enhancer9.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass16 = enhancer9.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass16);
        boolean boolean18 = enhancer0.getAttemptLoad();
        boolean boolean19 = enhancer0.getUseCache();
        enhancer0.setUseCache(true);
        boolean boolean22 = enhancer0.getUseCache();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer0.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter27 = null;
        enhancer0.setCallbackFilter(callbackFilter27);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter29 = null;
        enhancer0.setCallbackFilter(callbackFilter29);
        boolean boolean31 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test04101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04101");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.asm.ClassAdapter classAdapter22 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter22);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer28.setCallback(callback31);
        enhancer28.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer35.setCallback(callback38);
        enhancer35.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer35.getNamingPolicy();
        enhancer28.setNamingPolicy(namingPolicy42);
        boolean boolean44 = enhancer28.getAttemptLoad();
        enhancer28.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter47 = null;
        enhancer28.setCallbackFilter(callbackFilter47);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy49 = enhancer28.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer50.setCallback(callback53);
        enhancer50.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback60 = null;
        enhancer57.setCallback(callback60);
        enhancer57.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer57.getNamingPolicy();
        enhancer50.setNamingPolicy(namingPolicy64);
        enhancer50.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy68 = enhancer50.getNamingPolicy();
        enhancer28.setNamingPolicy(namingPolicy68);
        enhancer28.setUseCache(true);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor72 = classEmitter23.visitField(122, "L1957904901", "L969905594", "L1733384015", (java.lang.Object) true);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(generatorStrategy49);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertNotNull(namingPolicy68);
    }

    @Test
    public void test04102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04102");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter10 = null;
        enhancer0.setCallbackFilter(callbackFilter10);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer14.setCallback(callback17);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer14.setCallback(callback19);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy21 = enhancer14.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer14.getNamingPolicy();
        enhancer14.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer26.setCallback(callback29);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter31 = null;
        enhancer26.setCallbackFilter(callbackFilter31);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer26.setCallback(callback33);
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer26.getNamingPolicy();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local38 = new org.mockito.cglib.core.Local(0, type37);
        int int39 = type37.getSort();
        java.lang.String str40 = type37.getClassName();
        java.lang.String str41 = type37.getClassName();
        boolean boolean42 = namingPolicy35.equals((java.lang.Object) type37);
        enhancer25.setNamingPolicy(namingPolicy35);
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer25.getNamingPolicy();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str46 = type45.getClassName();
        boolean boolean47 = namingPolicy44.equals((java.lang.Object) str46);
        enhancer14.setNamingPolicy(namingPolicy44);
        java.lang.ClassLoader classLoader49 = enhancer14.getClassLoader();
        java.lang.Class<?> wildcardClass50 = classLoader49.getClass();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass50);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback58 = null;
        enhancer55.setCallback(callback58);
        org.mockito.cglib.proxy.Callback callback60 = null;
        enhancer55.setCallback(callback60);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy62 = enhancer55.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer55.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor65 = null;
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor65);
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor65);
        classEmitter64.setTarget((org.mockito.asm.ClassVisitor) classAdapter67);
        boolean boolean69 = namingPolicy63.equals((java.lang.Object) classAdapter67);
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setUseFactory(true);
        enhancer70.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback75 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray76 = new org.mockito.cglib.proxy.Callback[] { callback75 };
        enhancer70.setCallbacks(callbackArray76);
        boolean boolean78 = enhancer70.getAttemptLoad();
        boolean boolean79 = namingPolicy63.equals((java.lang.Object) enhancer70);
        enhancer70.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy82 = enhancer70.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        enhancer83.setUseFactory(true);
        enhancer83.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback88 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray89 = new org.mockito.cglib.proxy.Callback[] { callback88 };
        enhancer83.setCallbacks(callbackArray89);
        enhancer70.setCallbacks(callbackArray89);
        enhancer0.setCallbacks(callbackArray89);
        enhancer0.setUseCache(false);
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertNotNull(generatorStrategy21);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8 + "'", int39 == 8);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "double" + "'", str40, "double");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "double" + "'", str41, "double");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double" + "'", str46, "double");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(generatorStrategy62);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(callbackArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(generatorStrategy82);
        org.junit.Assert.assertNotNull(callbackArray89);
    }

    @Test
    public void test04103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04103");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        java.lang.Class<?> wildcardClass10 = classAdapter9.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass10, wildcardClass14, wildcardClass18, wildcardClass22 };
        enhancer5.setInterfaces(classArray24);
        enhancer0.setInterfaces(classArray24);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass29, wildcardClass34 };
        enhancer0.setInterfaces(classArray37);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseFactory(true);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor46);
        classEmitter45.setTarget((org.mockito.asm.ClassVisitor) classAdapter48);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter50.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter50.setTarget((org.mockito.asm.ClassVisitor) classEmitter52);
        classEmitter45.setTarget((org.mockito.asm.ClassVisitor) classEmitter52);
        org.mockito.cglib.core.ClassInfo classInfo55 = classEmitter52.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo57 = classEmitter56.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter56);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter56);
        classEmitter52.setTarget((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor63);
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor63);
        classEmitter62.setTarget((org.mockito.asm.ClassVisitor) classAdapter65);
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo68 = classEmitter67.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter67.setTarget((org.mockito.asm.ClassVisitor) classEmitter69);
        classEmitter62.setTarget((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.cglib.core.ClassInfo classInfo72 = classEmitter62.getClassInfo();
        classEmitter59.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassEmitter classEmitter74 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassEmitter classEmitter75 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter74);
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter74);
        org.mockito.cglib.core.ClassInfo classInfo77 = classEmitter74.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str11, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str15, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str31, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNull(classInfo51);
        org.junit.Assert.assertNull(classInfo55);
        org.junit.Assert.assertNull(classInfo57);
        org.junit.Assert.assertNull(classInfo68);
        org.junit.Assert.assertNull(classInfo72);
        org.junit.Assert.assertNull(classInfo77);
    }

    @Test
    public void test04104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04104");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        enhancer7.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy14);
        enhancer0.setUseFactory(true);
        enhancer0.setUseCache(false);
        java.lang.Class[] classArray20 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackTypes(classArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy14);
    }

    @Test
    public void test04105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04105");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = 10.0f;
        java.lang.String str3 = label0.toString();
        java.lang.String str4 = label0.toString();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback6 = null;
        enhancer5.setCallback(callback6);
        enhancer5.setInterceptDuringConstruction(true);
        boolean boolean10 = enhancer5.getAttemptLoad();
        enhancer5.setUseFactory(true);
        enhancer5.setInterceptDuringConstruction(true);
        label0.info = true;
        org.mockito.asm.MethodVisitor methodVisitor18 = null;
        org.mockito.asm.MethodAdapter methodAdapter19 = new org.mockito.asm.MethodAdapter(methodVisitor18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.asm.MethodAdapter methodAdapter23 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        label0.info = localVariablesSorter24;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter26 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter24);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setUseFactory(true);
        enhancer27.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter32 = null;
        enhancer27.setCallbackFilter(callbackFilter32);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        java.lang.Class<?> wildcardClass39 = classAdapter38.getClass();
        java.lang.String str40 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        java.lang.Class<?> wildcardClass43 = classAdapter42.getClass();
        java.lang.String str44 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass43);
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        java.lang.Class<?> wildcardClass47 = classAdapter46.getClass();
        java.lang.String str48 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        java.lang.Class<?> wildcardClass51 = classAdapter50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Class[] classArray53 = new java.lang.Class[] { wildcardClass39, wildcardClass43, wildcardClass47, wildcardClass51 };
        enhancer34.setInterfaces(classArray53);
        enhancer27.setInterfaces(classArray53);
        boolean boolean56 = enhancer27.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setUseFactory(true);
        enhancer57.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor65 = null;
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor65);
        java.lang.Class<?> wildcardClass67 = classAdapter66.getClass();
        java.lang.String str68 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass67);
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor69);
        java.lang.Class<?> wildcardClass71 = classAdapter70.getClass();
        java.lang.String str72 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass71);
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor73);
        java.lang.Class<?> wildcardClass75 = classAdapter74.getClass();
        java.lang.String str76 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        org.mockito.asm.ClassVisitor classVisitor77 = null;
        org.mockito.asm.ClassAdapter classAdapter78 = new org.mockito.asm.ClassAdapter(classVisitor77);
        java.lang.Class<?> wildcardClass79 = classAdapter78.getClass();
        boolean boolean80 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass79);
        java.lang.Class[] classArray81 = new java.lang.Class[] { wildcardClass67, wildcardClass71, wildcardClass75, wildcardClass79 };
        enhancer62.setInterfaces(classArray81);
        enhancer57.setInterfaces(classArray81);
        enhancer27.setInterfaces(classArray81);
        org.mockito.cglib.proxy.Enhancer enhancer85 = new org.mockito.cglib.proxy.Enhancer();
        enhancer85.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback88 = null;
        enhancer85.setCallback(callback88);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter90 = null;
        enhancer85.setCallbackFilter(callbackFilter90);
        org.mockito.cglib.proxy.Callback callback92 = null;
        enhancer85.setCallback(callback92);
        enhancer85.setUseCache(false);
        boolean boolean96 = enhancer85.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy97 = enhancer85.getStrategy();
        enhancer27.setStrategy(generatorStrategy97);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter26.visitLdcInsn((java.lang.Object) generatorStrategy97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L2044183141" + "'", str3, "L2044183141");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L2044183141" + "'", str4, "L2044183141");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str40, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str44, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str48, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str68, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str72, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str76, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(generatorStrategy97);
    }

    @Test
    public void test04106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04106");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer0.setCallback(callback14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        java.lang.String str20 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass18);
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass18);
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass18);
        org.mockito.cglib.proxy.Callback callback26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass18, callback26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str20, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str25, "Lorg/mockito/asm/ClassAdapter;");
    }

    @Test
    public void test04107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04107");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer10.setCallback(callback13);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer10.setCallback(callback15);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer17.setCallback(callback20);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter22 = null;
        enhancer17.setCallbackFilter(callbackFilter22);
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer17.setCallback(callback24);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer17.getNamingPolicy();
        enhancer10.setNamingPolicy(namingPolicy26);
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        java.lang.Class<?> wildcardClass30 = classAdapter29.getClass();
        enhancer10.setSuperclass((java.lang.Class) wildcardClass30);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass30);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback36 = null;
        enhancer33.setCallback(callback36);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer33.setCallback(callback38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        java.lang.Class<?> wildcardClass45 = classAdapter44.getClass();
        java.lang.String str46 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass45);
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        java.lang.Class<?> wildcardClass49 = classAdapter48.getClass();
        java.lang.String str50 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass49);
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor51);
        java.lang.Class<?> wildcardClass53 = classAdapter52.getClass();
        java.lang.String str54 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass53);
        org.mockito.asm.ClassVisitor classVisitor55 = null;
        org.mockito.asm.ClassAdapter classAdapter56 = new org.mockito.asm.ClassAdapter(classVisitor55);
        java.lang.Class<?> wildcardClass57 = classAdapter56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Class[] classArray59 = new java.lang.Class[] { wildcardClass45, wildcardClass49, wildcardClass53, wildcardClass57 };
        enhancer40.setInterfaces(classArray59);
        enhancer33.setInterfaces(classArray59);
        enhancer0.setInterfaces(classArray59);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter63 = null;
        enhancer0.setCallbackFilter(callbackFilter63);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor68);
        classEmitter67.setTarget((org.mockito.asm.ClassVisitor) classAdapter70);
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter70);
        org.mockito.asm.ClassAdapter classAdapter73 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter72);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classAdapter73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str46, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str50, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str54, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classArray59);
    }

    @Test
    public void test04108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04108");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean11 = enhancer0.getUseCache();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy14 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer0.getNamingPolicy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(generatorStrategy14);
        org.junit.Assert.assertNotNull(namingPolicy15);
    }

    @Test
    public void test04109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04109");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setUseFactory(true);
        boolean boolean12 = enhancer9.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        java.lang.Class<?> wildcardClass15 = classAdapter14.getClass();
        java.lang.String str16 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass15);
        enhancer9.setSuperclass((java.lang.Class) wildcardClass15);
        boolean boolean18 = enhancer9.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer9.getStrategy();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitLdcInsn((java.lang.Object) generatorStrategy19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str16, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(generatorStrategy19);
    }

    @Test
    public void test04110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04110");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo9 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter4.setTarget((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter4);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer13.setCallback(callback16);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer13.setCallback(callback18);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy20 = enhancer13.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer13.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor23);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classAdapter25);
        boolean boolean27 = namingPolicy21.equals((java.lang.Object) classAdapter25);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter25);
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter28);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter29);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classAdapter29);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter12.visitOuterClass("L2125274142", "L1057808593", "L1025849660");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo9);
        org.junit.Assert.assertNotNull(generatorStrategy20);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test04111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04111");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        boolean boolean4 = signature2.equals((java.lang.Object) "(VZVDDZ)B");
        org.mockito.asm.Type[] typeArray5 = signature2.getArgumentTypes();
        org.mockito.asm.Type type6 = signature2.getReturnType();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer14.setCallback(callback17);
        enhancer14.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass21 = enhancer14.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        java.lang.String str23 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass21);
        enhancer7.setSuperclass((java.lang.Class) wildcardClass21);
        boolean boolean25 = signature2.equals((java.lang.Object) wildcardClass21);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        org.mockito.cglib.proxy.Callback callback27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass21, callback27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str22, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str23, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
    }

    @Test
    public void test04112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04112");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        enhancer0.setAttemptLoad(true);
        enhancer0.setAttemptLoad(false);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setUseFactory(true);
        enhancer36.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        java.lang.Class<?> wildcardClass46 = classAdapter45.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor48);
        java.lang.Class<?> wildcardClass50 = classAdapter49.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        java.lang.Class<?> wildcardClass54 = classAdapter53.getClass();
        java.lang.String str55 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass54);
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        java.lang.Class<?> wildcardClass58 = classAdapter57.getClass();
        boolean boolean59 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        java.lang.Class[] classArray60 = new java.lang.Class[] { wildcardClass46, wildcardClass50, wildcardClass54, wildcardClass58 };
        enhancer41.setInterfaces(classArray60);
        enhancer36.setInterfaces(classArray60);
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor63);
        java.lang.Class<?> wildcardClass65 = classAdapter64.getClass();
        java.lang.String str66 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass65);
        java.lang.String str67 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass65);
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        java.lang.Class<?> wildcardClass70 = classAdapter69.getClass();
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass70);
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass70);
        java.lang.Class[] classArray73 = new java.lang.Class[] { wildcardClass65, wildcardClass70 };
        enhancer36.setInterfaces(classArray73);
        enhancer36.setInterceptDuringConstruction(true);
        enhancer36.setUseFactory(true);
        enhancer36.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer81 = new org.mockito.cglib.proxy.Enhancer();
        enhancer81.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback84 = null;
        enhancer81.setCallback(callback84);
        org.mockito.cglib.proxy.Callback callback86 = null;
        enhancer81.setCallback(callback86);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy88 = enhancer81.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy89 = enhancer81.getNamingPolicy();
        enhancer81.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Callback callback92 = null;
        enhancer81.setCallback(callback92);
        java.lang.ClassLoader classLoader94 = enhancer81.getClassLoader();
        enhancer36.setClassLoader(classLoader94);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy96 = enhancer36.getStrategy();
        enhancer0.setStrategy(generatorStrategy96);
        enhancer0.setUseCache(false);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str47, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str51, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str55, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str66, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str67, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(generatorStrategy88);
        org.junit.Assert.assertNotNull(namingPolicy89);
        org.junit.Assert.assertNotNull(classLoader94);
        org.junit.Assert.assertNotNull(generatorStrategy96);
    }

    @Test
    public void test04113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04113");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter1 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter1);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        java.lang.Class<?> wildcardClass12 = classAdapter11.getClass();
        java.lang.String str13 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor14);
        java.lang.Class<?> wildcardClass16 = classAdapter15.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass20);
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.asm.ClassAdapter classAdapter23 = new org.mockito.asm.ClassAdapter(classVisitor22);
        java.lang.Class<?> wildcardClass24 = classAdapter23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass12, wildcardClass16, wildcardClass20, wildcardClass24 };
        enhancer7.setInterfaces(classArray26);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter28 = null;
        enhancer7.setCallbackFilter(callbackFilter28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        enhancer30.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback35 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray36 = new org.mockito.cglib.proxy.Callback[] { callback35 };
        enhancer30.setCallbacks(callbackArray36);
        enhancer7.setCallbacks(callbackArray36);
        java.lang.Class class39 = null;
        enhancer7.setSuperclass(class39);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer7.getStrategy();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.Class<?> wildcardClass43 = type42.getClass();
        enhancer7.setSuperclass((java.lang.Class) wildcardClass43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.Class<?> wildcardClass46 = type45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        enhancer7.setSuperclass((java.lang.Class) wildcardClass46);
        java.lang.String str49 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor50 = classEmitter1.visitField(105, "L1513258790", "L1637753729", "L69136736", (java.lang.Object) str49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str13, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str17, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str21, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(callbackArray36);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test04114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04114");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int16 = type12.getSort();
        int int17 = type12.getSize();
        org.mockito.cglib.core.Signature signature20 = new org.mockito.cglib.core.Signature("", "Z");
        org.mockito.asm.Type type21 = signature20.getReturnType();
        int int22 = type21.getSize();
        java.lang.String str23 = type21.toString();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local27 = new org.mockito.cglib.core.Local(0, type26);
        int int28 = type26.getSort();
        java.lang.String str29 = type26.getClassName();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local33 = new org.mockito.cglib.core.Local(0, type32);
        org.mockito.cglib.core.Local local34 = new org.mockito.cglib.core.Local((int) (byte) 100, type32);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        boolean boolean42 = type39.equals((java.lang.Object) classVisitor40);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str44 = type43.getDescriptor();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type46 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor48);
        boolean boolean50 = type47.equals((java.lang.Object) classVisitor48);
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type38, type39, type43, type45, type46, type47 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray51);
        org.mockito.cglib.core.Signature signature53 = new org.mockito.cglib.core.Signature("L1057808593", type36, typeArray51);
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray51);
        org.mockito.cglib.core.Signature signature55 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type26, typeArray51);
        org.mockito.asm.Type[] typeArray56 = signature55.getArgumentTypes();
        org.mockito.asm.Type type57 = signature55.getReturnType();
        org.mockito.asm.Type[] typeArray58 = signature55.getArgumentTypes();
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray58);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray58);
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback65 = null;
        enhancer62.setCallback(callback65);
        org.mockito.cglib.proxy.Callback callback67 = null;
        enhancer62.setCallback(callback67);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy69 = enhancer62.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy70 = enhancer62.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor72 = null;
        org.mockito.asm.ClassAdapter classAdapter73 = new org.mockito.asm.ClassAdapter(classVisitor72);
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor72);
        classEmitter71.setTarget((org.mockito.asm.ClassVisitor) classAdapter74);
        boolean boolean76 = namingPolicy70.equals((java.lang.Object) classAdapter74);
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        enhancer77.setUseFactory(true);
        enhancer77.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback82 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray83 = new org.mockito.cglib.proxy.Callback[] { callback82 };
        enhancer77.setCallbacks(callbackArray83);
        boolean boolean85 = enhancer77.getAttemptLoad();
        boolean boolean86 = namingPolicy70.equals((java.lang.Object) enhancer77);
        enhancer77.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy89 = enhancer77.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer90 = new org.mockito.cglib.proxy.Enhancer();
        enhancer90.setUseFactory(true);
        enhancer90.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback95 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray96 = new org.mockito.cglib.proxy.Callback[] { callback95 };
        enhancer90.setCallbacks(callbackArray96);
        enhancer77.setCallbacks(callbackArray96);
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter9.visitFrame((int) 'a', 4, (java.lang.Object[]) typeArray58, 99, (java.lang.Object[]) callbackArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Z" + "'", str23, "Z");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "double" + "'", str29, "double");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "V" + "'", str44, "V");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(VZVDDZ)V" + "'", str52, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(VZVDDZ)D" + "'", str54, "(VZVDDZ)D");
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VZVDDZ)Z" + "'", str59, "(VZVDDZ)Z");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(VZVDDZ)Z" + "'", str60, "(VZVDDZ)Z");
        org.junit.Assert.assertNotNull(generatorStrategy69);
        org.junit.Assert.assertNotNull(namingPolicy70);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(callbackArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(generatorStrategy89);
        org.junit.Assert.assertNotNull(callbackArray96);
    }

    @Test
    public void test04115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04115");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classAdapter12);
        boolean boolean14 = namingPolicy8.equals((java.lang.Object) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor17);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classAdapter19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter21.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter36.getClassInfo();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter41);
        // The following exception was thrown during execution in test generation
        try {
            classAdapter42.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo40);
    }

    @Test
    public void test04116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04116");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor7);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classAdapter9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter11.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer18.setCallback(callback21);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer18.setCallback(callback23);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer18.getStrategy();
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        boolean boolean27 = generatorStrategy25.equals((java.lang.Object) label26);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor29);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classAdapter31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassInfo classInfo44 = classEmitter42.getClassInfo();
        label26.info = classEmitter42;
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer46.setCallback(callback49);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter51 = null;
        enhancer46.setCallbackFilter(callbackFilter51);
        enhancer46.setSerialVersionUID((java.lang.Long) 0L);
        enhancer46.setUseCache(false);
        enhancer46.setUseFactory(false);
        boolean boolean59 = enhancer46.getAttemptLoad();
        enhancer46.setUseFactory(false);
        label26.info = enhancer46;
        java.lang.String str63 = label26.toString();
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor65 = null;
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor65);
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor65);
        classEmitter64.setTarget((org.mockito.asm.ClassVisitor) classAdapter67);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo70 = classEmitter69.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter69.setTarget((org.mockito.asm.ClassVisitor) classEmitter71);
        classEmitter64.setTarget((org.mockito.asm.ClassVisitor) classEmitter71);
        org.mockito.cglib.core.ClassInfo classInfo74 = classEmitter71.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter75 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo76 = classEmitter75.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter75);
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter75);
        classEmitter71.setTarget((org.mockito.asm.ClassVisitor) classEmitter78);
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter78);
        org.mockito.cglib.core.ClassEmitter classEmitter81 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter80);
        org.mockito.asm.ClassAdapter classAdapter82 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter80);
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter80);
        label26.info = classEmitter83;
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter83);
        org.mockito.cglib.core.ClassEmitter classEmitter86 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor89 = classEmitter86.visitAnnotation("L619672905", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo4);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNotNull(generatorStrategy25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo44);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L1648585412" + "'", str63, "L1648585412");
        org.junit.Assert.assertNull(classInfo70);
        org.junit.Assert.assertNull(classInfo74);
        org.junit.Assert.assertNull(classInfo76);
    }

    @Test
    public void test04117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04117");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass20);
        boolean boolean22 = enhancer0.getAttemptLoad();
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer0.setCallbackFilter(callbackFilter25);
        java.lang.ClassLoader classLoader27 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer28.setCallback(callback31);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer28.setCallback(callback33);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy35 = enhancer28.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer28.getNamingPolicy();
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        java.lang.Class<?> wildcardClass39 = classAdapter38.getClass();
        java.lang.String str40 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.String str45 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        boolean boolean46 = namingPolicy36.equals((java.lang.Object) wildcardClass39);
        enhancer0.setNamingPolicy(namingPolicy36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(generatorStrategy35);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str40, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str45, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test04118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04118");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass20);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter22 = null;
        enhancer0.setCallbackFilter(callbackFilter22);
        boolean boolean24 = enhancer0.getAttemptLoad();
        boolean boolean25 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        java.lang.Class<?> wildcardClass31 = classAdapter30.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass31);
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        java.lang.Class<?> wildcardClass35 = classAdapter34.getClass();
        java.lang.String str36 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass35);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        java.lang.Class<?> wildcardClass39 = classAdapter38.getClass();
        java.lang.String str40 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        java.lang.Class<?> wildcardClass43 = classAdapter42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Class[] classArray45 = new java.lang.Class[] { wildcardClass31, wildcardClass35, wildcardClass39, wildcardClass43 };
        enhancer26.setInterfaces(classArray45);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter47 = null;
        enhancer26.setCallbackFilter(callbackFilter47);
        enhancer26.setUseCache(true);
        enhancer26.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback54 = null;
        enhancer53.setCallback(callback54);
        java.lang.Class<?> wildcardClass56 = enhancer53.getClass();
        java.lang.String str57 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass56);
        java.lang.String str59 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass56);
        java.lang.String str60 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass56);
        enhancer26.setSuperclass((java.lang.Class) wildcardClass56);
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback65 = null;
        enhancer62.setCallback(callback65);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter67 = null;
        enhancer62.setCallbackFilter(callbackFilter67);
        org.mockito.cglib.proxy.Callback callback69 = null;
        enhancer62.setCallback(callback69);
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = enhancer62.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        enhancer72.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback75 = null;
        enhancer72.setCallback(callback75);
        org.mockito.cglib.proxy.Callback callback77 = null;
        enhancer72.setCallback(callback77);
        org.mockito.cglib.proxy.Enhancer enhancer79 = new org.mockito.cglib.proxy.Enhancer();
        enhancer79.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback82 = null;
        enhancer79.setCallback(callback82);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter84 = null;
        enhancer79.setCallbackFilter(callbackFilter84);
        org.mockito.cglib.proxy.Callback callback86 = null;
        enhancer79.setCallback(callback86);
        org.mockito.cglib.core.NamingPolicy namingPolicy88 = enhancer79.getNamingPolicy();
        enhancer72.setNamingPolicy(namingPolicy88);
        org.mockito.asm.ClassVisitor classVisitor90 = null;
        org.mockito.asm.ClassAdapter classAdapter91 = new org.mockito.asm.ClassAdapter(classVisitor90);
        java.lang.Class<?> wildcardClass92 = classAdapter91.getClass();
        enhancer72.setSuperclass((java.lang.Class) wildcardClass92);
        enhancer62.setSuperclass((java.lang.Class) wildcardClass92);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy95 = enhancer62.getStrategy();
        java.lang.ClassLoader classLoader96 = enhancer62.getClassLoader();
        enhancer26.setClassLoader(classLoader96);
        enhancer0.setClassLoader(classLoader96);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str32, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str36, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str40, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str57, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str59, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str60, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(namingPolicy71);
        org.junit.Assert.assertNotNull(namingPolicy88);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(generatorStrategy95);
        org.junit.Assert.assertNotNull(classLoader96);
    }

    @Test
    public void test04119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04119");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor29);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classAdapter31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter44.getClassInfo();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer47.setCallback(callback52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer47.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer47.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor57);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        boolean boolean61 = namingPolicy55.equals((java.lang.Object) classAdapter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter59);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        org.mockito.cglib.core.ClassInfo classInfo64 = classEmitter44.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter44.visitInnerClass("L1462218130", "L1546961225", "L1950674214", 122);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(classInfo64);
    }

    @Test
    public void test04120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04120");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer15.setCallback(callback18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer15.setCallback(callback20);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer22.setCallback(callback25);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter27 = null;
        enhancer22.setCallbackFilter(callbackFilter27);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer22.setCallback(callback29);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer22.getNamingPolicy();
        enhancer15.setNamingPolicy(namingPolicy31);
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        java.lang.Class<?> wildcardClass35 = classAdapter34.getClass();
        enhancer15.setSuperclass((java.lang.Class) wildcardClass35);
        boolean boolean37 = enhancer15.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter38 = null;
        enhancer15.setCallbackFilter(callbackFilter38);
        enhancer15.setAttemptLoad(false);
        enhancer15.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        java.lang.Class<?> wildcardClass49 = classAdapter48.getClass();
        java.lang.String str50 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass49);
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor51);
        java.lang.Class<?> wildcardClass53 = classAdapter52.getClass();
        java.lang.String str54 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass53);
        org.mockito.asm.ClassVisitor classVisitor55 = null;
        org.mockito.asm.ClassAdapter classAdapter56 = new org.mockito.asm.ClassAdapter(classVisitor55);
        java.lang.Class<?> wildcardClass57 = classAdapter56.getClass();
        java.lang.String str58 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass57);
        org.mockito.asm.ClassVisitor classVisitor59 = null;
        org.mockito.asm.ClassAdapter classAdapter60 = new org.mockito.asm.ClassAdapter(classVisitor59);
        java.lang.Class<?> wildcardClass61 = classAdapter60.getClass();
        boolean boolean62 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass61);
        java.lang.Class[] classArray63 = new java.lang.Class[] { wildcardClass49, wildcardClass53, wildcardClass57, wildcardClass61 };
        enhancer44.setInterfaces(classArray63);
        boolean boolean65 = enhancer44.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        java.lang.Class<?> wildcardClass68 = classAdapter67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        enhancer44.setSuperclass((java.lang.Class) wildcardClass68);
        enhancer15.setSuperclass((java.lang.Class) wildcardClass68);
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        boolean boolean74 = namingPolicy14.equals((java.lang.Object) boolean73);
        org.mockito.cglib.core.Predicate predicate78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str79 = namingPolicy14.getClassName("L1431874764", "Ljava/lang/Class;", (java.lang.Object) "L1957904901", predicate78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str50, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str54, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str58, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(classArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test04121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04121");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classAdapter12);
        boolean boolean14 = namingPolicy8.equals((java.lang.Object) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter15.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test04122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04122");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer11.setCallback(callback14);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter16 = null;
        enhancer11.setCallbackFilter(callbackFilter16);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer11.setCallback(callback18);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer11.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer21.setCallback(callback24);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer21.setCallback(callback26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer28.setCallback(callback31);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter33 = null;
        enhancer28.setCallbackFilter(callbackFilter33);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer28.setCallback(callback35);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer28.getNamingPolicy();
        enhancer21.setNamingPolicy(namingPolicy37);
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        java.lang.Class<?> wildcardClass41 = classAdapter40.getClass();
        enhancer21.setSuperclass((java.lang.Class) wildcardClass41);
        enhancer11.setSuperclass((java.lang.Class) wildcardClass41);
        enhancer11.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer46.setCallback(callback49);
        org.mockito.cglib.proxy.Callback callback51 = null;
        enhancer46.setCallback(callback51);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy53 = enhancer46.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy54 = enhancer46.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer46.getNamingPolicy();
        java.lang.ClassLoader classLoader56 = enhancer46.getClassLoader();
        enhancer11.setClassLoader(classLoader56);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy58 = enhancer11.getStrategy();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitLdcInsn((java.lang.Object) generatorStrategy58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(generatorStrategy53);
        org.junit.Assert.assertNotNull(namingPolicy54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(generatorStrategy58);
    }

    @Test
    public void test04123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04123");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.asm.MethodAdapter methodAdapter13 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter10);
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        java.lang.String str18 = label17.toString();
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        label17.info = label19;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local23 = new org.mockito.cglib.core.Local(0, type22);
        label17.info = 0;
        java.lang.String str25 = label17.toString();
        label17.info = "Z(VZVDDZ)Z";
        label17.info = 100.0d;
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer30.setCallback(callback33);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer30.setCallback(callback35);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy37 = enhancer30.getStrategy();
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        boolean boolean39 = generatorStrategy37.equals((java.lang.Object) label38);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor41);
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classAdapter43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter45.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter45.setTarget((org.mockito.asm.ClassVisitor) classEmitter47);
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.cglib.core.ClassInfo classInfo50 = classEmitter47.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo52 = classEmitter51.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter51);
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter51);
        classEmitter47.setTarget((org.mockito.asm.ClassVisitor) classEmitter54);
        org.mockito.cglib.core.ClassInfo classInfo56 = classEmitter54.getClassInfo();
        label38.info = classEmitter54;
        java.lang.Object obj58 = label38.info;
        java.lang.String str59 = label38.toString();
        java.lang.Object obj60 = label38.info;
        java.lang.String str61 = label38.toString();
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo63 = classEmitter62.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter62.setTarget((org.mockito.asm.ClassVisitor) classEmitter64);
        org.mockito.cglib.core.ClassInfo classInfo66 = classEmitter62.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor69);
        org.mockito.asm.ClassAdapter classAdapter71 = new org.mockito.asm.ClassAdapter(classVisitor69);
        classEmitter68.setTarget((org.mockito.asm.ClassVisitor) classAdapter71);
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo74 = classEmitter73.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter75 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter73.setTarget((org.mockito.asm.ClassVisitor) classEmitter75);
        classEmitter68.setTarget((org.mockito.asm.ClassVisitor) classEmitter75);
        classEmitter67.setTarget((org.mockito.asm.ClassVisitor) classEmitter75);
        label38.info = classEmitter75;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitLocalVariable("L1190352917", "L618770809", "S", label17, label38, 63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 63");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1978307726" + "'", str18, "L1978307726");
        org.junit.Assert.assertNotNull(type22);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1978307726" + "'", str25, "L1978307726");
        org.junit.Assert.assertNotNull(generatorStrategy37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo50);
        org.junit.Assert.assertNull(classInfo52);
        org.junit.Assert.assertNull(classInfo56);
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1211667379" + "'", str59, "L1211667379");
        org.junit.Assert.assertNotNull(obj60);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L1211667379" + "'", str61, "L1211667379");
        org.junit.Assert.assertNull(classInfo63);
        org.junit.Assert.assertNull(classInfo66);
        org.junit.Assert.assertNull(classInfo74);
    }

    @Test
    public void test04124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04124");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        enhancer7.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy14);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer18.setCallback(callback21);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer18.setCallback(callback23);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer18.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy25);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer0.getStrategy();
        org.mockito.asm.MethodVisitor methodVisitor28 = null;
        org.mockito.asm.MethodAdapter methodAdapter29 = new org.mockito.asm.MethodAdapter(methodVisitor28);
        org.mockito.asm.MethodAdapter methodAdapter30 = new org.mockito.asm.MethodAdapter(methodVisitor28);
        org.mockito.asm.MethodAdapter methodAdapter31 = new org.mockito.asm.MethodAdapter(methodVisitor28);
        org.mockito.asm.MethodAdapter methodAdapter32 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter31);
        boolean boolean33 = generatorStrategy27.equals((java.lang.Object) methodAdapter32);
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter32.visitCode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test04125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04125");
        java.lang.Class class0 = null;
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback4 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray5 = new org.mockito.cglib.proxy.Callback[] { callback4 };
        enhancer1.setCallbacks(callbackArray5);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerCallbacks(class0, callbackArray5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray5);
    }

    @Test
    public void test04126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04126");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter4);
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        java.lang.Object obj10 = label9.info;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        int int12 = type11.getSort();
        label9.info = type11;
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer14.setCallback(callback17);
        enhancer14.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer14.getNamingPolicy();
        boolean boolean23 = namingPolicy21.equals((java.lang.Object) 5);
        label9.info = boolean23;
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor26);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classAdapter28);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo31 = classEmitter30.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo37 = classEmitter36.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter41.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter47);
        label9.info = classEmitter48;
        org.mockito.asm.Label label50 = new org.mockito.asm.Label();
        java.lang.String str51 = label50.toString();
        org.mockito.asm.Label label52 = new org.mockito.asm.Label();
        label50.info = label52;
        java.lang.String str54 = label50.toString();
        java.lang.String str55 = label50.toString();
        java.lang.String str56 = label50.toString();
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        java.lang.String str58 = label57.toString();
        org.mockito.asm.Label label59 = new org.mockito.asm.Label();
        label57.info = label59;
        java.lang.String str61 = label57.toString();
        java.lang.String str62 = label57.toString();
        label50.info = label57;
        org.mockito.cglib.core.Signature signature66 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        org.mockito.asm.Type[] typeArray67 = signature66.getArgumentTypes();
        org.mockito.asm.Type type68 = signature66.getReturnType();
        int int69 = type68.getSort();
        label57.info = type68;
        java.lang.Object obj71 = label57.info;
        java.lang.Object obj72 = label57.info;
        org.mockito.asm.Label label73 = new org.mockito.asm.Label();
        java.lang.String str74 = label73.toString();
        org.mockito.asm.Label label75 = new org.mockito.asm.Label();
        label73.info = label75;
        java.lang.Object obj77 = label75.info;
        java.lang.String str78 = label75.toString();
        java.lang.Object obj79 = label75.info;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter8.visitTryCatchBlock(label9, label57, label75, "L880631068");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 4 + "'", int12 == 4);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(classInfo31);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertNull(classInfo37);
        org.junit.Assert.assertNull(classInfo42);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L47616882" + "'", str51, "L47616882");
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L47616882" + "'", str54, "L47616882");
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L47616882" + "'", str55, "L47616882");
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L47616882" + "'", str56, "L47616882");
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "L406067058" + "'", str58, "L406067058");
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L406067058" + "'", str61, "L406067058");
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L406067058" + "'", str62, "L406067058");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "Z");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "Z");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "Z");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "Z");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "Z");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "Z");
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L976124588" + "'", str74, "L976124588");
        org.junit.Assert.assertNull(obj77);
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "L1901819701" + "'", str78, "L1901819701");
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test04127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04127");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy17 = enhancer0.getStrategy();
        boolean boolean18 = enhancer0.getUseCache();
        boolean boolean19 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(generatorStrategy17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test04128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04128");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        java.lang.String str17 = label16.toString();
        org.mockito.asm.Label label18 = new org.mockito.asm.Label();
        label16.info = label18;
        java.lang.String str20 = label16.toString();
        java.lang.String str21 = label16.toString();
        java.lang.String str22 = label16.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        java.lang.String str24 = label23.toString();
        org.mockito.asm.Label label25 = new org.mockito.asm.Label();
        label23.info = label25;
        java.lang.String str27 = label23.toString();
        java.lang.String str28 = label23.toString();
        label16.info = label23;
        org.mockito.cglib.core.Signature signature32 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        org.mockito.asm.Type[] typeArray33 = signature32.getArgumentTypes();
        org.mockito.asm.Type type34 = signature32.getReturnType();
        int int35 = type34.getSort();
        label23.info = type34;
        java.lang.Object obj37 = label23.info;
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        java.lang.String str39 = label38.toString();
        org.mockito.asm.Label label40 = new org.mockito.asm.Label();
        label38.info = label40;
        java.lang.String str42 = label38.toString();
        java.lang.String str43 = label38.toString();
        java.lang.String str44 = label38.toString();
        org.mockito.asm.Label label45 = new org.mockito.asm.Label();
        java.lang.String str46 = label45.toString();
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        label45.info = label47;
        java.lang.String str49 = label45.toString();
        java.lang.String str50 = label45.toString();
        label38.info = label45;
        org.mockito.cglib.core.Signature signature54 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        org.mockito.asm.Type[] typeArray55 = signature54.getArgumentTypes();
        org.mockito.asm.Type type56 = signature54.getReturnType();
        int int57 = type56.getSort();
        label45.info = type56;
        java.lang.String str59 = label45.toString();
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor61);
        classEmitter60.setTarget((org.mockito.asm.ClassVisitor) classAdapter63);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor66);
        classEmitter65.setTarget((org.mockito.asm.ClassVisitor) classAdapter68);
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo71 = classEmitter70.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter70.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        classEmitter65.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        classEmitter60.setTarget((org.mockito.asm.ClassVisitor) classEmitter65);
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter65);
        label45.info = classEmitter65;
        org.mockito.cglib.proxy.Enhancer enhancer78 = new org.mockito.cglib.proxy.Enhancer();
        enhancer78.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback81 = null;
        enhancer78.setCallback(callback81);
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        enhancer83.setUseFactory(true);
        enhancer83.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback88 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray89 = new org.mockito.cglib.proxy.Callback[] { callback88 };
        enhancer83.setCallbacks(callbackArray89);
        enhancer78.setCallbacks(callbackArray89);
        enhancer78.setUseFactory(false);
        boolean boolean94 = enhancer78.getAttemptLoad();
        label45.info = boolean94;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter11.visitLocalVariable("L2021913213", "L212126511", "L1509566364", label23, label45, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L812592952" + "'", str17, "L812592952");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L812592952" + "'", str20, "L812592952");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L812592952" + "'", str21, "L812592952");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L812592952" + "'", str22, "L812592952");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L105489954" + "'", str24, "L105489954");
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L105489954" + "'", str27, "L105489954");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L105489954" + "'", str28, "L105489954");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "Z");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "Z");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "Z");
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "L1785146211" + "'", str39, "L1785146211");
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L1785146211" + "'", str42, "L1785146211");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L1785146211" + "'", str43, "L1785146211");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L1785146211" + "'", str44, "L1785146211");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L1204551855" + "'", str46, "L1204551855");
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L1204551855" + "'", str49, "L1204551855");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L1204551855" + "'", str50, "L1204551855");
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1204551855" + "'", str59, "L1204551855");
        org.junit.Assert.assertNull(classInfo71);
        org.junit.Assert.assertNotNull(callbackArray89);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test04129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04129");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor29);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classAdapter31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter44.getClassInfo();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer47.setCallback(callback52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer47.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer47.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor57);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        boolean boolean61 = namingPolicy55.equals((java.lang.Object) classAdapter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter59);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classAdapter59);
        // The following exception was thrown during execution in test generation
        try {
            classAdapter59.visitSource("LL1881114059;", "L175596505");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test04130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04130");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        boolean boolean8 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy9 = enhancer0.getStrategy();
        org.mockito.asm.MethodVisitor methodVisitor12 = null;
        org.mockito.asm.MethodAdapter methodAdapter13 = new org.mockito.asm.MethodAdapter(methodVisitor12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.asm.MethodAdapter methodAdapter19 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter18);
        org.mockito.asm.MethodAdapter methodAdapter21 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.asm.MethodAdapter methodAdapter23 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        boolean boolean24 = generatorStrategy9.equals((java.lang.Object) methodAdapter23);
        org.mockito.asm.MethodAdapter methodAdapter25 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter23);
        org.mockito.asm.MethodAdapter methodAdapter26 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter25);
        org.mockito.asm.Label label27 = new org.mockito.asm.Label();
        java.lang.String str28 = label27.toString();
        java.lang.String str29 = label27.toString();
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor31);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classAdapter33);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter37.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter41.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        label27.info = classEmitter44;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter25.visitLdcInsn((java.lang.Object) classEmitter49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(generatorStrategy9);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L118036079" + "'", str28, "L118036079");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L118036079" + "'", str29, "L118036079");
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo42);
    }

    @Test
    public void test04131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04131");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        java.lang.Class<?> wildcardClass10 = classAdapter9.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass10, wildcardClass14, wildcardClass18, wildcardClass22 };
        enhancer5.setInterfaces(classArray24);
        enhancer0.setInterfaces(classArray24);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass29, wildcardClass34 };
        enhancer0.setInterfaces(classArray37);
        java.lang.ClassLoader classLoader39 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback44 = null;
        enhancer41.setCallback(callback44);
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer41.setCallback(callback46);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer41.getStrategy();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor50);
        boolean boolean52 = type49.equals((java.lang.Object) classVisitor50);
        int int54 = type49.getOpcode(116);
        boolean boolean55 = generatorStrategy48.equals((java.lang.Object) 116);
        enhancer40.setStrategy(generatorStrategy48);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local60 = new org.mockito.cglib.core.Local(0, type59);
        int int61 = type59.getSort();
        java.lang.String str62 = type59.getClassName();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local66 = new org.mockito.cglib.core.Local(0, type65);
        org.mockito.cglib.core.Local local67 = new org.mockito.cglib.core.Local((int) (byte) 100, type65);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type72 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor73);
        boolean boolean75 = type72.equals((java.lang.Object) classVisitor73);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str77 = type76.getDescriptor();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type79 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor81 = null;
        org.mockito.asm.ClassAdapter classAdapter82 = new org.mockito.asm.ClassAdapter(classVisitor81);
        boolean boolean83 = type80.equals((java.lang.Object) classVisitor81);
        org.mockito.asm.Type[] typeArray84 = new org.mockito.asm.Type[] { type71, type72, type76, type78, type79, type80 };
        java.lang.String str85 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray84);
        org.mockito.cglib.core.Signature signature86 = new org.mockito.cglib.core.Signature("L1057808593", type69, typeArray84);
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray84);
        org.mockito.cglib.core.Signature signature88 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type59, typeArray84);
        boolean boolean89 = generatorStrategy48.equals((java.lang.Object) signature88);
        enhancer0.setStrategy(generatorStrategy48);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        java.lang.ClassLoader classLoader93 = enhancer0.getClassLoader();
        org.mockito.asm.Type type95 = org.mockito.asm.Type.getType("Lorg/mockito/cglib/proxy/Enhancer;");
        java.lang.Class<?> wildcardClass96 = type95.getClass();
        java.lang.String str97 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass96);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.asm.Type");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str11, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str15, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str31, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 116 + "'", int54 == 116);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 8 + "'", int61 == 8);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "double" + "'", str62, "double");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "V" + "'", str77, "V");
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(VZVDDZ)V" + "'", str85, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(VZVDDZ)D" + "'", str87, "(VZVDDZ)D");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(classLoader93);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str97, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test04132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04132");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.cglib.core.Local local3 = new org.mockito.cglib.core.Local(2, type2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType("Lorg/mockito/cglib/proxy/Enhancer;");
        org.mockito.asm.Type type8 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        boolean boolean14 = type11.equals((java.lang.Object) classVisitor12);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str16 = type15.getDescriptor();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        boolean boolean22 = type19.equals((java.lang.Object) classVisitor20);
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type10, type11, type15, type17, type18, type19 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray23);
        org.mockito.cglib.core.Signature signature25 = new org.mockito.cglib.core.Signature("L1057808593", type8, typeArray23);
        java.lang.String str26 = signature25.toString();
        java.lang.String str27 = signature25.getDescriptor();
        java.lang.String str28 = signature25.getDescriptor();
        org.mockito.asm.Type[] typeArray29 = signature25.getArgumentTypes();
        org.mockito.cglib.core.Signature signature30 = new org.mockito.cglib.core.Signature("", type6, typeArray29);
        org.mockito.cglib.core.Signature signature31 = new org.mockito.cglib.core.Signature("L471599702", type2, typeArray29);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer32.setCallback(callback35);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer32.setCallback(callback37);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback42 = null;
        enhancer39.setCallback(callback42);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter44 = null;
        enhancer39.setCallbackFilter(callbackFilter44);
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer39.setCallback(callback46);
        org.mockito.cglib.core.NamingPolicy namingPolicy48 = enhancer39.getNamingPolicy();
        enhancer32.setNamingPolicy(namingPolicy48);
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor50);
        java.lang.Class<?> wildcardClass52 = classAdapter51.getClass();
        enhancer32.setSuperclass((java.lang.Class) wildcardClass52);
        boolean boolean54 = enhancer32.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter55 = null;
        enhancer32.setCallbackFilter(callbackFilter55);
        enhancer32.setAttemptLoad(false);
        enhancer32.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Callback[] callbackArray61 = null;
        enhancer32.setCallbacks(callbackArray61);
        boolean boolean63 = type2.equals((java.lang.Object) callbackArray61);
        int int65 = type2.getOpcode((int) (short) 0);
        java.lang.String str66 = type2.toString();
        int int68 = type2.getOpcode(37);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.getType("Lorg/mockito/cglib/proxy/Enhancer;");
        org.mockito.asm.Type type73 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type74 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type75 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type76 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor77 = null;
        org.mockito.asm.ClassAdapter classAdapter78 = new org.mockito.asm.ClassAdapter(classVisitor77);
        boolean boolean79 = type76.equals((java.lang.Object) classVisitor77);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str81 = type80.getDescriptor();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type83 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type84 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor85 = null;
        org.mockito.asm.ClassAdapter classAdapter86 = new org.mockito.asm.ClassAdapter(classVisitor85);
        boolean boolean87 = type84.equals((java.lang.Object) classVisitor85);
        org.mockito.asm.Type[] typeArray88 = new org.mockito.asm.Type[] { type75, type76, type80, type82, type83, type84 };
        java.lang.String str89 = org.mockito.asm.Type.getMethodDescriptor(type74, typeArray88);
        org.mockito.cglib.core.Signature signature90 = new org.mockito.cglib.core.Signature("L1057808593", type73, typeArray88);
        java.lang.String str91 = signature90.toString();
        java.lang.String str92 = signature90.getDescriptor();
        java.lang.String str93 = signature90.getDescriptor();
        org.mockito.asm.Type[] typeArray94 = signature90.getArgumentTypes();
        org.mockito.cglib.core.Signature signature95 = new org.mockito.cglib.core.Signature("", type71, typeArray94);
        org.mockito.asm.Type type96 = signature95.getReturnType();
        java.lang.String str97 = signature95.getDescriptor();
        org.mockito.asm.Type type98 = signature95.getReturnType();
        boolean boolean99 = type2.equals((java.lang.Object) signature95);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "V" + "'", str16, "V");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VZVDDZ)V" + "'", str24, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1057808593(VZVDDZ)F" + "'", str26, "L1057808593(VZVDDZ)F");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(VZVDDZ)F" + "'", str27, "(VZVDDZ)F");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(VZVDDZ)F" + "'", str28, "(VZVDDZ)F");
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertNotNull(namingPolicy48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "S" + "'", str66, "S");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 37 + "'", int68 == 37);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "V" + "'", str81, "V");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(VZVDDZ)V" + "'", str89, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "L1057808593(VZVDDZ)F" + "'", str91, "L1057808593(VZVDDZ)F");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(VZVDDZ)F" + "'", str92, "(VZVDDZ)F");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(VZVDDZ)F" + "'", str93, "(VZVDDZ)F");
        org.junit.Assert.assertNotNull(typeArray94);
        org.junit.Assert.assertNotNull(type96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "(VZVDDZ)Lorg/mockito/cglib/proxy/Enhancer;" + "'", str97, "(VZVDDZ)Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test04133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04133");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        org.mockito.asm.ClassAdapter classAdapter10 = new org.mockito.asm.ClassAdapter(classVisitor8);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classAdapter10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor13);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classAdapter15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer23.setCallback(callback26);
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer23.setCallback(callback28);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer23.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer23.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor33);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        boolean boolean37 = namingPolicy31.equals((java.lang.Object) classAdapter35);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor41);
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classAdapter43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter45.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter40.getClassInfo();
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local60 = new org.mockito.cglib.core.Local(0, type59);
        org.mockito.cglib.core.Local local61 = new org.mockito.cglib.core.Local((int) (byte) 100, type59);
        org.mockito.asm.Type type62 = local61.getType();
        org.mockito.cglib.core.Signature signature65 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        boolean boolean67 = signature65.equals((java.lang.Object) "(VZVDDZ)B");
        org.mockito.asm.Type[] typeArray68 = signature65.getArgumentTypes();
        org.mockito.asm.Type type69 = signature65.getReturnType();
        java.lang.String str70 = signature65.getName();
        org.mockito.asm.Type[] typeArray71 = signature65.getArgumentTypes();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter40.begin_class(105, 134, "L1924542052", type62, typeArray71, "L361914688(VZVDDZ)B");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNotNull(generatorStrategy30);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo51);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Z" + "'", str70, "Z");
        org.junit.Assert.assertNotNull(typeArray71);
    }

    @Test
    public void test04134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04134");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        java.lang.Object obj10 = label9.info;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        int int12 = type11.getSort();
        label9.info = type11;
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer14.setCallback(callback17);
        enhancer14.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer14.getNamingPolicy();
        boolean boolean23 = namingPolicy21.equals((java.lang.Object) 5);
        label9.info = boolean23;
        java.lang.String str25 = label9.toString();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitLabel(label9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 4 + "'", int12 == 4);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1667627856" + "'", str25, "L1667627856");
    }

    @Test
    public void test04135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04135");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer1.setCallback(callback4);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer6.setCallback(callback9);
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer6.setCallback(callback11);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy13 = enhancer6.getStrategy();
        enhancer6.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer16.setCallback(callback17);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer20.setCallback(callback23);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer20.setCallback(callback25);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer20.getStrategy();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        boolean boolean31 = type28.equals((java.lang.Object) classVisitor29);
        int int33 = type28.getOpcode(116);
        boolean boolean34 = generatorStrategy27.equals((java.lang.Object) 116);
        enhancer19.setStrategy(generatorStrategy27);
        enhancer16.setStrategy(generatorStrategy27);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setUseFactory(true);
        enhancer37.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter42 = null;
        enhancer37.setCallbackFilter(callbackFilter42);
        java.lang.ClassLoader classLoader44 = enhancer37.getClassLoader();
        enhancer16.setClassLoader(classLoader44);
        java.lang.ClassLoader classLoader46 = enhancer16.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        enhancer47.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor55 = null;
        org.mockito.asm.ClassAdapter classAdapter56 = new org.mockito.asm.ClassAdapter(classVisitor55);
        java.lang.Class<?> wildcardClass57 = classAdapter56.getClass();
        java.lang.String str58 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass57);
        org.mockito.asm.ClassVisitor classVisitor59 = null;
        org.mockito.asm.ClassAdapter classAdapter60 = new org.mockito.asm.ClassAdapter(classVisitor59);
        java.lang.Class<?> wildcardClass61 = classAdapter60.getClass();
        java.lang.String str62 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass61);
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor63);
        java.lang.Class<?> wildcardClass65 = classAdapter64.getClass();
        java.lang.String str66 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass65);
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        java.lang.Class<?> wildcardClass69 = classAdapter68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Class[] classArray71 = new java.lang.Class[] { wildcardClass57, wildcardClass61, wildcardClass65, wildcardClass69 };
        enhancer52.setInterfaces(classArray71);
        enhancer47.setInterfaces(classArray71);
        enhancer16.setInterfaces(classArray71);
        enhancer6.setInterfaces(classArray71);
        java.lang.Class<?> wildcardClass76 = classArray71.getClass();
        java.lang.String str77 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass76);
        boolean boolean78 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass76);
        java.lang.String str79 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass76);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass76);
        java.lang.String str81 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass76);
        enhancer1.setSuperclass((java.lang.Class) wildcardClass76);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local85 = new org.mockito.cglib.core.Local(0, type84);
        int int86 = type84.getSort();
        java.lang.String str87 = type84.getClassName();
        java.lang.String str88 = type84.getClassName();
        java.lang.Class<?> wildcardClass89 = type84.getClass();
        enhancer1.setSuperclass((java.lang.Class) wildcardClass89);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass89);
        org.mockito.cglib.core.Local local92 = new org.mockito.cglib.core.Local(6, type91);
        org.mockito.asm.Type type93 = local92.getType();
        org.junit.Assert.assertNotNull(generatorStrategy13);
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 116 + "'", int33 == 116);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str58, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str62, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str66, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(classArray71);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[Ljava/lang/Class;" + "'", str77, "[Ljava/lang/Class;");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[Ljava/lang/Class;" + "'", str79, "[Ljava/lang/Class;");
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[Ljava/lang/Class;" + "'", str81, "[Ljava/lang/Class;");
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 8 + "'", int86 == 8);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "double" + "'", str87, "double");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "double" + "'", str88, "double");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(type93);
    }

    @Test
    public void test04136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04136");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        org.mockito.asm.ClassAdapter classAdapter10 = new org.mockito.asm.ClassAdapter(classVisitor8);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classAdapter10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor13);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classAdapter15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer23.setCallback(callback26);
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer23.setCallback(callback28);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer23.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer23.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor33);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        boolean boolean37 = namingPolicy31.equals((java.lang.Object) classAdapter35);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor41);
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classAdapter43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter45.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter40.getClassInfo();
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter40.getClassInfo();
        java.lang.String[] strArray63 = new java.lang.String[] { "L560542089", "L153439766", "L1694145807" };
        // The following exception was thrown during execution in test generation
        try {
            classEmitter40.visit(158, 118, "L2073648278", "L555496495", "L108460950", strArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNotNull(generatorStrategy30);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo51);
        org.junit.Assert.assertNull(classInfo54);
        org.junit.Assert.assertNotNull(strArray63);
    }

    @Test
    public void test04137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04137");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        enhancer30.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter35 = null;
        enhancer30.setCallbackFilter(callbackFilter35);
        java.lang.ClassLoader classLoader37 = enhancer30.getClassLoader();
        enhancer0.setClassLoader(classLoader37);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setUseFactory(true);
        enhancer39.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback44 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray45 = new org.mockito.cglib.proxy.Callback[] { callback44 };
        enhancer39.setCallbacks(callbackArray45);
        enhancer39.setSerialVersionUID((java.lang.Long) 1L);
        java.lang.ClassLoader classLoader49 = enhancer39.getClassLoader();
        enhancer0.setClassLoader(classLoader49);
        boolean boolean51 = enhancer0.getUseCache();
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        enhancer0.setAttemptLoad(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(callbackArray45);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test04138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04138");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("", "L361914688");
        org.mockito.asm.MethodVisitor methodVisitor5 = null;
        org.mockito.asm.MethodAdapter methodAdapter6 = new org.mockito.asm.MethodAdapter(methodVisitor5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        boolean boolean9 = signature2.equals((java.lang.Object) localVariablesSorter7);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.asm.MethodAdapter methodAdapter12 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer14.setCallback(callback17);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer14.setCallback(callback19);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy21 = enhancer14.getStrategy();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        boolean boolean23 = generatorStrategy21.equals((java.lang.Object) label22);
        java.lang.String str24 = label22.toString();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer25.setCallback(callback28);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter30 = null;
        enhancer25.setCallbackFilter(callbackFilter30);
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer25.setCallback(callback32);
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer25.getNamingPolicy();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local37 = new org.mockito.cglib.core.Local(0, type36);
        int int38 = type36.getSort();
        java.lang.String str39 = type36.getClassName();
        java.lang.String str40 = type36.getClassName();
        boolean boolean41 = namingPolicy34.equals((java.lang.Object) type36);
        label22.info = namingPolicy34;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter12.visitJumpInsn(122, label22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(generatorStrategy21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L2085565028" + "'", str24, "L2085565028");
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "double" + "'", str39, "double");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "double" + "'", str40, "double");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test04139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04139");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("V(VZVDDZ)Z");
        int int2 = type1.getSize();
        int int3 = type1.getSort();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer4.setCallback(callback5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        enhancer4.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.core.NamingPolicy namingPolicy11 = enhancer4.getNamingPolicy();
        boolean boolean13 = namingPolicy11.equals((java.lang.Object) (byte) 100);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor15);
        classEmitter14.setTarget((org.mockito.asm.ClassVisitor) classAdapter17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter19.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter19.setTarget((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter14.setTarget((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter25.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        classEmitter21.setTarget((org.mockito.asm.ClassVisitor) classEmitter28);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter28);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        boolean boolean32 = namingPolicy11.equals((java.lang.Object) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        classEmitter38.setTarget(classVisitor39);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        boolean boolean42 = type1.equals((java.lang.Object) classEmitter31);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        enhancer47.setInterceptDuringConstruction(true);
        enhancer47.setSerialVersionUID((java.lang.Long) 10L);
        boolean boolean54 = enhancer47.getAttemptLoad();
        enhancer47.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = enhancer47.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy58 = enhancer47.getStrategy();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor59 = classEmitter31.visitField(0, "L341880849", "L906683311", "L1629491295", (java.lang.Object) generatorStrategy58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(namingPolicy11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(namingPolicy57);
        org.junit.Assert.assertNotNull(generatorStrategy58);
    }

    @Test
    public void test04140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04140");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        boolean boolean13 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer18.setCallback(callback21);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer18.setCallbackFilter(callbackFilter23);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer18.setCallback(callback25);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer18.getNamingPolicy();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local30 = new org.mockito.cglib.core.Local(0, type29);
        int int31 = type29.getSort();
        java.lang.String str32 = type29.getClassName();
        java.lang.String str33 = type29.getClassName();
        boolean boolean34 = namingPolicy27.equals((java.lang.Object) type29);
        enhancer17.setNamingPolicy(namingPolicy27);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer36.setCallback(callback39);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter41 = null;
        enhancer36.setCallbackFilter(callbackFilter41);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer36.setCallback(callback43);
        enhancer36.setInterceptDuringConstruction(true);
        boolean boolean47 = namingPolicy27.equals((java.lang.Object) true);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback51 = null;
        enhancer48.setCallback(callback51);
        enhancer48.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback58 = null;
        enhancer55.setCallback(callback58);
        enhancer55.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = enhancer55.getNamingPolicy();
        enhancer48.setNamingPolicy(namingPolicy62);
        enhancer48.setInterceptDuringConstruction(true);
        boolean boolean66 = namingPolicy27.equals((java.lang.Object) enhancer48);
        org.mockito.cglib.core.Predicate predicate67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = namingPolicy14.getClassName("LL1555364125;", "(VZVDDZ)LL1499560713;", (java.lang.Object) enhancer48, predicate67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "double" + "'", str32, "double");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "double" + "'", str33, "double");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(namingPolicy62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test04141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04141");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        boolean boolean13 = enhancer0.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer0.getNamingPolicy();
        boolean boolean15 = enhancer0.getUseCache();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(classInfo17);
    }

    @Test
    public void test04142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04142");
        org.mockito.asm.Label label2 = new org.mockito.asm.Label();
        label2.info = 10.0f;
        java.lang.String str5 = label2.toString();
        java.lang.String str6 = label2.toString();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer7.setCallback(callback8);
        enhancer7.setInterceptDuringConstruction(true);
        boolean boolean12 = enhancer7.getAttemptLoad();
        enhancer7.setUseFactory(true);
        enhancer7.setInterceptDuringConstruction(true);
        label2.info = true;
        org.mockito.asm.MethodVisitor methodVisitor20 = null;
        org.mockito.asm.MethodAdapter methodAdapter21 = new org.mockito.asm.MethodAdapter(methodVisitor20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter21);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter23 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter22);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter22);
        org.mockito.asm.MethodAdapter methodAdapter25 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter22);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter26 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter22);
        label2.info = localVariablesSorter26;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter28 = new org.mockito.cglib.core.LocalVariablesSorter(10, "L970922106", (org.mockito.asm.MethodVisitor) localVariablesSorter26);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L8603842" + "'", str5, "L8603842");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L8603842" + "'", str6, "L8603842");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test04143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04143");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.asm.ClassAdapter classAdapter5 = new org.mockito.asm.ClassAdapter(classVisitor4);
        java.lang.Class<?> wildcardClass6 = classAdapter5.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass6);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass6);
        boolean boolean9 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer11.setCallback(callback14);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer11.setCallback(callback16);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.asm.ClassAdapter classAdapter22 = new org.mockito.asm.ClassAdapter(classVisitor21);
        java.lang.Class<?> wildcardClass23 = classAdapter22.getClass();
        java.lang.String str24 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass23);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor25);
        java.lang.Class<?> wildcardClass27 = classAdapter26.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        java.lang.Class<?> wildcardClass31 = classAdapter30.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass31);
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        java.lang.Class<?> wildcardClass35 = classAdapter34.getClass();
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass35);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass23, wildcardClass27, wildcardClass31, wildcardClass35 };
        enhancer18.setInterfaces(classArray37);
        enhancer11.setInterfaces(classArray37);
        enhancer0.setInterfaces(classArray37);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setUseFactory(true);
        enhancer41.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        java.lang.Class<?> wildcardClass51 = classAdapter50.getClass();
        java.lang.String str52 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass51);
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.asm.ClassAdapter classAdapter54 = new org.mockito.asm.ClassAdapter(classVisitor53);
        java.lang.Class<?> wildcardClass55 = classAdapter54.getClass();
        java.lang.String str56 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass55);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        java.lang.Class<?> wildcardClass59 = classAdapter58.getClass();
        java.lang.String str60 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass59);
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        java.lang.Class<?> wildcardClass63 = classAdapter62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Class[] classArray65 = new java.lang.Class[] { wildcardClass51, wildcardClass55, wildcardClass59, wildcardClass63 };
        enhancer46.setInterfaces(classArray65);
        enhancer41.setInterfaces(classArray65);
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        java.lang.Class<?> wildcardClass70 = classAdapter69.getClass();
        java.lang.String str71 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass70);
        java.lang.String str72 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass70);
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor73);
        java.lang.Class<?> wildcardClass75 = classAdapter74.getClass();
        boolean boolean76 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass75);
        boolean boolean77 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass75);
        java.lang.Class[] classArray78 = new java.lang.Class[] { wildcardClass70, wildcardClass75 };
        enhancer41.setInterfaces(classArray78);
        enhancer41.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy82 = enhancer41.getStrategy();
        enhancer41.setUseCache(true);
        java.lang.Class[] classArray85 = new java.lang.Class[] {};
        enhancer41.setInterfaces(classArray85);
        org.mockito.cglib.core.Signature signature89 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        boolean boolean91 = signature89.equals((java.lang.Object) "(VZVDDZ)B");
        java.lang.String str92 = signature89.toString();
        org.mockito.asm.Type[] typeArray93 = signature89.getArgumentTypes();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = enhancer0.create(classArray85, (java.lang.Object[]) typeArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Arguments must be non-null and of equal length");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str7, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str24, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str28, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str32, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str52, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str56, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str60, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str71, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str72, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(generatorStrategy82);
        org.junit.Assert.assertNotNull(classArray85);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Z(VZVDDZ)Z" + "'", str92, "Z(VZVDDZ)Z");
        org.junit.Assert.assertNotNull(typeArray93);
    }

    @Test
    public void test04144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04144");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        java.lang.Class<?> wildcardClass3 = enhancer0.getClass();
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass3);
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass3);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        java.lang.String str23 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass22);
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        java.lang.Class<?> wildcardClass26 = classAdapter25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.Class[] classArray28 = new java.lang.Class[] { wildcardClass14, wildcardClass18, wildcardClass22, wildcardClass26 };
        enhancer9.setInterfaces(classArray28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer30.setCallback(callback31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer34.setCallback(callback37);
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer34.setCallback(callback39);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer34.getStrategy();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        boolean boolean45 = type42.equals((java.lang.Object) classVisitor43);
        int int47 = type42.getOpcode(116);
        boolean boolean48 = generatorStrategy41.equals((java.lang.Object) 116);
        enhancer33.setStrategy(generatorStrategy41);
        enhancer30.setStrategy(generatorStrategy41);
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setUseFactory(true);
        enhancer51.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter56 = null;
        enhancer51.setCallbackFilter(callbackFilter56);
        java.lang.ClassLoader classLoader58 = enhancer51.getClassLoader();
        enhancer30.setClassLoader(classLoader58);
        java.lang.ClassLoader classLoader60 = enhancer30.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        java.lang.Class<?> wildcardClass66 = classAdapter65.getClass();
        java.lang.String str67 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass66);
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        java.lang.Class<?> wildcardClass70 = classAdapter69.getClass();
        java.lang.String str71 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass70);
        org.mockito.asm.ClassVisitor classVisitor72 = null;
        org.mockito.asm.ClassAdapter classAdapter73 = new org.mockito.asm.ClassAdapter(classVisitor72);
        java.lang.Class<?> wildcardClass74 = classAdapter73.getClass();
        java.lang.String str75 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass74);
        org.mockito.asm.ClassVisitor classVisitor76 = null;
        org.mockito.asm.ClassAdapter classAdapter77 = new org.mockito.asm.ClassAdapter(classVisitor76);
        java.lang.Class<?> wildcardClass78 = classAdapter77.getClass();
        boolean boolean79 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass78);
        java.lang.Class[] classArray80 = new java.lang.Class[] { wildcardClass66, wildcardClass70, wildcardClass74, wildcardClass78 };
        enhancer61.setInterfaces(classArray80);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter82 = null;
        enhancer61.setCallbackFilter(callbackFilter82);
        org.mockito.cglib.proxy.Enhancer enhancer84 = new org.mockito.cglib.proxy.Enhancer();
        enhancer84.setUseFactory(true);
        enhancer84.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback89 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray90 = new org.mockito.cglib.proxy.Callback[] { callback89 };
        enhancer84.setCallbacks(callbackArray90);
        enhancer61.setCallbacks(callbackArray90);
        enhancer30.setCallbacks(callbackArray90);
        enhancer9.setCallbacks(callbackArray90);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerCallbacks((java.lang.Class) wildcardClass3, callbackArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.proxy.Enhancer is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str4, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str6, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str7, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str15, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str23, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 116 + "'", int47 == 116);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str67, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str71, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str75, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(callbackArray90);
    }

    @Test
    public void test04145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04145");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        boolean boolean9 = generatorStrategy7.equals((java.lang.Object) label8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor11);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classAdapter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter24.getClassInfo();
        label8.info = classEmitter24;
        java.lang.Object obj28 = label8.info;
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer29.setCallback(callback32);
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer29.setCallback(callback34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer36.setCallback(callback39);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter41 = null;
        enhancer36.setCallbackFilter(callbackFilter41);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer36.setCallback(callback43);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer36.getNamingPolicy();
        enhancer29.setNamingPolicy(namingPolicy45);
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        java.lang.Class<?> wildcardClass49 = classAdapter48.getClass();
        enhancer29.setSuperclass((java.lang.Class) wildcardClass49);
        boolean boolean51 = enhancer29.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter52 = null;
        enhancer29.setCallbackFilter(callbackFilter52);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        java.lang.Class<?> wildcardClass59 = classAdapter58.getClass();
        java.lang.String str60 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass59);
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        java.lang.Class<?> wildcardClass63 = classAdapter62.getClass();
        java.lang.String str64 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass63);
        org.mockito.asm.ClassVisitor classVisitor65 = null;
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor65);
        java.lang.Class<?> wildcardClass67 = classAdapter66.getClass();
        java.lang.String str68 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass67);
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor69);
        java.lang.Class<?> wildcardClass71 = classAdapter70.getClass();
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        java.lang.Class[] classArray73 = new java.lang.Class[] { wildcardClass59, wildcardClass63, wildcardClass67, wildcardClass71 };
        enhancer54.setInterfaces(classArray73);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter75 = null;
        enhancer54.setCallbackFilter(callbackFilter75);
        org.mockito.cglib.proxy.Enhancer enhancer77 = new org.mockito.cglib.proxy.Enhancer();
        enhancer77.setUseFactory(true);
        enhancer77.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback82 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray83 = new org.mockito.cglib.proxy.Callback[] { callback82 };
        enhancer77.setCallbacks(callbackArray83);
        enhancer54.setCallbacks(callbackArray83);
        enhancer29.setCallbacks(callbackArray83);
        label8.info = callbackArray83;
        // The following exception was thrown during execution in test generation
        try {
            int int88 = label8.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str60, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str64, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str68, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(callbackArray83);
    }

    @Test
    public void test04146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04146");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        enhancer0.setUseCache(false);
        boolean boolean11 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer0.setCallback(callback12);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        boolean boolean22 = type19.equals((java.lang.Object) classVisitor20);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str24 = type23.getDescriptor();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        boolean boolean30 = type27.equals((java.lang.Object) classVisitor28);
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type18, type19, type23, type25, type26, type27 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray31);
        org.mockito.cglib.core.Signature signature33 = new org.mockito.cglib.core.Signature("L1057808593", type16, typeArray31);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        boolean boolean39 = type36.equals((java.lang.Object) classVisitor37);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.getDescriptor();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        boolean boolean47 = type44.equals((java.lang.Object) classVisitor45);
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type35, type36, type40, type42, type43, type44 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray48);
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray48);
        org.mockito.cglib.core.Local local51 = new org.mockito.cglib.core.Local((int) (byte) -1, type16);
        java.lang.Class<?> wildcardClass52 = type16.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[] { wildcardClass52 };
        enhancer0.setInterfaces(classArray53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class55 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "V" + "'", str24, "V");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(VZVDDZ)V" + "'", str32, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(VZVDDZ)V" + "'", str49, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(VZVDDZ)F" + "'", str50, "(VZVDDZ)F");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray53);
    }

    @Test
    public void test04147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04147");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        boolean boolean21 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer0.getStrategy();
        boolean boolean24 = generatorStrategy22.equals((java.lang.Object) "boolean");
        boolean boolean26 = generatorStrategy22.equals((java.lang.Object) "L1102201750");
        org.mockito.asm.MethodVisitor methodVisitor29 = null;
        org.mockito.asm.MethodAdapter methodAdapter30 = new org.mockito.asm.MethodAdapter(methodVisitor29);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter31 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter30);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter32 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter31);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter33 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter31);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter34 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter31);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter35 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter34);
        org.mockito.asm.MethodAdapter methodAdapter36 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter34);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter37 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter34);
        boolean boolean38 = generatorStrategy22.equals((java.lang.Object) localVariablesSorter34);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor42 = localVariablesSorter34.visitParameterAnnotation(38, "L909057140", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test04148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04148");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter(methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(135, "(VZVDDZ)B", (org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        java.lang.String str14 = label13.toString();
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        label13.info = label15;
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        java.lang.String str23 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass22);
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        java.lang.Class<?> wildcardClass26 = classAdapter25.getClass();
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        java.lang.Class<?> wildcardClass30 = classAdapter29.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray36 = new java.lang.Class[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass34 };
        enhancer17.setInterfaces(classArray36);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter38 = null;
        enhancer17.setCallbackFilter(callbackFilter38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setUseFactory(true);
        enhancer40.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback45 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray46 = new org.mockito.cglib.proxy.Callback[] { callback45 };
        enhancer40.setCallbacks(callbackArray46);
        enhancer17.setCallbacks(callbackArray46);
        java.lang.Class class49 = null;
        enhancer17.setSuperclass(class49);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy51 = enhancer17.getStrategy();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.Class<?> wildcardClass53 = type52.getClass();
        enhancer17.setSuperclass((java.lang.Class) wildcardClass53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.Class<?> wildcardClass56 = type55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        enhancer17.setSuperclass((java.lang.Class) wildcardClass56);
        java.lang.String str59 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass56);
        label13.info = wildcardClass56;
        java.lang.String str61 = label13.toString();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter11.visitLineNumber((int) (short) 10, label13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L842684106" + "'", str14, "L842684106");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str23, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str27, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str31, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertNotNull(callbackArray46);
        org.junit.Assert.assertNotNull(generatorStrategy51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str59, "Lorg/mockito/asm/Type;");
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L842684106" + "'", str61, "L842684106");
    }

    @Test
    public void test04149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04149");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        java.lang.Object obj17 = label16.info;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        int int19 = type18.getSort();
        label16.info = type18;
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer21.setCallback(callback24);
        enhancer21.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer21.getNamingPolicy();
        boolean boolean30 = namingPolicy28.equals((java.lang.Object) 5);
        label16.info = boolean30;
        java.lang.Object obj32 = label16.info;
        java.lang.Object obj33 = label16.info;
        org.mockito.asm.Label label34 = new org.mockito.asm.Label();
        java.lang.Object obj35 = label34.info;
        java.lang.String str36 = label34.toString();
        java.lang.Object obj37 = label34.info;
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        java.lang.String str39 = label38.toString();
        org.mockito.asm.Label label40 = new org.mockito.asm.Label();
        label38.info = label40;
        java.lang.String str42 = label38.toString();
        java.lang.String str43 = label38.toString();
        java.lang.String str44 = label38.toString();
        org.mockito.asm.Label label45 = new org.mockito.asm.Label();
        java.lang.String str46 = label45.toString();
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        label45.info = label47;
        java.lang.String str49 = label45.toString();
        java.lang.String str50 = label45.toString();
        label38.info = label45;
        org.mockito.cglib.core.Signature signature54 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        org.mockito.asm.Type[] typeArray55 = signature54.getArgumentTypes();
        org.mockito.asm.Type type56 = signature54.getReturnType();
        int int57 = type56.getSort();
        label45.info = type56;
        label34.info = label45;
        java.lang.String str60 = label34.toString();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter12.visitLocalVariable("L1248089390", "L39643044", "sun.misc.Launcher$AppClassLoader", label16, label34, 162);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 162");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertNull(obj35);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L403618794" + "'", str36, "L403618794");
        org.junit.Assert.assertNull(obj37);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "L200782055" + "'", str39, "L200782055");
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L200782055" + "'", str42, "L200782055");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L200782055" + "'", str43, "L200782055");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L200782055" + "'", str44, "L200782055");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L1459634097" + "'", str46, "L1459634097");
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L1459634097" + "'", str49, "L1459634097");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L1459634097" + "'", str50, "L1459634097");
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "L403618794" + "'", str60, "L403618794");
    }

    @Test
    public void test04150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04150");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor29);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classAdapter31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter44.getClassInfo();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer47.setCallback(callback52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer47.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer47.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor57);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        boolean boolean61 = namingPolicy55.equals((java.lang.Object) classAdapter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter59);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor66);
        classEmitter65.setTarget((org.mockito.asm.ClassVisitor) classAdapter68);
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo71 = classEmitter70.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter70.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        classEmitter65.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        org.mockito.cglib.core.ClassInfo classInfo75 = classEmitter72.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo77 = classEmitter76.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter76);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter76);
        classEmitter72.setTarget((org.mockito.asm.ClassVisitor) classEmitter79);
        org.mockito.cglib.core.ClassEmitter classEmitter81 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo82 = classEmitter81.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter81);
        classEmitter72.setTarget((org.mockito.asm.ClassVisitor) classEmitter81);
        org.mockito.cglib.core.ClassInfo classInfo85 = classEmitter81.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter86 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter81);
        org.mockito.asm.ClassAdapter classAdapter87 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter81);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classAdapter87);
        java.lang.String[] strArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            classEmitter44.visit(10, 0, "L1027358565", "Lsun/misc/Launcher$AppClassLoader;", "L308530638", strArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(classInfo71);
        org.junit.Assert.assertNull(classInfo75);
        org.junit.Assert.assertNull(classInfo77);
        org.junit.Assert.assertNull(classInfo82);
        org.junit.Assert.assertNull(classInfo85);
    }

    @Test
    public void test04151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04151");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor25);
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor25);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classAdapter27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter31);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo41 = classEmitter40.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassInfo classInfo48 = classEmitter45.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter49);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.cglib.core.ClassInfo classInfo52 = classEmitter18.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo59 = classEmitter58.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassInfo classInfo63 = classEmitter58.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassInfo classInfo65 = classEmitter58.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter58);
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classAdapter66);
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter68);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        int int74 = type73.getSort();
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        enhancer75.setUseFactory(true);
        enhancer75.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback80 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray81 = new org.mockito.cglib.proxy.Callback[] { callback80 };
        enhancer75.setCallbacks(callbackArray81);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter83 = null;
        enhancer75.setCallbackFilter(callbackFilter83);
        java.lang.Class<?> wildcardClass85 = enhancer75.getClass();
        boolean boolean86 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass85);
        boolean boolean87 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass85);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter18.declare_field(160, "L1141790908", type73, (java.lang.Object) boolean87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo21);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo41);
        org.junit.Assert.assertNull(classInfo48);
        org.junit.Assert.assertNull(classInfo52);
        org.junit.Assert.assertNull(classInfo54);
        org.junit.Assert.assertNull(classInfo59);
        org.junit.Assert.assertNull(classInfo63);
        org.junit.Assert.assertNull(classInfo65);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 4 + "'", int74 == 4);
        org.junit.Assert.assertNotNull(callbackArray81);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test04152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04152");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classAdapter12);
        boolean boolean14 = namingPolicy8.equals((java.lang.Object) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor17);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classAdapter19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter21.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter36.getClassInfo();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter15);
        // The following exception was thrown during execution in test generation
        try {
            classAdapter40.visitSource("L2047987864", "L1437246587");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo38);
    }

    @Test
    public void test04153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04153");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter7.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor17);
        classEmitter7.setTarget(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter(classVisitor17);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor23);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classAdapter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor40);
        classEmitter39.setTarget((org.mockito.asm.ClassVisitor) classAdapter42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo45 = classEmitter44.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter46);
        classEmitter39.setTarget((org.mockito.asm.ClassVisitor) classEmitter46);
        org.mockito.cglib.core.ClassInfo classInfo49 = classEmitter39.getClassInfo();
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        org.mockito.asm.ClassAdapter classAdapter56 = new org.mockito.asm.ClassAdapter(classVisitor54);
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classAdapter56);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor59 = null;
        org.mockito.asm.ClassAdapter classAdapter60 = new org.mockito.asm.ClassAdapter(classVisitor59);
        org.mockito.asm.ClassAdapter classAdapter61 = new org.mockito.asm.ClassAdapter(classVisitor59);
        classEmitter58.setTarget((org.mockito.asm.ClassVisitor) classAdapter61);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo64 = classEmitter63.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter63.setTarget((org.mockito.asm.ClassVisitor) classEmitter65);
        classEmitter58.setTarget((org.mockito.asm.ClassVisitor) classEmitter65);
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback72 = null;
        enhancer69.setCallback(callback72);
        org.mockito.cglib.proxy.Callback callback74 = null;
        enhancer69.setCallback(callback74);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer69.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer69.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor79 = null;
        org.mockito.asm.ClassAdapter classAdapter80 = new org.mockito.asm.ClassAdapter(classVisitor79);
        org.mockito.asm.ClassAdapter classAdapter81 = new org.mockito.asm.ClassAdapter(classVisitor79);
        classEmitter78.setTarget((org.mockito.asm.ClassVisitor) classAdapter81);
        boolean boolean83 = namingPolicy77.equals((java.lang.Object) classAdapter81);
        classEmitter58.setTarget((org.mockito.asm.ClassVisitor) classAdapter81);
        classEmitter39.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        classEmitter21.setTarget((org.mockito.asm.ClassVisitor) classEmitter39);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type87 = classEmitter39.getClassType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo45);
        org.junit.Assert.assertNull(classInfo49);
        org.junit.Assert.assertNull(classInfo64);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test04154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04154");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        boolean boolean21 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer0.setCallback(callback22);
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        enhancer28.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer28.setCallbacks(callbackArray34);
        boolean boolean36 = enhancer28.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy37 = enhancer28.getStrategy();
        enhancer0.setStrategy(generatorStrategy37);
        enhancer0.setAttemptLoad(false);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(generatorStrategy37);
    }

    @Test
    public void test04155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04155");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        enhancer7.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy14);
        java.lang.ClassLoader classLoader16 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = enhancer0.getNamingPolicy();
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(classLoader16);
        org.junit.Assert.assertNotNull(namingPolicy17);
    }

    @Test
    public void test04156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04156");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter(methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(119, "(VZVDDZ)F", (org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        java.lang.String str13 = label12.toString();
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        label12.info = label14;
        java.lang.String str16 = label12.toString();
        java.lang.String str17 = label12.toString();
        java.lang.String str18 = label12.toString();
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        java.lang.String str20 = label19.toString();
        org.mockito.asm.Label label21 = new org.mockito.asm.Label();
        label19.info = label21;
        java.lang.String str23 = label19.toString();
        java.lang.String str24 = label19.toString();
        label12.info = label19;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        boolean boolean30 = type27.equals((java.lang.Object) classVisitor28);
        int int32 = type27.getOpcode(116);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor36 = null;
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter(classVisitor36);
        boolean boolean38 = type35.equals((java.lang.Object) classVisitor36);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str40 = type39.getDescriptor();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        boolean boolean46 = type43.equals((java.lang.Object) classVisitor44);
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type34, type35, type39, type41, type42, type43 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray47);
        org.mockito.cglib.core.Signature signature49 = new org.mockito.cglib.core.Signature("V", type27, typeArray47);
        int int51 = type27.getOpcode((-1));
        int int53 = type27.getOpcode((int) 'a');
        label12.info = type27;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        boolean boolean59 = type56.equals((java.lang.Object) classVisitor57);
        int int61 = type56.getOpcode(116);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type64 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor65 = null;
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor65);
        boolean boolean67 = type64.equals((java.lang.Object) classVisitor65);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str69 = type68.getDescriptor();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type71 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type72 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor73);
        boolean boolean75 = type72.equals((java.lang.Object) classVisitor73);
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type63, type64, type68, type70, type71, type72 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray76);
        org.mockito.cglib.core.Signature signature78 = new org.mockito.cglib.core.Signature("V", type56, typeArray76);
        java.lang.String str79 = signature78.toString();
        java.lang.String str80 = signature78.getName();
        label12.info = str80;
        org.mockito.cglib.core.Signature signature84 = new org.mockito.cglib.core.Signature("org/mockito/asm/ClassAdapter", "L1933965693");
        org.mockito.asm.ClassVisitor classVisitor85 = null;
        org.mockito.asm.ClassAdapter classAdapter86 = new org.mockito.asm.ClassAdapter(classVisitor85);
        java.lang.Class<?> wildcardClass87 = classAdapter86.getClass();
        boolean boolean88 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass87);
        boolean boolean89 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass87);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass87);
        boolean boolean91 = signature84.equals((java.lang.Object) type90);
        label12.info = boolean91;
        java.lang.Object obj93 = label12.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitJumpInsn(164, label12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1840203980" + "'", str13, "L1840203980");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1840203980" + "'", str16, "L1840203980");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1840203980" + "'", str17, "L1840203980");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1840203980" + "'", str18, "L1840203980");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L266745543" + "'", str20, "L266745543");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L266745543" + "'", str23, "L266745543");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L266745543" + "'", str24, "L266745543");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 116 + "'", int32 == 116);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "V" + "'", str40, "V");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(VZVDDZ)V" + "'", str48, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 97 + "'", int53 == 97);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 116 + "'", int61 == 116);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "V" + "'", str69, "V");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(VZVDDZ)V" + "'", str77, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "V(VZVDDZ)Z" + "'", str79, "V(VZVDDZ)Z");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "V" + "'", str80, "V");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + false + "'", obj93, false);
    }

    @Test
    public void test04157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04157");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        boolean boolean9 = namingPolicy7.equals((java.lang.Object) (byte) 100);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor11);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classAdapter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        boolean boolean28 = namingPolicy7.equals((java.lang.Object) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type30 = classEmitter29.getClassType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test04158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04158");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter16.getClassInfo();
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter16.getClassInfo();
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setUseFactory(true);
        boolean boolean30 = enhancer27.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        enhancer27.setSuperclass((java.lang.Class) wildcardClass33);
        java.lang.String str36 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type46 = type45.getElementType();
        int int48 = type46.getOpcode(126);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter16.declare_field(1, "L910557088", type37, (java.lang.Object) 126);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo21);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str34, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str36, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 130 + "'", int48 == 130);
    }

    @Test
    public void test04159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04159");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter(methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(119, "(VZVDDZ)F", (org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        java.lang.String str14 = label13.toString();
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        label13.info = label15;
        java.lang.Object obj17 = label13.info;
        java.lang.Object obj18 = label13.info;
        java.lang.String str19 = label13.toString();
        java.lang.Object obj20 = label13.info;
        java.lang.String str21 = label13.toString();
        java.lang.Object obj22 = label13.info;
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        java.lang.Object obj24 = label23.info;
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        int int26 = type25.getSort();
        label23.info = type25;
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer28.setCallback(callback31);
        enhancer28.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer28.getNamingPolicy();
        boolean boolean37 = namingPolicy35.equals((java.lang.Object) 5);
        label23.info = boolean37;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitLocalVariable("L2071192222", "L843684297", "L1247785846", label13, label23, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 97");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L2102512182" + "'", str14, "L2102512182");
        org.junit.Assert.assertNotNull(obj17);
// flaky:         org.junit.Assert.assertEquals(obj17.toString(), "L221036052");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "L221036052");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "L221036052");
        org.junit.Assert.assertNotNull(obj18);
// flaky:         org.junit.Assert.assertEquals(obj18.toString(), "L221036052");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "L221036052");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "L221036052");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L2102512182" + "'", str19, "L2102512182");
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals(obj20.toString(), "L221036052");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "L221036052");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "L221036052");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L2102512182" + "'", str21, "L2102512182");
        org.junit.Assert.assertNotNull(obj22);
// flaky:         org.junit.Assert.assertEquals(obj22.toString(), "L221036052");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "L221036052");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "L221036052");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test04160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04160");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter6.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter6.getClassInfo();
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        java.lang.String str16 = label15.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        label15.info = label17;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local21 = new org.mockito.cglib.core.Local(0, type20);
        label15.info = 0;
        java.lang.String str23 = label15.toString();
        label15.info = "Z(VZVDDZ)Z";
        label15.info = 100.0d;
        org.mockito.asm.Label label28 = new org.mockito.asm.Label();
        java.lang.String str29 = label28.toString();
        org.mockito.asm.Label label30 = new org.mockito.asm.Label();
        label28.info = label30;
        java.lang.Object obj32 = label28.info;
        java.lang.String str33 = label28.toString();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer34.setCallback(callback37);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter39 = null;
        enhancer34.setCallbackFilter(callbackFilter39);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer34.setCallback(callback41);
        enhancer34.setUseFactory(true);
        enhancer34.setUseFactory(false);
        label28.info = enhancer34;
        label15.info = enhancer34;
        java.lang.Class<?> wildcardClass49 = enhancer34.getClass();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor50 = classEmitter6.visitField(36, "L417701397", "L526328128", "L1138201719", (java.lang.Object) wildcardClass49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo10);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L980347592" + "'", str16, "L980347592");
        org.junit.Assert.assertNotNull(type20);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L980347592" + "'", str23, "L980347592");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L2134382185" + "'", str29, "L2134382185");
        org.junit.Assert.assertNotNull(obj32);
// flaky:         org.junit.Assert.assertEquals(obj32.toString(), "L1149210135");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "L1149210135");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "L1149210135");
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L2134382185" + "'", str33, "L2134382185");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test04161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04161");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("", "L361914688");
        org.mockito.asm.MethodVisitor methodVisitor5 = null;
        org.mockito.asm.MethodAdapter methodAdapter6 = new org.mockito.asm.MethodAdapter(methodVisitor5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        boolean boolean9 = signature2.equals((java.lang.Object) localVariablesSorter7);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter10);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer15.setCallback(callback18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer15.setCallback(callback20);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer15.getStrategy();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        boolean boolean24 = generatorStrategy22.equals((java.lang.Object) label23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor26);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classAdapter28);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo31 = classEmitter30.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo37 = classEmitter36.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassInfo classInfo41 = classEmitter39.getClassInfo();
        label23.info = classEmitter39;
        java.lang.Object obj43 = label23.info;
        label23.info = "L2019720719";
        org.mockito.asm.Label label46 = new org.mockito.asm.Label();
        java.lang.String str47 = label46.toString();
        org.mockito.asm.Label label48 = new org.mockito.asm.Label();
        label46.info = label48;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type54 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor55 = null;
        org.mockito.asm.ClassAdapter classAdapter56 = new org.mockito.asm.ClassAdapter(classVisitor55);
        boolean boolean57 = type54.equals((java.lang.Object) classVisitor55);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str59 = type58.getDescriptor();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type62 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor63);
        boolean boolean65 = type62.equals((java.lang.Object) classVisitor63);
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type53, type54, type58, type60, type61, type62 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray66);
        org.mockito.cglib.core.Signature signature68 = new org.mockito.cglib.core.Signature("L1057808593", type51, typeArray66);
        label48.info = type51;
        java.lang.String str70 = label48.toString();
        java.lang.String str71 = label48.toString();
        org.mockito.asm.Label label72 = new org.mockito.asm.Label();
        java.lang.String str73 = label72.toString();
        org.mockito.asm.Label label74 = new org.mockito.asm.Label();
        label72.info = label74;
        java.lang.Object obj76 = label74.info;
        java.lang.String str77 = label74.toString();
        java.lang.String str78 = label74.toString();
        java.lang.String str79 = label74.toString();
        label48.info = label74;
        java.lang.Object obj81 = label48.info;
        org.mockito.cglib.core.ClassEmitter classEmitter82 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor83 = null;
        org.mockito.asm.ClassAdapter classAdapter84 = new org.mockito.asm.ClassAdapter(classVisitor83);
        org.mockito.asm.ClassAdapter classAdapter85 = new org.mockito.asm.ClassAdapter(classVisitor83);
        classEmitter82.setTarget((org.mockito.asm.ClassVisitor) classAdapter85);
        org.mockito.cglib.core.ClassEmitter classEmitter87 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter85);
        label48.info = classAdapter85;
        java.lang.Object obj89 = label48.info;
        java.lang.Object obj90 = label48.info;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter11.visitLocalVariable("L2101713541", "L831802684", "org/mockito/cglib/core/Local", label23, label48, 129);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 129");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(classInfo31);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertNull(classInfo37);
        org.junit.Assert.assertNull(classInfo41);
        org.junit.Assert.assertNotNull(obj43);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L2060456188" + "'", str47, "L2060456188");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "V" + "'", str59, "V");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(VZVDDZ)V" + "'", str67, "(VZVDDZ)V");
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L1950936538" + "'", str70, "L1950936538");
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "L1950936538" + "'", str71, "L1950936538");
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "L156135202" + "'", str73, "L156135202");
        org.junit.Assert.assertNull(obj76);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L1932457583" + "'", str77, "L1932457583");
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "L1932457583" + "'", str78, "L1932457583");
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "L1932457583" + "'", str79, "L1932457583");
        org.junit.Assert.assertNotNull(obj81);
// flaky:         org.junit.Assert.assertEquals(obj81.toString(), "L1932457583");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "L1932457583");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "L1932457583");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
    }

    @Test
    public void test04162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04162");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer10.setCallback(callback13);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer10.setCallback(callback15);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer17.setCallback(callback20);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter22 = null;
        enhancer17.setCallbackFilter(callbackFilter22);
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer17.setCallback(callback24);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer17.getNamingPolicy();
        enhancer10.setNamingPolicy(namingPolicy26);
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        java.lang.Class<?> wildcardClass30 = classAdapter29.getClass();
        enhancer10.setSuperclass((java.lang.Class) wildcardClass30);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass30);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer35.setCallback(callback38);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer35.setCallback(callback40);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer35.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer35.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer35.getNamingPolicy();
        java.lang.ClassLoader classLoader45 = enhancer35.getClassLoader();
        enhancer0.setClassLoader(classLoader45);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback51 = null;
        enhancer48.setCallback(callback51);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer48.setCallback(callback53);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback58 = null;
        enhancer55.setCallback(callback58);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter60 = null;
        enhancer55.setCallbackFilter(callbackFilter60);
        org.mockito.cglib.proxy.Callback callback62 = null;
        enhancer55.setCallback(callback62);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer55.getNamingPolicy();
        enhancer48.setNamingPolicy(namingPolicy64);
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        java.lang.Class<?> wildcardClass68 = classAdapter67.getClass();
        enhancer48.setSuperclass((java.lang.Class) wildcardClass68);
        boolean boolean70 = enhancer48.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter71 = null;
        enhancer48.setCallbackFilter(callbackFilter71);
        boolean boolean73 = enhancer48.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy74 = enhancer48.getStrategy();
        enhancer0.setStrategy(generatorStrategy74);
        org.mockito.cglib.core.NamingPolicy namingPolicy76 = enhancer0.getNamingPolicy();
        org.mockito.asm.MethodVisitor methodVisitor79 = null;
        org.mockito.asm.MethodAdapter methodAdapter80 = new org.mockito.asm.MethodAdapter(methodVisitor79);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter81 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter80);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter82 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter81);
        boolean boolean83 = namingPolicy76.equals((java.lang.Object) localVariablesSorter82);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter82.visitCode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(generatorStrategy47);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(generatorStrategy74);
        org.junit.Assert.assertNotNull(namingPolicy76);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test04163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04163");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        boolean boolean8 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy9 = enhancer0.getStrategy();
        org.mockito.asm.MethodVisitor methodVisitor12 = null;
        org.mockito.asm.MethodAdapter methodAdapter13 = new org.mockito.asm.MethodAdapter(methodVisitor12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.asm.MethodAdapter methodAdapter19 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter18);
        org.mockito.asm.MethodAdapter methodAdapter21 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.asm.MethodAdapter methodAdapter23 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        boolean boolean24 = generatorStrategy9.equals((java.lang.Object) methodAdapter23);
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter23.visitTypeInsn(160, "L1550855760");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(generatorStrategy9);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test04164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04164");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass25, wildcardClass29, wildcardClass33, wildcardClass37 };
        enhancer20.setInterfaces(classArray39);
        boolean boolean41 = enhancer20.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer20.getStrategy();
        enhancer0.setStrategy(generatorStrategy42);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer45.setCallback(callback46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer49.setCallback(callback52);
        org.mockito.cglib.proxy.Callback callback54 = null;
        enhancer49.setCallback(callback54);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy56 = enhancer49.getStrategy();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        boolean boolean60 = type57.equals((java.lang.Object) classVisitor58);
        int int62 = type57.getOpcode(116);
        boolean boolean63 = generatorStrategy56.equals((java.lang.Object) 116);
        enhancer48.setStrategy(generatorStrategy56);
        enhancer45.setStrategy(generatorStrategy56);
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        enhancer66.setUseFactory(true);
        enhancer66.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter71 = null;
        enhancer66.setCallbackFilter(callbackFilter71);
        java.lang.ClassLoader classLoader73 = enhancer66.getClassLoader();
        enhancer45.setClassLoader(classLoader73);
        enhancer45.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter77 = null;
        enhancer45.setCallbackFilter(callbackFilter77);
        enhancer45.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Enhancer enhancer81 = new org.mockito.cglib.proxy.Enhancer();
        enhancer81.setUseFactory(true);
        enhancer81.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback86 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray87 = new org.mockito.cglib.proxy.Callback[] { callback86 };
        enhancer81.setCallbacks(callbackArray87);
        enhancer45.setCallbacks(callbackArray87);
        enhancer0.setCallbacks(callbackArray87);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter91 = null;
        enhancer0.setCallbackFilter(callbackFilter91);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str26, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str34, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(generatorStrategy56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 116 + "'", int62 == 116);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(classLoader73);
        org.junit.Assert.assertNotNull(callbackArray87);
    }

    @Test
    public void test04165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04165");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        boolean boolean8 = enhancer0.getAttemptLoad();
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer17.setCallback(callback20);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer17.setCallback(callback22);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy24 = enhancer17.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer17.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer17.getNamingPolicy();
        java.lang.ClassLoader classLoader27 = enhancer17.getClassLoader();
        enhancer0.setClassLoader(classLoader27);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer31.setCallback(callback34);
        enhancer31.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer38.setCallback(callback41);
        enhancer38.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer38.getNamingPolicy();
        enhancer31.setNamingPolicy(namingPolicy45);
        enhancer31.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer31.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setUseFactory(true);
        enhancer50.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        java.lang.Class<?> wildcardClass60 = classAdapter59.getClass();
        java.lang.String str61 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass60);
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        java.lang.Class<?> wildcardClass64 = classAdapter63.getClass();
        java.lang.String str65 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass64);
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        java.lang.Class<?> wildcardClass68 = classAdapter67.getClass();
        java.lang.String str69 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass68);
        org.mockito.asm.ClassVisitor classVisitor70 = null;
        org.mockito.asm.ClassAdapter classAdapter71 = new org.mockito.asm.ClassAdapter(classVisitor70);
        java.lang.Class<?> wildcardClass72 = classAdapter71.getClass();
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass72);
        java.lang.Class[] classArray74 = new java.lang.Class[] { wildcardClass60, wildcardClass64, wildcardClass68, wildcardClass72 };
        enhancer55.setInterfaces(classArray74);
        enhancer50.setInterfaces(classArray74);
        org.mockito.asm.ClassVisitor classVisitor77 = null;
        org.mockito.asm.ClassAdapter classAdapter78 = new org.mockito.asm.ClassAdapter(classVisitor77);
        java.lang.Class<?> wildcardClass79 = classAdapter78.getClass();
        java.lang.String str80 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass79);
        java.lang.String str81 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass79);
        org.mockito.asm.ClassVisitor classVisitor82 = null;
        org.mockito.asm.ClassAdapter classAdapter83 = new org.mockito.asm.ClassAdapter(classVisitor82);
        java.lang.Class<?> wildcardClass84 = classAdapter83.getClass();
        boolean boolean85 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass84);
        boolean boolean86 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass84);
        java.lang.Class[] classArray87 = new java.lang.Class[] { wildcardClass79, wildcardClass84 };
        enhancer50.setInterfaces(classArray87);
        org.mockito.cglib.proxy.Callback callback89 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray90 = new org.mockito.cglib.proxy.Callback[] { callback89 };
        enhancer50.setCallbacks(callbackArray90);
        enhancer31.setCallbacks(callbackArray90);
        enhancer0.setCallbacks(callbackArray90);
        java.lang.ClassLoader classLoader94 = enhancer0.getClassLoader();
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(generatorStrategy24);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertNotNull(classLoader27);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str61, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str65, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str69, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str80, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str81, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(classArray87);
        org.junit.Assert.assertNotNull(callbackArray90);
        org.junit.Assert.assertNotNull(classLoader94);
    }

    @Test
    public void test04166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04166");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("L1948923726");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter(methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter10);
        boolean boolean12 = type1.equals((java.lang.Object) methodAdapter11);
        java.lang.Class<?> wildcardClass13 = type1.getClass();
        org.mockito.cglib.proxy.Callback callback14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass13, callback14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test04167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04167");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter12 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter13 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter12);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer16.setCallback(callback19);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer16.setCallback(callback21);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = enhancer16.getStrategy();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        boolean boolean25 = generatorStrategy23.equals((java.lang.Object) label24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor27);
        classEmitter26.setTarget((org.mockito.asm.ClassVisitor) classAdapter29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter33);
        classEmitter26.setTarget((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter37.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter40.getClassInfo();
        label24.info = classEmitter40;
        java.lang.String str44 = label24.toString();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer46.setCallback(callback49);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter51 = null;
        enhancer46.setCallbackFilter(callbackFilter51);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer46.setCallback(callback53);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer46.getNamingPolicy();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local58 = new org.mockito.cglib.core.Local(0, type57);
        int int59 = type57.getSort();
        java.lang.String str60 = type57.getClassName();
        java.lang.String str61 = type57.getClassName();
        boolean boolean62 = namingPolicy55.equals((java.lang.Object) type57);
        enhancer45.setNamingPolicy(namingPolicy55);
        label24.info = namingPolicy55;
        org.mockito.asm.Label[] labelArray65 = new org.mockito.asm.Label[] {};
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter13.visitTableSwitchInsn(100, 98, label24, labelArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo42);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L790833568" + "'", str44, "L790833568");
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "double" + "'", str60, "double");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "double" + "'", str61, "double");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(labelArray65);
    }

    @Test
    public void test04168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04168");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        enhancer0.setAttemptLoad(true);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test04169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04169");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer1.setCallback(callback4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer1.setCallbackFilter(callbackFilter6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer1.setCallback(callback8);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer1.getNamingPolicy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(0, type12);
        int int14 = type12.getSort();
        java.lang.String str15 = type12.getClassName();
        java.lang.String str16 = type12.getClassName();
        boolean boolean17 = namingPolicy10.equals((java.lang.Object) type12);
        enhancer0.setNamingPolicy(namingPolicy10);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer0.getNamingPolicy();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str21 = type20.getClassName();
        boolean boolean22 = namingPolicy19.equals((java.lang.Object) str21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer23.setCallback(callback26);
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer23.setCallback(callback28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer30.setCallback(callback33);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter35 = null;
        enhancer30.setCallbackFilter(callbackFilter35);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer30.setCallback(callback37);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer30.getNamingPolicy();
        enhancer23.setNamingPolicy(namingPolicy39);
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        java.lang.Class<?> wildcardClass43 = classAdapter42.getClass();
        enhancer23.setSuperclass((java.lang.Class) wildcardClass43);
        boolean boolean45 = namingPolicy19.equals((java.lang.Object) wildcardClass43);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        boolean boolean49 = enhancer46.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor50);
        java.lang.Class<?> wildcardClass52 = classAdapter51.getClass();
        java.lang.String str53 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass52);
        enhancer46.setSuperclass((java.lang.Class) wildcardClass52);
        java.lang.String str55 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass52);
        boolean boolean56 = namingPolicy19.equals((java.lang.Object) wildcardClass52);
        org.mockito.cglib.proxy.Callback callback57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass52, callback57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double" + "'", str15, "double");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double" + "'", str16, "double");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "double" + "'", str21, "double");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str53, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str55, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test04170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04170");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("LL439302169;");
        org.mockito.cglib.core.Local local4 = new org.mockito.cglib.core.Local((int) (byte) 100, type3);
        org.mockito.cglib.core.Local local5 = new org.mockito.cglib.core.Local(129, type3);
        org.mockito.asm.Type type6 = local5.getType();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int9 = type8.getSort();
        java.lang.String str10 = type8.getDescriptor();
        java.lang.String str11 = type8.getDescriptor();
        java.lang.String str12 = type8.getClassName();
        java.lang.String str13 = type8.getDescriptor();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.String str16 = type15.toString();
        int int18 = type15.getOpcode(1);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local22 = new org.mockito.cglib.core.Local(0, type21);
        int int23 = type21.getSort();
        java.lang.String str24 = type21.getClassName();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local28 = new org.mockito.cglib.core.Local(0, type27);
        org.mockito.cglib.core.Local local29 = new org.mockito.cglib.core.Local((int) (byte) 100, type27);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        boolean boolean37 = type34.equals((java.lang.Object) classVisitor35);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str39 = type38.getDescriptor();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        boolean boolean45 = type42.equals((java.lang.Object) classVisitor43);
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type33, type34, type38, type40, type41, type42 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray46);
        org.mockito.cglib.core.Signature signature48 = new org.mockito.cglib.core.Signature("L1057808593", type31, typeArray46);
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray46);
        org.mockito.cglib.core.Signature signature50 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type21, typeArray46);
        org.mockito.asm.Type type51 = signature50.getReturnType();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback55 = null;
        enhancer52.setCallback(callback55);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter57 = null;
        enhancer52.setCallbackFilter(callbackFilter57);
        org.mockito.cglib.proxy.Callback callback59 = null;
        enhancer52.setCallback(callback59);
        enhancer52.setInterceptDuringConstruction(true);
        boolean boolean63 = signature50.equals((java.lang.Object) true);
        org.mockito.asm.Type[] typeArray64 = signature50.getArgumentTypes();
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray64);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor71 = null;
        org.mockito.asm.ClassAdapter classAdapter72 = new org.mockito.asm.ClassAdapter(classVisitor71);
        boolean boolean73 = type70.equals((java.lang.Object) classVisitor71);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str75 = type74.getDescriptor();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type77 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type78 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor79 = null;
        org.mockito.asm.ClassAdapter classAdapter80 = new org.mockito.asm.ClassAdapter(classVisitor79);
        boolean boolean81 = type78.equals((java.lang.Object) classVisitor79);
        org.mockito.asm.Type[] typeArray82 = new org.mockito.asm.Type[] { type69, type70, type74, type76, type77, type78 };
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray82);
        org.mockito.cglib.core.Signature signature84 = new org.mockito.cglib.core.Signature("L1057808593", type67, typeArray82);
        java.lang.String str85 = signature84.toString();
        java.lang.String str86 = signature84.getDescriptor();
        java.lang.String str87 = signature84.getDescriptor();
        org.mockito.asm.Type[] typeArray88 = signature84.getArgumentTypes();
        org.mockito.cglib.core.Signature signature89 = new org.mockito.cglib.core.Signature("L437944646", type15, typeArray88);
        org.mockito.cglib.core.Signature signature90 = new org.mockito.cglib.core.Signature("L1042547211", type8, typeArray88);
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray88);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Z" + "'", str10, "Z");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Z" + "'", str11, "Z");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "boolean" + "'", str12, "boolean");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Z" + "'", str13, "Z");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "B" + "'", str16, "B");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8 + "'", int23 == 8);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "double" + "'", str24, "double");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "V" + "'", str39, "V");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(VZVDDZ)V" + "'", str47, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(VZVDDZ)D" + "'", str49, "(VZVDDZ)D");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(VZVDDZ)B" + "'", str65, "(VZVDDZ)B");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "V" + "'", str75, "V");
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(VZVDDZ)V" + "'", str83, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "L1057808593(VZVDDZ)F" + "'", str85, "L1057808593(VZVDDZ)F");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(VZVDDZ)F" + "'", str86, "(VZVDDZ)F");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(VZVDDZ)F" + "'", str87, "(VZVDDZ)F");
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(VZVDDZ)LL439302169;" + "'", str91, "(VZVDDZ)LL439302169;");
    }

    @Test
    public void test04171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04171");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.asm.ClassAdapter classAdapter5 = new org.mockito.asm.ClassAdapter(classVisitor4);
        boolean boolean6 = type3.equals((java.lang.Object) classVisitor4);
        int int8 = type3.getOpcode(116);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        boolean boolean14 = type11.equals((java.lang.Object) classVisitor12);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str16 = type15.getDescriptor();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        boolean boolean22 = type19.equals((java.lang.Object) classVisitor20);
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type10, type11, type15, type17, type18, type19 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray23);
        org.mockito.cglib.core.Signature signature25 = new org.mockito.cglib.core.Signature("V", type3, typeArray23);
        org.mockito.cglib.core.Signature signature26 = new org.mockito.cglib.core.Signature("hi!", type1, typeArray23);
        org.mockito.asm.Type[] typeArray27 = signature26.getArgumentTypes();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer28.setCallback(callback29);
        enhancer28.setInterceptDuringConstruction(true);
        boolean boolean33 = enhancer28.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer34.setCallback(callback37);
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer34.setCallback(callback39);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer34.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer34.getNamingPolicy();
        enhancer34.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer46.setCallback(callback49);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter51 = null;
        enhancer46.setCallbackFilter(callbackFilter51);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer46.setCallback(callback53);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer46.getNamingPolicy();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local58 = new org.mockito.cglib.core.Local(0, type57);
        int int59 = type57.getSort();
        java.lang.String str60 = type57.getClassName();
        java.lang.String str61 = type57.getClassName();
        boolean boolean62 = namingPolicy55.equals((java.lang.Object) type57);
        enhancer45.setNamingPolicy(namingPolicy55);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer45.getNamingPolicy();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str66 = type65.getClassName();
        boolean boolean67 = namingPolicy64.equals((java.lang.Object) str66);
        enhancer34.setNamingPolicy(namingPolicy64);
        java.lang.ClassLoader classLoader69 = enhancer34.getClassLoader();
        enhancer28.setClassLoader(classLoader69);
        boolean boolean71 = signature26.equals((java.lang.Object) enhancer28);
        java.lang.String str72 = signature26.toString();
        org.mockito.asm.Type[] typeArray73 = signature26.getArgumentTypes();
        java.lang.String str74 = signature26.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 116 + "'", int8 == 116);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "V" + "'", str16, "V");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VZVDDZ)V" + "'", str24, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "double" + "'", str60, "double");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "double" + "'", str61, "double");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "double" + "'", str66, "double");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!(VZVDDZ)J" + "'", str72, "hi!(VZVDDZ)J");
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VZVDDZ)J" + "'", str74, "(VZVDDZ)J");
    }

    @Test
    public void test04172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04172");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer11.setCallback(callback14);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer11.setCallback(callback16);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer11.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer11.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer11.getNamingPolicy();
        enhancer11.setSerialVersionUID((java.lang.Long) 10L);
        java.lang.Class[] classArray23 = null;
        enhancer11.setInterfaces(classArray23);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer11.getNamingPolicy();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter9.visitLdcInsn((java.lang.Object) enhancer11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy18);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertNotNull(namingPolicy25);
    }

    @Test
    public void test04173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04173");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass25, wildcardClass29, wildcardClass33, wildcardClass37 };
        enhancer20.setInterfaces(classArray39);
        boolean boolean41 = enhancer20.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer20.getStrategy();
        enhancer0.setStrategy(generatorStrategy42);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer45.setCallback(callback48);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer45.setCallback(callback50);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer45.getStrategy();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        boolean boolean56 = type53.equals((java.lang.Object) classVisitor54);
        int int58 = type53.getOpcode(116);
        boolean boolean59 = generatorStrategy52.equals((java.lang.Object) 116);
        enhancer0.setStrategy(generatorStrategy52);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor62);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classAdapter64);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor67);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classAdapter69);
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo72 = classEmitter71.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter71.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        boolean boolean78 = generatorStrategy52.equals((java.lang.Object) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo81 = classEmitter80.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter82 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter80.setTarget((org.mockito.asm.ClassVisitor) classEmitter82);
        classEmitter79.setTarget((org.mockito.asm.ClassVisitor) classEmitter80);
        org.mockito.asm.ClassAdapter classAdapter85 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter80);
        java.lang.String[] strArray93 = new java.lang.String[] { "L1170048049", "L2042109555", "L1545901304" };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor94 = classEmitter80.visitMethod(14, "L1330405919", "L140568008", "L949606860", strArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@24ec70ba");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str26, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str34, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 116 + "'", int58 == 116);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(classInfo72);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(classInfo81);
        org.junit.Assert.assertNotNull(strArray93);
    }

    @Test
    public void test04174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04174");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.ClassLoader classLoader7 = enhancer0.getClassLoader();
        enhancer0.setUseCache(false);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer13.setCallback(callback16);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter18 = null;
        enhancer13.setCallbackFilter(callbackFilter18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer13.setCallback(callback20);
        enhancer13.setAttemptLoad(true);
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        java.lang.Class<?> wildcardClass26 = classAdapter25.getClass();
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        enhancer13.setSuperclass((java.lang.Class) wildcardClass26);
        java.lang.ClassLoader classLoader29 = enhancer13.getClassLoader();
        boolean boolean30 = namingPolicy12.equals((java.lang.Object) classLoader29);
        org.mockito.asm.MethodVisitor methodVisitor33 = null;
        org.mockito.asm.MethodAdapter methodAdapter34 = new org.mockito.asm.MethodAdapter(methodVisitor33);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter35 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter34);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter36 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter35);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter37 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter35);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter38 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter35);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter39 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter38);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter40 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter39);
        boolean boolean41 = namingPolicy12.equals((java.lang.Object) localVariablesSorter40);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter42 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter40);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter40.visitCode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str27, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test04175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04175");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor7);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classAdapter9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter11.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo19 = classEmitter18.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor23);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classAdapter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter38.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter21.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter43);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer47.setCallback(callback52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer47.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer47.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor57);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        boolean boolean61 = namingPolicy55.equals((java.lang.Object) classAdapter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter59);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor64);
        classEmitter63.setTarget((org.mockito.asm.ClassVisitor) classAdapter66);
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo69 = classEmitter68.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter68.setTarget((org.mockito.asm.ClassVisitor) classEmitter70);
        classEmitter63.setTarget((org.mockito.asm.ClassVisitor) classEmitter70);
        org.mockito.cglib.core.ClassInfo classInfo73 = classEmitter70.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter74 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo75 = classEmitter74.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter74);
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter74);
        classEmitter70.setTarget((org.mockito.asm.ClassVisitor) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo80 = classEmitter79.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter81 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter79);
        classEmitter70.setTarget((org.mockito.asm.ClassVisitor) classEmitter79);
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter79);
        org.mockito.asm.ClassAdapter classAdapter84 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter83);
        org.mockito.cglib.core.ClassInfo classInfo85 = classEmitter83.getClassInfo();
        classEmitter62.setTarget((org.mockito.asm.ClassVisitor) classEmitter83);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassInfo classInfo88 = classEmitter62.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter89 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo90 = classEmitter89.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter91 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter89);
        org.mockito.cglib.core.ClassEmitter classEmitter92 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter89);
        org.mockito.cglib.core.ClassEmitter classEmitter93 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter89);
        classEmitter62.setTarget((org.mockito.asm.ClassVisitor) classEmitter89);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter89.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo4);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo19);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(classInfo69);
        org.junit.Assert.assertNull(classInfo73);
        org.junit.Assert.assertNull(classInfo75);
        org.junit.Assert.assertNull(classInfo80);
        org.junit.Assert.assertNull(classInfo85);
        org.junit.Assert.assertNull(classInfo88);
        org.junit.Assert.assertNull(classInfo90);
    }

    @Test
    public void test04176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04176");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        org.mockito.asm.ClassAdapter classAdapter10 = new org.mockito.asm.ClassAdapter(classVisitor8);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classAdapter10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor13);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classAdapter15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer23.setCallback(callback26);
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer23.setCallback(callback28);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer23.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer23.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor33);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        boolean boolean37 = namingPolicy31.equals((java.lang.Object) classAdapter35);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor45 = classEmitter12.visitField((int) (short) 1, "L1957562241", "LL1881114059;", "L1186723491", (java.lang.Object) "L831846603");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNotNull(generatorStrategy30);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test04177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04177");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        boolean boolean9 = namingPolicy7.equals((java.lang.Object) (byte) 100);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor11);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classAdapter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        boolean boolean28 = namingPolicy7.equals((java.lang.Object) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        classEmitter34.setTarget(classVisitor35);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor39);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classAdapter41);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor44);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classAdapter46);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo49 = classEmitter48.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback57 = null;
        enhancer54.setCallback(callback57);
        org.mockito.cglib.proxy.Callback callback59 = null;
        enhancer54.setCallback(callback59);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy61 = enhancer54.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = enhancer54.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor64);
        classEmitter63.setTarget((org.mockito.asm.ClassVisitor) classAdapter66);
        boolean boolean68 = namingPolicy62.equals((java.lang.Object) classAdapter66);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classAdapter66);
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classAdapter66);
        java.lang.String[] strArray78 = new java.lang.String[] { "L1113040247", "L495910856", "L1807869393" };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor79 = classAdapter66.visitMethod(100, "L1490488630", "L30508524", "L283735037", strArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo49);
        org.junit.Assert.assertNotNull(generatorStrategy61);
        org.junit.Assert.assertNotNull(namingPolicy62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strArray78);
    }

    @Test
    public void test04178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04178");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.Label label2 = new org.mockito.asm.Label();
        label0.info = label2;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor9 = null;
        org.mockito.asm.ClassAdapter classAdapter10 = new org.mockito.asm.ClassAdapter(classVisitor9);
        boolean boolean11 = type8.equals((java.lang.Object) classVisitor9);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str13 = type12.getDescriptor();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        boolean boolean19 = type16.equals((java.lang.Object) classVisitor17);
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type7, type8, type12, type14, type15, type16 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray20);
        org.mockito.cglib.core.Signature signature22 = new org.mockito.cglib.core.Signature("L1057808593", type5, typeArray20);
        label2.info = type5;
        java.lang.String str24 = label2.toString();
        java.lang.String str25 = label2.toString();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer26.setCallback(callback29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setUseFactory(true);
        enhancer31.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback36 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray37 = new org.mockito.cglib.proxy.Callback[] { callback36 };
        enhancer31.setCallbacks(callbackArray37);
        enhancer26.setCallbacks(callbackArray37);
        java.lang.ClassLoader classLoader40 = enhancer26.getClassLoader();
        label2.info = classLoader40;
        java.lang.String str42 = label2.toString();
        java.lang.Object obj43 = label2.info;
        java.lang.String str44 = label2.toString();
        java.lang.String str45 = label2.toString();
        java.lang.String str46 = label2.toString();
        java.lang.String str47 = label2.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int48 = label2.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1686311682" + "'", str1, "L1686311682");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "V" + "'", str13, "V");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(VZVDDZ)V" + "'", str21, "(VZVDDZ)V");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1734803085" + "'", str24, "L1734803085");
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1734803085" + "'", str25, "L1734803085");
        org.junit.Assert.assertNotNull(callbackArray37);
        org.junit.Assert.assertNotNull(classLoader40);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L1734803085" + "'", str42, "L1734803085");
        org.junit.Assert.assertNotNull(obj43);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L1734803085" + "'", str44, "L1734803085");
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "L1734803085" + "'", str45, "L1734803085");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L1734803085" + "'", str46, "L1734803085");
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L1734803085" + "'", str47, "L1734803085");
    }

    @Test
    public void test04179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04179");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter(classVisitor6);
        boolean boolean8 = type5.equals((java.lang.Object) classVisitor6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str10 = type9.getDescriptor();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor14);
        boolean boolean16 = type13.equals((java.lang.Object) classVisitor14);
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type4, type5, type9, type11, type12, type13 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray17);
        org.mockito.cglib.core.Signature signature19 = new org.mockito.cglib.core.Signature("L1057808593", type2, typeArray17);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        boolean boolean25 = type22.equals((java.lang.Object) classVisitor23);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str27 = type26.getDescriptor();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        boolean boolean33 = type30.equals((java.lang.Object) classVisitor31);
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type21, type22, type26, type28, type29, type30 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray34);
        org.mockito.cglib.core.Local local37 = new org.mockito.cglib.core.Local((int) (byte) -1, type2);
        java.lang.Class<?> wildcardClass38 = type2.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        java.lang.String str40 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        org.mockito.cglib.proxy.Callback callback42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass38, callback42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "V" + "'", str10, "V");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(VZVDDZ)V" + "'", str18, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "V" + "'", str27, "V");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(VZVDDZ)V" + "'", str35, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(VZVDDZ)F" + "'", str36, "(VZVDDZ)F");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org/mockito/asm/Type" + "'", str40, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test04180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04180");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        java.lang.Class<?> wildcardClass10 = classAdapter9.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass10, wildcardClass14, wildcardClass18, wildcardClass22 };
        enhancer5.setInterfaces(classArray24);
        enhancer0.setInterfaces(classArray24);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass29, wildcardClass34 };
        enhancer0.setInterfaces(classArray37);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer0.getStrategy();
        enhancer0.setUseCache(true);
        java.lang.Class[] classArray44 = new java.lang.Class[] {};
        enhancer0.setInterfaces(classArray44);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer0.getStrategy();
        org.mockito.cglib.core.Signature signature51 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        org.mockito.asm.Type[] typeArray52 = signature51.getArgumentTypes();
        java.lang.String str53 = signature51.getDescriptor();
        java.lang.String str54 = signature51.toString();
        java.lang.Object obj55 = null;
        boolean boolean56 = signature51.equals(obj55);
        boolean boolean57 = generatorStrategy48.equals((java.lang.Object) signature51);
        org.mockito.asm.Type[] typeArray58 = signature51.getArgumentTypes();
        java.lang.String str59 = signature51.getName();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str11, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str15, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str31, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(VZVDDZ)Z" + "'", str53, "(VZVDDZ)Z");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Z(VZVDDZ)Z" + "'", str54, "Z(VZVDDZ)Z");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Z" + "'", str59, "Z");
    }

    @Test
    public void test04181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04181");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        boolean boolean5 = type2.equals((java.lang.Object) classVisitor3);
        int int7 = type2.getOpcode(116);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        boolean boolean13 = type10.equals((java.lang.Object) classVisitor11);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.getDescriptor();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        boolean boolean21 = type18.equals((java.lang.Object) classVisitor19);
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type9, type10, type14, type16, type17, type18 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray22);
        org.mockito.cglib.core.Signature signature24 = new org.mockito.cglib.core.Signature("V", type2, typeArray22);
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray22);
        java.lang.String str26 = type0.toString();
        java.lang.String str27 = type0.getClassName();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local31 = new org.mockito.cglib.core.Local(0, type30);
        int int32 = type30.getSort();
        java.lang.String str33 = type30.getClassName();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local37 = new org.mockito.cglib.core.Local(0, type36);
        org.mockito.cglib.core.Local local38 = new org.mockito.cglib.core.Local((int) (byte) 100, type36);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        boolean boolean46 = type43.equals((java.lang.Object) classVisitor44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str48 = type47.getDescriptor();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        boolean boolean54 = type51.equals((java.lang.Object) classVisitor52);
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type42, type43, type47, type49, type50, type51 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray55);
        org.mockito.cglib.core.Signature signature57 = new org.mockito.cglib.core.Signature("L1057808593", type40, typeArray55);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray55);
        org.mockito.cglib.core.Signature signature59 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type30, typeArray55);
        org.mockito.asm.Type[] typeArray60 = signature59.getArgumentTypes();
        java.lang.String str61 = signature59.toString();
        java.lang.String str62 = signature59.getName();
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        enhancer63.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback66 = null;
        enhancer63.setCallback(callback66);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter68 = null;
        enhancer63.setCallbackFilter(callbackFilter68);
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback73 = null;
        enhancer70.setCallback(callback73);
        enhancer70.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass77 = enhancer70.getClass();
        java.lang.String str78 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass77);
        java.lang.String str79 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass77);
        enhancer63.setSuperclass((java.lang.Class) wildcardClass77);
        boolean boolean81 = signature59.equals((java.lang.Object) enhancer63);
        org.mockito.asm.Type[] typeArray82 = signature59.getArgumentTypes();
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray82);
        int int84 = type0.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 116 + "'", int7 == 116);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VZVDDZ)V" + "'", str23, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(VZVDDZ)B" + "'", str25, "(VZVDDZ)B");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "B" + "'", str26, "B");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "byte" + "'", str27, "byte");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "double" + "'", str33, "double");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "V" + "'", str48, "V");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(VZVDDZ)V" + "'", str56, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(VZVDDZ)D" + "'", str58, "(VZVDDZ)D");
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Lorg/mockito/asm/ClassAdapter;(VZVDDZ)D" + "'", str61, "Lorg/mockito/asm/ClassAdapter;(VZVDDZ)D");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str62, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str78, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str79, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(VZVDDZ)B" + "'", str83, "(VZVDDZ)B");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
    }

    @Test
    public void test04182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04182");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.ClassLoader classLoader7 = enhancer0.getClassLoader();
        enhancer0.setUseCache(false);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer13.setCallback(callback16);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter18 = null;
        enhancer13.setCallbackFilter(callbackFilter18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer13.setCallback(callback20);
        enhancer13.setAttemptLoad(true);
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        java.lang.Class<?> wildcardClass26 = classAdapter25.getClass();
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        enhancer13.setSuperclass((java.lang.Class) wildcardClass26);
        java.lang.ClassLoader classLoader29 = enhancer13.getClassLoader();
        boolean boolean30 = namingPolicy12.equals((java.lang.Object) classLoader29);
        org.mockito.asm.MethodVisitor methodVisitor33 = null;
        org.mockito.asm.MethodAdapter methodAdapter34 = new org.mockito.asm.MethodAdapter(methodVisitor33);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter35 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter34);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter36 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter35);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter37 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter35);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter38 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter35);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter39 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter38);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter40 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter39);
        boolean boolean41 = namingPolicy12.equals((java.lang.Object) localVariablesSorter40);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter42 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter40);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter42.visitMaxs(56, 16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str27, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test04183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04183");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.Label label10 = new org.mockito.asm.Label();
        java.lang.String str11 = label10.toString();
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        label10.info = label12;
        java.lang.Object obj14 = label12.info;
        java.lang.String str15 = label12.toString();
        java.lang.String str16 = label12.toString();
        org.mockito.cglib.core.Signature signature19 = new org.mockito.cglib.core.Signature("", "V");
        java.lang.String str20 = signature19.getDescriptor();
        java.lang.String str21 = signature19.getDescriptor();
        label12.info = str21;
        java.lang.String str23 = label12.toString();
        java.lang.Object obj24 = label12.info;
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer26.setCallback(callback29);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer26.setCallback(callback31);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy33 = enhancer26.getStrategy();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        boolean boolean37 = type34.equals((java.lang.Object) classVisitor35);
        int int39 = type34.getOpcode(116);
        boolean boolean40 = generatorStrategy33.equals((java.lang.Object) 116);
        enhancer25.setStrategy(generatorStrategy33);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local45 = new org.mockito.cglib.core.Local(0, type44);
        int int46 = type44.getSort();
        java.lang.String str47 = type44.getClassName();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local51 = new org.mockito.cglib.core.Local(0, type50);
        org.mockito.cglib.core.Local local52 = new org.mockito.cglib.core.Local((int) (byte) 100, type50);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        boolean boolean60 = type57.equals((java.lang.Object) classVisitor58);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str62 = type61.getDescriptor();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type64 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        boolean boolean68 = type65.equals((java.lang.Object) classVisitor66);
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type56, type57, type61, type63, type64, type65 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray69);
        org.mockito.cglib.core.Signature signature71 = new org.mockito.cglib.core.Signature("L1057808593", type54, typeArray69);
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray69);
        org.mockito.cglib.core.Signature signature73 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type44, typeArray69);
        boolean boolean74 = generatorStrategy33.equals((java.lang.Object) signature73);
        java.lang.String str75 = signature73.toString();
        label12.info = str75;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter8.visitLineNumber(14, label12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L219528563" + "'", str11, "L219528563");
        org.junit.Assert.assertNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L1672491634" + "'", str15, "L1672491634");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1672491634" + "'", str16, "L1672491634");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "V" + "'", str20, "V");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "V" + "'", str21, "V");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1672491634" + "'", str23, "L1672491634");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "V" + "'", obj24, "V");
        org.junit.Assert.assertNotNull(generatorStrategy33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 116 + "'", int39 == 116);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 8 + "'", int46 == 8);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "double" + "'", str47, "double");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "V" + "'", str62, "V");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(VZVDDZ)V" + "'", str70, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VZVDDZ)D" + "'", str72, "(VZVDDZ)D");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Lorg/mockito/asm/ClassAdapter;(VZVDDZ)D" + "'", str75, "Lorg/mockito/asm/ClassAdapter;(VZVDDZ)D");
    }

    @Test
    public void test04184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04184");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        boolean boolean14 = type11.equals((java.lang.Object) classVisitor12);
        int int16 = type11.getOpcode(116);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        boolean boolean22 = type19.equals((java.lang.Object) classVisitor20);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str24 = type23.getDescriptor();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        boolean boolean30 = type27.equals((java.lang.Object) classVisitor28);
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type18, type19, type23, type25, type26, type27 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray31);
        org.mockito.cglib.core.Signature signature33 = new org.mockito.cglib.core.Signature("V", type11, typeArray31);
        org.mockito.cglib.core.Local local34 = new org.mockito.cglib.core.Local(100, type11);
        int int35 = local34.getIndex();
        int int36 = local34.getIndex();
        org.mockito.asm.Type type37 = local34.getType();
        org.mockito.asm.Type type38 = local34.getType();
        org.mockito.asm.Type type39 = local34.getType();
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        java.lang.Class<?> wildcardClass42 = classAdapter41.getClass();
        java.lang.String str43 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass42);
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        java.lang.String str46 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass42);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        java.lang.String str48 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass42);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        boolean boolean50 = type39.equals((java.lang.Object) type49);
        java.lang.String str51 = type49.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor52 = classAdapter4.visitField(101, "", "L516823597", "L1538238149", (java.lang.Object) str51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 116 + "'", int16 == 116);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "V" + "'", str24, "V");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(VZVDDZ)V" + "'", str32, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str43, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str46, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str48, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str51, "Lorg/mockito/asm/ClassAdapter;");
    }

    @Test
    public void test04185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04185");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter(classVisitor6);
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor6);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classAdapter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.Signature signature21 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        boolean boolean23 = signature21.equals((java.lang.Object) "(VZVDDZ)B");
        org.mockito.asm.Type type24 = signature21.getReturnType();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getObjectType("L1089991743");
        int int27 = type26.getSize();
        boolean boolean28 = signature21.equals((java.lang.Object) int27);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local32 = new org.mockito.cglib.core.Local(0, type31);
        int int33 = type31.getSort();
        java.lang.String str34 = type31.getClassName();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local38 = new org.mockito.cglib.core.Local(0, type37);
        org.mockito.cglib.core.Local local39 = new org.mockito.cglib.core.Local((int) (byte) 100, type37);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        boolean boolean47 = type44.equals((java.lang.Object) classVisitor45);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str49 = type48.getDescriptor();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.asm.ClassAdapter classAdapter54 = new org.mockito.asm.ClassAdapter(classVisitor53);
        boolean boolean55 = type52.equals((java.lang.Object) classVisitor53);
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type43, type44, type48, type50, type51, type52 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray56);
        org.mockito.cglib.core.Signature signature58 = new org.mockito.cglib.core.Signature("L1057808593", type41, typeArray56);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray56);
        org.mockito.cglib.core.Signature signature60 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type31, typeArray56);
        org.mockito.asm.Type type61 = signature60.getReturnType();
        org.mockito.cglib.proxy.Enhancer enhancer62 = new org.mockito.cglib.proxy.Enhancer();
        enhancer62.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback65 = null;
        enhancer62.setCallback(callback65);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter67 = null;
        enhancer62.setCallbackFilter(callbackFilter67);
        org.mockito.cglib.proxy.Callback callback69 = null;
        enhancer62.setCallback(callback69);
        enhancer62.setInterceptDuringConstruction(true);
        boolean boolean73 = signature60.equals((java.lang.Object) true);
        org.mockito.asm.Type[] typeArray74 = signature60.getArgumentTypes();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter75 = classEmitter5.begin_method(134, signature21, typeArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@7795c454");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8 + "'", int33 == 8);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "double" + "'", str34, "double");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "V" + "'", str49, "V");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(VZVDDZ)V" + "'", str57, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VZVDDZ)D" + "'", str59, "(VZVDDZ)D");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(typeArray74);
    }

    @Test
    public void test04186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04186");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter11 = null;
        enhancer0.setCallbackFilter(callbackFilter11);
        boolean boolean13 = enhancer0.getAttemptLoad();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class14 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test04187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04187");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor7);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classAdapter9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter11.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter13.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        java.lang.String str23 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass22);
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass22);
        int int26 = type25.getDimensions();
        int int27 = type25.getSize();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type[] typeArray31 = org.mockito.asm.Type.getArgumentTypes("(VZVDDZ)V");
        org.mockito.cglib.core.Signature signature32 = new org.mockito.cglib.core.Signature("L1858106748", type29, typeArray31);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local37 = new org.mockito.cglib.core.Local(0, type36);
        int int38 = type36.getSort();
        java.lang.String str39 = type36.getClassName();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local43 = new org.mockito.cglib.core.Local(0, type42);
        org.mockito.cglib.core.Local local44 = new org.mockito.cglib.core.Local((int) (byte) 100, type42);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor50);
        boolean boolean52 = type49.equals((java.lang.Object) classVisitor50);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str54 = type53.getDescriptor();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        boolean boolean60 = type57.equals((java.lang.Object) classVisitor58);
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type48, type49, type53, type55, type56, type57 };
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray61);
        org.mockito.cglib.core.Signature signature63 = new org.mockito.cglib.core.Signature("L1057808593", type46, typeArray61);
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray61);
        org.mockito.cglib.core.Signature signature65 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type36, typeArray61);
        org.mockito.asm.Type[] typeArray66 = signature65.getArgumentTypes();
        org.mockito.asm.Type type67 = signature65.getReturnType();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor69);
        boolean boolean71 = type68.equals((java.lang.Object) classVisitor69);
        java.lang.String str72 = type68.getDescriptor();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type75 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type76 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type77 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor78 = null;
        org.mockito.asm.ClassAdapter classAdapter79 = new org.mockito.asm.ClassAdapter(classVisitor78);
        boolean boolean80 = type77.equals((java.lang.Object) classVisitor78);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str82 = type81.getDescriptor();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type84 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type85 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor86 = null;
        org.mockito.asm.ClassAdapter classAdapter87 = new org.mockito.asm.ClassAdapter(classVisitor86);
        boolean boolean88 = type85.equals((java.lang.Object) classVisitor86);
        org.mockito.asm.Type[] typeArray89 = new org.mockito.asm.Type[] { type76, type77, type81, type83, type84, type85 };
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type75, typeArray89);
        org.mockito.cglib.core.Signature signature91 = new org.mockito.cglib.core.Signature("L1057808593", type74, typeArray89);
        java.lang.String str92 = signature91.toString();
        org.mockito.asm.Type[] typeArray93 = signature91.getArgumentTypes();
        java.lang.String str94 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray93);
        org.mockito.cglib.core.Signature signature95 = new org.mockito.cglib.core.Signature("L1971628708", type67, typeArray93);
        java.lang.String str96 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray93);
        java.lang.String str97 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray93);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter13.declare_field(128, "L671090345", type25, (java.lang.Object) "L990017331");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo4);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str23, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "double" + "'", str39, "double");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "V" + "'", str54, "V");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(VZVDDZ)V" + "'", str62, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(VZVDDZ)D" + "'", str64, "(VZVDDZ)D");
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Z" + "'", str72, "Z");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "V" + "'", str82, "V");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(VZVDDZ)V" + "'", str90, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "L1057808593(VZVDDZ)F" + "'", str92, "L1057808593(VZVDDZ)F");
        org.junit.Assert.assertNotNull(typeArray93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(VZVDDZ)Z" + "'", str94, "(VZVDDZ)Z");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "(VZVDDZ)B" + "'", str96, "(VZVDDZ)B");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;" + "'", str97, "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;");
    }

    @Test
    public void test04188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04188");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter(methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(158, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        java.lang.String str13 = label12.toString();
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        label12.info = label14;
        java.lang.Object obj16 = label14.info;
        java.lang.String str17 = label14.toString();
        java.lang.Object obj18 = label14.info;
        label14.info = "[Ljava/lang/Class;";
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.asm.ClassAdapter classAdapter22 = new org.mockito.asm.ClassAdapter(classVisitor21);
        java.lang.Class<?> wildcardClass23 = classAdapter22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass23);
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass23);
        label14.info = str26;
        java.lang.Object obj28 = label14.info;
        java.lang.Object obj29 = label14.info;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter10.visitJumpInsn(153, label14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L1901915361" + "'", str13, "L1901915361");
        org.junit.Assert.assertNull(obj16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1959888663" + "'", str17, "L1959888663");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str25, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str26, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", obj28, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", obj29, "org/mockito/asm/ClassAdapter");
    }

    @Test
    public void test04189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04189");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classAdapter12);
        boolean boolean14 = namingPolicy8.equals((java.lang.Object) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter12);
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor19);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classAdapter21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter25.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter38.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor43);
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classAdapter45);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo48 = classEmitter47.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter47.setTarget((org.mockito.asm.ClassVisitor) classEmitter49);
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.cglib.core.ClassInfo classInfo52 = classEmitter49.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter53);
        classEmitter49.setTarget((org.mockito.asm.ClassVisitor) classEmitter56);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo59 = classEmitter58.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        classEmitter49.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter62);
        classEmitter41.setTarget((org.mockito.asm.ClassVisitor) classEmitter63);
        org.mockito.cglib.core.ClassInfo classInfo65 = classEmitter63.getClassInfo();
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter63);
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.asm.Label label68 = new org.mockito.asm.Label();
        java.lang.String str69 = label68.toString();
        org.mockito.asm.Label label70 = new org.mockito.asm.Label();
        label68.info = label70;
        java.lang.String str72 = label68.toString();
        java.lang.String str73 = label68.toString();
        java.lang.String str74 = label68.toString();
        org.mockito.asm.Label label75 = new org.mockito.asm.Label();
        java.lang.String str76 = label75.toString();
        org.mockito.asm.Label label77 = new org.mockito.asm.Label();
        label75.info = label77;
        java.lang.String str79 = label75.toString();
        java.lang.String str80 = label75.toString();
        label68.info = label75;
        java.lang.String str82 = label68.toString();
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo84 = classEmitter83.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter85 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter83.setTarget((org.mockito.asm.ClassVisitor) classEmitter85);
        org.mockito.cglib.core.ClassInfo classInfo87 = classEmitter83.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter88 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter83);
        label68.info = classEmitter88;
        classEmitter67.setTarget((org.mockito.asm.ClassVisitor) classEmitter88);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter67);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter17.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNull(classInfo48);
        org.junit.Assert.assertNull(classInfo52);
        org.junit.Assert.assertNull(classInfo54);
        org.junit.Assert.assertNull(classInfo59);
        org.junit.Assert.assertNull(classInfo65);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L38613482" + "'", str69, "L38613482");
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "L38613482" + "'", str72, "L38613482");
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "L38613482" + "'", str73, "L38613482");
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L38613482" + "'", str74, "L38613482");
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "L688083633" + "'", str76, "L688083633");
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "L688083633" + "'", str79, "L688083633");
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L688083633" + "'", str80, "L688083633");
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "L38613482" + "'", str82, "L38613482");
        org.junit.Assert.assertNull(classInfo84);
        org.junit.Assert.assertNull(classInfo87);
    }

    @Test
    public void test04190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04190");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter32 = null;
        enhancer0.setCallbackFilter(callbackFilter32);
        boolean boolean34 = enhancer0.getAttemptLoad();
        java.lang.Class[] classArray35 = null;
        enhancer0.setInterfaces(classArray35);
        boolean boolean37 = enhancer0.getAttemptLoad();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        boolean boolean46 = type43.equals((java.lang.Object) classVisitor44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str48 = type47.getDescriptor();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        boolean boolean54 = type51.equals((java.lang.Object) classVisitor52);
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type42, type43, type47, type49, type50, type51 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray55);
        org.mockito.cglib.core.Signature signature57 = new org.mockito.cglib.core.Signature("L1057808593", type40, typeArray55);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        boolean boolean63 = type60.equals((java.lang.Object) classVisitor61);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str65 = type64.getDescriptor();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor69);
        boolean boolean71 = type68.equals((java.lang.Object) classVisitor69);
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type59, type60, type64, type66, type67, type68 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray72);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray72);
        org.mockito.cglib.core.Local local75 = new org.mockito.cglib.core.Local((int) (byte) -1, type40);
        java.lang.Class<?> wildcardClass76 = type40.getClass();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass76);
        boolean boolean78 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass76);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass76);
        org.mockito.cglib.proxy.Callback callback80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass76, callback80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "V" + "'", str48, "V");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(VZVDDZ)V" + "'", str56, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "V" + "'", str65, "V");
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(VZVDDZ)V" + "'", str73, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VZVDDZ)F" + "'", str74, "(VZVDDZ)F");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test04191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04191");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.asm.ClassAdapter classAdapter6 = new org.mockito.asm.ClassAdapter(classVisitor5);
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter(classVisitor5);
        classEmitter4.setTarget((org.mockito.asm.ClassVisitor) classAdapter7);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter9.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter4.setTarget((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        classEmitter11.setTarget((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        classEmitter11.setTarget((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter3.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter25.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassInfo classInfo31 = classEmitter30.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.Signature signature40 = new org.mockito.cglib.core.Signature("org/mockito/asm/ClassAdapter", "L1933965693");
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        java.lang.Class<?> wildcardClass43 = classAdapter42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        boolean boolean47 = signature40.equals((java.lang.Object) type46);
        int int48 = type46.getSort();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor50);
        boolean boolean52 = type49.equals((java.lang.Object) classVisitor50);
        java.lang.String str53 = type49.getDescriptor();
        java.lang.String str54 = type49.getClassName();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        boolean boolean60 = type57.equals((java.lang.Object) classVisitor58);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str62 = type61.getDescriptor();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type64 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        boolean boolean68 = type65.equals((java.lang.Object) classVisitor66);
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type56, type57, type61, type63, type64, type65 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray69);
        boolean boolean71 = type49.equals((java.lang.Object) typeArray69);
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray69);
        int int73 = type46.getSize();
        org.mockito.cglib.core.Local local74 = new org.mockito.cglib.core.Local(131, type46);
        int int75 = type46.getSort();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor76 = classEmitter32.visitField(167, "L2018944773", "L1309683955", "Lsun/misc/Launcher$AppClassLoader;", (java.lang.Object) type46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo21);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo31);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Z" + "'", str53, "Z");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "boolean" + "'", str54, "boolean");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "V" + "'", str62, "V");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(VZVDDZ)V" + "'", str70, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;" + "'", str72, "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
    }

    @Test
    public void test04192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04192");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        enhancer0.setInterceptDuringConstruction(true);
        boolean boolean5 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer6.setCallback(callback9);
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer6.setCallback(callback11);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy13 = enhancer6.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer6.getNamingPolicy();
        enhancer6.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer18.setCallback(callback21);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer18.setCallbackFilter(callbackFilter23);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer18.setCallback(callback25);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer18.getNamingPolicy();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local30 = new org.mockito.cglib.core.Local(0, type29);
        int int31 = type29.getSort();
        java.lang.String str32 = type29.getClassName();
        java.lang.String str33 = type29.getClassName();
        boolean boolean34 = namingPolicy27.equals((java.lang.Object) type29);
        enhancer17.setNamingPolicy(namingPolicy27);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer17.getNamingPolicy();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str38 = type37.getClassName();
        boolean boolean39 = namingPolicy36.equals((java.lang.Object) str38);
        enhancer6.setNamingPolicy(namingPolicy36);
        java.lang.ClassLoader classLoader41 = enhancer6.getClassLoader();
        enhancer0.setClassLoader(classLoader41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(generatorStrategy13);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "double" + "'", str32, "double");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "double" + "'", str33, "double");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "double" + "'", str38, "double");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classLoader41);
    }

    @Test
    public void test04193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04193");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        java.lang.String str10 = label9.toString();
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        label9.info = label11;
        java.lang.String str13 = label9.toString();
        java.lang.String str14 = label9.toString();
        java.lang.String str15 = label9.toString();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        java.lang.String str17 = label16.toString();
        org.mockito.asm.Label label18 = new org.mockito.asm.Label();
        label16.info = label18;
        java.lang.String str20 = label16.toString();
        java.lang.String str21 = label16.toString();
        label9.info = label16;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor25);
        boolean boolean27 = type24.equals((java.lang.Object) classVisitor25);
        int int29 = type24.getOpcode(116);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type32 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        boolean boolean35 = type32.equals((java.lang.Object) classVisitor33);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str37 = type36.getDescriptor();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        boolean boolean43 = type40.equals((java.lang.Object) classVisitor41);
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type31, type32, type36, type38, type39, type40 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray44);
        org.mockito.cglib.core.Signature signature46 = new org.mockito.cglib.core.Signature("V", type24, typeArray44);
        int int48 = type24.getOpcode((-1));
        int int50 = type24.getOpcode((int) 'a');
        label9.info = type24;
        org.mockito.asm.Type type53 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        boolean boolean56 = type53.equals((java.lang.Object) classVisitor54);
        int int58 = type53.getOpcode(116);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        boolean boolean64 = type61.equals((java.lang.Object) classVisitor62);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str66 = type65.getDescriptor();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor70 = null;
        org.mockito.asm.ClassAdapter classAdapter71 = new org.mockito.asm.ClassAdapter(classVisitor70);
        boolean boolean72 = type69.equals((java.lang.Object) classVisitor70);
        org.mockito.asm.Type[] typeArray73 = new org.mockito.asm.Type[] { type60, type61, type65, type67, type68, type69 };
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray73);
        org.mockito.cglib.core.Signature signature75 = new org.mockito.cglib.core.Signature("V", type53, typeArray73);
        java.lang.String str76 = signature75.toString();
        java.lang.String str77 = signature75.getName();
        label9.info = str77;
        java.lang.Object obj79 = label9.info;
        java.lang.String str80 = label9.toString();
        org.mockito.cglib.proxy.Enhancer enhancer81 = new org.mockito.cglib.proxy.Enhancer();
        enhancer81.setUseFactory(true);
        enhancer81.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback86 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray87 = new org.mockito.cglib.proxy.Callback[] { callback86 };
        enhancer81.setCallbacks(callbackArray87);
        enhancer81.setSerialVersionUID((java.lang.Long) 1L);
        enhancer81.setInterceptDuringConstruction(true);
        enhancer81.setUseFactory(false);
        enhancer81.setSerialVersionUID((java.lang.Long) 100L);
        label9.info = 100L;
        java.lang.Object obj98 = label9.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitLabel(label9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L49974649" + "'", str10, "L49974649");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L49974649" + "'", str13, "L49974649");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L49974649" + "'", str14, "L49974649");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L49974649" + "'", str15, "L49974649");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L782275113" + "'", str17, "L782275113");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L782275113" + "'", str20, "L782275113");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L782275113" + "'", str21, "L782275113");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 116 + "'", int29 == 116);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(VZVDDZ)V" + "'", str45, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 97 + "'", int50 == 97);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 116 + "'", int58 == 116);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "V" + "'", str66, "V");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VZVDDZ)V" + "'", str74, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "V(VZVDDZ)Z" + "'", str76, "V(VZVDDZ)Z");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "V" + "'", str77, "V");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "V" + "'", obj79, "V");
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L49974649" + "'", str80, "L49974649");
        org.junit.Assert.assertNotNull(callbackArray87);
        org.junit.Assert.assertEquals("'" + obj98 + "' != '" + 100L + "'", obj98, 100L);
    }

    @Test
    public void test04194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04194");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        boolean boolean8 = enhancer0.getAttemptLoad();
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer17.setCallback(callback20);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter22 = null;
        enhancer17.setCallbackFilter(callbackFilter22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer24.setCallback(callback27);
        enhancer24.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass31 = enhancer24.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass31);
        java.lang.String str33 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass31);
        enhancer17.setSuperclass((java.lang.Class) wildcardClass31);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback36 = null;
        enhancer35.setCallback(callback36);
        enhancer35.setInterceptDuringConstruction(true);
        boolean boolean40 = enhancer35.getAttemptLoad();
        boolean boolean41 = enhancer35.getUseCache();
        enhancer35.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback47 = null;
        enhancer44.setCallback(callback47);
        enhancer44.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy51 = enhancer44.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback55 = null;
        enhancer52.setCallback(callback55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback60 = null;
        enhancer57.setCallback(callback60);
        org.mockito.cglib.proxy.Callback callback62 = null;
        enhancer57.setCallback(callback62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        java.lang.Class<?> wildcardClass69 = classAdapter68.getClass();
        java.lang.String str70 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass69);
        org.mockito.asm.ClassVisitor classVisitor71 = null;
        org.mockito.asm.ClassAdapter classAdapter72 = new org.mockito.asm.ClassAdapter(classVisitor71);
        java.lang.Class<?> wildcardClass73 = classAdapter72.getClass();
        java.lang.String str74 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass73);
        org.mockito.asm.ClassVisitor classVisitor75 = null;
        org.mockito.asm.ClassAdapter classAdapter76 = new org.mockito.asm.ClassAdapter(classVisitor75);
        java.lang.Class<?> wildcardClass77 = classAdapter76.getClass();
        java.lang.String str78 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass77);
        org.mockito.asm.ClassVisitor classVisitor79 = null;
        org.mockito.asm.ClassAdapter classAdapter80 = new org.mockito.asm.ClassAdapter(classVisitor79);
        java.lang.Class<?> wildcardClass81 = classAdapter80.getClass();
        boolean boolean82 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass81);
        java.lang.Class[] classArray83 = new java.lang.Class[] { wildcardClass69, wildcardClass73, wildcardClass77, wildcardClass81 };
        enhancer64.setInterfaces(classArray83);
        enhancer57.setInterfaces(classArray83);
        enhancer52.setInterfaces(classArray83);
        enhancer44.setInterfaces(classArray83);
        enhancer35.setInterfaces(classArray83);
        enhancer17.setInterfaces(classArray83);
        enhancer0.setInterfaces(classArray83);
        boolean boolean91 = enhancer0.getUseCache();
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str32, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str33, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(namingPolicy51);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str70, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str74, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str78, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(classArray83);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test04195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04195");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(true);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        enhancer16.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback21 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray22 = new org.mockito.cglib.proxy.Callback[] { callback21 };
        enhancer16.setCallbacks(callbackArray22);
        enhancer16.setSerialVersionUID((java.lang.Long) 1L);
        enhancer16.setInterceptDuringConstruction(true);
        enhancer16.setUseFactory(false);
        enhancer16.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy32 = enhancer16.getStrategy();
        enhancer0.setStrategy(generatorStrategy32);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer34.setCallback(callback37);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter39 = null;
        enhancer34.setCallbackFilter(callbackFilter39);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer34.setCallback(callback41);
        enhancer34.setAttemptLoad(true);
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        java.lang.Class<?> wildcardClass47 = classAdapter46.getClass();
        java.lang.String str48 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        enhancer34.setSuperclass((java.lang.Class) wildcardClass47);
        enhancer34.setUseFactory(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter52 = null;
        enhancer34.setCallbackFilter(callbackFilter52);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback57 = null;
        enhancer54.setCallback(callback57);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter59 = null;
        enhancer54.setCallbackFilter(callbackFilter59);
        org.mockito.cglib.proxy.Callback callback61 = null;
        enhancer54.setCallback(callback61);
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        enhancer63.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback66 = null;
        enhancer63.setCallback(callback66);
        enhancer63.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass70 = enhancer63.getClass();
        enhancer54.setSuperclass((java.lang.Class) wildcardClass70);
        boolean boolean72 = enhancer54.getAttemptLoad();
        boolean boolean73 = enhancer54.getUseCache();
        java.lang.ClassLoader classLoader74 = enhancer54.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy75 = enhancer54.getNamingPolicy();
        enhancer34.setNamingPolicy(namingPolicy75);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy77 = enhancer34.getStrategy();
        enhancer0.setStrategy(generatorStrategy77);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(callbackArray22);
        org.junit.Assert.assertNotNull(generatorStrategy32);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str48, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertNotNull(namingPolicy75);
        org.junit.Assert.assertNotNull(generatorStrategy77);
    }

    @Test
    public void test04196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04196");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        java.lang.String str12 = label11.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        label11.info = label13;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        boolean boolean22 = type19.equals((java.lang.Object) classVisitor20);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str24 = type23.getDescriptor();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        boolean boolean30 = type27.equals((java.lang.Object) classVisitor28);
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type18, type19, type23, type25, type26, type27 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray31);
        org.mockito.cglib.core.Signature signature33 = new org.mockito.cglib.core.Signature("L1057808593", type16, typeArray31);
        label13.info = type16;
        java.lang.String str35 = label13.toString();
        java.lang.String str36 = label13.toString();
        org.mockito.asm.Label label37 = new org.mockito.asm.Label();
        java.lang.String str38 = label37.toString();
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        label37.info = label39;
        java.lang.Object obj41 = label39.info;
        java.lang.String str42 = label39.toString();
        java.lang.String str43 = label39.toString();
        java.lang.String str44 = label39.toString();
        label13.info = label39;
        java.lang.Object obj46 = label13.info;
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor48);
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor48);
        classEmitter47.setTarget((org.mockito.asm.ClassVisitor) classAdapter50);
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter50);
        label13.info = classAdapter50;
        java.lang.Object obj54 = label13.info;
        java.lang.Object obj55 = label13.info;
        java.lang.String str56 = label13.toString();
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        label57.info = 10.0f;
        java.lang.String str60 = label57.toString();
        java.lang.Object obj61 = label57.info;
        java.lang.Object obj62 = label57.info;
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        enhancer63.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback66 = null;
        enhancer63.setCallback(callback66);
        org.mockito.cglib.proxy.Callback callback68 = null;
        enhancer63.setCallback(callback68);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy70 = enhancer63.getStrategy();
        org.mockito.asm.Label label71 = new org.mockito.asm.Label();
        boolean boolean72 = generatorStrategy70.equals((java.lang.Object) label71);
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor74 = null;
        org.mockito.asm.ClassAdapter classAdapter75 = new org.mockito.asm.ClassAdapter(classVisitor74);
        org.mockito.asm.ClassAdapter classAdapter76 = new org.mockito.asm.ClassAdapter(classVisitor74);
        classEmitter73.setTarget((org.mockito.asm.ClassVisitor) classAdapter76);
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo79 = classEmitter78.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter78.setTarget((org.mockito.asm.ClassVisitor) classEmitter80);
        classEmitter73.setTarget((org.mockito.asm.ClassVisitor) classEmitter80);
        org.mockito.cglib.core.ClassInfo classInfo83 = classEmitter80.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter84 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo85 = classEmitter84.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter86 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter84);
        org.mockito.cglib.core.ClassEmitter classEmitter87 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter84);
        classEmitter80.setTarget((org.mockito.asm.ClassVisitor) classEmitter87);
        org.mockito.cglib.core.ClassInfo classInfo89 = classEmitter87.getClassInfo();
        label71.info = classEmitter87;
        java.lang.String str91 = label71.toString();
        java.lang.Object obj92 = label71.info;
        java.lang.Object obj93 = label71.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitTryCatchBlock(label13, label57, label71, "L1112772762");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1129300743" + "'", str12, "L1129300743");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "V" + "'", str24, "V");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(VZVDDZ)V" + "'", str32, "(VZVDDZ)V");
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L1233755834" + "'", str35, "L1233755834");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1233755834" + "'", str36, "L1233755834");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L874273675" + "'", str38, "L874273675");
        org.junit.Assert.assertNull(obj41);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L447745708" + "'", str42, "L447745708");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L447745708" + "'", str43, "L447745708");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L447745708" + "'", str44, "L447745708");
        org.junit.Assert.assertNotNull(obj46);
// flaky:         org.junit.Assert.assertEquals(obj46.toString(), "L447745708");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "L447745708");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "L447745708");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L1233755834" + "'", str56, "L1233755834");
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "L660250886" + "'", str60, "L660250886");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 10.0f + "'", obj61, 10.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertNotNull(generatorStrategy70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(classInfo79);
        org.junit.Assert.assertNull(classInfo83);
        org.junit.Assert.assertNull(classInfo85);
        org.junit.Assert.assertNull(classInfo89);
// flaky:         org.junit.Assert.assertEquals("'" + str91 + "' != '" + "L572753689" + "'", str91, "L572753689");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test04197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04197");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setAttemptLoad(true);
        enhancer0.setAttemptLoad(true);
        boolean boolean19 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer20.setCallback(callback23);
        enhancer20.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass27 = enhancer20.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.proxy.Enhancer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test04198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04198");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        boolean boolean9 = namingPolicy7.equals((java.lang.Object) (byte) 100);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor11);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classAdapter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        boolean boolean28 = namingPolicy7.equals((java.lang.Object) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        classEmitter34.setTarget(classVisitor35);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor39);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classAdapter41);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor44);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classAdapter46);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo49 = classEmitter48.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback57 = null;
        enhancer54.setCallback(callback57);
        org.mockito.cglib.proxy.Callback callback59 = null;
        enhancer54.setCallback(callback59);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy61 = enhancer54.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = enhancer54.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor64);
        classEmitter63.setTarget((org.mockito.asm.ClassVisitor) classAdapter66);
        boolean boolean68 = namingPolicy62.equals((java.lang.Object) classAdapter66);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classAdapter66);
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classAdapter66);
        org.mockito.asm.ClassAdapter classAdapter71 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter34);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type72 = classEmitter34.getClassType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo49);
        org.junit.Assert.assertNotNull(generatorStrategy61);
        org.junit.Assert.assertNotNull(namingPolicy62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test04199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04199");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        boolean boolean21 = enhancer0.getUseCache();
        boolean boolean22 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer24.setCallback(callback27);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer24.setCallback(callback29);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy31 = enhancer24.getStrategy();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        boolean boolean35 = type32.equals((java.lang.Object) classVisitor33);
        int int37 = type32.getOpcode(116);
        boolean boolean38 = generatorStrategy31.equals((java.lang.Object) 116);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback42 = null;
        enhancer39.setCallback(callback42);
        org.mockito.cglib.proxy.Callback callback44 = null;
        enhancer39.setCallback(callback44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        java.lang.Class<?> wildcardClass51 = classAdapter50.getClass();
        java.lang.String str52 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass51);
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.asm.ClassAdapter classAdapter54 = new org.mockito.asm.ClassAdapter(classVisitor53);
        java.lang.Class<?> wildcardClass55 = classAdapter54.getClass();
        java.lang.String str56 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass55);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        java.lang.Class<?> wildcardClass59 = classAdapter58.getClass();
        java.lang.String str60 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass59);
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        java.lang.Class<?> wildcardClass63 = classAdapter62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Class[] classArray65 = new java.lang.Class[] { wildcardClass51, wildcardClass55, wildcardClass59, wildcardClass63 };
        enhancer46.setInterfaces(classArray65);
        enhancer39.setInterfaces(classArray65);
        boolean boolean68 = generatorStrategy31.equals((java.lang.Object) enhancer39);
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setUseFactory(true);
        enhancer69.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        enhancer74.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor77 = null;
        org.mockito.asm.ClassAdapter classAdapter78 = new org.mockito.asm.ClassAdapter(classVisitor77);
        java.lang.Class<?> wildcardClass79 = classAdapter78.getClass();
        java.lang.String str80 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass79);
        org.mockito.asm.ClassVisitor classVisitor81 = null;
        org.mockito.asm.ClassAdapter classAdapter82 = new org.mockito.asm.ClassAdapter(classVisitor81);
        java.lang.Class<?> wildcardClass83 = classAdapter82.getClass();
        java.lang.String str84 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass83);
        org.mockito.asm.ClassVisitor classVisitor85 = null;
        org.mockito.asm.ClassAdapter classAdapter86 = new org.mockito.asm.ClassAdapter(classVisitor85);
        java.lang.Class<?> wildcardClass87 = classAdapter86.getClass();
        java.lang.String str88 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass87);
        org.mockito.asm.ClassVisitor classVisitor89 = null;
        org.mockito.asm.ClassAdapter classAdapter90 = new org.mockito.asm.ClassAdapter(classVisitor89);
        java.lang.Class<?> wildcardClass91 = classAdapter90.getClass();
        boolean boolean92 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass91);
        java.lang.Class[] classArray93 = new java.lang.Class[] { wildcardClass79, wildcardClass83, wildcardClass87, wildcardClass91 };
        enhancer74.setInterfaces(classArray93);
        enhancer69.setInterfaces(classArray93);
        enhancer39.setInterfaces(classArray93);
        enhancer0.setInterfaces(classArray93);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(generatorStrategy23);
        org.junit.Assert.assertNotNull(generatorStrategy31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 116 + "'", int37 == 116);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str52, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str56, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str60, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str80, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str84, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str88, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(classArray93);
    }

    @Test
    public void test04200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04200");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer1.setCallback(callback4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer1.setCallbackFilter(callbackFilter6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer1.setCallback(callback8);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer1.getNamingPolicy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(0, type12);
        int int14 = type12.getSort();
        java.lang.String str15 = type12.getClassName();
        java.lang.String str16 = type12.getClassName();
        boolean boolean17 = namingPolicy10.equals((java.lang.Object) type12);
        enhancer0.setNamingPolicy(namingPolicy10);
        java.lang.ClassLoader classLoader19 = enhancer0.getClassLoader();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer22.setCallback(callback25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setUseFactory(true);
        enhancer27.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback32 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray33 = new org.mockito.cglib.proxy.Callback[] { callback32 };
        enhancer27.setCallbacks(callbackArray33);
        enhancer22.setCallbacks(callbackArray33);
        java.lang.ClassLoader classLoader36 = enhancer22.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer22.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy37);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class43 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback types are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double" + "'", str15, "double");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double" + "'", str16, "double");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(callbackArray33);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(namingPolicy37);
    }

    @Test
    public void test04201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04201");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter(classVisitor6);
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor6);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classAdapter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer16.setCallback(callback19);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer16.setCallback(callback21);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = enhancer16.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer16.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor26);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classAdapter28);
        boolean boolean30 = namingPolicy24.equals((java.lang.Object) classAdapter28);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classAdapter28);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter5.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNotNull(generatorStrategy23);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test04202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04202");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        java.lang.String str9 = label8.toString();
        boolean boolean10 = namingPolicy7.equals((java.lang.Object) str9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.String str12 = type11.toString();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local16 = new org.mockito.cglib.core.Local(0, type15);
        org.mockito.cglib.core.Local local17 = new org.mockito.cglib.core.Local((int) (byte) 100, type15);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        boolean boolean25 = type22.equals((java.lang.Object) classVisitor23);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str27 = type26.getDescriptor();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        boolean boolean33 = type30.equals((java.lang.Object) classVisitor31);
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type21, type22, type26, type28, type29, type30 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray34);
        org.mockito.cglib.core.Signature signature36 = new org.mockito.cglib.core.Signature("L1057808593", type19, typeArray34);
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray34);
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray34);
        boolean boolean39 = namingPolicy7.equals((java.lang.Object) typeArray34);
        org.mockito.asm.Label label40 = new org.mockito.asm.Label();
        java.lang.String str41 = label40.toString();
        org.mockito.asm.Label label42 = new org.mockito.asm.Label();
        label40.info = label42;
        java.lang.Object obj44 = label42.info;
        boolean boolean45 = namingPolicy7.equals(obj44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer46.setCallback(callback49);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter51 = null;
        enhancer46.setCallbackFilter(callbackFilter51);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer46.setCallback(callback53);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback58 = null;
        enhancer55.setCallback(callback58);
        enhancer55.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass62 = enhancer55.getClass();
        enhancer46.setSuperclass((java.lang.Class) wildcardClass62);
        boolean boolean64 = enhancer46.getAttemptLoad();
        boolean boolean65 = enhancer46.getUseCache();
        enhancer46.setUseCache(true);
        org.mockito.cglib.proxy.Callback[] callbackArray68 = null;
        enhancer46.setCallbacks(callbackArray68);
        enhancer46.setAttemptLoad(true);
        boolean boolean72 = namingPolicy7.equals((java.lang.Object) enhancer46);
        boolean boolean73 = enhancer46.getUseCache();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj74 = enhancer46.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L827973097" + "'", str9, "L827973097");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "B" + "'", str12, "B");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "V" + "'", str27, "V");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(VZVDDZ)V" + "'", str35, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VZVDDZ)D" + "'", str37, "(VZVDDZ)D");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(VZVDDZ)B" + "'", str38, "(VZVDDZ)B");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L526060592" + "'", str41, "L526060592");
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test04203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04203");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classAdapter12);
        boolean boolean14 = namingPolicy8.equals((java.lang.Object) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor17);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classAdapter19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter21.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter36.getClassInfo();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter15);
        java.lang.String[] strArray48 = new java.lang.String[] { "L1093683210", "L1093683210", "org/mockito/asm/ClassAdapter" };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor49 = classEmitter15.visitMethod(5, "L64183221", "L436463865", "L398511873", strArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@2e1391c0");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNotNull(strArray48);
    }

    @Test
    public void test04204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04204");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        java.lang.Class<?> wildcardClass8 = classEmitter6.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setUseFactory(true);
        enhancer9.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        java.lang.Class<?> wildcardClass19 = classAdapter18.getClass();
        java.lang.String str20 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass19);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.asm.ClassAdapter classAdapter22 = new org.mockito.asm.ClassAdapter(classVisitor21);
        java.lang.Class<?> wildcardClass23 = classAdapter22.getClass();
        java.lang.String str24 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass23);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor25);
        java.lang.Class<?> wildcardClass27 = classAdapter26.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        java.lang.Class<?> wildcardClass31 = classAdapter30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Class[] classArray33 = new java.lang.Class[] { wildcardClass19, wildcardClass23, wildcardClass27, wildcardClass31 };
        enhancer14.setInterfaces(classArray33);
        enhancer9.setInterfaces(classArray33);
        org.mockito.asm.ClassVisitor classVisitor36 = null;
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter(classVisitor36);
        java.lang.Class<?> wildcardClass38 = classAdapter37.getClass();
        java.lang.String str39 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        java.lang.String str40 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass38);
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        java.lang.Class<?> wildcardClass43 = classAdapter42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Class[] classArray46 = new java.lang.Class[] { wildcardClass38, wildcardClass43 };
        enhancer9.setInterfaces(classArray46);
        enhancer9.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy50 = enhancer9.getStrategy();
        enhancer9.setUseCache(true);
        java.lang.Class[] classArray53 = new java.lang.Class[] {};
        enhancer9.setInterfaces(classArray53);
        java.util.List list55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods((java.lang.Class) wildcardClass8, classArray53, list55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str20, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str24, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str28, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str39, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str40, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(generatorStrategy50);
        org.junit.Assert.assertNotNull(classArray53);
    }

    @Test
    public void test04205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04205");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        java.lang.Class<?> wildcardClass12 = classAdapter11.getClass();
        java.lang.String str13 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor14);
        java.lang.Class<?> wildcardClass16 = classAdapter15.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass20);
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.asm.ClassAdapter classAdapter23 = new org.mockito.asm.ClassAdapter(classVisitor22);
        java.lang.Class<?> wildcardClass24 = classAdapter23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass12, wildcardClass16, wildcardClass20, wildcardClass24 };
        enhancer7.setInterfaces(classArray26);
        enhancer0.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer29.setCallback(callback32);
        enhancer29.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer29.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy36);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer38.setCallback(callback41);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer38.setCallback(callback43);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer38.getNamingPolicy();
        boolean boolean46 = namingPolicy36.equals((java.lang.Object) namingPolicy45);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str49 = type48.getClassName();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local53 = new org.mockito.cglib.core.Local(0, type52);
        org.mockito.cglib.core.Local local54 = new org.mockito.cglib.core.Local((int) (byte) 100, type52);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        org.mockito.asm.ClassAdapter classAdapter61 = new org.mockito.asm.ClassAdapter(classVisitor60);
        boolean boolean62 = type59.equals((java.lang.Object) classVisitor60);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str64 = type63.getDescriptor();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        boolean boolean70 = type67.equals((java.lang.Object) classVisitor68);
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type58, type59, type63, type65, type66, type67 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray71);
        org.mockito.cglib.core.Signature signature73 = new org.mockito.cglib.core.Signature("L1057808593", type56, typeArray71);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray71);
        org.mockito.cglib.core.Signature signature75 = new org.mockito.cglib.core.Signature("L1346580404", type48, typeArray71);
        boolean boolean76 = namingPolicy36.equals((java.lang.Object) signature75);
        org.mockito.asm.MethodVisitor methodVisitor79 = null;
        org.mockito.asm.MethodAdapter methodAdapter80 = new org.mockito.asm.MethodAdapter(methodVisitor79);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter81 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter80);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter82 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter81);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter83 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter81);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter84 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter83);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter85 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter83);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter86 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter85);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter87 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter85);
        boolean boolean88 = namingPolicy36.equals((java.lang.Object) localVariablesSorter85);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter85.visitIntInsn(100, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str13, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str17, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str21, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "double" + "'", str49, "double");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "V" + "'", str64, "V");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VZVDDZ)V" + "'", str72, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VZVDDZ)D" + "'", str74, "(VZVDDZ)D");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test04206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04206");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        java.lang.Class<?> wildcardClass10 = classAdapter9.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass10, wildcardClass14, wildcardClass18, wildcardClass22 };
        enhancer5.setInterfaces(classArray24);
        enhancer0.setInterfaces(classArray24);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass29, wildcardClass34 };
        enhancer0.setInterfaces(classArray37);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer0.getStrategy();
        enhancer0.setUseCache(true);
        java.lang.ClassLoader classLoader44 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        enhancer46.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        java.lang.Class<?> wildcardClass56 = classAdapter55.getClass();
        java.lang.String str57 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass56);
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        java.lang.Class<?> wildcardClass60 = classAdapter59.getClass();
        java.lang.String str61 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass60);
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        java.lang.Class<?> wildcardClass64 = classAdapter63.getClass();
        java.lang.String str65 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass64);
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        java.lang.Class<?> wildcardClass68 = classAdapter67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        java.lang.Class[] classArray70 = new java.lang.Class[] { wildcardClass56, wildcardClass60, wildcardClass64, wildcardClass68 };
        enhancer51.setInterfaces(classArray70);
        enhancer46.setInterfaces(classArray70);
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor73);
        java.lang.Class<?> wildcardClass75 = classAdapter74.getClass();
        java.lang.String str76 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        java.lang.String str77 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass75);
        org.mockito.asm.ClassVisitor classVisitor78 = null;
        org.mockito.asm.ClassAdapter classAdapter79 = new org.mockito.asm.ClassAdapter(classVisitor78);
        java.lang.Class<?> wildcardClass80 = classAdapter79.getClass();
        boolean boolean81 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass80);
        boolean boolean82 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass80);
        java.lang.Class[] classArray83 = new java.lang.Class[] { wildcardClass75, wildcardClass80 };
        enhancer46.setInterfaces(classArray83);
        enhancer46.setInterceptDuringConstruction(true);
        enhancer46.setUseFactory(true);
        enhancer46.setAttemptLoad(false);
        boolean boolean91 = enhancer46.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter92 = null;
        enhancer46.setCallbackFilter(callbackFilter92);
        boolean boolean94 = enhancer46.getUseCache();
        boolean boolean95 = enhancer46.getUseCache();
        boolean boolean96 = namingPolicy45.equals((java.lang.Object) boolean95);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str11, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str15, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str31, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str57, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str61, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str65, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str76, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str77, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(classArray83);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test04207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04207");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        boolean boolean8 = enhancer0.getAttemptLoad();
        enhancer0.setUseFactory(false);
        boolean boolean11 = enhancer0.getUseCache();
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy14 = enhancer0.getStrategy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy15 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        java.lang.Class<?> wildcardClass21 = classAdapter20.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass21);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Class[] classArray35 = new java.lang.Class[] { wildcardClass21, wildcardClass25, wildcardClass29, wildcardClass33 };
        enhancer16.setInterfaces(classArray35);
        boolean boolean37 = enhancer16.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer16.setCallback(callback38);
        enhancer16.setUseFactory(false);
        enhancer16.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setUseFactory(true);
        enhancer44.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback49 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray50 = new org.mockito.cglib.proxy.Callback[] { callback49 };
        enhancer44.setCallbacks(callbackArray50);
        boolean boolean52 = enhancer44.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy53 = enhancer44.getStrategy();
        enhancer16.setStrategy(generatorStrategy53);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local58 = new org.mockito.cglib.core.Local(0, type57);
        org.mockito.cglib.core.Local local59 = new org.mockito.cglib.core.Local((int) (byte) 100, type57);
        org.mockito.asm.Type type60 = local59.getType();
        org.mockito.asm.Type type61 = local59.getType();
        boolean boolean62 = generatorStrategy53.equals((java.lang.Object) local59);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        boolean boolean70 = type67.equals((java.lang.Object) classVisitor68);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str72 = type71.getDescriptor();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type74 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type75 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor76 = null;
        org.mockito.asm.ClassAdapter classAdapter77 = new org.mockito.asm.ClassAdapter(classVisitor76);
        boolean boolean78 = type75.equals((java.lang.Object) classVisitor76);
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type66, type67, type71, type73, type74, type75 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray79);
        org.mockito.cglib.core.Signature signature81 = new org.mockito.cglib.core.Signature("L1057808593", type64, typeArray79);
        java.lang.String str82 = signature81.toString();
        boolean boolean84 = signature81.equals((java.lang.Object) "(VZVDDZ)B");
        java.lang.String str85 = signature81.getName();
        org.mockito.asm.Type[] typeArray86 = signature81.getArgumentTypes();
        java.lang.String str87 = signature81.getName();
        org.mockito.asm.Type type88 = signature81.getReturnType();
        org.mockito.asm.Type[] typeArray89 = signature81.getArgumentTypes();
        java.lang.String str90 = signature81.getDescriptor();
        boolean boolean91 = generatorStrategy53.equals((java.lang.Object) str90);
        enhancer0.setStrategy(generatorStrategy53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj93 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(generatorStrategy14);
        org.junit.Assert.assertNotNull(generatorStrategy15);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str22, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str26, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(callbackArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(generatorStrategy53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "V" + "'", str72, "V");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(VZVDDZ)V" + "'", str80, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "L1057808593(VZVDDZ)F" + "'", str82, "L1057808593(VZVDDZ)F");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "L1057808593" + "'", str85, "L1057808593");
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "L1057808593" + "'", str87, "L1057808593");
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(VZVDDZ)F" + "'", str90, "(VZVDDZ)F");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test04208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04208");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter9);
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        java.lang.String str12 = label11.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        label11.info = label13;
        java.lang.Object obj15 = label13.info;
        java.lang.String str16 = label13.toString();
        java.lang.Object obj17 = label13.info;
        label13.info = "[Ljava/lang/Class;";
        java.lang.Object obj20 = label13.info;
        java.lang.Object obj21 = label13.info;
        java.lang.String str22 = label13.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        java.lang.String str24 = label23.toString();
        org.mockito.asm.Label label25 = new org.mockito.asm.Label();
        label23.info = label25;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local29 = new org.mockito.cglib.core.Local(0, type28);
        label23.info = 0;
        java.lang.String str31 = label23.toString();
        label23.info = "Z(VZVDDZ)Z";
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer34.setCallback(callback37);
        enhancer34.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass41 = enhancer34.getClass();
        label23.info = wildcardClass41;
        java.lang.String str43 = label23.toString();
        java.lang.Object obj44 = label23.info;
        org.mockito.asm.Label label45 = new org.mockito.asm.Label();
        java.lang.Object obj46 = label45.info;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        int int48 = type47.getSort();
        label45.info = type47;
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer50.setCallback(callback53);
        enhancer50.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = enhancer50.getNamingPolicy();
        boolean boolean59 = namingPolicy57.equals((java.lang.Object) 5);
        label45.info = boolean59;
        label45.info = "(VZVDDZ)S";
        java.lang.String str63 = label45.toString();
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter10.visitTryCatchBlock(label13, label23, label45, "L2007139194");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L1345586627" + "'", str12, "L1345586627");
        org.junit.Assert.assertNull(obj15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L2000782251" + "'", str16, "L2000782251");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "[Ljava/lang/Class;" + "'", obj20, "[Ljava/lang/Class;");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "[Ljava/lang/Class;" + "'", obj21, "[Ljava/lang/Class;");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L2000782251" + "'", str22, "L2000782251");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L894172676" + "'", str24, "L894172676");
        org.junit.Assert.assertNotNull(type28);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L894172676" + "'", str31, "L894172676");
        org.junit.Assert.assertNotNull(wildcardClass41);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L894172676" + "'", str43, "L894172676");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 4 + "'", int48 == 4);
        org.junit.Assert.assertNotNull(namingPolicy57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L457497715" + "'", str63, "L457497715");
    }

    @Test
    public void test04209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04209");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        boolean boolean8 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer9.setCallback(callback12);
        enhancer9.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer9.getNamingPolicy();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        java.lang.String str18 = label17.toString();
        boolean boolean19 = namingPolicy16.equals((java.lang.Object) str18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        java.lang.String str23 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass22);
        java.lang.String str24 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass22);
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass22);
        boolean boolean26 = namingPolicy16.equals((java.lang.Object) str25);
        enhancer0.setNamingPolicy(namingPolicy16);
        boolean boolean28 = enhancer0.getUseCache();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor36 = null;
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter(classVisitor36);
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor36);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classAdapter38);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo41 = classEmitter40.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassInfo classInfo45 = classEmitter42.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo47 = classEmitter46.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter46);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter46);
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo52 = classEmitter51.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter51);
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter51);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter51);
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classEmitter56);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter56);
        org.mockito.cglib.core.ClassInfo classInfo59 = classEmitter56.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter56);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        java.lang.Class<?> wildcardClass63 = classEmitter61.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass63);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(namingPolicy16);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L992956281" + "'", str18, "L992956281");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str23, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str24, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str25, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo41);
        org.junit.Assert.assertNull(classInfo45);
        org.junit.Assert.assertNull(classInfo47);
        org.junit.Assert.assertNull(classInfo52);
        org.junit.Assert.assertNull(classInfo59);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test04210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04210");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor7);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classAdapter9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter11.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo19 = classEmitter18.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor23);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classAdapter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter38.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter21.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter43);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer47.setCallback(callback52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer47.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer47.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor57);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        boolean boolean61 = namingPolicy55.equals((java.lang.Object) classAdapter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter59);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor64);
        classEmitter63.setTarget((org.mockito.asm.ClassVisitor) classAdapter66);
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo69 = classEmitter68.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter68.setTarget((org.mockito.asm.ClassVisitor) classEmitter70);
        classEmitter63.setTarget((org.mockito.asm.ClassVisitor) classEmitter70);
        org.mockito.cglib.core.ClassInfo classInfo73 = classEmitter70.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter74 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo75 = classEmitter74.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter74);
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter74);
        classEmitter70.setTarget((org.mockito.asm.ClassVisitor) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo80 = classEmitter79.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter81 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter79);
        classEmitter70.setTarget((org.mockito.asm.ClassVisitor) classEmitter79);
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter79);
        org.mockito.asm.ClassAdapter classAdapter84 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter83);
        org.mockito.cglib.core.ClassInfo classInfo85 = classEmitter83.getClassInfo();
        classEmitter62.setTarget((org.mockito.asm.ClassVisitor) classEmitter83);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter62.end_class();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo4);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo19);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(classInfo69);
        org.junit.Assert.assertNull(classInfo73);
        org.junit.Assert.assertNull(classInfo75);
        org.junit.Assert.assertNull(classInfo80);
        org.junit.Assert.assertNull(classInfo85);
    }

    @Test
    public void test04211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04211");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer9.setCallback(callback12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer9.setCallback(callback14);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer9.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = enhancer9.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor19);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classAdapter21);
        boolean boolean23 = namingPolicy17.equals((java.lang.Object) classAdapter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter21);
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classAdapter25);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter27 = classEmitter6.begin_static();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@3cfe6e17");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(namingPolicy17);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test04212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04212");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader10 = enhancer0.getClassLoader();
        org.mockito.asm.MethodVisitor methodVisitor13 = null;
        org.mockito.asm.MethodAdapter methodAdapter14 = new org.mockito.asm.MethodAdapter(methodVisitor13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter14);
        org.mockito.asm.MethodAdapter methodAdapter16 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        java.lang.Class<?> wildcardClass18 = localVariablesSorter17.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass18, callback20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertNotNull(classLoader10);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test04213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04213");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor29);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classAdapter31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter44.getClassInfo();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer47.setCallback(callback52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer47.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer47.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor57);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        boolean boolean61 = namingPolicy55.equals((java.lang.Object) classAdapter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter59);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter44);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter44.visitSource("L512343208", "L1067711561");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test04214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04214");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("L532685453");
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType("V");
        int int11 = type10.getSize();
        java.lang.String str12 = type10.getClassName();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.String str15 = type14.getDescriptor();
        java.lang.String str16 = type14.getDescriptor();
        org.mockito.cglib.core.Signature signature19 = new org.mockito.cglib.core.Signature("org/mockito/asm/ClassAdapter", "L1933965693");
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass22);
        boolean boolean26 = signature19.equals((java.lang.Object) type25);
        int int27 = type25.getSort();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        boolean boolean31 = type28.equals((java.lang.Object) classVisitor29);
        java.lang.String str32 = type28.getDescriptor();
        java.lang.String str33 = type28.getClassName();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        boolean boolean39 = type36.equals((java.lang.Object) classVisitor37);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str41 = type40.getDescriptor();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        boolean boolean47 = type44.equals((java.lang.Object) classVisitor45);
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type35, type36, type40, type42, type43, type44 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray48);
        boolean boolean50 = type28.equals((java.lang.Object) typeArray48);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray48);
        org.mockito.cglib.core.Signature signature52 = new org.mockito.cglib.core.Signature("", type14, typeArray48);
        org.mockito.cglib.core.Signature signature53 = new org.mockito.cglib.core.Signature("L647336328", type10, typeArray48);
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray48);
        org.mockito.cglib.core.Local local55 = new org.mockito.cglib.core.Local(5, type7);
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        java.lang.Class<?> wildcardClass58 = classAdapter57.getClass();
        boolean boolean59 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter0.declare_field((int) (short) 10, "L637708007", type7, (java.lang.Object) wildcardClass58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "void" + "'", str12, "void");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "F" + "'", str15, "F");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "F" + "'", str16, "F");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Z" + "'", str32, "Z");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "boolean" + "'", str33, "boolean");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "V" + "'", str41, "V");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(VZVDDZ)V" + "'", str49, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;" + "'", str51, "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(VZVDDZ)LL532685453;" + "'", str54, "(VZVDDZ)LL532685453;");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(type64);
    }

    @Test
    public void test04215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04215");
        java.lang.Class class0 = null;
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer1.setCallback(callback4);
        org.mockito.cglib.proxy.Callback callback6 = null;
        enhancer1.setCallback(callback6);
        boolean boolean8 = enhancer1.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter9 = null;
        enhancer1.setCallbackFilter(callbackFilter9);
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer1.setCallback(callback11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer13.setCallback(callback14);
        enhancer13.setInterceptDuringConstruction(true);
        enhancer13.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        enhancer20.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback25 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray26 = new org.mockito.cglib.proxy.Callback[] { callback25 };
        enhancer20.setCallbacks(callbackArray26);
        enhancer20.setSerialVersionUID((java.lang.Long) 1L);
        java.lang.ClassLoader classLoader30 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer31.setCallback(callback34);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter36 = null;
        enhancer31.setCallbackFilter(callbackFilter36);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer31.setCallback(callback38);
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer31.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback44 = null;
        enhancer41.setCallback(callback44);
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer41.setCallback(callback46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback51 = null;
        enhancer48.setCallback(callback51);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter53 = null;
        enhancer48.setCallbackFilter(callbackFilter53);
        org.mockito.cglib.proxy.Callback callback55 = null;
        enhancer48.setCallback(callback55);
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = enhancer48.getNamingPolicy();
        enhancer41.setNamingPolicy(namingPolicy57);
        org.mockito.asm.ClassVisitor classVisitor59 = null;
        org.mockito.asm.ClassAdapter classAdapter60 = new org.mockito.asm.ClassAdapter(classVisitor59);
        java.lang.Class<?> wildcardClass61 = classAdapter60.getClass();
        enhancer41.setSuperclass((java.lang.Class) wildcardClass61);
        enhancer31.setSuperclass((java.lang.Class) wildcardClass61);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback67 = null;
        enhancer64.setCallback(callback67);
        org.mockito.cglib.proxy.Callback callback69 = null;
        enhancer64.setCallback(callback69);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor74 = null;
        org.mockito.asm.ClassAdapter classAdapter75 = new org.mockito.asm.ClassAdapter(classVisitor74);
        java.lang.Class<?> wildcardClass76 = classAdapter75.getClass();
        java.lang.String str77 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass76);
        org.mockito.asm.ClassVisitor classVisitor78 = null;
        org.mockito.asm.ClassAdapter classAdapter79 = new org.mockito.asm.ClassAdapter(classVisitor78);
        java.lang.Class<?> wildcardClass80 = classAdapter79.getClass();
        java.lang.String str81 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass80);
        org.mockito.asm.ClassVisitor classVisitor82 = null;
        org.mockito.asm.ClassAdapter classAdapter83 = new org.mockito.asm.ClassAdapter(classVisitor82);
        java.lang.Class<?> wildcardClass84 = classAdapter83.getClass();
        java.lang.String str85 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass84);
        org.mockito.asm.ClassVisitor classVisitor86 = null;
        org.mockito.asm.ClassAdapter classAdapter87 = new org.mockito.asm.ClassAdapter(classVisitor86);
        java.lang.Class<?> wildcardClass88 = classAdapter87.getClass();
        boolean boolean89 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass88);
        java.lang.Class[] classArray90 = new java.lang.Class[] { wildcardClass76, wildcardClass80, wildcardClass84, wildcardClass88 };
        enhancer71.setInterfaces(classArray90);
        enhancer64.setInterfaces(classArray90);
        enhancer31.setInterfaces(classArray90);
        enhancer20.setInterfaces(classArray90);
        enhancer13.setInterfaces(classArray90);
        enhancer1.setInterfaces(classArray90);
        java.util.List list97 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods(class0, classArray90, list97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(callbackArray26);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(namingPolicy40);
        org.junit.Assert.assertNotNull(namingPolicy57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str77, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str81, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str85, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(classArray90);
    }

    @Test
    public void test04216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04216");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.asm.ClassAdapter classAdapter1 = new org.mockito.asm.ClassAdapter(classVisitor0);
        java.lang.Class<?> wildcardClass2 = classAdapter1.getClass();
        boolean boolean3 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        boolean boolean4 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        enhancer7.setSerialVersionUID((java.lang.Long) 0L);
        enhancer7.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setUseFactory(true);
        enhancer18.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        java.lang.Class<?> wildcardClass28 = classAdapter27.getClass();
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass28);
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor30);
        java.lang.Class<?> wildcardClass32 = classAdapter31.getClass();
        java.lang.String str33 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass32);
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor34);
        java.lang.Class<?> wildcardClass36 = classAdapter35.getClass();
        java.lang.String str37 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass36);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass40);
        java.lang.Class[] classArray42 = new java.lang.Class[] { wildcardClass28, wildcardClass32, wildcardClass36, wildcardClass40 };
        enhancer23.setInterfaces(classArray42);
        enhancer18.setInterfaces(classArray42);
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        java.lang.Class<?> wildcardClass47 = classAdapter46.getClass();
        java.lang.String str48 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        java.lang.String str49 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass47);
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor50);
        java.lang.Class<?> wildcardClass52 = classAdapter51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Class[] classArray55 = new java.lang.Class[] { wildcardClass47, wildcardClass52 };
        enhancer18.setInterfaces(classArray55);
        java.lang.ClassLoader classLoader57 = enhancer18.getClassLoader();
        enhancer7.setClassLoader(classLoader57);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setUseFactory(true);
        enhancer59.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter64 = null;
        enhancer59.setCallbackFilter(callbackFilter64);
        java.lang.ClassLoader classLoader66 = enhancer59.getClassLoader();
        enhancer7.setClassLoader(classLoader66);
        boolean boolean68 = type5.equals((java.lang.Object) enhancer7);
        java.lang.String str69 = type5.toString();
        boolean boolean71 = type5.equals((java.lang.Object) "L463541547");
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str29, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str33, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str37, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str48, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str49, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(classLoader57);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str69, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test04217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04217");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass25, wildcardClass29, wildcardClass33, wildcardClass37 };
        enhancer20.setInterfaces(classArray39);
        boolean boolean41 = enhancer20.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer20.getStrategy();
        enhancer0.setStrategy(generatorStrategy42);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer45.setCallback(callback48);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer45.setCallback(callback50);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer45.getStrategy();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        boolean boolean56 = type53.equals((java.lang.Object) classVisitor54);
        int int58 = type53.getOpcode(116);
        boolean boolean59 = generatorStrategy52.equals((java.lang.Object) 116);
        enhancer0.setStrategy(generatorStrategy52);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor62);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classAdapter64);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor67);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classAdapter69);
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo72 = classEmitter71.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter71.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        boolean boolean78 = generatorStrategy52.equals((java.lang.Object) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo81 = classEmitter80.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter82 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter80.setTarget((org.mockito.asm.ClassVisitor) classEmitter82);
        classEmitter79.setTarget((org.mockito.asm.ClassVisitor) classEmitter80);
        org.mockito.asm.ClassAdapter classAdapter85 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter80);
        java.lang.String[] strArray93 = new java.lang.String[] { "L1664594632", "L423416909" };
        // The following exception was thrown during execution in test generation
        try {
            classEmitter80.visit(104, 126, "L514461408", "L526913560", "L1153681534", strArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str26, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str34, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 116 + "'", int58 == 116);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(classInfo72);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(classInfo81);
        org.junit.Assert.assertNotNull(strArray93);
    }

    @Test
    public void test04218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04218");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        boolean boolean13 = enhancer0.getAttemptLoad();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer16.setCallback(callback19);
        enhancer16.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer23.setCallback(callback26);
        enhancer23.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer23.getNamingPolicy();
        enhancer16.setNamingPolicy(namingPolicy30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer32.setCallback(callback35);
        boolean boolean37 = enhancer32.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer38.setCallback(callback41);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter43 = null;
        enhancer38.setCallbackFilter(callbackFilter43);
        enhancer38.setSerialVersionUID((java.lang.Long) 0L);
        enhancer38.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setUseFactory(true);
        enhancer49.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        java.lang.Class<?> wildcardClass59 = classAdapter58.getClass();
        java.lang.String str60 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass59);
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        java.lang.Class<?> wildcardClass63 = classAdapter62.getClass();
        java.lang.String str64 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass63);
        org.mockito.asm.ClassVisitor classVisitor65 = null;
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor65);
        java.lang.Class<?> wildcardClass67 = classAdapter66.getClass();
        java.lang.String str68 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass67);
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor69);
        java.lang.Class<?> wildcardClass71 = classAdapter70.getClass();
        boolean boolean72 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass71);
        java.lang.Class[] classArray73 = new java.lang.Class[] { wildcardClass59, wildcardClass63, wildcardClass67, wildcardClass71 };
        enhancer54.setInterfaces(classArray73);
        enhancer49.setInterfaces(classArray73);
        org.mockito.asm.ClassVisitor classVisitor76 = null;
        org.mockito.asm.ClassAdapter classAdapter77 = new org.mockito.asm.ClassAdapter(classVisitor76);
        java.lang.Class<?> wildcardClass78 = classAdapter77.getClass();
        java.lang.String str79 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass78);
        java.lang.String str80 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass78);
        org.mockito.asm.ClassVisitor classVisitor81 = null;
        org.mockito.asm.ClassAdapter classAdapter82 = new org.mockito.asm.ClassAdapter(classVisitor81);
        java.lang.Class<?> wildcardClass83 = classAdapter82.getClass();
        boolean boolean84 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass83);
        boolean boolean85 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass83);
        java.lang.Class[] classArray86 = new java.lang.Class[] { wildcardClass78, wildcardClass83 };
        enhancer49.setInterfaces(classArray86);
        java.lang.ClassLoader classLoader88 = enhancer49.getClassLoader();
        enhancer38.setClassLoader(classLoader88);
        enhancer32.setClassLoader(classLoader88);
        enhancer16.setClassLoader(classLoader88);
        enhancer0.setClassLoader(classLoader88);
        enhancer0.setUseCache(false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str60, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str64, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str68, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str79, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str80, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(classArray86);
        org.junit.Assert.assertNotNull(classLoader88);
    }

    @Test
    public void test04219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04219");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter10);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer15.setCallback(callback18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer15.setCallback(callback20);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer15.getStrategy();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        boolean boolean24 = generatorStrategy22.equals((java.lang.Object) label23);
        java.lang.String str25 = label23.toString();
        java.lang.String str26 = label23.toString();
        label23.info = "L1546961225";
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        java.lang.String str30 = label29.toString();
        org.mockito.asm.Label label31 = new org.mockito.asm.Label();
        label29.info = label31;
        java.lang.String str33 = label29.toString();
        java.lang.String str34 = label29.toString();
        java.lang.String str35 = label29.toString();
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        java.lang.String str37 = label36.toString();
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        label36.info = label38;
        java.lang.String str40 = label36.toString();
        java.lang.String str41 = label36.toString();
        label29.info = label36;
        org.mockito.asm.Label label43 = new org.mockito.asm.Label();
        label43.info = 10.0f;
        java.lang.String str46 = label43.toString();
        java.lang.String str47 = label43.toString();
        label36.info = label43;
        java.lang.Object obj49 = label36.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitLocalVariable("L938153826", "L1748603513(VZVDDZ)I", "L56928119", label23, label36, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1627304146" + "'", str25, "L1627304146");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1627304146" + "'", str26, "L1627304146");
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1737022352" + "'", str30, "L1737022352");
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1737022352" + "'", str33, "L1737022352");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1737022352" + "'", str34, "L1737022352");
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L1737022352" + "'", str35, "L1737022352");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1190598337" + "'", str37, "L1190598337");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1190598337" + "'", str40, "L1190598337");
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L1190598337" + "'", str41, "L1190598337");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L651754080" + "'", str46, "L651754080");
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L651754080" + "'", str47, "L651754080");
        org.junit.Assert.assertNotNull(obj49);
// flaky:         org.junit.Assert.assertEquals(obj49.toString(), "L651754080");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "L651754080");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "L651754080");
    }

    @Test
    public void test04220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04220");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter9);
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        java.lang.String str15 = label14.toString();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        label14.info = label16;
        java.lang.Object obj18 = label14.info;
        java.lang.Object obj19 = label14.info;
        java.lang.String str20 = label14.toString();
        java.lang.Object obj21 = label14.info;
        java.lang.String str22 = label14.toString();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        enhancer23.setInterceptDuringConstruction(true);
        enhancer23.setSerialVersionUID((java.lang.Long) 10L);
        boolean boolean30 = enhancer23.getAttemptLoad();
        enhancer23.setUseCache(true);
        boolean boolean33 = enhancer23.getAttemptLoad();
        boolean boolean34 = enhancer23.getUseCache();
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass37);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass37);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass37);
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass37);
        java.lang.String str44 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass37);
        enhancer23.setSuperclass((java.lang.Class) wildcardClass37);
        label14.info = enhancer23;
        java.lang.String str47 = label14.toString();
        org.mockito.asm.Label label48 = new org.mockito.asm.Label();
        java.lang.String str49 = label48.toString();
        org.mockito.asm.Label label50 = new org.mockito.asm.Label();
        label48.info = label50;
        org.mockito.asm.Type type53 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local54 = new org.mockito.cglib.core.Local(0, type53);
        label48.info = 0;
        java.lang.String str56 = label48.toString();
        java.lang.String str57 = label48.toString();
        java.lang.String str58 = label48.toString();
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter10.visitLocalVariable("L1944138440", "(VZVDDZ)[Lorg/mockito/asm/Type;", "L1875141726", label14, label48, 160);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 160");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L983956752" + "'", str15, "L983956752");
        org.junit.Assert.assertNotNull(obj18);
// flaky:         org.junit.Assert.assertEquals(obj18.toString(), "L226758182");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "L226758182");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "L226758182");
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals(obj19.toString(), "L226758182");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "L226758182");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "L226758182");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L983956752" + "'", str20, "L983956752");
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals(obj21.toString(), "L226758182");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "L226758182");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "L226758182");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L983956752" + "'", str22, "L983956752");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str43, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str44, "org/mockito/asm/ClassAdapter");
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L983956752" + "'", str47, "L983956752");
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L479257205" + "'", str49, "L479257205");
        org.junit.Assert.assertNotNull(type53);
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L479257205" + "'", str56, "L479257205");
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L479257205" + "'", str57, "L479257205");
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "L479257205" + "'", str58, "L479257205");
    }

    @Test
    public void test04221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04221");
        java.lang.Class class0 = null;
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        enhancer1.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback6 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray7 = new org.mockito.cglib.proxy.Callback[] { callback6 };
        enhancer1.setCallbacks(callbackArray7);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter9 = null;
        enhancer1.setCallbackFilter(callbackFilter9);
        boolean boolean11 = enhancer1.getAttemptLoad();
        boolean boolean12 = enhancer1.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        java.lang.String str23 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass22);
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        java.lang.Class<?> wildcardClass26 = classAdapter25.getClass();
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        java.lang.Class<?> wildcardClass30 = classAdapter29.getClass();
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        java.lang.Class[] classArray32 = new java.lang.Class[] { wildcardClass18, wildcardClass22, wildcardClass26, wildcardClass30 };
        enhancer13.setInterfaces(classArray32);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter34 = null;
        enhancer13.setCallbackFilter(callbackFilter34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setUseFactory(true);
        enhancer36.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback41 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray42 = new org.mockito.cglib.proxy.Callback[] { callback41 };
        enhancer36.setCallbacks(callbackArray42);
        enhancer13.setCallbacks(callbackArray42);
        enhancer1.setCallbacks(callbackArray42);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerStaticCallbacks(class0, callbackArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str23, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str27, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(callbackArray42);
    }

    @Test
    public void test04222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04222");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        enhancer0.setInterceptDuringConstruction(true);
        boolean boolean5 = enhancer0.getAttemptLoad();
        boolean boolean6 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer7.setCallback(callback12);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy14 = enhancer7.getStrategy();
        boolean boolean15 = enhancer7.getUseCache();
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer7.setCallback(callback16);
        java.lang.ClassLoader classLoader18 = null;
        enhancer7.setClassLoader(classLoader18);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = null;
        enhancer7.setNamingPolicy(namingPolicy20);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        enhancer22.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback27 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray28 = new org.mockito.cglib.proxy.Callback[] { callback27 };
        enhancer22.setCallbacks(callbackArray28);
        enhancer22.setSerialVersionUID((java.lang.Long) 1L);
        java.lang.ClassLoader classLoader32 = enhancer22.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback36 = null;
        enhancer33.setCallback(callback36);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter38 = null;
        enhancer33.setCallbackFilter(callbackFilter38);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer33.setCallback(callback40);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer33.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer43.setCallback(callback46);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer43.setCallback(callback48);
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer50.setCallback(callback53);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter55 = null;
        enhancer50.setCallbackFilter(callbackFilter55);
        org.mockito.cglib.proxy.Callback callback57 = null;
        enhancer50.setCallback(callback57);
        org.mockito.cglib.core.NamingPolicy namingPolicy59 = enhancer50.getNamingPolicy();
        enhancer43.setNamingPolicy(namingPolicy59);
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        java.lang.Class<?> wildcardClass63 = classAdapter62.getClass();
        enhancer43.setSuperclass((java.lang.Class) wildcardClass63);
        enhancer33.setSuperclass((java.lang.Class) wildcardClass63);
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        enhancer66.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback69 = null;
        enhancer66.setCallback(callback69);
        org.mockito.cglib.proxy.Callback callback71 = null;
        enhancer66.setCallback(callback71);
        org.mockito.cglib.proxy.Enhancer enhancer73 = new org.mockito.cglib.proxy.Enhancer();
        enhancer73.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor76 = null;
        org.mockito.asm.ClassAdapter classAdapter77 = new org.mockito.asm.ClassAdapter(classVisitor76);
        java.lang.Class<?> wildcardClass78 = classAdapter77.getClass();
        java.lang.String str79 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass78);
        org.mockito.asm.ClassVisitor classVisitor80 = null;
        org.mockito.asm.ClassAdapter classAdapter81 = new org.mockito.asm.ClassAdapter(classVisitor80);
        java.lang.Class<?> wildcardClass82 = classAdapter81.getClass();
        java.lang.String str83 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass82);
        org.mockito.asm.ClassVisitor classVisitor84 = null;
        org.mockito.asm.ClassAdapter classAdapter85 = new org.mockito.asm.ClassAdapter(classVisitor84);
        java.lang.Class<?> wildcardClass86 = classAdapter85.getClass();
        java.lang.String str87 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass86);
        org.mockito.asm.ClassVisitor classVisitor88 = null;
        org.mockito.asm.ClassAdapter classAdapter89 = new org.mockito.asm.ClassAdapter(classVisitor88);
        java.lang.Class<?> wildcardClass90 = classAdapter89.getClass();
        boolean boolean91 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass90);
        java.lang.Class[] classArray92 = new java.lang.Class[] { wildcardClass78, wildcardClass82, wildcardClass86, wildcardClass90 };
        enhancer73.setInterfaces(classArray92);
        enhancer66.setInterfaces(classArray92);
        enhancer33.setInterfaces(classArray92);
        enhancer22.setInterfaces(classArray92);
        enhancer7.setInterfaces(classArray92);
        enhancer0.setInterfaces(classArray92);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(generatorStrategy14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(callbackArray28);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(namingPolicy59);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str79, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str83, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str87, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(classArray92);
    }

    @Test
    public void test04223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04223");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        java.lang.String str9 = label8.toString();
        boolean boolean10 = namingPolicy7.equals((java.lang.Object) str9);
        java.lang.Object obj11 = null;
        boolean boolean12 = namingPolicy7.equals(obj11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer13.setCallback(callback14);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer13.setCallback(callback16);
        enhancer13.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer13.getNamingPolicy();
        boolean boolean22 = namingPolicy20.equals((java.lang.Object) (byte) 100);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor24);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classAdapter26);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter28.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter30.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter34.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        boolean boolean41 = namingPolicy20.equals((java.lang.Object) classEmitter40);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        classEmitter40.setTarget(classVisitor42);
        boolean boolean44 = namingPolicy7.equals((java.lang.Object) classEmitter40);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter45 = classEmitter40.begin_static();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@4b24234c");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1783525119" + "'", str9, "L1783525119");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test04224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04224");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.asm.ClassAdapter classAdapter1 = new org.mockito.asm.ClassAdapter(classVisitor0);
        java.lang.Class<?> wildcardClass2 = classAdapter1.getClass();
        boolean boolean3 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        boolean boolean4 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        boolean boolean5 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type9 = type8.getElementType();
        int int11 = type8.getOpcode(10);
        org.mockito.asm.MethodVisitor methodVisitor14 = null;
        org.mockito.asm.MethodAdapter methodAdapter15 = new org.mockito.asm.MethodAdapter(methodVisitor14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter15);
        org.mockito.asm.MethodAdapter methodAdapter17 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter16);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        boolean boolean21 = type8.equals((java.lang.Object) localVariablesSorter20);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter20.visitCode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 14 + "'", int11 == 14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test04225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04225");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        enhancer7.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy14);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer18.setCallback(callback21);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer18.setCallback(callback23);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer18.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy25);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer0.getStrategy();
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor29);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classAdapter31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo45 = classEmitter44.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter50.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor57);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo62 = classEmitter61.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classEmitter63);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classEmitter63);
        org.mockito.cglib.core.ClassInfo classInfo66 = classEmitter63.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo68 = classEmitter67.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter67);
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter67);
        classEmitter63.setTarget((org.mockito.asm.ClassVisitor) classEmitter70);
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter70);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        org.mockito.cglib.core.ClassInfo classInfo74 = classEmitter72.getClassInfo();
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        enhancer75.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback78 = null;
        enhancer75.setCallback(callback78);
        org.mockito.cglib.proxy.Callback callback80 = null;
        enhancer75.setCallback(callback80);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy82 = enhancer75.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy83 = enhancer75.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter84 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor85 = null;
        org.mockito.asm.ClassAdapter classAdapter86 = new org.mockito.asm.ClassAdapter(classVisitor85);
        org.mockito.asm.ClassAdapter classAdapter87 = new org.mockito.asm.ClassAdapter(classVisitor85);
        classEmitter84.setTarget((org.mockito.asm.ClassVisitor) classAdapter87);
        boolean boolean89 = namingPolicy83.equals((java.lang.Object) classAdapter87);
        org.mockito.cglib.core.ClassEmitter classEmitter90 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter87);
        classEmitter72.setTarget((org.mockito.asm.ClassVisitor) classAdapter87);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo45);
        org.junit.Assert.assertNull(classInfo51);
        org.junit.Assert.assertNull(classInfo62);
        org.junit.Assert.assertNull(classInfo66);
        org.junit.Assert.assertNull(classInfo68);
        org.junit.Assert.assertNull(classInfo74);
        org.junit.Assert.assertNotNull(generatorStrategy82);
        org.junit.Assert.assertNotNull(namingPolicy83);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test04226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04226");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter32 = null;
        enhancer0.setCallbackFilter(callbackFilter32);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter36 = null;
        enhancer0.setCallbackFilter(callbackFilter36);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter38.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor43);
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classAdapter45);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo48 = classEmitter47.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter47.setTarget((org.mockito.asm.ClassVisitor) classEmitter49);
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.cglib.core.ClassInfo classInfo52 = classEmitter49.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter53);
        classEmitter49.setTarget((org.mockito.asm.ClassVisitor) classEmitter56);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo59 = classEmitter58.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        classEmitter49.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter62);
        classEmitter41.setTarget((org.mockito.asm.ClassVisitor) classEmitter63);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter63);
        org.mockito.cglib.core.ClassInfo classInfo66 = classEmitter63.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter63);
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter67);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter68);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNull(classInfo48);
        org.junit.Assert.assertNull(classInfo52);
        org.junit.Assert.assertNull(classInfo54);
        org.junit.Assert.assertNull(classInfo59);
        org.junit.Assert.assertNull(classInfo66);
    }

    @Test
    public void test04227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04227");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        enhancer13.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback18 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray19 = new org.mockito.cglib.proxy.Callback[] { callback18 };
        enhancer13.setCallbacks(callbackArray19);
        boolean boolean21 = enhancer13.getAttemptLoad();
        enhancer13.setUseFactory(false);
        boolean boolean24 = enhancer13.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer13.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer26.setCallback(callback29);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer26.setCallback(callback31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback36 = null;
        enhancer33.setCallback(callback36);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter38 = null;
        enhancer33.setCallbackFilter(callbackFilter38);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer33.setCallback(callback40);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer33.getNamingPolicy();
        enhancer26.setNamingPolicy(namingPolicy42);
        enhancer26.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        java.lang.Class<?> wildcardClass51 = classAdapter50.getClass();
        java.lang.String str52 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass51);
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.asm.ClassAdapter classAdapter54 = new org.mockito.asm.ClassAdapter(classVisitor53);
        java.lang.Class<?> wildcardClass55 = classAdapter54.getClass();
        java.lang.String str56 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass55);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        java.lang.Class<?> wildcardClass59 = classAdapter58.getClass();
        java.lang.String str60 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass59);
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        java.lang.Class<?> wildcardClass63 = classAdapter62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Class[] classArray65 = new java.lang.Class[] { wildcardClass51, wildcardClass55, wildcardClass59, wildcardClass63 };
        enhancer46.setInterfaces(classArray65);
        boolean boolean67 = enhancer46.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy68 = enhancer46.getStrategy();
        enhancer26.setStrategy(generatorStrategy68);
        enhancer13.setStrategy(generatorStrategy68);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter71 = null;
        enhancer13.setCallbackFilter(callbackFilter71);
        org.mockito.cglib.core.NamingPolicy namingPolicy73 = enhancer13.getNamingPolicy();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor74 = classEmitter8.visitField(39, "L1230487071", "L611465748", "L1322214470", (java.lang.Object) enhancer13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNotNull(callbackArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(generatorStrategy25);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str52, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str56, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str60, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(generatorStrategy68);
        org.junit.Assert.assertNotNull(namingPolicy73);
    }

    @Test
    public void test04228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04228");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass7 = enhancer0.getClass();
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        boolean boolean9 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer10.setCallback(callback11);
        enhancer10.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer15.setCallback(callback16);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer19.setCallback(callback22);
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer19.setCallback(callback24);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy26 = enhancer19.getStrategy();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        boolean boolean30 = type27.equals((java.lang.Object) classVisitor28);
        int int32 = type27.getOpcode(116);
        boolean boolean33 = generatorStrategy26.equals((java.lang.Object) 116);
        enhancer18.setStrategy(generatorStrategy26);
        enhancer15.setStrategy(generatorStrategy26);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setUseFactory(true);
        enhancer36.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter41 = null;
        enhancer36.setCallbackFilter(callbackFilter41);
        java.lang.ClassLoader classLoader43 = enhancer36.getClassLoader();
        enhancer15.setClassLoader(classLoader43);
        java.lang.ClassLoader classLoader45 = enhancer15.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        enhancer46.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        java.lang.Class<?> wildcardClass56 = classAdapter55.getClass();
        java.lang.String str57 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass56);
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        java.lang.Class<?> wildcardClass60 = classAdapter59.getClass();
        java.lang.String str61 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass60);
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        java.lang.Class<?> wildcardClass64 = classAdapter63.getClass();
        java.lang.String str65 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass64);
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        java.lang.Class<?> wildcardClass68 = classAdapter67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        java.lang.Class[] classArray70 = new java.lang.Class[] { wildcardClass56, wildcardClass60, wildcardClass64, wildcardClass68 };
        enhancer51.setInterfaces(classArray70);
        enhancer46.setInterfaces(classArray70);
        enhancer15.setInterfaces(classArray70);
        enhancer10.setInterfaces(classArray70);
        java.util.List list75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods((java.lang.Class) wildcardClass7, classArray70, list75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str8, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(generatorStrategy26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 116 + "'", int32 == 116);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str57, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str61, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str65, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(classArray70);
    }

    @Test
    public void test04229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04229");
        org.mockito.asm.MethodVisitor methodVisitor0 = null;
        org.mockito.asm.MethodAdapter methodAdapter1 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter2 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter4 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter4);
        org.mockito.asm.Label label6 = new org.mockito.asm.Label();
        java.lang.String str7 = label6.toString();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        label6.info = label8;
        java.lang.String str10 = label6.toString();
        java.lang.String str11 = label6.toString();
        java.lang.String str12 = label6.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        java.lang.String str14 = label13.toString();
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        label13.info = label15;
        java.lang.String str17 = label13.toString();
        java.lang.String str18 = label13.toString();
        label6.info = label13;
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.asm.ClassAdapter classAdapter22 = new org.mockito.asm.ClassAdapter(classVisitor21);
        org.mockito.asm.ClassAdapter classAdapter23 = new org.mockito.asm.ClassAdapter(classVisitor21);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classAdapter23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter25.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        label6.info = classEmitter34;
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer37.setCallback(callback40);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter42 = null;
        enhancer37.setCallbackFilter(callbackFilter42);
        org.mockito.cglib.proxy.Callback callback44 = null;
        enhancer37.setCallback(callback44);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer37.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer47.setCallback(callback52);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback57 = null;
        enhancer54.setCallback(callback57);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter59 = null;
        enhancer54.setCallbackFilter(callbackFilter59);
        org.mockito.cglib.proxy.Callback callback61 = null;
        enhancer54.setCallback(callback61);
        org.mockito.cglib.core.NamingPolicy namingPolicy63 = enhancer54.getNamingPolicy();
        enhancer47.setNamingPolicy(namingPolicy63);
        org.mockito.asm.ClassVisitor classVisitor65 = null;
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor65);
        java.lang.Class<?> wildcardClass67 = classAdapter66.getClass();
        enhancer47.setSuperclass((java.lang.Class) wildcardClass67);
        enhancer37.setSuperclass((java.lang.Class) wildcardClass67);
        enhancer37.setUseCache(true);
        enhancer37.setAttemptLoad(false);
        enhancer37.setAttemptLoad(true);
        org.mockito.asm.ClassVisitor classVisitor76 = null;
        org.mockito.asm.ClassAdapter classAdapter77 = new org.mockito.asm.ClassAdapter(classVisitor76);
        java.lang.Class<?> wildcardClass78 = classAdapter77.getClass();
        boolean boolean79 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass78);
        boolean boolean80 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass78);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass78);
        java.lang.String str82 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass78);
        java.lang.String str83 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass78);
        enhancer37.setSuperclass((java.lang.Class) wildcardClass78);
        label6.info = wildcardClass78;
        java.lang.Object obj86 = label6.info;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter4.visitLabel(label6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "L82340203" + "'", str7, "L82340203");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L82340203" + "'", str10, "L82340203");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L82340203" + "'", str11, "L82340203");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L82340203" + "'", str12, "L82340203");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1833778579" + "'", str14, "L1833778579");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1833778579" + "'", str17, "L1833778579");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1833778579" + "'", str18, "L1833778579");
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(namingPolicy63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str82, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str83, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class org.mockito.asm.ClassAdapter");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class org.mockito.asm.ClassAdapter");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class org.mockito.asm.ClassAdapter");
    }

    @Test
    public void test04230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04230");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        java.lang.String str9 = label8.toString();
        boolean boolean10 = namingPolicy7.equals((java.lang.Object) str9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.String str12 = type11.toString();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local16 = new org.mockito.cglib.core.Local(0, type15);
        org.mockito.cglib.core.Local local17 = new org.mockito.cglib.core.Local((int) (byte) 100, type15);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        boolean boolean25 = type22.equals((java.lang.Object) classVisitor23);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str27 = type26.getDescriptor();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        boolean boolean33 = type30.equals((java.lang.Object) classVisitor31);
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type21, type22, type26, type28, type29, type30 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray34);
        org.mockito.cglib.core.Signature signature36 = new org.mockito.cglib.core.Signature("L1057808593", type19, typeArray34);
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray34);
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray34);
        boolean boolean39 = namingPolicy7.equals((java.lang.Object) typeArray34);
        org.mockito.asm.Label label40 = new org.mockito.asm.Label();
        java.lang.String str41 = label40.toString();
        org.mockito.asm.Label label42 = new org.mockito.asm.Label();
        label40.info = label42;
        java.lang.Object obj44 = label42.info;
        boolean boolean45 = namingPolicy7.equals(obj44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer46.setCallback(callback49);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter51 = null;
        enhancer46.setCallbackFilter(callbackFilter51);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer46.setCallback(callback53);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback58 = null;
        enhancer55.setCallback(callback58);
        enhancer55.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass62 = enhancer55.getClass();
        enhancer46.setSuperclass((java.lang.Class) wildcardClass62);
        boolean boolean64 = enhancer46.getAttemptLoad();
        boolean boolean65 = enhancer46.getUseCache();
        enhancer46.setUseCache(true);
        org.mockito.cglib.proxy.Callback[] callbackArray68 = null;
        enhancer46.setCallbacks(callbackArray68);
        enhancer46.setAttemptLoad(true);
        boolean boolean72 = namingPolicy7.equals((java.lang.Object) enhancer46);
        boolean boolean73 = enhancer46.getUseCache();
        enhancer46.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        enhancer76.setUseFactory(true);
        enhancer76.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy81 = enhancer76.getStrategy();
        enhancer46.setStrategy(generatorStrategy81);
        java.lang.Class<?> wildcardClass83 = generatorStrategy81.getClass();
        org.junit.Assert.assertNotNull(namingPolicy7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1076218244" + "'", str9, "L1076218244");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "B" + "'", str12, "B");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "V" + "'", str27, "V");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(VZVDDZ)V" + "'", str35, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VZVDDZ)D" + "'", str37, "(VZVDDZ)D");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(VZVDDZ)B" + "'", str38, "(VZVDDZ)B");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L1187815395" + "'", str41, "L1187815395");
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(generatorStrategy81);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test04231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04231");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer1.setCallback(callback4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer1.setCallbackFilter(callbackFilter6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer1.setCallback(callback8);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer1.getNamingPolicy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(0, type12);
        int int14 = type12.getSort();
        java.lang.String str15 = type12.getClassName();
        java.lang.String str16 = type12.getClassName();
        boolean boolean17 = namingPolicy10.equals((java.lang.Object) type12);
        enhancer0.setNamingPolicy(namingPolicy10);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer19.setCallback(callback22);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter24 = null;
        enhancer19.setCallbackFilter(callbackFilter24);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer19.setCallback(callback26);
        enhancer19.setInterceptDuringConstruction(true);
        boolean boolean30 = namingPolicy10.equals((java.lang.Object) true);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor32);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classAdapter34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo37 = classEmitter36.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassInfo classInfo41 = classEmitter38.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter42.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo50 = classEmitter49.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        org.mockito.asm.ClassAdapter classAdapter56 = new org.mockito.asm.ClassAdapter(classVisitor54);
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classAdapter56);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo59 = classEmitter58.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter58.setTarget((org.mockito.asm.ClassVisitor) classEmitter60);
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classEmitter60);
        org.mockito.cglib.core.ClassInfo classInfo63 = classEmitter60.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo65 = classEmitter64.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter64);
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter64);
        classEmitter60.setTarget((org.mockito.asm.ClassVisitor) classEmitter67);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo70 = classEmitter69.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter69);
        classEmitter60.setTarget((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.cglib.core.ClassEmitter classEmitter74 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter52.setTarget((org.mockito.asm.ClassVisitor) classEmitter74);
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter74);
        org.mockito.cglib.core.ClassInfo classInfo77 = classEmitter74.getClassInfo();
        classEmitter45.setTarget((org.mockito.asm.ClassVisitor) classEmitter74);
        org.mockito.asm.ClassAdapter classAdapter79 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter74);
        boolean boolean80 = namingPolicy10.equals((java.lang.Object) classAdapter79);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor83 = classAdapter79.visitAnnotation("L175626987", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double" + "'", str15, "double");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double" + "'", str16, "double");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(classInfo37);
        org.junit.Assert.assertNull(classInfo41);
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertNull(classInfo50);
        org.junit.Assert.assertNull(classInfo59);
        org.junit.Assert.assertNull(classInfo63);
        org.junit.Assert.assertNull(classInfo65);
        org.junit.Assert.assertNull(classInfo70);
        org.junit.Assert.assertNull(classInfo77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test04232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04232");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter21 = null;
        enhancer0.setCallbackFilter(callbackFilter21);
        enhancer0.setAttemptLoad(true);
        java.lang.Class<?> wildcardClass25 = enhancer0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test04233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04233");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor7);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classAdapter9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter11.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer18.setCallback(callback21);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer18.setCallback(callback23);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer18.getStrategy();
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        boolean boolean27 = generatorStrategy25.equals((java.lang.Object) label26);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor29);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classAdapter31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassInfo classInfo44 = classEmitter42.getClassInfo();
        label26.info = classEmitter42;
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer46.setCallback(callback49);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter51 = null;
        enhancer46.setCallbackFilter(callbackFilter51);
        enhancer46.setSerialVersionUID((java.lang.Long) 0L);
        enhancer46.setUseCache(false);
        enhancer46.setUseFactory(false);
        boolean boolean59 = enhancer46.getAttemptLoad();
        enhancer46.setUseFactory(false);
        label26.info = enhancer46;
        java.lang.String str63 = label26.toString();
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor65 = null;
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor65);
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor65);
        classEmitter64.setTarget((org.mockito.asm.ClassVisitor) classAdapter67);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo70 = classEmitter69.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter69.setTarget((org.mockito.asm.ClassVisitor) classEmitter71);
        classEmitter64.setTarget((org.mockito.asm.ClassVisitor) classEmitter71);
        org.mockito.cglib.core.ClassInfo classInfo74 = classEmitter71.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter75 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo76 = classEmitter75.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter75);
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter75);
        classEmitter71.setTarget((org.mockito.asm.ClassVisitor) classEmitter78);
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter78);
        org.mockito.cglib.core.ClassEmitter classEmitter81 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter80);
        org.mockito.asm.ClassAdapter classAdapter82 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter80);
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter80);
        label26.info = classEmitter83;
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter83);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter83.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo4);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNotNull(generatorStrategy25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo44);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L1875830618" + "'", str63, "L1875830618");
        org.junit.Assert.assertNull(classInfo70);
        org.junit.Assert.assertNull(classInfo74);
        org.junit.Assert.assertNull(classInfo76);
    }

    @Test
    public void test04234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04234");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.Label label10 = new org.mockito.asm.Label();
        java.lang.String str11 = label10.toString();
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        label10.info = label12;
        java.lang.Object obj14 = label12.info;
        java.lang.String str15 = label12.toString();
        java.lang.Object obj16 = label12.info;
        label12.info = "[Ljava/lang/Class;";
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        java.lang.Class<?> wildcardClass21 = classAdapter20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        java.lang.String str24 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass21);
        label12.info = str24;
        java.lang.Object obj26 = label12.info;
        java.lang.Object obj27 = label12.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter9.visitLabel(label12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L1612617159" + "'", str11, "L1612617159");
        org.junit.Assert.assertNull(obj14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L2052414701" + "'", str15, "L2052414701");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str23, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str24, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", obj26, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", obj27, "org/mockito/asm/ClassAdapter");
    }

    @Test
    public void test04235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04235");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer10.setCallback(callback13);
        enhancer10.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.ClassLoader classLoader17 = enhancer10.getClassLoader();
        enhancer10.setUseCache(false);
        enhancer10.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer10.getStrategy();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor25);
        boolean boolean27 = type24.equals((java.lang.Object) classVisitor25);
        int int29 = type24.getOpcode(116);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type32 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        boolean boolean35 = type32.equals((java.lang.Object) classVisitor33);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str37 = type36.getDescriptor();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        boolean boolean43 = type40.equals((java.lang.Object) classVisitor41);
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type31, type32, type36, type38, type39, type40 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray44);
        org.mockito.cglib.core.Signature signature46 = new org.mockito.cglib.core.Signature("V", type24, typeArray44);
        java.lang.String str47 = signature46.toString();
        org.mockito.asm.Type type48 = signature46.getReturnType();
        org.mockito.asm.Type[] typeArray49 = signature46.getArgumentTypes();
        boolean boolean50 = generatorStrategy22.equals((java.lang.Object) typeArray49);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitLdcInsn((java.lang.Object) boolean50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader17);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 116 + "'", int29 == 116);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(VZVDDZ)V" + "'", str45, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "V(VZVDDZ)Z" + "'", str47, "V(VZVDDZ)Z");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test04236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04236");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer1.setCallback(callback4);
        enhancer1.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer1.getNamingPolicy();
        enhancer1.setSerialVersionUID((java.lang.Long) 100L);
        enhancer1.setInterceptDuringConstruction(true);
        enhancer1.setUseFactory(false);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        java.lang.String str18 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass17);
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass17);
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass17);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass17);
        java.lang.String str23 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass17);
        enhancer1.setSuperclass((java.lang.Class) wildcardClass17);
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass17);
        java.lang.String str26 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass17);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass17);
        org.mockito.asm.Type type28 = type27.getElementType();
        org.mockito.cglib.core.Local local29 = new org.mockito.cglib.core.Local(139, type27);
        int int30 = local29.getIndex();
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str18, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str21, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str23, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str25, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str26, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 139 + "'", int30 == 139);
    }

    @Test
    public void test04237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04237");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        boolean boolean7 = enhancer0.getAttemptLoad();
        java.lang.ClassLoader classLoader8 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setUseFactory(true);
        enhancer9.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback14 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray15 = new org.mockito.cglib.proxy.Callback[] { callback14 };
        enhancer9.setCallbacks(callbackArray15);
        boolean boolean17 = enhancer9.getAttemptLoad();
        enhancer9.setUseFactory(false);
        enhancer9.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor25);
        java.lang.Class<?> wildcardClass27 = classAdapter26.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        java.lang.Class<?> wildcardClass31 = classAdapter30.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass31);
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        java.lang.Class<?> wildcardClass35 = classAdapter34.getClass();
        java.lang.String str36 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass35);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        java.lang.Class<?> wildcardClass39 = classAdapter38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Class[] classArray41 = new java.lang.Class[] { wildcardClass27, wildcardClass31, wildcardClass35, wildcardClass39 };
        enhancer22.setInterfaces(classArray41);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter43 = null;
        enhancer22.setCallbackFilter(callbackFilter43);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        enhancer45.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback50 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray51 = new org.mockito.cglib.proxy.Callback[] { callback50 };
        enhancer45.setCallbacks(callbackArray51);
        enhancer22.setCallbacks(callbackArray51);
        java.lang.Class class54 = null;
        enhancer22.setSuperclass(class54);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy56 = enhancer22.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy57 = enhancer22.getNamingPolicy();
        enhancer9.setNamingPolicy(namingPolicy57);
        enhancer0.setNamingPolicy(namingPolicy57);
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(classLoader8);
        org.junit.Assert.assertNotNull(callbackArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str28, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str32, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str36, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(callbackArray51);
        org.junit.Assert.assertNotNull(generatorStrategy56);
        org.junit.Assert.assertNotNull(namingPolicy57);
    }

    @Test
    public void test04238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04238");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        boolean boolean9 = generatorStrategy7.equals((java.lang.Object) label8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor11);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classAdapter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter24.getClassInfo();
        label8.info = classEmitter24;
        java.lang.Object obj28 = label8.info;
        java.lang.Object obj29 = label8.info;
        // The following exception was thrown during execution in test generation
        try {
            int int30 = label8.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test04239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04239");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter7.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor17);
        classEmitter7.setTarget(classVisitor17);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor23);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classAdapter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter38.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo45 = classEmitter44.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor51);
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor51);
        classEmitter50.setTarget((org.mockito.asm.ClassVisitor) classAdapter53);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo56 = classEmitter55.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        classEmitter50.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter57.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo62 = classEmitter61.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        classEmitter57.setTarget((org.mockito.asm.ClassVisitor) classEmitter64);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter64);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.cglib.core.ClassInfo classInfo68 = classEmitter66.getClassInfo();
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback72 = null;
        enhancer69.setCallback(callback72);
        org.mockito.cglib.proxy.Callback callback74 = null;
        enhancer69.setCallback(callback74);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer69.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer69.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor79 = null;
        org.mockito.asm.ClassAdapter classAdapter80 = new org.mockito.asm.ClassAdapter(classVisitor79);
        org.mockito.asm.ClassAdapter classAdapter81 = new org.mockito.asm.ClassAdapter(classVisitor79);
        classEmitter78.setTarget((org.mockito.asm.ClassVisitor) classAdapter81);
        boolean boolean83 = namingPolicy77.equals((java.lang.Object) classAdapter81);
        org.mockito.cglib.core.ClassEmitter classEmitter84 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter81);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classAdapter81);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter66);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor89 = classEmitter7.visitAnnotation("L126623956", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNull(classInfo45);
        org.junit.Assert.assertNull(classInfo56);
        org.junit.Assert.assertNull(classInfo60);
        org.junit.Assert.assertNull(classInfo62);
        org.junit.Assert.assertNull(classInfo68);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test04240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04240");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter9);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter9);
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        java.lang.String str14 = label13.toString();
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        label13.info = label15;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local19 = new org.mockito.cglib.core.Local(0, type18);
        label13.info = 0;
        java.lang.String str21 = label13.toString();
        label13.info = "Z(VZVDDZ)Z";
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer24.setCallback(callback27);
        enhancer24.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass31 = enhancer24.getClass();
        label13.info = wildcardClass31;
        java.lang.String str33 = label13.toString();
        java.lang.Object obj34 = label13.info;
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer35.setCallback(callback38);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer35.setCallback(callback40);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer35.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer35.getNamingPolicy();
        label13.info = enhancer35;
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor48);
        java.lang.Class<?> wildcardClass50 = classAdapter49.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        java.lang.Class<?> wildcardClass54 = classAdapter53.getClass();
        java.lang.String str55 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass54);
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        java.lang.Class<?> wildcardClass58 = classAdapter57.getClass();
        java.lang.String str59 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass58);
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        org.mockito.asm.ClassAdapter classAdapter61 = new org.mockito.asm.ClassAdapter(classVisitor60);
        java.lang.Class<?> wildcardClass62 = classAdapter61.getClass();
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        java.lang.Class[] classArray64 = new java.lang.Class[] { wildcardClass50, wildcardClass54, wildcardClass58, wildcardClass62 };
        enhancer45.setInterfaces(classArray64);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter66 = null;
        enhancer45.setCallbackFilter(callbackFilter66);
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        enhancer68.setUseFactory(true);
        enhancer68.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback73 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray74 = new org.mockito.cglib.proxy.Callback[] { callback73 };
        enhancer68.setCallbacks(callbackArray74);
        enhancer45.setCallbacks(callbackArray74);
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer45.getNamingPolicy();
        boolean boolean79 = namingPolicy77.equals((java.lang.Object) "L953382637");
        enhancer35.setNamingPolicy(namingPolicy77);
        org.mockito.asm.Label label81 = new org.mockito.asm.Label();
        java.lang.String str82 = label81.toString();
        java.lang.Object obj83 = label81.info;
        boolean boolean84 = namingPolicy77.equals((java.lang.Object) label81);
        java.lang.Object obj85 = label81.info;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter11.visitLineNumber(129, label81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1065539753" + "'", str14, "L1065539753");
        org.junit.Assert.assertNotNull(type18);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1065539753" + "'", str21, "L1065539753");
        org.junit.Assert.assertNotNull(wildcardClass31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1065539753" + "'", str33, "L1065539753");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str51, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str55, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str59, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(classArray64);
        org.junit.Assert.assertNotNull(callbackArray74);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "L525937436" + "'", str82, "L525937436");
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test04241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04241");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        java.lang.String str17 = label16.toString();
        org.mockito.asm.Label label18 = new org.mockito.asm.Label();
        label16.info = label18;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local22 = new org.mockito.cglib.core.Local(0, type21);
        label16.info = 0;
        java.lang.String str24 = label16.toString();
        label16.info = "Z(VZVDDZ)Z";
        label16.info = 100.0d;
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        java.lang.String str30 = label29.toString();
        org.mockito.asm.Label label31 = new org.mockito.asm.Label();
        label29.info = label31;
        java.lang.Object obj33 = label29.info;
        java.lang.String str34 = label29.toString();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer35.setCallback(callback38);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter40 = null;
        enhancer35.setCallbackFilter(callbackFilter40);
        org.mockito.cglib.proxy.Callback callback42 = null;
        enhancer35.setCallback(callback42);
        enhancer35.setUseFactory(true);
        enhancer35.setUseFactory(false);
        label29.info = enhancer35;
        label16.info = enhancer35;
        java.lang.Object obj50 = label16.info;
        org.mockito.asm.Label label51 = new org.mockito.asm.Label();
        java.lang.String str52 = label51.toString();
        org.mockito.asm.Label label53 = new org.mockito.asm.Label();
        label51.info = label53;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        org.mockito.asm.ClassAdapter classAdapter61 = new org.mockito.asm.ClassAdapter(classVisitor60);
        boolean boolean62 = type59.equals((java.lang.Object) classVisitor60);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str64 = type63.getDescriptor();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        boolean boolean70 = type67.equals((java.lang.Object) classVisitor68);
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type58, type59, type63, type65, type66, type67 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray71);
        org.mockito.cglib.core.Signature signature73 = new org.mockito.cglib.core.Signature("L1057808593", type56, typeArray71);
        label53.info = type56;
        java.lang.String str75 = label53.toString();
        java.lang.String str76 = label53.toString();
        java.lang.String str77 = label53.toString();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitLocalVariable("L766268183", "L940377761", "L942129555", label16, label53, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 97");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1552739877" + "'", str17, "L1552739877");
        org.junit.Assert.assertNotNull(type21);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1552739877" + "'", str24, "L1552739877");
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1676204866" + "'", str30, "L1676204866");
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals(obj33.toString(), "L38186667");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "L38186667");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "L38186667");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1676204866" + "'", str34, "L1676204866");
        org.junit.Assert.assertNotNull(obj50);
// flaky:         org.junit.Assert.assertEquals("'" + str52 + "' != '" + "L27069565" + "'", str52, "L27069565");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "V" + "'", str64, "V");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VZVDDZ)V" + "'", str72, "(VZVDDZ)V");
// flaky:         org.junit.Assert.assertEquals("'" + str75 + "' != '" + "L956338792" + "'", str75, "L956338792");
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "L956338792" + "'", str76, "L956338792");
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L956338792" + "'", str77, "L956338792");
    }

    @Test
    public void test04242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04242");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        int int3 = type2.getSort();
        label0.info = type2;
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer5.setCallback(callback8);
        enhancer5.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer5.getNamingPolicy();
        boolean boolean14 = namingPolicy12.equals((java.lang.Object) 5);
        label0.info = boolean14;
        java.lang.Object obj16 = label0.info;
        java.lang.Object obj17 = label0.info;
        org.mockito.asm.Label label18 = new org.mockito.asm.Label();
        java.lang.String str19 = label18.toString();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        label18.info = label20;
        java.lang.String str22 = label18.toString();
        java.lang.String str23 = label18.toString();
        java.lang.String str24 = label18.toString();
        org.mockito.asm.Label label25 = new org.mockito.asm.Label();
        java.lang.String str26 = label25.toString();
        org.mockito.asm.Label label27 = new org.mockito.asm.Label();
        label25.info = label27;
        java.lang.String str29 = label25.toString();
        java.lang.String str30 = label25.toString();
        label18.info = label25;
        java.lang.Object obj32 = label18.info;
        org.mockito.cglib.core.Signature signature35 = new org.mockito.cglib.core.Signature("", "L361914688");
        org.mockito.asm.MethodVisitor methodVisitor38 = null;
        org.mockito.asm.MethodAdapter methodAdapter39 = new org.mockito.asm.MethodAdapter(methodVisitor38);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter40 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter39);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter41 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter40);
        boolean boolean42 = signature35.equals((java.lang.Object) localVariablesSorter40);
        org.mockito.asm.MethodAdapter methodAdapter43 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter40);
        org.mockito.asm.MethodAdapter methodAdapter44 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter40);
        label18.info = localVariablesSorter40;
        java.lang.String str46 = label18.toString();
        java.lang.String str47 = label18.toString();
        label0.info = label18;
        // The following exception was thrown during execution in test generation
        try {
            int int49 = label18.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + false + "'", obj16, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1596373290" + "'", str19, "L1596373290");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1596373290" + "'", str22, "L1596373290");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1596373290" + "'", str23, "L1596373290");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1596373290" + "'", str24, "L1596373290");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1015543030" + "'", str26, "L1015543030");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L1015543030" + "'", str29, "L1015543030");
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L1015543030" + "'", str30, "L1015543030");
        org.junit.Assert.assertNotNull(obj32);
// flaky:         org.junit.Assert.assertEquals(obj32.toString(), "L1015543030");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "L1015543030");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "L1015543030");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L1596373290" + "'", str46, "L1596373290");
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L1596373290" + "'", str47, "L1596373290");
    }

    @Test
    public void test04243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04243");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        boolean boolean21 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer0.getStrategy();
        boolean boolean24 = generatorStrategy22.equals((java.lang.Object) "boolean");
        boolean boolean26 = generatorStrategy22.equals((java.lang.Object) "L1102201750");
        org.mockito.asm.MethodVisitor methodVisitor29 = null;
        org.mockito.asm.MethodAdapter methodAdapter30 = new org.mockito.asm.MethodAdapter(methodVisitor29);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter31 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter30);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter32 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter31);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter33 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter31);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter34 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter31);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter35 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter34);
        org.mockito.asm.MethodAdapter methodAdapter36 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter34);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter37 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter34);
        boolean boolean38 = generatorStrategy22.equals((java.lang.Object) localVariablesSorter34);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter34.visitInsn((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test04244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04244");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getType("I");
        java.lang.String str3 = type2.getDescriptor();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        boolean boolean10 = type7.equals((java.lang.Object) classVisitor8);
        int int12 = type7.getOpcode(116);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        boolean boolean18 = type15.equals((java.lang.Object) classVisitor16);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str20 = type19.getDescriptor();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        boolean boolean26 = type23.equals((java.lang.Object) classVisitor24);
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type14, type15, type19, type21, type22, type23 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray27);
        org.mockito.cglib.core.Signature signature29 = new org.mockito.cglib.core.Signature("V", type7, typeArray27);
        org.mockito.cglib.core.Signature signature30 = new org.mockito.cglib.core.Signature("hi!", type5, typeArray27);
        org.mockito.cglib.core.Signature signature31 = new org.mockito.cglib.core.Signature("L1748603513", type2, typeArray27);
        org.mockito.asm.Type[] typeArray32 = signature31.getArgumentTypes();
        java.lang.String str33 = signature31.toString();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer34.setCallback(callback35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer38.setCallback(callback41);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer38.setCallback(callback43);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer38.getStrategy();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        boolean boolean49 = type46.equals((java.lang.Object) classVisitor47);
        int int51 = type46.getOpcode(116);
        boolean boolean52 = generatorStrategy45.equals((java.lang.Object) 116);
        enhancer37.setStrategy(generatorStrategy45);
        enhancer34.setStrategy(generatorStrategy45);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        enhancer55.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter60 = null;
        enhancer55.setCallbackFilter(callbackFilter60);
        java.lang.ClassLoader classLoader62 = enhancer55.getClassLoader();
        enhancer34.setClassLoader(classLoader62);
        boolean boolean64 = signature31.equals((java.lang.Object) enhancer34);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback66 = null;
        enhancer65.setCallback(callback66);
        java.lang.Class<?> wildcardClass68 = enhancer65.getClass();
        java.lang.String str69 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass68);
        enhancer34.setSuperclass((java.lang.Class) wildcardClass68);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = enhancer34.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "I" + "'", str3, "I");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 116 + "'", int12 == 116);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "V" + "'", str20, "V");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(VZVDDZ)V" + "'", str28, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1748603513(VZVDDZ)I" + "'", str33, "L1748603513(VZVDDZ)I");
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 116 + "'", int51 == 116);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str69, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type70);
    }

    @Test
    public void test04245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04245");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        enhancer5.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback10 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray11 = new org.mockito.cglib.proxy.Callback[] { callback10 };
        enhancer5.setCallbacks(callbackArray11);
        enhancer0.setCallbacks(callbackArray11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor15);
        classEmitter14.setTarget((org.mockito.asm.ClassVisitor) classAdapter17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter19.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter19.setTarget((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter14.setTarget((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter21.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray11);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo26);
    }

    @Test
    public void test04246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04246");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("", "L361914688");
        org.mockito.asm.MethodVisitor methodVisitor5 = null;
        org.mockito.asm.MethodAdapter methodAdapter6 = new org.mockito.asm.MethodAdapter(methodVisitor5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        boolean boolean9 = signature2.equals((java.lang.Object) localVariablesSorter7);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer14.setCallback(callback17);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer14.setCallback(callback19);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy21 = enhancer14.getStrategy();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        boolean boolean23 = generatorStrategy21.equals((java.lang.Object) label22);
        java.lang.Object obj24 = label22.info;
        java.lang.String str25 = label22.toString();
        java.lang.Object obj26 = label22.info;
        org.mockito.cglib.core.Signature signature29 = new org.mockito.cglib.core.Signature("L766897279", "L346406196");
        org.mockito.asm.Label label30 = new org.mockito.asm.Label();
        boolean boolean31 = signature29.equals((java.lang.Object) label30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor33);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter35);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter35);
        label30.info = classEmitter38;
        org.mockito.asm.Label label40 = new org.mockito.asm.Label();
        java.lang.Object obj41 = label40.info;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        int int43 = type42.getSort();
        label40.info = type42;
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer45.setCallback(callback48);
        enhancer45.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy52 = enhancer45.getNamingPolicy();
        boolean boolean54 = namingPolicy52.equals((java.lang.Object) 5);
        label40.info = boolean54;
        java.lang.String str56 = label40.toString();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter12.visitTryCatchBlock(label22, label30, label40, "L1251475828(VZVDDZ)Z");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(generatorStrategy21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1525521321" + "'", str25, "L1525521321");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertNotNull(namingPolicy52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L1844624538" + "'", str56, "L1844624538");
    }

    @Test
    public void test04247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04247");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        enhancer7.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy14);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer0.setCallback(callback18);
        org.junit.Assert.assertNotNull(namingPolicy14);
    }

    @Test
    public void test04248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04248");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor7);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classAdapter9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter11.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor25);
        boolean boolean27 = type24.equals((java.lang.Object) classVisitor25);
        int int29 = type24.getOpcode(116);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type32 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        boolean boolean35 = type32.equals((java.lang.Object) classVisitor33);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str37 = type36.getDescriptor();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        boolean boolean43 = type40.equals((java.lang.Object) classVisitor41);
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type31, type32, type36, type38, type39, type40 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray44);
        org.mockito.cglib.core.Signature signature46 = new org.mockito.cglib.core.Signature("V", type24, typeArray44);
        int int48 = type24.getOpcode((-1));
        int int50 = type24.getOpcode((int) 'a');
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor51);
        java.lang.Class<?> wildcardClass53 = classAdapter52.getClass();
        java.lang.String str54 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass53);
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass53);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass53);
        boolean boolean57 = type24.equals((java.lang.Object) type56);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int60 = type59.getSort();
        org.mockito.cglib.core.Local local61 = new org.mockito.cglib.core.Local(128, type59);
        org.mockito.asm.Type type62 = local61.getType();
        int int63 = local61.getIndex();
        boolean boolean64 = type56.equals((java.lang.Object) local61);
        org.mockito.asm.Type type65 = type56.getElementType();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor66 = classEmitter5.visitField(137, "L1248089390", "L1238515685", "L643828317", (java.lang.Object) type65);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo4);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 116 + "'", int29 == 116);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "V" + "'", str37, "V");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(VZVDDZ)V" + "'", str45, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 97 + "'", int50 == 97);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str54, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 128 + "'", int63 == 128);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(type65);
    }

    @Test
    public void test04249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04249");
        org.mockito.asm.MethodVisitor methodVisitor0 = null;
        org.mockito.asm.MethodAdapter methodAdapter1 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter2 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback6 = null;
        enhancer3.setCallback(callback6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer3.setCallback(callback8);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy10 = enhancer3.getStrategy();
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        boolean boolean12 = generatorStrategy10.equals((java.lang.Object) label11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor14);
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor14);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classAdapter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo19 = classEmitter18.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classEmitter20);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo25 = classEmitter24.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter27.getClassInfo();
        label11.info = classEmitter27;
        java.lang.Object obj31 = label11.info;
        org.mockito.asm.Label label32 = new org.mockito.asm.Label();
        java.lang.String str33 = label32.toString();
        org.mockito.asm.Label label34 = new org.mockito.asm.Label();
        label32.info = label34;
        java.lang.String str36 = label32.toString();
        java.lang.String str37 = label32.toString();
        java.lang.String str38 = label32.toString();
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        java.lang.String str40 = label39.toString();
        org.mockito.asm.Label label41 = new org.mockito.asm.Label();
        label39.info = label41;
        java.lang.String str43 = label39.toString();
        java.lang.String str44 = label39.toString();
        label32.info = label39;
        java.lang.String str46 = label39.toString();
        org.mockito.cglib.core.Signature signature49 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        java.lang.String str50 = signature49.toString();
        label39.info = str50;
        java.lang.Object obj52 = label39.info;
        label39.info = "L1197689513";
        org.mockito.asm.Label label55 = new org.mockito.asm.Label();
        java.lang.String str56 = label55.toString();
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        label55.info = label57;
        java.lang.Object obj59 = label55.info;
        java.lang.String str60 = label55.toString();
        java.lang.Object obj61 = label55.info;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter2.visitTryCatchBlock(label11, label39, label55, "L1642325298");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(classInfo19);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo25);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNotNull(obj31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1655036962" + "'", str33, "L1655036962");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1655036962" + "'", str36, "L1655036962");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1655036962" + "'", str37, "L1655036962");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L1655036962" + "'", str38, "L1655036962");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1158193767" + "'", str40, "L1158193767");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L1158193767" + "'", str43, "L1158193767");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L1158193767" + "'", str44, "L1158193767");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L1158193767" + "'", str46, "L1158193767");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Z(VZVDDZ)Z" + "'", str50, "Z(VZVDDZ)Z");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "Z(VZVDDZ)Z" + "'", obj52, "Z(VZVDDZ)Z");
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L1169351110" + "'", str56, "L1169351110");
        org.junit.Assert.assertNotNull(obj59);
// flaky:         org.junit.Assert.assertEquals(obj59.toString(), "L1843632680");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "L1843632680");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "L1843632680");
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "L1169351110" + "'", str60, "L1169351110");
        org.junit.Assert.assertNotNull(obj61);
// flaky:         org.junit.Assert.assertEquals(obj61.toString(), "L1843632680");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "L1843632680");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "L1843632680");
    }

    @Test
    public void test04250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04250");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        enhancer11.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        java.lang.Class<?> wildcardClass21 = classAdapter20.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass21);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Class[] classArray35 = new java.lang.Class[] { wildcardClass21, wildcardClass25, wildcardClass29, wildcardClass33 };
        enhancer16.setInterfaces(classArray35);
        enhancer11.setInterfaces(classArray35);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        java.lang.String str42 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        java.lang.Class<?> wildcardClass45 = classAdapter44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Class[] classArray48 = new java.lang.Class[] { wildcardClass40, wildcardClass45 };
        enhancer11.setInterfaces(classArray48);
        java.lang.ClassLoader classLoader50 = enhancer11.getClassLoader();
        enhancer0.setClassLoader(classLoader50);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setUseFactory(true);
        enhancer52.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter57 = null;
        enhancer52.setCallbackFilter(callbackFilter57);
        java.lang.ClassLoader classLoader59 = enhancer52.getClassLoader();
        enhancer0.setClassLoader(classLoader59);
        java.lang.ClassLoader classLoader61 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter62 = null;
        enhancer0.setCallbackFilter(callbackFilter62);
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        java.lang.Class<?> wildcardClass66 = classAdapter65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.String str68 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass66);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass66);
        boolean boolean70 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy71 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter72 = null;
        enhancer0.setCallbackFilter(callbackFilter72);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str22, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str26, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str41, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str42, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(classArray48);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertNotNull(classLoader59);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str68, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(namingPolicy71);
    }

    @Test
    public void test04251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04251");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classAdapter12);
        boolean boolean14 = namingPolicy8.equals((java.lang.Object) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor17);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classAdapter19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter21.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter36.getClassInfo();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor47 = classEmitter15.visitMethod((int) (short) 0, "[Ljava/lang/Class;", "", "L588125581", strArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@4ea73655");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNotNull(strArray46);
    }

    @Test
    public void test04252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04252");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        boolean boolean7 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(true);
        boolean boolean10 = enhancer0.getAttemptLoad();
        boolean boolean11 = enhancer0.getUseCache();
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        boolean boolean15 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass14);
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass14);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        java.lang.String str20 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass14);
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass14);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor24);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classAdapter26);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter28.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter30.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter34.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor44);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classAdapter46);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo49 = classEmitter48.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassInfo classInfo53 = classEmitter43.getClassInfo();
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo57 = classEmitter56.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter56);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter56);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str20, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str21, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo49);
        org.junit.Assert.assertNull(classInfo53);
        org.junit.Assert.assertNull(classInfo57);
    }

    @Test
    public void test04253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04253");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        java.lang.String str13 = label12.toString();
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        label12.info = label14;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local18 = new org.mockito.cglib.core.Local(0, type17);
        label12.info = 0;
        java.lang.String str20 = label12.toString();
        label12.info = "Z(VZVDDZ)Z";
        java.lang.Object obj23 = label12.info;
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer24.setCallback(callback27);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer24.setCallback(callback29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer31.setCallback(callback34);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter36 = null;
        enhancer31.setCallbackFilter(callbackFilter36);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer31.setCallback(callback38);
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer31.getNamingPolicy();
        enhancer24.setNamingPolicy(namingPolicy40);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor42);
        java.lang.Class<?> wildcardClass44 = classAdapter43.getClass();
        enhancer24.setSuperclass((java.lang.Class) wildcardClass44);
        boolean boolean46 = enhancer24.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter47 = null;
        enhancer24.setCallbackFilter(callbackFilter47);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        java.lang.Class<?> wildcardClass54 = classAdapter53.getClass();
        java.lang.String str55 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass54);
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        java.lang.Class<?> wildcardClass58 = classAdapter57.getClass();
        java.lang.String str59 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass58);
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        org.mockito.asm.ClassAdapter classAdapter61 = new org.mockito.asm.ClassAdapter(classVisitor60);
        java.lang.Class<?> wildcardClass62 = classAdapter61.getClass();
        java.lang.String str63 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass62);
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        java.lang.Class<?> wildcardClass66 = classAdapter65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Class[] classArray68 = new java.lang.Class[] { wildcardClass54, wildcardClass58, wildcardClass62, wildcardClass66 };
        enhancer49.setInterfaces(classArray68);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter70 = null;
        enhancer49.setCallbackFilter(callbackFilter70);
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        enhancer72.setUseFactory(true);
        enhancer72.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback77 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray78 = new org.mockito.cglib.proxy.Callback[] { callback77 };
        enhancer72.setCallbacks(callbackArray78);
        enhancer49.setCallbacks(callbackArray78);
        enhancer24.setCallbacks(callbackArray78);
        org.mockito.cglib.proxy.Callback callback82 = null;
        enhancer24.setCallback(callback82);
        boolean boolean84 = enhancer24.getUseCache();
        label12.info = boolean84;
        java.lang.Object obj86 = label12.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter11.visitLabel(label12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L241363887" + "'", str13, "L241363887");
        org.junit.Assert.assertNotNull(type17);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L241363887" + "'", str20, "L241363887");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "Z(VZVDDZ)Z" + "'", obj23, "Z(VZVDDZ)Z");
        org.junit.Assert.assertNotNull(namingPolicy40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str55, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str59, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str63, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertNotNull(callbackArray78);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + true + "'", obj86, true);
    }

    @Test
    public void test04254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04254");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter12 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter11);
        org.mockito.asm.MethodAdapter methodAdapter13 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter12);
        org.mockito.asm.MethodAdapter methodAdapter14 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter13);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer16.setCallback(callback19);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer16.setCallback(callback21);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = enhancer16.getStrategy();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        boolean boolean25 = generatorStrategy23.equals((java.lang.Object) label24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor27);
        classEmitter26.setTarget((org.mockito.asm.ClassVisitor) classAdapter29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter33);
        classEmitter26.setTarget((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter37.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter40.getClassInfo();
        label24.info = classEmitter40;
        java.lang.String str44 = label24.toString();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer46.setCallback(callback49);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter51 = null;
        enhancer46.setCallbackFilter(callbackFilter51);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer46.setCallback(callback53);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer46.getNamingPolicy();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local58 = new org.mockito.cglib.core.Local(0, type57);
        int int59 = type57.getSort();
        java.lang.String str60 = type57.getClassName();
        java.lang.String str61 = type57.getClassName();
        boolean boolean62 = namingPolicy55.equals((java.lang.Object) type57);
        enhancer45.setNamingPolicy(namingPolicy55);
        label24.info = namingPolicy55;
        java.lang.String str65 = label24.toString();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        int int67 = type66.getSize();
        java.lang.String str68 = type66.getClassName();
        label24.info = type66;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter13.visitJumpInsn(8, label24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo42);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L402386062" + "'", str44, "L402386062");
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "double" + "'", str60, "double");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "double" + "'", str61, "double");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L402386062" + "'", str65, "L402386062");
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "short" + "'", str68, "short");
    }

    @Test
    public void test04255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04255");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.asm.MethodAdapter methodAdapter7 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        java.lang.String str10 = label9.toString();
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        label9.info = label11;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local15 = new org.mockito.cglib.core.Local(0, type14);
        label9.info = 0;
        java.lang.String str17 = label9.toString();
        label9.info = "Z(VZVDDZ)Z";
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer20.setCallback(callback23);
        enhancer20.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass27 = enhancer20.getClass();
        label9.info = wildcardClass27;
        java.lang.String str29 = label9.toString();
        java.lang.Object obj30 = label9.info;
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer31.setCallback(callback34);
        org.mockito.cglib.proxy.Callback callback36 = null;
        enhancer31.setCallback(callback36);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy38 = enhancer31.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer31.getNamingPolicy();
        label9.info = enhancer31;
        java.lang.String str41 = label9.toString();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter5.visitLabel(label9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L978499689" + "'", str10, "L978499689");
        org.junit.Assert.assertNotNull(type14);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L978499689" + "'", str17, "L978499689");
        org.junit.Assert.assertNotNull(wildcardClass27);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L978499689" + "'", str29, "L978499689");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(generatorStrategy38);
        org.junit.Assert.assertNotNull(namingPolicy39);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L978499689" + "'", str41, "L978499689");
    }

    @Test
    public void test04256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04256");
        org.mockito.asm.MethodVisitor methodVisitor0 = null;
        org.mockito.asm.MethodAdapter methodAdapter1 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter2 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter4 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer8.setCallback(callback11);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer8.setCallback(callback13);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy15 = enhancer8.getStrategy();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        boolean boolean17 = generatorStrategy15.equals((java.lang.Object) label16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor19);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classAdapter21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter25.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter32.getClassInfo();
        label16.info = classEmitter32;
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer36.setCallback(callback39);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter41 = null;
        enhancer36.setCallbackFilter(callbackFilter41);
        enhancer36.setSerialVersionUID((java.lang.Long) 0L);
        enhancer36.setUseCache(false);
        enhancer36.setUseFactory(false);
        boolean boolean49 = enhancer36.getAttemptLoad();
        enhancer36.setUseFactory(false);
        label16.info = enhancer36;
        java.lang.String str53 = label16.toString();
        java.lang.Object obj54 = label16.info;
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter5.visitTableSwitchInsn(6, 103, label16, labelArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L8999400" + "'", str53, "L8999400");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(labelArray55);
    }

    @Test
    public void test04257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04257");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local3 = new org.mockito.cglib.core.Local(0, type2);
        org.mockito.cglib.core.Local local4 = new org.mockito.cglib.core.Local((int) (byte) 100, type2);
        org.mockito.asm.Type type5 = local4.getType();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setUseFactory(true);
        enhancer6.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean11 = type5.equals((java.lang.Object) enhancer6);
        java.lang.ClassLoader classLoader12 = enhancer6.getClassLoader();
        boolean boolean13 = enhancer6.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer14.setCallback(callback17);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer14.setCallback(callback19);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy21 = enhancer14.getStrategy();
        boolean boolean22 = enhancer14.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer14.setCallbackFilter(callbackFilter23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setUseFactory(true);
        enhancer25.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback30 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray31 = new org.mockito.cglib.proxy.Callback[] { callback30 };
        enhancer25.setCallbacks(callbackArray31);
        boolean boolean33 = enhancer25.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy34 = enhancer25.getStrategy();
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        java.lang.String str36 = label35.toString();
        org.mockito.asm.Label label37 = new org.mockito.asm.Label();
        label35.info = label37;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local41 = new org.mockito.cglib.core.Local(0, type40);
        label35.info = 0;
        java.lang.String str43 = label35.toString();
        label35.info = "Z(VZVDDZ)Z";
        boolean boolean46 = generatorStrategy34.equals((java.lang.Object) "Z(VZVDDZ)Z");
        enhancer14.setStrategy(generatorStrategy34);
        enhancer6.setStrategy(generatorStrategy34);
        boolean boolean50 = generatorStrategy34.equals((java.lang.Object) "L1350627622");
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback54 = null;
        enhancer51.setCallback(callback54);
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer51.setCallback(callback56);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        enhancer58.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback61 = null;
        enhancer58.setCallback(callback61);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter63 = null;
        enhancer58.setCallbackFilter(callbackFilter63);
        org.mockito.cglib.proxy.Callback callback65 = null;
        enhancer58.setCallback(callback65);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer58.getNamingPolicy();
        enhancer51.setNamingPolicy(namingPolicy67);
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor69);
        java.lang.Class<?> wildcardClass71 = classAdapter70.getClass();
        enhancer51.setSuperclass((java.lang.Class) wildcardClass71);
        boolean boolean73 = enhancer51.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter74 = null;
        enhancer51.setCallbackFilter(callbackFilter74);
        boolean boolean76 = enhancer51.getAttemptLoad();
        boolean boolean77 = enhancer51.getUseCache();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray78 = generatorStrategy34.generate((org.mockito.cglib.core.ClassGenerator) enhancer51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(classLoader12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(generatorStrategy21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(callbackArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(generatorStrategy34);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1591392864" + "'", str36, "L1591392864");
        org.junit.Assert.assertNotNull(type40);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L1591392864" + "'", str43, "L1591392864");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test04258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04258");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.ClassLoader classLoader7 = enhancer0.getClassLoader();
        enhancer0.setUseCache(false);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer13.setCallback(callback16);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter18 = null;
        enhancer13.setCallbackFilter(callbackFilter18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer13.setCallback(callback20);
        enhancer13.setAttemptLoad(true);
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        java.lang.Class<?> wildcardClass26 = classAdapter25.getClass();
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        enhancer13.setSuperclass((java.lang.Class) wildcardClass26);
        java.lang.ClassLoader classLoader29 = enhancer13.getClassLoader();
        boolean boolean30 = namingPolicy12.equals((java.lang.Object) classLoader29);
        org.mockito.asm.MethodVisitor methodVisitor33 = null;
        org.mockito.asm.MethodAdapter methodAdapter34 = new org.mockito.asm.MethodAdapter(methodVisitor33);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter35 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter34);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter36 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter35);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter37 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter35);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter38 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter35);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter39 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter38);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter40 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter39);
        boolean boolean41 = namingPolicy12.equals((java.lang.Object) localVariablesSorter40);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter40.visitInsn(126);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str27, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test04259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04259");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy5 = enhancer0.getStrategy();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        boolean boolean14 = type11.equals((java.lang.Object) classVisitor12);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str16 = type15.getDescriptor();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        boolean boolean22 = type19.equals((java.lang.Object) classVisitor20);
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type10, type11, type15, type17, type18, type19 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray23);
        org.mockito.cglib.core.Signature signature25 = new org.mockito.cglib.core.Signature("L1057808593", type8, typeArray23);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        boolean boolean33 = type30.equals((java.lang.Object) classVisitor31);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str35 = type34.getDescriptor();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        boolean boolean41 = type38.equals((java.lang.Object) classVisitor39);
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type29, type30, type34, type36, type37, type38 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray42);
        org.mockito.cglib.core.Signature signature44 = new org.mockito.cglib.core.Signature("L1057808593", type27, typeArray42);
        org.mockito.cglib.core.Signature signature45 = new org.mockito.cglib.core.Signature("Lorg/mockito/cglib/proxy/Enhancer;", type8, typeArray42);
        java.lang.String str46 = signature45.getDescriptor();
        org.mockito.asm.Type type47 = signature45.getReturnType();
        java.lang.Class<?> wildcardClass48 = type47.getClass();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        java.lang.String str50 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass48);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.asm.Type");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy5);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "V" + "'", str16, "V");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VZVDDZ)V" + "'", str24, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "V" + "'", str35, "V");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(VZVDDZ)V" + "'", str43, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(VZVDDZ)F" + "'", str46, "(VZVDDZ)F");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org/mockito/asm/Type" + "'", str50, "org/mockito/asm/Type");
    }

    @Test
    public void test04260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04260");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        enhancer0.setUseCache(false);
        boolean boolean11 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        java.lang.ClassLoader classLoader13 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer16.setCallback(callback17);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer20.setCallback(callback23);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer20.setCallback(callback25);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer20.getStrategy();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        boolean boolean31 = type28.equals((java.lang.Object) classVisitor29);
        int int33 = type28.getOpcode(116);
        boolean boolean34 = generatorStrategy27.equals((java.lang.Object) 116);
        enhancer19.setStrategy(generatorStrategy27);
        enhancer16.setStrategy(generatorStrategy27);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setUseFactory(true);
        enhancer37.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter42 = null;
        enhancer37.setCallbackFilter(callbackFilter42);
        java.lang.ClassLoader classLoader44 = enhancer37.getClassLoader();
        enhancer16.setClassLoader(classLoader44);
        enhancer16.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setUseFactory(true);
        boolean boolean51 = enhancer48.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        java.lang.Class<?> wildcardClass54 = classAdapter53.getClass();
        java.lang.String str55 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass54);
        enhancer48.setSuperclass((java.lang.Class) wildcardClass54);
        enhancer16.setSuperclass((java.lang.Class) wildcardClass54);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass54);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.asm.ClassAdapter");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 116 + "'", int33 == 116);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str55, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type58);
    }

    @Test
    public void test04261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04261");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer5.setCallback(callback8);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer5.setCallback(callback10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer12.setCallback(callback15);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter17 = null;
        enhancer12.setCallbackFilter(callbackFilter17);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer12.setCallback(callback19);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer12.getNamingPolicy();
        enhancer5.setNamingPolicy(namingPolicy21);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        enhancer5.setSuperclass((java.lang.Class) wildcardClass25);
        boolean boolean27 = enhancer5.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        enhancer28.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor36 = null;
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter(classVisitor36);
        java.lang.Class<?> wildcardClass38 = classAdapter37.getClass();
        java.lang.String str39 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        java.lang.Class<?> wildcardClass42 = classAdapter41.getClass();
        java.lang.String str43 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass42);
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        java.lang.Class<?> wildcardClass46 = classAdapter45.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor48);
        java.lang.Class<?> wildcardClass50 = classAdapter49.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        java.lang.Class[] classArray52 = new java.lang.Class[] { wildcardClass38, wildcardClass42, wildcardClass46, wildcardClass50 };
        enhancer33.setInterfaces(classArray52);
        enhancer28.setInterfaces(classArray52);
        enhancer5.setInterfaces(classArray52);
        enhancer0.setInterfaces(classArray52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class57 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str39, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str43, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str47, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(classArray52);
    }

    @Test
    public void test04262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04262");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L766897279", "L346406196");
        org.mockito.asm.Label label3 = new org.mockito.asm.Label();
        boolean boolean4 = signature2.equals((java.lang.Object) label3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter(classVisitor6);
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor6);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classAdapter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter8);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter8);
        label3.info = classEmitter11;
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        java.lang.Class<?> wildcardClass19 = classAdapter18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type23 = type22.getElementType();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer24.setCallback(callback27);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter29 = null;
        enhancer24.setCallbackFilter(callbackFilter29);
        enhancer24.setSerialVersionUID((java.lang.Long) 0L);
        enhancer24.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setUseFactory(true);
        enhancer35.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        java.lang.Class<?> wildcardClass45 = classAdapter44.getClass();
        java.lang.String str46 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass45);
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        java.lang.Class<?> wildcardClass49 = classAdapter48.getClass();
        java.lang.String str50 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass49);
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor51);
        java.lang.Class<?> wildcardClass53 = classAdapter52.getClass();
        java.lang.String str54 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass53);
        org.mockito.asm.ClassVisitor classVisitor55 = null;
        org.mockito.asm.ClassAdapter classAdapter56 = new org.mockito.asm.ClassAdapter(classVisitor55);
        java.lang.Class<?> wildcardClass57 = classAdapter56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Class[] classArray59 = new java.lang.Class[] { wildcardClass45, wildcardClass49, wildcardClass53, wildcardClass57 };
        enhancer40.setInterfaces(classArray59);
        enhancer35.setInterfaces(classArray59);
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        java.lang.Class<?> wildcardClass64 = classAdapter63.getClass();
        java.lang.String str65 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass64);
        java.lang.String str66 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass64);
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        java.lang.Class<?> wildcardClass69 = classAdapter68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Class[] classArray72 = new java.lang.Class[] { wildcardClass64, wildcardClass69 };
        enhancer35.setInterfaces(classArray72);
        java.lang.ClassLoader classLoader74 = enhancer35.getClassLoader();
        enhancer24.setClassLoader(classLoader74);
        org.mockito.cglib.proxy.Enhancer enhancer76 = new org.mockito.cglib.proxy.Enhancer();
        enhancer76.setUseFactory(true);
        enhancer76.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter81 = null;
        enhancer76.setCallbackFilter(callbackFilter81);
        java.lang.ClassLoader classLoader83 = enhancer76.getClassLoader();
        enhancer24.setClassLoader(classLoader83);
        boolean boolean85 = type22.equals((java.lang.Object) enhancer24);
        java.lang.ClassLoader classLoader86 = enhancer24.getClassLoader();
        enhancer24.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.core.NamingPolicy namingPolicy89 = enhancer24.getNamingPolicy();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor90 = classEmitter11.visitField(114, "LL1748603513(VZVDDZ)I;", "L1447076962", "L826500690", (java.lang.Object) enhancer24);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str46, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str50, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str54, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str65, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str66, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(classArray72);
        org.junit.Assert.assertNotNull(classLoader74);
        org.junit.Assert.assertNotNull(classLoader83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(classLoader86);
        org.junit.Assert.assertNotNull(namingPolicy89);
    }

    @Test
    public void test04263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04263");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.asm.MethodAdapter methodAdapter6 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer8.setCallback(callback11);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer8.setCallback(callback13);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy15 = enhancer8.getStrategy();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        boolean boolean17 = generatorStrategy15.equals((java.lang.Object) label16);
        java.lang.String str18 = label16.toString();
        java.lang.String str19 = label16.toString();
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        java.lang.String str23 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass22);
        java.lang.String str24 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass22);
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass22);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass22);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.String str28 = type27.toString();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local32 = new org.mockito.cglib.core.Local(0, type31);
        org.mockito.cglib.core.Local local33 = new org.mockito.cglib.core.Local((int) (byte) 100, type31);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        boolean boolean41 = type38.equals((java.lang.Object) classVisitor39);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str43 = type42.getDescriptor();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type46 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        boolean boolean49 = type46.equals((java.lang.Object) classVisitor47);
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type37, type38, type42, type44, type45, type46 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray50);
        org.mockito.cglib.core.Signature signature52 = new org.mockito.cglib.core.Signature("L1057808593", type35, typeArray50);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray50);
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray50);
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray50);
        int int56 = type26.getDimensions();
        org.mockito.asm.Type[] typeArray58 = org.mockito.asm.Type.getArgumentTypes("(VZVDDZ)Lorg/mockito/asm/ClassAdapter;");
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray58);
        label16.info = type26;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter5.visitLabel(label16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1506129343" + "'", str18, "L1506129343");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1506129343" + "'", str19, "L1506129343");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str23, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str24, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str25, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "B" + "'", str28, "B");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "V" + "'", str43, "V");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VZVDDZ)V" + "'", str51, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(VZVDDZ)D" + "'", str53, "(VZVDDZ)D");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(VZVDDZ)B" + "'", str54, "(VZVDDZ)B");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;" + "'", str55, "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;" + "'", str59, "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;");
    }

    @Test
    public void test04264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04264");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.asm.ClassAdapter classAdapter22 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo24 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter28.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter28);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter28);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter20.getClassInfo();
        org.mockito.asm.Label label37 = new org.mockito.asm.Label();
        label37.info = 10.0f;
        java.lang.String str40 = label37.toString();
        java.lang.String str41 = label37.toString();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer42.setCallback(callback43);
        enhancer42.setInterceptDuringConstruction(true);
        boolean boolean47 = enhancer42.getAttemptLoad();
        enhancer42.setUseFactory(true);
        enhancer42.setInterceptDuringConstruction(true);
        label37.info = true;
        org.mockito.asm.Label label53 = new org.mockito.asm.Label();
        java.lang.String str54 = label53.toString();
        org.mockito.asm.Label label55 = new org.mockito.asm.Label();
        label53.info = label55;
        java.lang.String str57 = label53.toString();
        java.lang.String str58 = label53.toString();
        java.lang.String str59 = label53.toString();
        org.mockito.asm.Label label60 = new org.mockito.asm.Label();
        java.lang.String str61 = label60.toString();
        org.mockito.asm.Label label62 = new org.mockito.asm.Label();
        label60.info = label62;
        java.lang.String str64 = label60.toString();
        java.lang.String str65 = label60.toString();
        label53.info = label60;
        label37.info = label60;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int70 = type69.getSort();
        java.lang.String str71 = type69.getDescriptor();
        java.lang.String str72 = type69.getDescriptor();
        org.mockito.cglib.core.Local local73 = new org.mockito.cglib.core.Local((int) (byte) 1, type69);
        org.mockito.asm.Type type74 = local73.getType();
        label37.info = type74;
        java.lang.Class<?> wildcardClass76 = type74.getClass();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor77 = classEmitter20.visitField(60, "Lvoid;", "", "L1621846574", (java.lang.Object) wildcardClass76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo24);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo32);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L732819435" + "'", str40, "L732819435");
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L732819435" + "'", str41, "L732819435");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L2061226053" + "'", str54, "L2061226053");
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L2061226053" + "'", str57, "L2061226053");
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "L2061226053" + "'", str58, "L2061226053");
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L2061226053" + "'", str59, "L2061226053");
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L1793477357" + "'", str61, "L1793477357");
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "L1793477357" + "'", str64, "L1793477357");
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L1793477357" + "'", str65, "L1793477357");
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Z" + "'", str71, "Z");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Z" + "'", str72, "Z");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test04265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04265");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = 10.0f;
        java.lang.String str3 = label0.toString();
        java.lang.String str4 = label0.toString();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback6 = null;
        enhancer5.setCallback(callback6);
        enhancer5.setInterceptDuringConstruction(true);
        boolean boolean10 = enhancer5.getAttemptLoad();
        enhancer5.setUseFactory(true);
        enhancer5.setInterceptDuringConstruction(true);
        label0.info = true;
        org.mockito.asm.MethodVisitor methodVisitor18 = null;
        org.mockito.asm.MethodAdapter methodAdapter19 = new org.mockito.asm.MethodAdapter(methodVisitor18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.asm.MethodAdapter methodAdapter23 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        label0.info = localVariablesSorter24;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter26 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter24);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter26.visitVarInsn(2, 99);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L710449446" + "'", str3, "L710449446");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L710449446" + "'", str4, "L710449446");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test04266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04266");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass20);
        boolean boolean22 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer0.setCallbackFilter(callbackFilter23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        java.lang.Class<?> wildcardClass30 = classAdapter29.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass34);
        org.mockito.asm.ClassVisitor classVisitor36 = null;
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter(classVisitor36);
        java.lang.Class<?> wildcardClass38 = classAdapter37.getClass();
        java.lang.String str39 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        java.lang.Class<?> wildcardClass42 = classAdapter41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Class[] classArray44 = new java.lang.Class[] { wildcardClass30, wildcardClass34, wildcardClass38, wildcardClass42 };
        enhancer25.setInterfaces(classArray44);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter46 = null;
        enhancer25.setCallbackFilter(callbackFilter46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setUseFactory(true);
        enhancer48.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback53 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray54 = new org.mockito.cglib.proxy.Callback[] { callback53 };
        enhancer48.setCallbacks(callbackArray54);
        enhancer25.setCallbacks(callbackArray54);
        enhancer0.setCallbacks(callbackArray54);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter58 = null;
        enhancer0.setCallbackFilter(callbackFilter58);
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy62 = null;
        enhancer0.setStrategy(generatorStrategy62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback68 = null;
        enhancer65.setCallback(callback68);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter70 = null;
        enhancer65.setCallbackFilter(callbackFilter70);
        org.mockito.cglib.proxy.Callback callback72 = null;
        enhancer65.setCallback(callback72);
        org.mockito.cglib.core.NamingPolicy namingPolicy74 = enhancer65.getNamingPolicy();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local77 = new org.mockito.cglib.core.Local(0, type76);
        int int78 = type76.getSort();
        java.lang.String str79 = type76.getClassName();
        java.lang.String str80 = type76.getClassName();
        boolean boolean81 = namingPolicy74.equals((java.lang.Object) type76);
        enhancer64.setNamingPolicy(namingPolicy74);
        java.lang.Class<?> wildcardClass83 = namingPolicy74.getClass();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass83);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass83);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter86 = null;
        enhancer0.setCallbackFilter(callbackFilter86);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy90 = enhancer0.getStrategy();
        org.mockito.asm.Type type93 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local94 = new org.mockito.cglib.core.Local(0, type93);
        org.mockito.cglib.core.Local local95 = new org.mockito.cglib.core.Local(0, type93);
        org.mockito.asm.Type type96 = local95.getType();
        int int97 = local95.getIndex();
        org.mockito.asm.Type type98 = local95.getType();
        boolean boolean99 = generatorStrategy90.equals((java.lang.Object) local95);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str31, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str35, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str39, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(callbackArray54);
        org.junit.Assert.assertNotNull(namingPolicy74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 8 + "'", int78 == 8);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "double" + "'", str79, "double");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "double" + "'", str80, "double");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(generatorStrategy90);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertNotNull(type96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertNotNull(type98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test04267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04267");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.asm.ClassAdapter classAdapter5 = new org.mockito.asm.ClassAdapter(classVisitor4);
        boolean boolean6 = type3.equals((java.lang.Object) classVisitor4);
        java.lang.String str7 = type3.getDescriptor();
        java.lang.String str8 = type3.getClassName();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        boolean boolean14 = type11.equals((java.lang.Object) classVisitor12);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str16 = type15.getDescriptor();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        boolean boolean22 = type19.equals((java.lang.Object) classVisitor20);
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type10, type11, type15, type17, type18, type19 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray23);
        boolean boolean25 = type3.equals((java.lang.Object) typeArray23);
        java.lang.Class<?> wildcardClass26 = typeArray23.getClass();
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        int int30 = type29.getSize();
        java.lang.String str31 = type29.toString();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Z" + "'", str7, "Z");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean" + "'", str8, "boolean");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "V" + "'", str16, "V");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VZVDDZ)V" + "'", str24, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str27, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str31, "[Lorg/mockito/asm/Type;");
    }

    @Test
    public void test04268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04268");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L158562243", "L1608435376");
        java.lang.String str3 = signature2.getName();
        java.lang.String str4 = signature2.getName();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback6 = null;
        enhancer5.setCallback(callback6);
        boolean boolean8 = enhancer5.getUseCache();
        boolean boolean9 = signature2.equals((java.lang.Object) boolean8);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L158562243" + "'", str3, "L158562243");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L158562243" + "'", str4, "L158562243");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test04269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04269");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter(classVisitor6);
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor6);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classAdapter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer16.setCallback(callback19);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer16.setCallback(callback21);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = enhancer16.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer16.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor26);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classAdapter28);
        boolean boolean30 = namingPolicy24.equals((java.lang.Object) classAdapter28);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classAdapter28);
        // The following exception was thrown during execution in test generation
        try {
            classAdapter28.visitSource("L1031248265", "L1334651834");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNotNull(generatorStrategy23);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test04270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04270");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        enhancer7.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy14);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter19.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter19);
        org.mockito.asm.ClassAdapter classAdapter22 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter22);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo25 = classEmitter24.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter26);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter24.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        boolean boolean31 = namingPolicy18.equals((java.lang.Object) classEmitter24);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter24.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(namingPolicy18);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo25);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test04271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04271");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.asm.ClassAdapter classAdapter1 = new org.mockito.asm.ClassAdapter(classVisitor0);
        java.lang.Class<?> wildcardClass2 = classAdapter1.getClass();
        boolean boolean3 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        boolean boolean4 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        boolean boolean5 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type9 = type8.getElementType();
        int int11 = type8.getOpcode(10);
        org.mockito.asm.MethodVisitor methodVisitor14 = null;
        org.mockito.asm.MethodAdapter methodAdapter15 = new org.mockito.asm.MethodAdapter(methodVisitor14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter15);
        org.mockito.asm.MethodAdapter methodAdapter17 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter16);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter19 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter19);
        boolean boolean21 = type8.equals((java.lang.Object) localVariablesSorter20);
        org.mockito.asm.Attribute attribute22 = null;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter20.visitAttribute(attribute22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 14 + "'", int11 == 14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test04272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04272");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.asm.ClassAdapter classAdapter1 = new org.mockito.asm.ClassAdapter(classVisitor0);
        java.lang.Class<?> wildcardClass2 = classAdapter1.getClass();
        boolean boolean3 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        boolean boolean4 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        boolean boolean5 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(true);
        enhancer10.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass20);
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.asm.ClassAdapter classAdapter23 = new org.mockito.asm.ClassAdapter(classVisitor22);
        java.lang.Class<?> wildcardClass24 = classAdapter23.getClass();
        java.lang.String str25 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass24);
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        java.lang.Class<?> wildcardClass28 = classAdapter27.getClass();
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass28);
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor30);
        java.lang.Class<?> wildcardClass32 = classAdapter31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Class[] classArray34 = new java.lang.Class[] { wildcardClass20, wildcardClass24, wildcardClass28, wildcardClass32 };
        enhancer15.setInterfaces(classArray34);
        enhancer10.setInterfaces(classArray34);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter37 = null;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local41 = new org.mockito.cglib.core.Local(0, type40);
        org.mockito.cglib.core.Local local42 = new org.mockito.cglib.core.Local((int) (byte) 100, type40);
        org.mockito.asm.Type type43 = local42.getType();
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setUseFactory(true);
        enhancer44.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean49 = type43.equals((java.lang.Object) enhancer44);
        java.lang.ClassLoader classLoader50 = enhancer44.getClassLoader();
        boolean boolean51 = enhancer44.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor55 = null;
        org.mockito.asm.ClassAdapter classAdapter56 = new org.mockito.asm.ClassAdapter(classVisitor55);
        java.lang.Class<?> wildcardClass57 = classAdapter56.getClass();
        java.lang.String str58 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass57);
        org.mockito.asm.ClassVisitor classVisitor59 = null;
        org.mockito.asm.ClassAdapter classAdapter60 = new org.mockito.asm.ClassAdapter(classVisitor59);
        java.lang.Class<?> wildcardClass61 = classAdapter60.getClass();
        java.lang.String str62 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass61);
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor63);
        java.lang.Class<?> wildcardClass65 = classAdapter64.getClass();
        java.lang.String str66 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass65);
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        java.lang.Class<?> wildcardClass69 = classAdapter68.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        java.lang.Class[] classArray71 = new java.lang.Class[] { wildcardClass57, wildcardClass61, wildcardClass65, wildcardClass69 };
        enhancer52.setInterfaces(classArray71);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter73 = null;
        enhancer52.setCallbackFilter(callbackFilter73);
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        enhancer75.setUseFactory(true);
        enhancer75.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback80 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray81 = new org.mockito.cglib.proxy.Callback[] { callback80 };
        enhancer75.setCallbacks(callbackArray81);
        enhancer52.setCallbacks(callbackArray81);
        enhancer44.setCallbacks(callbackArray81);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass2, classArray34, callbackFilter37, callbackArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str7, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str9, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str21, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str25, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str29, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str58, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str62, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str66, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(classArray71);
        org.junit.Assert.assertNotNull(callbackArray81);
    }

    @Test
    public void test04273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04273");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter(classVisitor6);
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor6);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classAdapter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.asm.Label label21 = new org.mockito.asm.Label();
        java.lang.String str22 = label21.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        label21.info = label23;
        java.lang.Object obj25 = label21.info;
        java.lang.String str26 = label21.toString();
        java.lang.String str27 = label21.toString();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getObjectType("L1948923726");
        org.mockito.asm.Type type32 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        boolean boolean37 = type34.equals((java.lang.Object) classVisitor35);
        int int39 = type34.getOpcode(116);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        boolean boolean45 = type42.equals((java.lang.Object) classVisitor43);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str47 = type46.getDescriptor();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor51);
        boolean boolean53 = type50.equals((java.lang.Object) classVisitor51);
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type41, type42, type46, type48, type49, type50 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray54);
        org.mockito.cglib.core.Signature signature56 = new org.mockito.cglib.core.Signature("V", type34, typeArray54);
        org.mockito.cglib.core.Signature signature57 = new org.mockito.cglib.core.Signature("hi!", type32, typeArray54);
        org.mockito.cglib.core.Signature signature58 = new org.mockito.cglib.core.Signature("hi!", type30, typeArray54);
        java.lang.String str59 = type30.getInternalName();
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback63 = null;
        enhancer60.setCallback(callback63);
        org.mockito.cglib.proxy.Callback callback65 = null;
        enhancer60.setCallback(callback65);
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        enhancer67.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback70 = null;
        enhancer67.setCallback(callback70);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter72 = null;
        enhancer67.setCallbackFilter(callbackFilter72);
        org.mockito.cglib.proxy.Callback callback74 = null;
        enhancer67.setCallback(callback74);
        org.mockito.cglib.core.NamingPolicy namingPolicy76 = enhancer67.getNamingPolicy();
        enhancer60.setNamingPolicy(namingPolicy76);
        org.mockito.asm.ClassVisitor classVisitor78 = null;
        org.mockito.asm.ClassAdapter classAdapter79 = new org.mockito.asm.ClassAdapter(classVisitor78);
        java.lang.Class<?> wildcardClass80 = classAdapter79.getClass();
        enhancer60.setSuperclass((java.lang.Class) wildcardClass80);
        boolean boolean82 = enhancer60.getAttemptLoad();
        enhancer60.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter85 = null;
        enhancer60.setCallbackFilter(callbackFilter85);
        java.lang.ClassLoader classLoader87 = enhancer60.getClassLoader();
        boolean boolean88 = type30.equals((java.lang.Object) enhancer60);
        int int90 = type30.getOpcode(126);
        label21.info = int90;
        java.lang.String str92 = label21.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor93 = classEmitter0.visitField(7, "L796567244", "L1800248370", "L1156783040", (java.lang.Object) str92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1074623813" + "'", str22, "L1074623813");
        org.junit.Assert.assertNotNull(obj25);
// flaky:         org.junit.Assert.assertEquals(obj25.toString(), "L1921822074");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "L1921822074");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "L1921822074");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1074623813" + "'", str26, "L1074623813");
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L1074623813" + "'", str27, "L1074623813");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 116 + "'", int39 == 116);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "V" + "'", str47, "V");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(VZVDDZ)V" + "'", str55, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1948923726" + "'", str59, "L1948923726");
        org.junit.Assert.assertNotNull(namingPolicy76);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(classLoader87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 130 + "'", int90 == 130);
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "L1074623813" + "'", str92, "L1074623813");
    }

    @Test
    public void test04274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04274");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer1.setCallback(callback4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer1.setCallbackFilter(callbackFilter6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer1.setCallback(callback8);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer1.getNamingPolicy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(0, type12);
        int int14 = type12.getSort();
        java.lang.String str15 = type12.getClassName();
        java.lang.String str16 = type12.getClassName();
        boolean boolean17 = namingPolicy10.equals((java.lang.Object) type12);
        enhancer0.setNamingPolicy(namingPolicy10);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer19.setCallback(callback22);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter24 = null;
        enhancer19.setCallbackFilter(callbackFilter24);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer19.setCallback(callback26);
        enhancer19.setInterceptDuringConstruction(true);
        boolean boolean30 = namingPolicy10.equals((java.lang.Object) true);
        java.lang.Object obj33 = null;
        org.mockito.cglib.core.Predicate predicate34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = namingPolicy10.getClassName("L755466021", "hi!(VZVDDZ)J", obj33, predicate34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double" + "'", str15, "double");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double" + "'", str16, "double");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test04275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04275");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        enhancer0.setUseCache(false);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer16.setCallback(callback19);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter21 = null;
        enhancer16.setCallbackFilter(callbackFilter21);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer16.setCallback(callback23);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer16.getNamingPolicy();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local28 = new org.mockito.cglib.core.Local(0, type27);
        int int29 = type27.getSort();
        java.lang.String str30 = type27.getClassName();
        java.lang.String str31 = type27.getClassName();
        boolean boolean32 = namingPolicy25.equals((java.lang.Object) type27);
        enhancer15.setNamingPolicy(namingPolicy25);
        java.lang.Class<?> wildcardClass34 = namingPolicy25.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        java.lang.String str37 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass34);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.core.DefaultNamingPolicy");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8 + "'", int29 == 8);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "double" + "'", str30, "double");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "double" + "'", str31, "double");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lorg/mockito/cglib/core/DefaultNamingPolicy;" + "'", str35, "Lorg/mockito/cglib/core/DefaultNamingPolicy;");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Lorg/mockito/cglib/core/DefaultNamingPolicy;" + "'", str37, "Lorg/mockito/cglib/core/DefaultNamingPolicy;");
    }

    @Test
    public void test04276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04276");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        enhancer22.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor30);
        java.lang.Class<?> wildcardClass32 = classAdapter31.getClass();
        java.lang.String str33 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass32);
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor34);
        java.lang.Class<?> wildcardClass36 = classAdapter35.getClass();
        java.lang.String str37 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass36);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor42);
        java.lang.Class<?> wildcardClass44 = classAdapter43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        java.lang.Class[] classArray46 = new java.lang.Class[] { wildcardClass32, wildcardClass36, wildcardClass40, wildcardClass44 };
        enhancer27.setInterfaces(classArray46);
        enhancer22.setInterfaces(classArray46);
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        java.lang.Class<?> wildcardClass51 = classAdapter50.getClass();
        java.lang.String str52 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass51);
        java.lang.String str53 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass51);
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        java.lang.Class<?> wildcardClass56 = classAdapter55.getClass();
        boolean boolean57 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass56);
        java.lang.Class[] classArray59 = new java.lang.Class[] { wildcardClass51, wildcardClass56 };
        enhancer22.setInterfaces(classArray59);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy61 = enhancer22.getStrategy();
        java.lang.Class<?> wildcardClass62 = enhancer22.getClass();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass62);
        java.lang.String str64 = type63.getInternalName();
        java.lang.String str65 = type63.toString();
        org.mockito.cglib.proxy.Enhancer enhancer66 = new org.mockito.cglib.proxy.Enhancer();
        enhancer66.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback69 = null;
        enhancer66.setCallback(callback69);
        org.mockito.cglib.proxy.Callback callback71 = null;
        enhancer66.setCallback(callback71);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy73 = enhancer66.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy74 = enhancer66.getNamingPolicy();
        enhancer66.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean77 = enhancer66.getUseCache();
        enhancer66.setSerialVersionUID((java.lang.Long) 0L);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter19.declare_field(11, "L1103406032", type63, (java.lang.Object) enhancer66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str33, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str37, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str41, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str52, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str53, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(generatorStrategy61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str64, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str65, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(generatorStrategy73);
        org.junit.Assert.assertNotNull(namingPolicy74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test04277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04277");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.Object obj1 = label0.info;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        int int3 = type2.getSort();
        label0.info = type2;
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer5.setCallback(callback8);
        enhancer5.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer5.getNamingPolicy();
        boolean boolean14 = namingPolicy12.equals((java.lang.Object) 5);
        label0.info = boolean14;
        java.lang.String str16 = label0.toString();
        org.mockito.asm.MethodVisitor methodVisitor19 = null;
        org.mockito.asm.MethodAdapter methodAdapter20 = new org.mockito.asm.MethodAdapter(methodVisitor19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter21);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter23 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter21);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter23);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter25 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter24);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter26 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter24);
        org.mockito.asm.MethodAdapter methodAdapter27 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter26);
        org.mockito.asm.MethodAdapter methodAdapter28 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter27);
        label0.info = methodAdapter28;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter28.visitVarInsn(158, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L938799926" + "'", str16, "L938799926");
    }

    @Test
    public void test04278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04278");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        enhancer7.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy14);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer18.setCallback(callback21);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer18.setCallback(callback23);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer18.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy25);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer0.getStrategy();
        org.mockito.asm.MethodVisitor methodVisitor28 = null;
        org.mockito.asm.MethodAdapter methodAdapter29 = new org.mockito.asm.MethodAdapter(methodVisitor28);
        org.mockito.asm.MethodAdapter methodAdapter30 = new org.mockito.asm.MethodAdapter(methodVisitor28);
        org.mockito.asm.MethodAdapter methodAdapter31 = new org.mockito.asm.MethodAdapter(methodVisitor28);
        org.mockito.asm.MethodAdapter methodAdapter32 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter31);
        boolean boolean33 = generatorStrategy27.equals((java.lang.Object) methodAdapter32);
        org.mockito.asm.MethodAdapter methodAdapter34 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter32);
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter32.visitInsn(18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test04279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04279");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.Label label2 = new org.mockito.asm.Label();
        label0.info = label2;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local6 = new org.mockito.cglib.core.Local(0, type5);
        label0.info = 0;
        java.lang.String str8 = label0.toString();
        label0.info = "Z(VZVDDZ)Z";
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer11.setCallback(callback14);
        enhancer11.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass18 = enhancer11.getClass();
        label0.info = wildcardClass18;
        java.lang.String str20 = label0.toString();
        java.lang.Object obj21 = label0.info;
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer22.setCallback(callback25);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer22.setCallback(callback27);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy29 = enhancer22.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer22.getNamingPolicy();
        label0.info = enhancer22;
        enhancer22.setUseFactory(false);
        boolean boolean34 = enhancer22.getAttemptLoad();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor42);
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor42);
        classEmitter41.setTarget((org.mockito.asm.ClassVisitor) classAdapter44);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo47 = classEmitter46.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter46.setTarget((org.mockito.asm.ClassVisitor) classEmitter48);
        classEmitter41.setTarget((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter48.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter48);
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classEmitter52);
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassInfo classInfo56 = classEmitter40.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            enhancer22.generateClass((org.mockito.asm.ClassVisitor) classEmitter40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1993426670" + "'", str1, "L1993426670");
        org.junit.Assert.assertNotNull(type5);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "L1993426670" + "'", str8, "L1993426670");
        org.junit.Assert.assertNotNull(wildcardClass18);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1993426670" + "'", str20, "L1993426670");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(generatorStrategy29);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo47);
        org.junit.Assert.assertNull(classInfo51);
        org.junit.Assert.assertNull(classInfo56);
    }

    @Test
    public void test04280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04280");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        java.lang.ClassLoader classLoader7 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer8.setCallback(callback11);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer8.setCallback(callback13);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer15.setCallback(callback18);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter20 = null;
        enhancer15.setCallbackFilter(callbackFilter20);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer15.setCallback(callback22);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer15.getNamingPolicy();
        enhancer8.setNamingPolicy(namingPolicy24);
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        java.lang.Class<?> wildcardClass28 = classAdapter27.getClass();
        enhancer8.setSuperclass((java.lang.Class) wildcardClass28);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter30 = null;
        enhancer8.setCallbackFilter(callbackFilter30);
        java.lang.ClassLoader classLoader32 = enhancer8.getClassLoader();
        enhancer0.setClassLoader(classLoader32);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy36 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer37.setCallback(callback40);
        org.mockito.cglib.proxy.Callback callback42 = null;
        enhancer37.setCallback(callback42);
        org.mockito.cglib.proxy.Callback[] callbackArray44 = null;
        enhancer37.setCallbacks(callbackArray44);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter46 = null;
        enhancer37.setCallbackFilter(callbackFilter46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setUseFactory(true);
        enhancer48.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        java.lang.Class<?> wildcardClass58 = classAdapter57.getClass();
        java.lang.String str59 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass58);
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        org.mockito.asm.ClassAdapter classAdapter61 = new org.mockito.asm.ClassAdapter(classVisitor60);
        java.lang.Class<?> wildcardClass62 = classAdapter61.getClass();
        java.lang.String str63 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass62);
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        java.lang.Class<?> wildcardClass66 = classAdapter65.getClass();
        java.lang.String str67 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass66);
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        java.lang.Class<?> wildcardClass70 = classAdapter69.getClass();
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass70);
        java.lang.Class[] classArray72 = new java.lang.Class[] { wildcardClass58, wildcardClass62, wildcardClass66, wildcardClass70 };
        enhancer53.setInterfaces(classArray72);
        enhancer48.setInterfaces(classArray72);
        org.mockito.asm.ClassVisitor classVisitor75 = null;
        org.mockito.asm.ClassAdapter classAdapter76 = new org.mockito.asm.ClassAdapter(classVisitor75);
        java.lang.Class<?> wildcardClass77 = classAdapter76.getClass();
        java.lang.String str78 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass77);
        java.lang.String str79 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass77);
        org.mockito.asm.ClassVisitor classVisitor80 = null;
        org.mockito.asm.ClassAdapter classAdapter81 = new org.mockito.asm.ClassAdapter(classVisitor80);
        java.lang.Class<?> wildcardClass82 = classAdapter81.getClass();
        boolean boolean83 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass82);
        boolean boolean84 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass82);
        java.lang.Class[] classArray85 = new java.lang.Class[] { wildcardClass77, wildcardClass82 };
        enhancer48.setInterfaces(classArray85);
        enhancer48.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy89 = enhancer48.getStrategy();
        enhancer48.setUseCache(true);
        java.lang.Class[] classArray92 = new java.lang.Class[] {};
        enhancer48.setInterfaces(classArray92);
        enhancer37.setInterfaces(classArray92);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackTypes(classArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(classLoader32);
        org.junit.Assert.assertNotNull(generatorStrategy36);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str59, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str63, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str67, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(classArray72);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str78, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str79, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(classArray85);
        org.junit.Assert.assertNotNull(generatorStrategy89);
        org.junit.Assert.assertNotNull(classArray92);
    }

    @Test
    public void test04281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04281");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter7.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor17);
        classEmitter7.setTarget(classVisitor17);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer21.setCallback(callback24);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer21.setCallback(callback26);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer21.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer21.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor31);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classAdapter33);
        boolean boolean35 = namingPolicy29.equals((java.lang.Object) classAdapter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter33);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor38);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classAdapter40);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter42.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassInfo classInfo47 = classEmitter44.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo49 = classEmitter48.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter48);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter51);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter53);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassInfo classInfo59 = classEmitter57.getClassInfo();
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassInfo classInfo61 = classEmitter36.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter65 = classEmitter7.getStaticHook();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertNull(classInfo47);
        org.junit.Assert.assertNull(classInfo49);
        org.junit.Assert.assertNull(classInfo54);
        org.junit.Assert.assertNull(classInfo59);
        org.junit.Assert.assertNull(classInfo61);
    }

    @Test
    public void test04282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04282");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor26);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classAdapter28);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor31);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classAdapter33);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback44 = null;
        enhancer41.setCallback(callback44);
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer41.setCallback(callback46);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer41.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer41.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor51);
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor51);
        classEmitter50.setTarget((org.mockito.asm.ClassVisitor) classAdapter53);
        boolean boolean55 = namingPolicy49.equals((java.lang.Object) classAdapter53);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classAdapter53);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor60 = classEmitter30.visitAnnotation("L1236159663", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test04283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04283");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.asm.ClassAdapter classAdapter1 = new org.mockito.asm.ClassAdapter(classVisitor0);
        java.lang.Class<?> wildcardClass2 = classAdapter1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        boolean boolean4 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.cglib.core.Signature signature9 = new org.mockito.cglib.core.Signature("L1343695926", "L1153681534");
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(true);
        enhancer10.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass20);
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.asm.ClassAdapter classAdapter23 = new org.mockito.asm.ClassAdapter(classVisitor22);
        java.lang.Class<?> wildcardClass24 = classAdapter23.getClass();
        java.lang.String str25 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass24);
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        java.lang.Class<?> wildcardClass28 = classAdapter27.getClass();
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass28);
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor30);
        java.lang.Class<?> wildcardClass32 = classAdapter31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Class[] classArray34 = new java.lang.Class[] { wildcardClass20, wildcardClass24, wildcardClass28, wildcardClass32 };
        enhancer15.setInterfaces(classArray34);
        enhancer10.setInterfaces(classArray34);
        boolean boolean37 = signature9.equals((java.lang.Object) classArray34);
        org.mockito.cglib.proxy.Callback callback38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass2, classArray34, callback38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str3, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str21, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str25, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str29, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test04284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04284");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        boolean boolean21 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer0.setCallback(callback22);
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        enhancer28.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer28.setCallbacks(callbackArray34);
        boolean boolean36 = enhancer28.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy37 = enhancer28.getStrategy();
        enhancer0.setStrategy(generatorStrategy37);
        org.mockito.asm.MethodVisitor methodVisitor41 = null;
        org.mockito.asm.MethodAdapter methodAdapter42 = new org.mockito.asm.MethodAdapter(methodVisitor41);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter43 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter42);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter44 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter43);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter45 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter43);
        boolean boolean46 = generatorStrategy37.equals((java.lang.Object) localVariablesSorter43);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter43.visitMaxs(105, 114);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(generatorStrategy37);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test04285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04285");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setUseFactory(true);
        enhancer9.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback14 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray15 = new org.mockito.cglib.proxy.Callback[] { callback14 };
        enhancer9.setCallbacks(callbackArray15);
        boolean boolean17 = enhancer9.getAttemptLoad();
        enhancer9.setUseFactory(false);
        enhancer9.setInterceptDuringConstruction(true);
        enhancer9.setUseCache(true);
        enhancer9.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer9.getNamingPolicy();
        boolean boolean27 = enhancer9.getUseCache();
        enhancer9.setUseFactory(true);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter5.visitLdcInsn((java.lang.Object) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test04286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04286");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = 10.0f;
        java.lang.String str3 = label0.toString();
        java.lang.String str4 = label0.toString();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback6 = null;
        enhancer5.setCallback(callback6);
        enhancer5.setInterceptDuringConstruction(true);
        boolean boolean10 = enhancer5.getAttemptLoad();
        enhancer5.setUseFactory(true);
        enhancer5.setInterceptDuringConstruction(true);
        label0.info = true;
        org.mockito.asm.MethodVisitor methodVisitor18 = null;
        org.mockito.asm.MethodAdapter methodAdapter19 = new org.mockito.asm.MethodAdapter(methodVisitor18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.asm.MethodAdapter methodAdapter23 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        label0.info = localVariablesSorter24;
        org.mockito.asm.MethodAdapter methodAdapter26 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter24);
        org.mockito.asm.Label label27 = new org.mockito.asm.Label();
        java.lang.Object obj28 = label27.info;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        int int30 = type29.getSort();
        label27.info = type29;
        java.lang.Object obj32 = label27.info;
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        java.lang.String str34 = label33.toString();
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        label33.info = label35;
        java.lang.String str37 = label33.toString();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str40 = type39.getClassName();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local44 = new org.mockito.cglib.core.Local(0, type43);
        org.mockito.cglib.core.Local local45 = new org.mockito.cglib.core.Local((int) (byte) 100, type43);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor51);
        boolean boolean53 = type50.equals((java.lang.Object) classVisitor51);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str55 = type54.getDescriptor();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor59 = null;
        org.mockito.asm.ClassAdapter classAdapter60 = new org.mockito.asm.ClassAdapter(classVisitor59);
        boolean boolean61 = type58.equals((java.lang.Object) classVisitor59);
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type49, type50, type54, type56, type57, type58 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray62);
        org.mockito.cglib.core.Signature signature64 = new org.mockito.cglib.core.Signature("L1057808593", type47, typeArray62);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray62);
        org.mockito.cglib.core.Signature signature66 = new org.mockito.cglib.core.Signature("L1346580404", type39, typeArray62);
        java.lang.String str67 = signature66.getDescriptor();
        label33.info = str67;
        java.lang.String str69 = label33.toString();
        java.lang.String str70 = label33.toString();
        org.mockito.asm.Label label71 = new org.mockito.asm.Label();
        java.lang.Object obj72 = label71.info;
        java.lang.String str73 = label71.toString();
        java.lang.Object obj74 = label71.info;
        org.mockito.asm.Label label75 = new org.mockito.asm.Label();
        java.lang.String str76 = label75.toString();
        org.mockito.asm.Label label77 = new org.mockito.asm.Label();
        label75.info = label77;
        java.lang.String str79 = label75.toString();
        java.lang.String str80 = label75.toString();
        java.lang.String str81 = label75.toString();
        org.mockito.asm.Label label82 = new org.mockito.asm.Label();
        java.lang.String str83 = label82.toString();
        org.mockito.asm.Label label84 = new org.mockito.asm.Label();
        label82.info = label84;
        java.lang.String str86 = label82.toString();
        java.lang.String str87 = label82.toString();
        label75.info = label82;
        org.mockito.cglib.core.Signature signature91 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        org.mockito.asm.Type[] typeArray92 = signature91.getArgumentTypes();
        org.mockito.asm.Type type93 = signature91.getReturnType();
        int int94 = type93.getSort();
        label82.info = type93;
        label71.info = label82;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter24.visitTryCatchBlock(label27, label33, label71, "L2083275733");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L589700335" + "'", str3, "L589700335");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L589700335" + "'", str4, "L589700335");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "S");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L2030350295" + "'", str34, "L2030350295");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L2030350295" + "'", str37, "L2030350295");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "double" + "'", str40, "double");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "V" + "'", str55, "V");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VZVDDZ)V" + "'", str63, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(VZVDDZ)D" + "'", str65, "(VZVDDZ)D");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(VZVDDZ)D" + "'", str67, "(VZVDDZ)D");
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L2030350295" + "'", str69, "L2030350295");
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L2030350295" + "'", str70, "L2030350295");
        org.junit.Assert.assertNull(obj72);
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "L963145123" + "'", str73, "L963145123");
        org.junit.Assert.assertNull(obj74);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "L2117240491" + "'", str76, "L2117240491");
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "L2117240491" + "'", str79, "L2117240491");
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L2117240491" + "'", str80, "L2117240491");
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "L2117240491" + "'", str81, "L2117240491");
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "L1843412198" + "'", str83, "L1843412198");
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "L1843412198" + "'", str86, "L1843412198");
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "L1843412198" + "'", str87, "L1843412198");
        org.junit.Assert.assertNotNull(typeArray92);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
    }

    @Test
    public void test04287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04287");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        boolean boolean8 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy9 = enhancer0.getStrategy();
        org.mockito.asm.MethodVisitor methodVisitor12 = null;
        org.mockito.asm.MethodAdapter methodAdapter13 = new org.mockito.asm.MethodAdapter(methodVisitor12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.asm.MethodAdapter methodAdapter19 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter18);
        org.mockito.asm.MethodAdapter methodAdapter21 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.asm.MethodAdapter methodAdapter23 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        boolean boolean24 = generatorStrategy9.equals((java.lang.Object) methodAdapter23);
        org.mockito.asm.MethodAdapter methodAdapter25 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter23);
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter23.visitInsn(155);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(generatorStrategy9);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test04288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04288");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        boolean boolean21 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer24.setCallback(callback27);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter29 = null;
        enhancer24.setCallbackFilter(callbackFilter29);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer24.setCallback(callback31);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer24.getNamingPolicy();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local36 = new org.mockito.cglib.core.Local(0, type35);
        int int37 = type35.getSort();
        java.lang.String str38 = type35.getClassName();
        java.lang.String str39 = type35.getClassName();
        boolean boolean40 = namingPolicy33.equals((java.lang.Object) type35);
        enhancer23.setNamingPolicy(namingPolicy33);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback45 = null;
        enhancer42.setCallback(callback45);
        org.mockito.cglib.proxy.Callback callback47 = null;
        enhancer42.setCallback(callback47);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer49.setCallback(callback52);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter54 = null;
        enhancer49.setCallbackFilter(callbackFilter54);
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer49.setCallback(callback56);
        org.mockito.cglib.core.NamingPolicy namingPolicy58 = enhancer49.getNamingPolicy();
        enhancer42.setNamingPolicy(namingPolicy58);
        boolean boolean60 = namingPolicy33.equals((java.lang.Object) enhancer42);
        org.mockito.cglib.proxy.Callback callback61 = null;
        enhancer42.setCallback(callback61);
        java.lang.ClassLoader classLoader63 = enhancer42.getClassLoader();
        enhancer0.setClassLoader(classLoader63);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "double" + "'", str38, "double");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "double" + "'", str39, "double");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(namingPolicy58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(classLoader63);
    }

    @Test
    public void test04289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04289");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer3.setCallback(callback4);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer7.setCallback(callback12);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy14 = enhancer7.getStrategy();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        boolean boolean18 = type15.equals((java.lang.Object) classVisitor16);
        int int20 = type15.getOpcode(116);
        boolean boolean21 = generatorStrategy14.equals((java.lang.Object) 116);
        enhancer6.setStrategy(generatorStrategy14);
        enhancer3.setStrategy(generatorStrategy14);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setUseFactory(true);
        enhancer24.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter29 = null;
        enhancer24.setCallbackFilter(callbackFilter29);
        java.lang.ClassLoader classLoader31 = enhancer24.getClassLoader();
        enhancer3.setClassLoader(classLoader31);
        java.lang.ClassLoader classLoader33 = enhancer3.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        java.lang.Class<?> wildcardClass39 = classAdapter38.getClass();
        java.lang.String str40 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        java.lang.Class<?> wildcardClass43 = classAdapter42.getClass();
        java.lang.String str44 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass43);
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        java.lang.Class<?> wildcardClass47 = classAdapter46.getClass();
        java.lang.String str48 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        java.lang.Class<?> wildcardClass51 = classAdapter50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Class[] classArray53 = new java.lang.Class[] { wildcardClass39, wildcardClass43, wildcardClass47, wildcardClass51 };
        enhancer34.setInterfaces(classArray53);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter55 = null;
        enhancer34.setCallbackFilter(callbackFilter55);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setUseFactory(true);
        enhancer57.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback62 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray63 = new org.mockito.cglib.proxy.Callback[] { callback62 };
        enhancer57.setCallbacks(callbackArray63);
        enhancer34.setCallbacks(callbackArray63);
        enhancer3.setCallbacks(callbackArray63);
        enhancer0.setCallbacks(callbackArray63);
        java.lang.Class<?> wildcardClass68 = callbackArray63.getClass();
        org.junit.Assert.assertNotNull(generatorStrategy14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 116 + "'", int20 == 116);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classLoader31);
        org.junit.Assert.assertNotNull(classLoader33);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str40, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str44, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str48, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(callbackArray63);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test04290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04290");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass7 = enhancer0.getClass();
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass7);
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        boolean boolean12 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        java.lang.String str13 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        boolean boolean14 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        java.lang.String str16 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        enhancer17.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback22 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray23 = new org.mockito.cglib.proxy.Callback[] { callback22 };
        enhancer17.setCallbacks(callbackArray23);
        boolean boolean25 = enhancer17.getAttemptLoad();
        enhancer17.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer28.setCallback(callback29);
        enhancer28.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer33.setCallback(callback34);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer37.setCallback(callback40);
        org.mockito.cglib.proxy.Callback callback42 = null;
        enhancer37.setCallback(callback42);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer37.getStrategy();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        boolean boolean48 = type45.equals((java.lang.Object) classVisitor46);
        int int50 = type45.getOpcode(116);
        boolean boolean51 = generatorStrategy44.equals((java.lang.Object) 116);
        enhancer36.setStrategy(generatorStrategy44);
        enhancer33.setStrategy(generatorStrategy44);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setUseFactory(true);
        enhancer54.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter59 = null;
        enhancer54.setCallbackFilter(callbackFilter59);
        java.lang.ClassLoader classLoader61 = enhancer54.getClassLoader();
        enhancer33.setClassLoader(classLoader61);
        java.lang.ClassLoader classLoader63 = enhancer33.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setUseFactory(true);
        enhancer64.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor72 = null;
        org.mockito.asm.ClassAdapter classAdapter73 = new org.mockito.asm.ClassAdapter(classVisitor72);
        java.lang.Class<?> wildcardClass74 = classAdapter73.getClass();
        java.lang.String str75 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass74);
        org.mockito.asm.ClassVisitor classVisitor76 = null;
        org.mockito.asm.ClassAdapter classAdapter77 = new org.mockito.asm.ClassAdapter(classVisitor76);
        java.lang.Class<?> wildcardClass78 = classAdapter77.getClass();
        java.lang.String str79 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass78);
        org.mockito.asm.ClassVisitor classVisitor80 = null;
        org.mockito.asm.ClassAdapter classAdapter81 = new org.mockito.asm.ClassAdapter(classVisitor80);
        java.lang.Class<?> wildcardClass82 = classAdapter81.getClass();
        java.lang.String str83 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass82);
        org.mockito.asm.ClassVisitor classVisitor84 = null;
        org.mockito.asm.ClassAdapter classAdapter85 = new org.mockito.asm.ClassAdapter(classVisitor84);
        java.lang.Class<?> wildcardClass86 = classAdapter85.getClass();
        boolean boolean87 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass86);
        java.lang.Class[] classArray88 = new java.lang.Class[] { wildcardClass74, wildcardClass78, wildcardClass82, wildcardClass86 };
        enhancer69.setInterfaces(classArray88);
        enhancer64.setInterfaces(classArray88);
        enhancer33.setInterfaces(classArray88);
        enhancer28.setInterfaces(classArray88);
        enhancer17.setInterfaces(classArray88);
        org.mockito.cglib.proxy.Callback callback94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass7, classArray88, callback94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str8, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str9, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str13, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str16, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(callbackArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 116 + "'", int50 == 116);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(classLoader61);
        org.junit.Assert.assertNotNull(classLoader63);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str75, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str79, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str83, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(classArray88);
    }

    @Test
    public void test04291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04291");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer9.setCallback(callback12);
        enhancer9.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass16 = enhancer9.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass16);
        boolean boolean18 = enhancer0.getAttemptLoad();
        boolean boolean19 = enhancer0.getUseCache();
        enhancer0.setUseCache(true);
        boolean boolean22 = enhancer0.getUseCache();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy27 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        enhancer28.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter33 = null;
        enhancer28.setCallbackFilter(callbackFilter33);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor42);
        java.lang.Class<?> wildcardClass44 = classAdapter43.getClass();
        java.lang.String str45 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass44);
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        java.lang.Class<?> wildcardClass48 = classAdapter47.getClass();
        java.lang.String str49 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass48);
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor50);
        java.lang.Class<?> wildcardClass52 = classAdapter51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Class[] classArray54 = new java.lang.Class[] { wildcardClass40, wildcardClass44, wildcardClass48, wildcardClass52 };
        enhancer35.setInterfaces(classArray54);
        enhancer28.setInterfaces(classArray54);
        boolean boolean57 = enhancer28.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy58 = enhancer28.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy58);
        java.lang.Object obj60 = null;
        boolean boolean61 = namingPolicy58.equals(obj60);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(namingPolicy27);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str41, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str45, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str49, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(namingPolicy58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test04292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04292");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        boolean boolean9 = generatorStrategy7.equals((java.lang.Object) label8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor11);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classAdapter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter24.getClassInfo();
        label8.info = classEmitter24;
        java.lang.Object obj28 = label8.info;
        java.lang.String str29 = label8.toString();
        java.lang.Object obj30 = label8.info;
        java.lang.String str31 = label8.toString();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor39);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classAdapter41);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo44 = classEmitter43.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        label8.info = classEmitter45;
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        java.lang.String[] strArray62 = new java.lang.String[] { "L972199855", "L1172112160", "L80673527", "L1342032987", "L1967463002", "L552421278" };
        // The following exception was thrown during execution in test generation
        try {
            classEmitter50.visit(129, 99, "L1590632652", "L40144311", "Lorg/mockito/cglib/core/LocalVariablesSorter;", strArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNotNull(obj28);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L601195303" + "'", str29, "L601195303");
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L601195303" + "'", str31, "L601195303");
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo44);
        org.junit.Assert.assertNotNull(strArray62);
    }

    @Test
    public void test04293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04293");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer10.setCallback(callback13);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer10.setCallback(callback15);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer17.setCallback(callback20);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter22 = null;
        enhancer17.setCallbackFilter(callbackFilter22);
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer17.setCallback(callback24);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer17.getNamingPolicy();
        enhancer10.setNamingPolicy(namingPolicy26);
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        java.lang.Class<?> wildcardClass30 = classAdapter29.getClass();
        enhancer10.setSuperclass((java.lang.Class) wildcardClass30);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass30);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer35.setCallback(callback38);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer35.setCallback(callback40);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer35.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer35.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy44 = enhancer35.getNamingPolicy();
        java.lang.ClassLoader classLoader45 = enhancer35.getClassLoader();
        enhancer0.setClassLoader(classLoader45);
        java.lang.ClassLoader classLoader47 = enhancer0.getClassLoader();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(namingPolicy43);
        org.junit.Assert.assertNotNull(namingPolicy44);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(classLoader47);
    }

    @Test
    public void test04294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04294");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass7 = enhancer0.getClass();
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        java.lang.String str12 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass7);
        org.mockito.cglib.proxy.Callback callback13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass7, callback13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str8, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str9, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str11, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str12, "org/mockito/cglib/proxy/Enhancer");
    }

    @Test
    public void test04295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04295");
        org.mockito.asm.MethodVisitor methodVisitor0 = null;
        org.mockito.asm.MethodAdapter methodAdapter1 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter2 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter4 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer6.setCallback(callback9);
        enhancer6.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass13 = enhancer6.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass13);
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter5.visitLdcInsn((java.lang.Object) wildcardClass13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str14, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str15, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type16);
    }

    @Test
    public void test04296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04296");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.asm.ClassAdapter classAdapter5 = new org.mockito.asm.ClassAdapter(classVisitor4);
        java.lang.Class<?> wildcardClass6 = classAdapter5.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass6);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass6);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer11.setCallback(callback14);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer11.setCallback(callback16);
        boolean boolean18 = enhancer11.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.asm.ClassAdapter classAdapter23 = new org.mockito.asm.ClassAdapter(classVisitor22);
        java.lang.Class<?> wildcardClass24 = classAdapter23.getClass();
        java.lang.String str25 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass24);
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        java.lang.Class<?> wildcardClass28 = classAdapter27.getClass();
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass28);
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor30);
        java.lang.Class<?> wildcardClass32 = classAdapter31.getClass();
        java.lang.String str33 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass32);
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor34);
        java.lang.Class<?> wildcardClass36 = classAdapter35.getClass();
        boolean boolean37 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass36);
        java.lang.Class[] classArray38 = new java.lang.Class[] { wildcardClass24, wildcardClass28, wildcardClass32, wildcardClass36 };
        enhancer19.setInterfaces(classArray38);
        boolean boolean40 = enhancer19.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer19.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setUseFactory(true);
        enhancer42.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter47 = null;
        enhancer42.setCallbackFilter(callbackFilter47);
        java.lang.ClassLoader classLoader49 = enhancer42.getClassLoader();
        enhancer19.setClassLoader(classLoader49);
        enhancer11.setClassLoader(classLoader49);
        enhancer11.setUseFactory(true);
        enhancer11.setAttemptLoad(false);
        java.lang.ClassLoader classLoader56 = enhancer11.getClassLoader();
        enhancer0.setClassLoader(classLoader56);
        java.lang.Class<?> wildcardClass58 = classLoader56.getClass();
        org.mockito.cglib.proxy.Callback callback59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass58, callback59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str7, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str25, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str29, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str33, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test04297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04297");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter12 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter11);
        org.mockito.asm.MethodAdapter methodAdapter13 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter12);
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        java.lang.Object obj15 = label14.info;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        int int17 = type16.getSort();
        label14.info = type16;
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer19.setCallback(callback22);
        enhancer19.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer19.getNamingPolicy();
        boolean boolean28 = namingPolicy26.equals((java.lang.Object) 5);
        label14.info = boolean28;
        java.lang.Object obj30 = label14.info;
        java.lang.Object obj31 = label14.info;
        org.mockito.asm.Label label32 = new org.mockito.asm.Label();
        java.lang.String str33 = label32.toString();
        org.mockito.asm.Label label34 = new org.mockito.asm.Label();
        label32.info = label34;
        java.lang.String str36 = label32.toString();
        java.lang.String str37 = label32.toString();
        java.lang.String str38 = label32.toString();
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        java.lang.String str40 = label39.toString();
        org.mockito.asm.Label label41 = new org.mockito.asm.Label();
        label39.info = label41;
        java.lang.String str43 = label39.toString();
        java.lang.String str44 = label39.toString();
        label32.info = label39;
        java.lang.Object obj46 = label32.info;
        org.mockito.cglib.core.Signature signature49 = new org.mockito.cglib.core.Signature("", "L361914688");
        org.mockito.asm.MethodVisitor methodVisitor52 = null;
        org.mockito.asm.MethodAdapter methodAdapter53 = new org.mockito.asm.MethodAdapter(methodVisitor52);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter54 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter53);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter55 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter54);
        boolean boolean56 = signature49.equals((java.lang.Object) localVariablesSorter54);
        org.mockito.asm.MethodAdapter methodAdapter57 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter54);
        org.mockito.asm.MethodAdapter methodAdapter58 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter54);
        label32.info = localVariablesSorter54;
        java.lang.String str60 = label32.toString();
        java.lang.String str61 = label32.toString();
        label14.info = label32;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter12.visitLabel(label14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1821289125" + "'", str33, "L1821289125");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L1821289125" + "'", str36, "L1821289125");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1821289125" + "'", str37, "L1821289125");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L1821289125" + "'", str38, "L1821289125");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1738738019" + "'", str40, "L1738738019");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L1738738019" + "'", str43, "L1738738019");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L1738738019" + "'", str44, "L1738738019");
        org.junit.Assert.assertNotNull(obj46);
// flaky:         org.junit.Assert.assertEquals(obj46.toString(), "L1738738019");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "L1738738019");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "L1738738019");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "L1821289125" + "'", str60, "L1821289125");
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L1821289125" + "'", str61, "L1821289125");
    }

    @Test
    public void test04298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04298");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classAdapter12);
        boolean boolean14 = namingPolicy8.equals((java.lang.Object) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor17);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classAdapter19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter21.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter36.getClassInfo();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter36.visitSource("L2001848760", "L219065581");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo38);
    }

    @Test
    public void test04299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04299");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("short", "L1748603513");
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter(classVisitor6);
        java.lang.Class<?> wildcardClass8 = classAdapter7.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass8);
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        java.lang.Class<?> wildcardClass12 = classAdapter11.getClass();
        java.lang.String str13 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor14);
        java.lang.Class<?> wildcardClass16 = classAdapter15.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass8, wildcardClass12, wildcardClass16, wildcardClass20 };
        enhancer3.setInterfaces(classArray22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer24.setCallback(callback25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer28.setCallback(callback31);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer28.setCallback(callback33);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy35 = enhancer28.getStrategy();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        boolean boolean39 = type36.equals((java.lang.Object) classVisitor37);
        int int41 = type36.getOpcode(116);
        boolean boolean42 = generatorStrategy35.equals((java.lang.Object) 116);
        enhancer27.setStrategy(generatorStrategy35);
        enhancer24.setStrategy(generatorStrategy35);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        enhancer45.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter50 = null;
        enhancer45.setCallbackFilter(callbackFilter50);
        java.lang.ClassLoader classLoader52 = enhancer45.getClassLoader();
        enhancer24.setClassLoader(classLoader52);
        java.lang.ClassLoader classLoader54 = enhancer24.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        java.lang.Class<?> wildcardClass60 = classAdapter59.getClass();
        java.lang.String str61 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass60);
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        java.lang.Class<?> wildcardClass64 = classAdapter63.getClass();
        java.lang.String str65 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass64);
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        java.lang.Class<?> wildcardClass68 = classAdapter67.getClass();
        java.lang.String str69 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass68);
        org.mockito.asm.ClassVisitor classVisitor70 = null;
        org.mockito.asm.ClassAdapter classAdapter71 = new org.mockito.asm.ClassAdapter(classVisitor70);
        java.lang.Class<?> wildcardClass72 = classAdapter71.getClass();
        boolean boolean73 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass72);
        java.lang.Class[] classArray74 = new java.lang.Class[] { wildcardClass60, wildcardClass64, wildcardClass68, wildcardClass72 };
        enhancer55.setInterfaces(classArray74);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter76 = null;
        enhancer55.setCallbackFilter(callbackFilter76);
        org.mockito.cglib.proxy.Enhancer enhancer78 = new org.mockito.cglib.proxy.Enhancer();
        enhancer78.setUseFactory(true);
        enhancer78.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback83 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray84 = new org.mockito.cglib.proxy.Callback[] { callback83 };
        enhancer78.setCallbacks(callbackArray84);
        enhancer55.setCallbacks(callbackArray84);
        enhancer24.setCallbacks(callbackArray84);
        enhancer3.setCallbacks(callbackArray84);
        boolean boolean89 = signature2.equals((java.lang.Object) enhancer3);
        boolean boolean90 = enhancer3.getAttemptLoad();
        enhancer3.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter93 = null;
        enhancer3.setCallbackFilter(callbackFilter93);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str9, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str13, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str17, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(generatorStrategy35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 116 + "'", int41 == 116);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertNotNull(classLoader54);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str61, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str65, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str69, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(callbackArray84);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test04300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04300");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer1.setCallback(callback4);
        org.mockito.cglib.proxy.Callback callback6 = null;
        enhancer1.setCallback(callback6);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy8 = enhancer1.getStrategy();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        boolean boolean12 = type9.equals((java.lang.Object) classVisitor10);
        int int14 = type9.getOpcode(116);
        boolean boolean15 = generatorStrategy8.equals((java.lang.Object) 116);
        enhancer0.setStrategy(generatorStrategy8);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer17.setCallback(callback20);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer17.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer24.setCallback(callback27);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter29 = null;
        enhancer24.setCallbackFilter(callbackFilter29);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer24.setCallback(callback31);
        org.mockito.cglib.core.NamingPolicy namingPolicy33 = enhancer24.getNamingPolicy();
        enhancer17.setNamingPolicy(namingPolicy33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        enhancer17.setSuperclass((java.lang.Class) wildcardClass37);
        boolean boolean39 = enhancer17.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter40 = null;
        enhancer17.setCallbackFilter(callbackFilter40);
        enhancer17.setAttemptLoad(false);
        boolean boolean44 = enhancer17.getUseCache();
        enhancer17.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.core.NamingPolicy namingPolicy47 = enhancer17.getNamingPolicy();
        boolean boolean48 = generatorStrategy8.equals((java.lang.Object) enhancer17);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer49.setCallback(callback52);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray54 = generatorStrategy8.generate((org.mockito.cglib.core.ClassGenerator) enhancer49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 116 + "'", int14 == 116);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(namingPolicy33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(namingPolicy47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test04301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04301");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        java.lang.ClassLoader classLoader30 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor34);
        java.lang.Class<?> wildcardClass36 = classAdapter35.getClass();
        java.lang.String str37 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass36);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor42);
        java.lang.Class<?> wildcardClass44 = classAdapter43.getClass();
        java.lang.String str45 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass44);
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        java.lang.Class<?> wildcardClass48 = classAdapter47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Class[] classArray50 = new java.lang.Class[] { wildcardClass36, wildcardClass40, wildcardClass44, wildcardClass48 };
        enhancer31.setInterfaces(classArray50);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter52 = null;
        enhancer31.setCallbackFilter(callbackFilter52);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setUseFactory(true);
        enhancer54.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback59 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray60 = new org.mockito.cglib.proxy.Callback[] { callback59 };
        enhancer54.setCallbacks(callbackArray60);
        enhancer31.setCallbacks(callbackArray60);
        enhancer0.setCallbacks(callbackArray60);
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.ClassLoader classLoader66 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        enhancer67.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor70 = null;
        org.mockito.asm.ClassAdapter classAdapter71 = new org.mockito.asm.ClassAdapter(classVisitor70);
        java.lang.Class<?> wildcardClass72 = classAdapter71.getClass();
        java.lang.String str73 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass72);
        org.mockito.asm.ClassVisitor classVisitor74 = null;
        org.mockito.asm.ClassAdapter classAdapter75 = new org.mockito.asm.ClassAdapter(classVisitor74);
        java.lang.Class<?> wildcardClass76 = classAdapter75.getClass();
        java.lang.String str77 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass76);
        org.mockito.asm.ClassVisitor classVisitor78 = null;
        org.mockito.asm.ClassAdapter classAdapter79 = new org.mockito.asm.ClassAdapter(classVisitor78);
        java.lang.Class<?> wildcardClass80 = classAdapter79.getClass();
        java.lang.String str81 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass80);
        org.mockito.asm.ClassVisitor classVisitor82 = null;
        org.mockito.asm.ClassAdapter classAdapter83 = new org.mockito.asm.ClassAdapter(classVisitor82);
        java.lang.Class<?> wildcardClass84 = classAdapter83.getClass();
        boolean boolean85 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass84);
        java.lang.Class[] classArray86 = new java.lang.Class[] { wildcardClass72, wildcardClass76, wildcardClass80, wildcardClass84 };
        enhancer67.setInterfaces(classArray86);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackTypes(classArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.asm.ClassAdapter");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str37, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str41, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str45, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(callbackArray60);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str73, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str77, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str81, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(classArray86);
    }

    @Test
    public void test04302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04302");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer11.setCallback(callback14);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter16 = null;
        enhancer11.setCallbackFilter(callbackFilter16);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer11.setCallback(callback18);
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer11.getNamingPolicy();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local23 = new org.mockito.cglib.core.Local(0, type22);
        int int24 = type22.getSort();
        java.lang.String str25 = type22.getClassName();
        java.lang.String str26 = type22.getClassName();
        boolean boolean27 = namingPolicy20.equals((java.lang.Object) type22);
        enhancer10.setNamingPolicy(namingPolicy20);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer29.setCallback(callback32);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter34 = null;
        enhancer29.setCallbackFilter(callbackFilter34);
        org.mockito.cglib.proxy.Callback callback36 = null;
        enhancer29.setCallback(callback36);
        enhancer29.setInterceptDuringConstruction(true);
        boolean boolean40 = namingPolicy20.equals((java.lang.Object) true);
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback44 = null;
        enhancer41.setCallback(callback44);
        enhancer41.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback51 = null;
        enhancer48.setCallback(callback51);
        enhancer48.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer48.getNamingPolicy();
        enhancer41.setNamingPolicy(namingPolicy55);
        enhancer41.setInterceptDuringConstruction(true);
        boolean boolean59 = namingPolicy20.equals((java.lang.Object) enhancer41);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback63 = null;
        enhancer60.setCallback(callback63);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter65 = null;
        enhancer60.setCallbackFilter(callbackFilter65);
        org.mockito.cglib.proxy.Callback callback67 = null;
        enhancer60.setCallback(callback67);
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback72 = null;
        enhancer69.setCallback(callback72);
        enhancer69.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass76 = enhancer69.getClass();
        enhancer60.setSuperclass((java.lang.Class) wildcardClass76);
        java.lang.String str78 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass76);
        enhancer41.setSuperclass((java.lang.Class) wildcardClass76);
        java.lang.ClassLoader classLoader80 = enhancer41.getClassLoader();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitLdcInsn((java.lang.Object) enhancer41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "double" + "'", str25, "double");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "double" + "'", str26, "double");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str78, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(classLoader80);
    }

    @Test
    public void test04303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04303");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        java.lang.Class<?> wildcardClass10 = classAdapter9.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass10, wildcardClass14, wildcardClass18, wildcardClass22 };
        enhancer5.setInterfaces(classArray24);
        enhancer0.setInterfaces(classArray24);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass29, wildcardClass34 };
        enhancer0.setInterfaces(classArray37);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer0.getStrategy();
        enhancer0.setUseCache(true);
        java.lang.Class[] classArray44 = new java.lang.Class[] {};
        enhancer0.setInterfaces(classArray44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer46.setCallback(callback49);
        enhancer46.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer46.getNamingPolicy();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int56 = type55.getSort();
        java.lang.String str57 = type55.getDescriptor();
        java.lang.String str58 = type55.getDescriptor();
        org.mockito.cglib.core.Local local59 = new org.mockito.cglib.core.Local((int) (byte) 1, type55);
        org.mockito.asm.Type type60 = local59.getType();
        int int61 = local59.getIndex();
        boolean boolean62 = namingPolicy53.equals((java.lang.Object) local59);
        enhancer0.setNamingPolicy(namingPolicy53);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy64 = enhancer0.getStrategy();
        boolean boolean65 = enhancer0.getUseCache();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str11, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str15, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str31, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Z" + "'", str57, "Z");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Z" + "'", str58, "Z");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(generatorStrategy64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test04304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04304");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test04305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04305");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        enhancer7.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy14);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy18 = enhancer0.getNamingPolicy();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback[] callbackArray21 = null;
        enhancer0.setCallbacks(callbackArray21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        enhancer23.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback28 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray29 = new org.mockito.cglib.proxy.Callback[] { callback28 };
        enhancer23.setCallbacks(callbackArray29);
        boolean boolean31 = enhancer23.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy32 = enhancer23.getStrategy();
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        java.lang.String str34 = label33.toString();
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        label33.info = label35;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local39 = new org.mockito.cglib.core.Local(0, type38);
        label33.info = 0;
        java.lang.String str41 = label33.toString();
        label33.info = "Z(VZVDDZ)Z";
        boolean boolean44 = generatorStrategy32.equals((java.lang.Object) "Z(VZVDDZ)Z");
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer46.setCallback(callback49);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter51 = null;
        enhancer46.setCallbackFilter(callbackFilter51);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer46.setCallback(callback53);
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer46.getNamingPolicy();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local58 = new org.mockito.cglib.core.Local(0, type57);
        int int59 = type57.getSort();
        java.lang.String str60 = type57.getClassName();
        java.lang.String str61 = type57.getClassName();
        boolean boolean62 = namingPolicy55.equals((java.lang.Object) type57);
        enhancer45.setNamingPolicy(namingPolicy55);
        java.lang.Class<?> wildcardClass64 = namingPolicy55.getClass();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        boolean boolean66 = generatorStrategy32.equals((java.lang.Object) wildcardClass64);
        java.lang.String str67 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass64);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.core.DefaultNamingPolicy");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(namingPolicy18);
        org.junit.Assert.assertNotNull(callbackArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(generatorStrategy32);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "L1846368529" + "'", str34, "L1846368529");
        org.junit.Assert.assertNotNull(type38);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L1846368529" + "'", str41, "L1846368529");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "double" + "'", str60, "double");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "double" + "'", str61, "double");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Lorg/mockito/cglib/core/DefaultNamingPolicy;" + "'", str67, "Lorg/mockito/cglib/core/DefaultNamingPolicy;");
    }

    @Test
    public void test04306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04306");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.Label label2 = new org.mockito.asm.Label();
        label0.info = label2;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local6 = new org.mockito.cglib.core.Local(0, type5);
        label0.info = 0;
        java.lang.String str8 = label0.toString();
        label0.info = "Z(VZVDDZ)Z";
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer11.setCallback(callback14);
        enhancer11.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass18 = enhancer11.getClass();
        label0.info = wildcardClass18;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass18);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer21.setCallback(callback22);
        enhancer21.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setUseFactory(true);
        enhancer26.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor34);
        java.lang.Class<?> wildcardClass36 = classAdapter35.getClass();
        java.lang.String str37 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass36);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor42);
        java.lang.Class<?> wildcardClass44 = classAdapter43.getClass();
        java.lang.String str45 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass44);
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        java.lang.Class<?> wildcardClass48 = classAdapter47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Class[] classArray50 = new java.lang.Class[] { wildcardClass36, wildcardClass40, wildcardClass44, wildcardClass48 };
        enhancer31.setInterfaces(classArray50);
        enhancer26.setInterfaces(classArray50);
        enhancer21.setInterfaces(classArray50);
        java.util.List list54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods((java.lang.Class) wildcardClass18, classArray50, list54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L710821671" + "'", str1, "L710821671");
        org.junit.Assert.assertNotNull(type5);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "L710821671" + "'", str8, "L710821671");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str37, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str41, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str45, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(classArray50);
    }

    @Test
    public void test04307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04307");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        java.lang.ClassLoader classLoader30 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor33);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor38);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classAdapter40);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter42.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor49);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classAdapter51);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassInfo classInfo58 = classEmitter55.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter59.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassInfo classInfo64 = classEmitter62.getClassInfo();
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        boolean boolean66 = namingPolicy31.equals((java.lang.Object) classEmitter37);
        java.lang.String[] strArray75 = new java.lang.String[] { "L1289380369", "L910557088", "L582153175", "L881370146" };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor76 = classEmitter37.visitMethod(100, "", "L485386990", "L1636462176", strArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@69b5fe1");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertNull(classInfo54);
        org.junit.Assert.assertNull(classInfo58);
        org.junit.Assert.assertNull(classInfo60);
        org.junit.Assert.assertNull(classInfo64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strArray75);
    }

    @Test
    public void test04308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04308");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter12 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter11);
        org.mockito.asm.MethodAdapter methodAdapter13 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter12);
        org.mockito.asm.MethodAdapter methodAdapter14 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter12);
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        java.lang.String str17 = label16.toString();
        org.mockito.asm.Label label18 = new org.mockito.asm.Label();
        label16.info = label18;
        java.lang.Object obj20 = label16.info;
        java.lang.Object obj21 = label16.info;
        java.lang.String str22 = label16.toString();
        java.lang.Object obj23 = label16.info;
        java.lang.String str24 = label16.toString();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setUseFactory(true);
        enhancer25.setInterceptDuringConstruction(true);
        enhancer25.setSerialVersionUID((java.lang.Long) 10L);
        boolean boolean32 = enhancer25.getAttemptLoad();
        enhancer25.setUseCache(true);
        boolean boolean35 = enhancer25.getAttemptLoad();
        boolean boolean36 = enhancer25.getUseCache();
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        java.lang.Class<?> wildcardClass39 = classAdapter38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        java.lang.String str45 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass39);
        java.lang.String str46 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        enhancer25.setSuperclass((java.lang.Class) wildcardClass39);
        label16.info = enhancer25;
        java.lang.String str49 = label16.toString();
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter14.visitJumpInsn(129, label16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L490287413" + "'", str17, "L490287413");
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals(obj20.toString(), "L558935842");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "L558935842");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "L558935842");
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals(obj21.toString(), "L558935842");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "L558935842");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "L558935842");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L490287413" + "'", str22, "L490287413");
        org.junit.Assert.assertNotNull(obj23);
// flaky:         org.junit.Assert.assertEquals(obj23.toString(), "L558935842");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "L558935842");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "L558935842");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L490287413" + "'", str24, "L490287413");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str45, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str46, "org/mockito/asm/ClassAdapter");
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L490287413" + "'", str49, "L490287413");
    }

    @Test
    public void test04309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04309");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.Label label2 = new org.mockito.asm.Label();
        label0.info = label2;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor9 = null;
        org.mockito.asm.ClassAdapter classAdapter10 = new org.mockito.asm.ClassAdapter(classVisitor9);
        boolean boolean11 = type8.equals((java.lang.Object) classVisitor9);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str13 = type12.getDescriptor();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        boolean boolean19 = type16.equals((java.lang.Object) classVisitor17);
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type7, type8, type12, type14, type15, type16 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray20);
        org.mockito.cglib.core.Signature signature22 = new org.mockito.cglib.core.Signature("L1057808593", type5, typeArray20);
        label2.info = type5;
        java.lang.Class<?> wildcardClass24 = type5.getClass();
        java.lang.String str25 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass24);
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass24);
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.String str28 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass24);
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L708253095" + "'", str1, "L708253095");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "V" + "'", str13, "V");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(VZVDDZ)V" + "'", str21, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org/mockito/asm/Type" + "'", str25, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/Type" + "'", str26, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str28, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test04310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04310");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.asm.ClassAdapter classAdapter5 = new org.mockito.asm.ClassAdapter(classVisitor4);
        boolean boolean6 = type3.equals((java.lang.Object) classVisitor4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str8 = type7.getDescriptor();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        boolean boolean14 = type11.equals((java.lang.Object) classVisitor12);
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type2, type3, type7, type9, type10, type11 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray15);
        java.lang.String str17 = type1.toString();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local21 = new org.mockito.cglib.core.Local(0, type20);
        org.mockito.cglib.core.Local local22 = new org.mockito.cglib.core.Local((int) (byte) 100, type20);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type25 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        boolean boolean30 = type27.equals((java.lang.Object) classVisitor28);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str32 = type31.getDescriptor();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor36 = null;
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter(classVisitor36);
        boolean boolean38 = type35.equals((java.lang.Object) classVisitor36);
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type26, type27, type31, type33, type34, type35 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray39);
        org.mockito.cglib.core.Signature signature41 = new org.mockito.cglib.core.Signature("L1057808593", type24, typeArray39);
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray39);
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray39);
        org.mockito.cglib.core.Signature signature46 = new org.mockito.cglib.core.Signature("org/mockito/asm/ClassAdapter", "L1933965693");
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        java.lang.Class<?> wildcardClass49 = classAdapter48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass49);
        boolean boolean53 = signature46.equals((java.lang.Object) type52);
        int int54 = type52.getSort();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        boolean boolean58 = type55.equals((java.lang.Object) classVisitor56);
        java.lang.String str59 = type55.getDescriptor();
        java.lang.String str60 = type55.getClassName();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type62 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type63 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        boolean boolean66 = type63.equals((java.lang.Object) classVisitor64);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str68 = type67.getDescriptor();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type71 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor72 = null;
        org.mockito.asm.ClassAdapter classAdapter73 = new org.mockito.asm.ClassAdapter(classVisitor72);
        boolean boolean74 = type71.equals((java.lang.Object) classVisitor72);
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type62, type63, type67, type69, type70, type71 };
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray75);
        boolean boolean77 = type55.equals((java.lang.Object) typeArray75);
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray75);
        org.mockito.cglib.core.Signature signature79 = new org.mockito.cglib.core.Signature("org/mockito/asm/Type", type1, typeArray75);
        java.lang.String str80 = signature79.getName();
        org.mockito.asm.MethodVisitor methodVisitor83 = null;
        org.mockito.asm.MethodAdapter methodAdapter84 = new org.mockito.asm.MethodAdapter(methodVisitor83);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter85 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter84);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter86 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter85);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter87 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter85);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter88 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter87);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter89 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter87);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter90 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter89);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter91 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter90);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter92 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter91);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter93 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter91);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter94 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter91);
        boolean boolean95 = signature79.equals((java.lang.Object) localVariablesSorter91);
        org.mockito.asm.Attribute attribute96 = null;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter91.visitAttribute(attribute96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "V" + "'", str8, "V");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(VZVDDZ)V" + "'", str16, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "V" + "'", str32, "V");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(VZVDDZ)V" + "'", str40, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(VZVDDZ)D" + "'", str42, "(VZVDDZ)D");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(VZVDDZ)V" + "'", str43, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Z" + "'", str59, "Z");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "boolean" + "'", str60, "boolean");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "V" + "'", str68, "V");
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(VZVDDZ)V" + "'", str76, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;" + "'", str78, "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org/mockito/asm/Type" + "'", str80, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test04311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04311");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter7 = null;
        enhancer0.setCallbackFilter(callbackFilter7);
        java.lang.Class<?> wildcardClass9 = enhancer0.getClass();
        org.mockito.cglib.proxy.Callback callback10 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray11 = new org.mockito.cglib.proxy.Callback[] { callback10 };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerStaticCallbacks((java.lang.Class) wildcardClass9, callbackArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.proxy.Enhancer is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(callbackArray11);
    }

    @Test
    public void test04312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04312");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        org.mockito.asm.ClassAdapter classAdapter10 = new org.mockito.asm.ClassAdapter(classVisitor8);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classAdapter10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor13);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classAdapter15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer23.setCallback(callback26);
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer23.setCallback(callback28);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer23.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer23.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor33);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        boolean boolean37 = namingPolicy31.equals((java.lang.Object) classAdapter35);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor41);
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classAdapter43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter45.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter40.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter40.getClassInfo();
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor55 = null;
        org.mockito.asm.ClassAdapter classAdapter56 = new org.mockito.asm.ClassAdapter(classVisitor55);
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor55);
        classEmitter54.setTarget((org.mockito.asm.ClassVisitor) classAdapter57);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter59.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter59.setTarget((org.mockito.asm.ClassVisitor) classEmitter61);
        classEmitter54.setTarget((org.mockito.asm.ClassVisitor) classEmitter61);
        org.mockito.cglib.core.ClassInfo classInfo64 = classEmitter61.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo66 = classEmitter65.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter65);
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter65);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classEmitter68);
        org.mockito.cglib.core.ClassInfo classInfo70 = classEmitter61.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor71 = null;
        org.mockito.asm.ClassAdapter classAdapter72 = new org.mockito.asm.ClassAdapter(classVisitor71);
        org.mockito.asm.ClassAdapter classAdapter73 = new org.mockito.asm.ClassAdapter(classVisitor71);
        classEmitter61.setTarget(classVisitor71);
        org.mockito.cglib.core.ClassEmitter classEmitter75 = new org.mockito.cglib.core.ClassEmitter(classVisitor71);
        classEmitter40.setTarget(classVisitor71);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor79 = classEmitter40.visitAnnotation("(VZVDDZ)LL1948923726;", true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNotNull(generatorStrategy30);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo51);
        org.junit.Assert.assertNull(classInfo60);
        org.junit.Assert.assertNull(classInfo64);
        org.junit.Assert.assertNull(classInfo66);
        org.junit.Assert.assertNull(classInfo70);
    }

    @Test
    public void test04313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04313");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass20);
        boolean boolean22 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer0.setCallbackFilter(callbackFilter23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        java.lang.Class<?> wildcardClass30 = classAdapter29.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass34);
        org.mockito.asm.ClassVisitor classVisitor36 = null;
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter(classVisitor36);
        java.lang.Class<?> wildcardClass38 = classAdapter37.getClass();
        java.lang.String str39 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        java.lang.Class<?> wildcardClass42 = classAdapter41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Class[] classArray44 = new java.lang.Class[] { wildcardClass30, wildcardClass34, wildcardClass38, wildcardClass42 };
        enhancer25.setInterfaces(classArray44);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter46 = null;
        enhancer25.setCallbackFilter(callbackFilter46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setUseFactory(true);
        enhancer48.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback53 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray54 = new org.mockito.cglib.proxy.Callback[] { callback53 };
        enhancer48.setCallbacks(callbackArray54);
        enhancer25.setCallbacks(callbackArray54);
        enhancer0.setCallbacks(callbackArray54);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter58 = null;
        enhancer0.setCallbackFilter(callbackFilter58);
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy62 = null;
        enhancer0.setStrategy(generatorStrategy62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback68 = null;
        enhancer65.setCallback(callback68);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter70 = null;
        enhancer65.setCallbackFilter(callbackFilter70);
        org.mockito.cglib.proxy.Callback callback72 = null;
        enhancer65.setCallback(callback72);
        org.mockito.cglib.core.NamingPolicy namingPolicy74 = enhancer65.getNamingPolicy();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local77 = new org.mockito.cglib.core.Local(0, type76);
        int int78 = type76.getSort();
        java.lang.String str79 = type76.getClassName();
        java.lang.String str80 = type76.getClassName();
        boolean boolean81 = namingPolicy74.equals((java.lang.Object) type76);
        enhancer64.setNamingPolicy(namingPolicy74);
        java.lang.Class<?> wildcardClass83 = namingPolicy74.getClass();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass83);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass83);
        java.lang.Class class86 = null;
        enhancer0.setSuperclass(class86);
        boolean boolean88 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(true);
        boolean boolean91 = enhancer0.getAttemptLoad();
        enhancer0.setInterceptDuringConstruction(false);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str31, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str35, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str39, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(callbackArray54);
        org.junit.Assert.assertNotNull(namingPolicy74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 8 + "'", int78 == 8);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "double" + "'", str79, "double");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "double" + "'", str80, "double");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test04314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04314");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer9.setCallback(callback12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer9.setCallback(callback14);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer9.getStrategy();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        boolean boolean18 = generatorStrategy16.equals((java.lang.Object) label17);
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        org.mockito.asm.ClassAdapter classAdapter22 = new org.mockito.asm.ClassAdapter(classVisitor20);
        classEmitter19.setTarget((org.mockito.asm.ClassVisitor) classAdapter22);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo25 = classEmitter24.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter26);
        classEmitter19.setTarget((org.mockito.asm.ClassVisitor) classEmitter26);
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter26.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo31 = classEmitter30.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        classEmitter26.setTarget((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter33.getClassInfo();
        label17.info = classEmitter33;
        java.lang.Object obj37 = label17.info;
        java.lang.Object obj38 = label17.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter6.visitJumpInsn(129, label17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(classInfo25);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo31);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test04315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04315");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        boolean boolean21 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer0.setCallback(callback22);
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        enhancer28.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer28.setCallbacks(callbackArray34);
        boolean boolean36 = enhancer28.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy37 = enhancer28.getStrategy();
        enhancer0.setStrategy(generatorStrategy37);
        org.mockito.asm.MethodVisitor methodVisitor41 = null;
        org.mockito.asm.MethodAdapter methodAdapter42 = new org.mockito.asm.MethodAdapter(methodVisitor41);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter43 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter42);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter44 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter43);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter45 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter43);
        boolean boolean46 = generatorStrategy37.equals((java.lang.Object) localVariablesSorter43);
        org.mockito.asm.MethodAdapter methodAdapter47 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter43);
        org.mockito.asm.Label label51 = new org.mockito.asm.Label();
        java.lang.String str52 = label51.toString();
        org.mockito.asm.Label label53 = new org.mockito.asm.Label();
        label51.info = label53;
        java.lang.String str55 = label51.toString();
        java.lang.String str56 = label51.toString();
        java.lang.Object obj57 = label51.info;
        java.lang.String str58 = label51.toString();
        org.mockito.asm.Label label59 = null;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter47.visitLocalVariable("L1881114059", "L1026955785", "L6167516", label51, label59, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(generatorStrategy37);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str52 + "' != '" + "L543065096" + "'", str52, "L543065096");
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L543065096" + "'", str55, "L543065096");
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L543065096" + "'", str56, "L543065096");
        org.junit.Assert.assertNotNull(obj57);
// flaky:         org.junit.Assert.assertEquals(obj57.toString(), "L1492711933");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "L1492711933");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "L1492711933");
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "L543065096" + "'", str58, "L543065096");
    }

    @Test
    public void test04316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04316");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.ClassLoader classLoader7 = enhancer0.getClassLoader();
        enhancer0.setUseCache(false);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer13.setCallback(callback16);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter18 = null;
        enhancer13.setCallbackFilter(callbackFilter18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer13.setCallback(callback20);
        enhancer13.setAttemptLoad(true);
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        java.lang.Class<?> wildcardClass26 = classAdapter25.getClass();
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        enhancer13.setSuperclass((java.lang.Class) wildcardClass26);
        java.lang.ClassLoader classLoader29 = enhancer13.getClassLoader();
        boolean boolean30 = namingPolicy12.equals((java.lang.Object) classLoader29);
        org.mockito.asm.MethodVisitor methodVisitor33 = null;
        org.mockito.asm.MethodAdapter methodAdapter34 = new org.mockito.asm.MethodAdapter(methodVisitor33);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter35 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter34);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter36 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter35);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter37 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter35);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter38 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter35);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter39 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter38);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter40 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter39);
        boolean boolean41 = namingPolicy12.equals((java.lang.Object) localVariablesSorter40);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter42 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter40);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter40.visitFieldInsn(157, "L1608435376", "L549231031", "L158832110");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str27, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test04317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04317");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer5.setCallback(callback8);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer5.setCallback(callback10);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer5.getStrategy();
        enhancer5.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer15.setCallback(callback16);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer19.setCallback(callback22);
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer19.setCallback(callback24);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy26 = enhancer19.getStrategy();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        boolean boolean30 = type27.equals((java.lang.Object) classVisitor28);
        int int32 = type27.getOpcode(116);
        boolean boolean33 = generatorStrategy26.equals((java.lang.Object) 116);
        enhancer18.setStrategy(generatorStrategy26);
        enhancer15.setStrategy(generatorStrategy26);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setUseFactory(true);
        enhancer36.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter41 = null;
        enhancer36.setCallbackFilter(callbackFilter41);
        java.lang.ClassLoader classLoader43 = enhancer36.getClassLoader();
        enhancer15.setClassLoader(classLoader43);
        java.lang.ClassLoader classLoader45 = enhancer15.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        enhancer46.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        java.lang.Class<?> wildcardClass56 = classAdapter55.getClass();
        java.lang.String str57 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass56);
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        java.lang.Class<?> wildcardClass60 = classAdapter59.getClass();
        java.lang.String str61 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass60);
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        java.lang.Class<?> wildcardClass64 = classAdapter63.getClass();
        java.lang.String str65 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass64);
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        java.lang.Class<?> wildcardClass68 = classAdapter67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        java.lang.Class[] classArray70 = new java.lang.Class[] { wildcardClass56, wildcardClass60, wildcardClass64, wildcardClass68 };
        enhancer51.setInterfaces(classArray70);
        enhancer46.setInterfaces(classArray70);
        enhancer15.setInterfaces(classArray70);
        enhancer5.setInterfaces(classArray70);
        java.lang.Class<?> wildcardClass75 = classArray70.getClass();
        java.lang.String str76 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass75);
        boolean boolean77 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass75);
        java.lang.String str78 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass75);
        java.lang.String str80 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass75);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local84 = new org.mockito.cglib.core.Local(0, type83);
        int int85 = type83.getSort();
        java.lang.String str86 = type83.getClassName();
        java.lang.String str87 = type83.getClassName();
        java.lang.Class<?> wildcardClass88 = type83.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass88);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        enhancer0.setUseFactory(true);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNotNull(generatorStrategy26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 116 + "'", int32 == 116);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertNotNull(classLoader45);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str57, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str61, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str65, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[Ljava/lang/Class;" + "'", str76, "[Ljava/lang/Class;");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[Ljava/lang/Class;" + "'", str78, "[Ljava/lang/Class;");
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[Ljava/lang/Class;" + "'", str80, "[Ljava/lang/Class;");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 8 + "'", int85 == 8);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "double" + "'", str86, "double");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "double" + "'", str87, "double");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test04318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04318");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        boolean boolean4 = signature2.equals((java.lang.Object) "(VZVDDZ)B");
        org.mockito.asm.Type type5 = signature2.getReturnType();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("L1089991743");
        int int8 = type7.getSize();
        boolean boolean9 = signature2.equals((java.lang.Object) int8);
        org.mockito.asm.Type[] typeArray10 = signature2.getArgumentTypes();
        java.lang.String str11 = signature2.getDescriptor();
        java.lang.Class<?> wildcardClass12 = signature2.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer13.setCallback(callback16);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer13.setCallback(callback18);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy20 = enhancer13.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer13.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor23);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classAdapter25);
        boolean boolean27 = namingPolicy21.equals((java.lang.Object) classAdapter25);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        enhancer28.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer28.setCallbacks(callbackArray34);
        boolean boolean36 = enhancer28.getAttemptLoad();
        boolean boolean37 = namingPolicy21.equals((java.lang.Object) enhancer28);
        enhancer28.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy40 = enhancer28.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setUseFactory(true);
        enhancer41.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback46 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray47 = new org.mockito.cglib.proxy.Callback[] { callback46 };
        enhancer41.setCallbacks(callbackArray47);
        enhancer28.setCallbacks(callbackArray47);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerStaticCallbacks((java.lang.Class) wildcardClass12, callbackArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.core.Signature is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(VZVDDZ)Z" + "'", str11, "(VZVDDZ)Z");
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(generatorStrategy20);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(generatorStrategy40);
        org.junit.Assert.assertNotNull(callbackArray47);
    }

    @Test
    public void test04319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04319");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer1.setCallback(callback4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer1.setCallbackFilter(callbackFilter6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer1.setCallback(callback8);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer1.getNamingPolicy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(0, type12);
        int int14 = type12.getSort();
        java.lang.String str15 = type12.getClassName();
        java.lang.String str16 = type12.getClassName();
        boolean boolean17 = namingPolicy10.equals((java.lang.Object) type12);
        enhancer0.setNamingPolicy(namingPolicy10);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer19.setCallback(callback22);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter24 = null;
        enhancer19.setCallbackFilter(callbackFilter24);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer19.setCallback(callback26);
        enhancer19.setInterceptDuringConstruction(true);
        boolean boolean30 = namingPolicy10.equals((java.lang.Object) true);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer31.setCallback(callback34);
        enhancer31.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer38.setCallback(callback41);
        enhancer38.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer38.getNamingPolicy();
        enhancer31.setNamingPolicy(namingPolicy45);
        enhancer31.setInterceptDuringConstruction(true);
        boolean boolean49 = namingPolicy10.equals((java.lang.Object) enhancer31);
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer50.setCallback(callback53);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter55 = null;
        enhancer50.setCallbackFilter(callbackFilter55);
        org.mockito.cglib.proxy.Callback callback57 = null;
        enhancer50.setCallback(callback57);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback62 = null;
        enhancer59.setCallback(callback62);
        enhancer59.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass66 = enhancer59.getClass();
        enhancer50.setSuperclass((java.lang.Class) wildcardClass66);
        java.lang.String str68 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass66);
        enhancer31.setSuperclass((java.lang.Class) wildcardClass66);
        java.lang.ClassLoader classLoader70 = enhancer31.getClassLoader();
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo72 = classEmitter71.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter71);
        org.mockito.cglib.core.ClassEmitter classEmitter74 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter71);
        org.mockito.cglib.core.ClassEmitter classEmitter75 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter71);
        org.mockito.cglib.core.ClassInfo classInfo76 = classEmitter71.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter71);
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor81 = null;
        org.mockito.asm.ClassAdapter classAdapter82 = new org.mockito.asm.ClassAdapter(classVisitor81);
        org.mockito.asm.ClassAdapter classAdapter83 = new org.mockito.asm.ClassAdapter(classVisitor81);
        classEmitter80.setTarget((org.mockito.asm.ClassVisitor) classAdapter83);
        org.mockito.cglib.core.ClassEmitter classEmitter85 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo86 = classEmitter85.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter87 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter85);
        org.mockito.cglib.core.ClassEmitter classEmitter88 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter85);
        org.mockito.cglib.core.ClassEmitter classEmitter89 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter85);
        classEmitter80.setTarget((org.mockito.asm.ClassVisitor) classEmitter85);
        classEmitter79.setTarget((org.mockito.asm.ClassVisitor) classEmitter85);
        org.mockito.cglib.core.ClassInfo classInfo92 = classEmitter85.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter93 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter85);
        // The following exception was thrown during execution in test generation
        try {
            enhancer31.generateClass((org.mockito.asm.ClassVisitor) classEmitter85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double" + "'", str15, "double");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double" + "'", str16, "double");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str68, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(classLoader70);
        org.junit.Assert.assertNull(classInfo72);
        org.junit.Assert.assertNull(classInfo76);
        org.junit.Assert.assertNull(classInfo86);
        org.junit.Assert.assertNull(classInfo92);
    }

    @Test
    public void test04320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04320");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer8.setCallback(callback11);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter13 = null;
        enhancer8.setCallbackFilter(callbackFilter13);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer8.setCallback(callback15);
        enhancer8.setUseFactory(true);
        enhancer8.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer8.setCallback(callback21);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor23 = classEmitter3.visitField(98, "L841688041", "L1093683210", "L1954410221", (java.lang.Object) callback21);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
    }

    @Test
    public void test04321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04321");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.asm.ClassAdapter classAdapter6 = new org.mockito.asm.ClassAdapter(classVisitor5);
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter(classVisitor5);
        classEmitter4.setTarget((org.mockito.asm.ClassVisitor) classAdapter7);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter9.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter4.setTarget((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        classEmitter11.setTarget((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        classEmitter11.setTarget((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter3.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter25.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor31);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classAdapter33);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.Signature signature44 = new org.mockito.cglib.core.Signature("L1446612185", "L1342107677");
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        java.lang.Class<?> wildcardClass48 = classAdapter47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type54 = type53.getElementType();
        int int56 = type54.getOpcode(126);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.String str58 = type57.toString();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local62 = new org.mockito.cglib.core.Local(0, type61);
        org.mockito.cglib.core.Local local63 = new org.mockito.cglib.core.Local((int) (byte) 100, type61);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor69);
        boolean boolean71 = type68.equals((java.lang.Object) classVisitor69);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str73 = type72.getDescriptor();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type75 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type76 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor77 = null;
        org.mockito.asm.ClassAdapter classAdapter78 = new org.mockito.asm.ClassAdapter(classVisitor77);
        boolean boolean79 = type76.equals((java.lang.Object) classVisitor77);
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type67, type68, type72, type74, type75, type76 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray80);
        org.mockito.cglib.core.Signature signature82 = new org.mockito.cglib.core.Signature("L1057808593", type65, typeArray80);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray80);
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray80);
        org.mockito.cglib.core.Signature signature85 = new org.mockito.cglib.core.Signature("L1625078857", type54, typeArray80);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter86 = classEmitter25.begin_method(112, signature44, typeArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@58acb56d");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo21);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 130 + "'", int56 == 130);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "B" + "'", str58, "B");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "V" + "'", str73, "V");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(VZVDDZ)V" + "'", str81, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(VZVDDZ)D" + "'", str83, "(VZVDDZ)D");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(VZVDDZ)B" + "'", str84, "(VZVDDZ)B");
    }

    @Test
    public void test04322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04322");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        java.lang.Class[] classArray12 = null;
        enhancer0.setInterfaces(classArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class14 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertNotNull(namingPolicy9);
    }

    @Test
    public void test04323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04323");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type[] typeArray23 = org.mockito.asm.Type.getArgumentTypes("(VZVDDZ)V");
        org.mockito.cglib.core.Signature signature24 = new org.mockito.cglib.core.Signature("L1858106748", type21, typeArray23);
        java.lang.String str25 = signature24.getName();
        org.mockito.asm.Type type26 = signature24.getReturnType();
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback30 = null;
        enhancer27.setCallback(callback30);
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer27.setCallback(callback32);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy34 = enhancer27.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer27.getNamingPolicy();
        enhancer27.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer27.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer40.setCallback(callback43);
        org.mockito.cglib.proxy.Callback callback45 = null;
        enhancer40.setCallback(callback45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter52 = null;
        enhancer47.setCallbackFilter(callbackFilter52);
        org.mockito.cglib.proxy.Callback callback54 = null;
        enhancer47.setCallback(callback54);
        org.mockito.cglib.core.NamingPolicy namingPolicy56 = enhancer47.getNamingPolicy();
        enhancer40.setNamingPolicy(namingPolicy56);
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        java.lang.Class<?> wildcardClass60 = classAdapter59.getClass();
        enhancer40.setSuperclass((java.lang.Class) wildcardClass60);
        boolean boolean62 = enhancer40.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter63 = null;
        enhancer40.setCallbackFilter(callbackFilter63);
        enhancer40.setAttemptLoad(false);
        enhancer40.setInterceptDuringConstruction(true);
        java.lang.ClassLoader classLoader69 = enhancer40.getClassLoader();
        enhancer27.setClassLoader(classLoader69);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter17.declare_field(9, "L1593404586", type26, (java.lang.Object) enhancer27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1858106748" + "'", str25, "L1858106748");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(generatorStrategy34);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNotNull(namingPolicy56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(classLoader69);
    }

    @Test
    public void test04324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04324");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer1.setCallback(callback4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer1.setCallbackFilter(callbackFilter6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer1.setCallback(callback8);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer1.getNamingPolicy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(0, type12);
        int int14 = type12.getSort();
        java.lang.String str15 = type12.getClassName();
        java.lang.String str16 = type12.getClassName();
        boolean boolean17 = namingPolicy10.equals((java.lang.Object) type12);
        enhancer0.setNamingPolicy(namingPolicy10);
        java.lang.ClassLoader classLoader19 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer20.setCallback(callback21);
        enhancer20.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer25.setCallback(callback26);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer29.setCallback(callback32);
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer29.setCallback(callback34);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy36 = enhancer29.getStrategy();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        boolean boolean40 = type37.equals((java.lang.Object) classVisitor38);
        int int42 = type37.getOpcode(116);
        boolean boolean43 = generatorStrategy36.equals((java.lang.Object) 116);
        enhancer28.setStrategy(generatorStrategy36);
        enhancer25.setStrategy(generatorStrategy36);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        enhancer46.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter51 = null;
        enhancer46.setCallbackFilter(callbackFilter51);
        java.lang.ClassLoader classLoader53 = enhancer46.getClassLoader();
        enhancer25.setClassLoader(classLoader53);
        java.lang.ClassLoader classLoader55 = enhancer25.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setUseFactory(true);
        enhancer56.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        java.lang.Class<?> wildcardClass66 = classAdapter65.getClass();
        java.lang.String str67 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass66);
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        java.lang.Class<?> wildcardClass70 = classAdapter69.getClass();
        java.lang.String str71 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass70);
        org.mockito.asm.ClassVisitor classVisitor72 = null;
        org.mockito.asm.ClassAdapter classAdapter73 = new org.mockito.asm.ClassAdapter(classVisitor72);
        java.lang.Class<?> wildcardClass74 = classAdapter73.getClass();
        java.lang.String str75 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass74);
        org.mockito.asm.ClassVisitor classVisitor76 = null;
        org.mockito.asm.ClassAdapter classAdapter77 = new org.mockito.asm.ClassAdapter(classVisitor76);
        java.lang.Class<?> wildcardClass78 = classAdapter77.getClass();
        boolean boolean79 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass78);
        java.lang.Class[] classArray80 = new java.lang.Class[] { wildcardClass66, wildcardClass70, wildcardClass74, wildcardClass78 };
        enhancer61.setInterfaces(classArray80);
        enhancer56.setInterfaces(classArray80);
        enhancer25.setInterfaces(classArray80);
        enhancer20.setInterfaces(classArray80);
        enhancer0.setInterfaces(classArray80);
        java.lang.ClassLoader classLoader86 = enhancer0.getClassLoader();
        boolean boolean87 = enhancer0.getAttemptLoad();
        org.mockito.asm.Type type90 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local91 = new org.mockito.cglib.core.Local(0, type90);
        org.mockito.cglib.core.Local local92 = new org.mockito.cglib.core.Local(0, type90);
        org.mockito.asm.Type type93 = local92.getType();
        java.lang.Class<?> wildcardClass94 = local92.getClass();
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.core.Local");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double" + "'", str15, "double");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double" + "'", str16, "double");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(generatorStrategy36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 116 + "'", int42 == 116);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classLoader53);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str67, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str71, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str75, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(classLoader86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test04325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04325");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.ClassLoader classLoader7 = enhancer0.getClassLoader();
        enhancer0.setUseCache(false);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy12 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer13.setCallback(callback16);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter18 = null;
        enhancer13.setCallbackFilter(callbackFilter18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer13.setCallback(callback20);
        enhancer13.setAttemptLoad(true);
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        java.lang.Class<?> wildcardClass26 = classAdapter25.getClass();
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        enhancer13.setSuperclass((java.lang.Class) wildcardClass26);
        java.lang.ClassLoader classLoader29 = enhancer13.getClassLoader();
        boolean boolean30 = namingPolicy12.equals((java.lang.Object) classLoader29);
        org.mockito.asm.MethodVisitor methodVisitor33 = null;
        org.mockito.asm.MethodAdapter methodAdapter34 = new org.mockito.asm.MethodAdapter(methodVisitor33);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter35 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter34);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter36 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter35);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter37 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter35);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter38 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter35);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter39 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter38);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter40 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter39);
        boolean boolean41 = namingPolicy12.equals((java.lang.Object) localVariablesSorter40);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter42 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter40);
        org.mockito.asm.Label label46 = new org.mockito.asm.Label();
        java.lang.String str47 = label46.toString();
        org.mockito.asm.Label label48 = new org.mockito.asm.Label();
        label46.info = label48;
        java.lang.Object obj50 = label48.info;
        java.lang.String str51 = label48.toString();
        java.lang.String str52 = label48.toString();
        java.lang.Object obj53 = label48.info;
        java.lang.Object obj54 = label48.info;
        org.mockito.asm.Label label55 = new org.mockito.asm.Label();
        java.lang.String str56 = label55.toString();
        java.lang.Object obj57 = label55.info;
        java.lang.Object obj58 = label55.info;
        java.lang.Object obj59 = label55.info;
        java.lang.Object obj60 = label55.info;
        java.lang.String str61 = label55.toString();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter40.visitLocalVariable("L1021862607(VZVDDZ)D", "L495910856", "L320076355", label48, label55, 44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 44");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(namingPolicy12);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str27, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(classLoader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L918877279" + "'", str47, "L918877279");
        org.junit.Assert.assertNull(obj50);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L1007987938" + "'", str51, "L1007987938");
// flaky:         org.junit.Assert.assertEquals("'" + str52 + "' != '" + "L1007987938" + "'", str52, "L1007987938");
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj54);
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L1269803122" + "'", str56, "L1269803122");
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj60);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "L1269803122" + "'", str61, "L1269803122");
    }

    @Test
    public void test04326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04326");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor2 = null;
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor2);
        boolean boolean4 = type1.equals((java.lang.Object) classVisitor2);
        int int6 = type1.getOpcode(116);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        boolean boolean12 = type9.equals((java.lang.Object) classVisitor10);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str14 = type13.getDescriptor();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        boolean boolean20 = type17.equals((java.lang.Object) classVisitor18);
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type8, type9, type13, type15, type16, type17 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray21);
        org.mockito.cglib.core.Signature signature23 = new org.mockito.cglib.core.Signature("V", type1, typeArray21);
        java.lang.String str24 = signature23.getDescriptor();
        java.lang.String str25 = signature23.getName();
        java.lang.String str26 = signature23.getName();
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer28.setCallback(callback31);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter33 = null;
        enhancer28.setCallbackFilter(callbackFilter33);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer28.setCallback(callback35);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer28.getNamingPolicy();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local40 = new org.mockito.cglib.core.Local(0, type39);
        int int41 = type39.getSort();
        java.lang.String str42 = type39.getClassName();
        java.lang.String str43 = type39.getClassName();
        boolean boolean44 = namingPolicy37.equals((java.lang.Object) type39);
        enhancer27.setNamingPolicy(namingPolicy37);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int48 = type47.getSort();
        java.lang.String str49 = type47.getDescriptor();
        org.mockito.cglib.core.Local local50 = new org.mockito.cglib.core.Local((int) (byte) 1, type47);
        boolean boolean51 = namingPolicy37.equals((java.lang.Object) local50);
        boolean boolean52 = signature23.equals((java.lang.Object) boolean51);
        org.mockito.asm.MethodVisitor methodVisitor53 = null;
        org.mockito.asm.MethodAdapter methodAdapter54 = new org.mockito.asm.MethodAdapter(methodVisitor53);
        org.mockito.asm.MethodAdapter methodAdapter55 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter54);
        boolean boolean56 = signature23.equals((java.lang.Object) methodAdapter54);
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter54.visitMultiANewArrayInsn("L1966521184", 124);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 116 + "'", int6 == 116);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "V" + "'", str14, "V");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VZVDDZ)V" + "'", str22, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VZVDDZ)Z" + "'", str24, "(VZVDDZ)Z");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "V" + "'", str25, "V");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "V" + "'", str26, "V");
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 8 + "'", int41 == 8);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "double" + "'", str42, "double");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "double" + "'", str43, "double");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Z" + "'", str49, "Z");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test04327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04327");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        java.lang.ClassLoader classLoader30 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor33);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor38);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classAdapter40);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter42.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor49);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classAdapter51);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassInfo classInfo58 = classEmitter55.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter59.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassInfo classInfo64 = classEmitter62.getClassInfo();
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        boolean boolean66 = namingPolicy31.equals((java.lang.Object) classEmitter37);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter37.visitOuterClass("L640500464", "L1859858766", "org/mockito/asm/TypeL1446612185");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertNull(classInfo54);
        org.junit.Assert.assertNull(classInfo58);
        org.junit.Assert.assertNull(classInfo60);
        org.junit.Assert.assertNull(classInfo64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test04328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04328");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        boolean boolean5 = type2.equals((java.lang.Object) classVisitor3);
        int int7 = type2.getOpcode(116);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        boolean boolean13 = type10.equals((java.lang.Object) classVisitor11);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str15 = type14.getDescriptor();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        boolean boolean21 = type18.equals((java.lang.Object) classVisitor19);
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type9, type10, type14, type16, type17, type18 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray22);
        org.mockito.cglib.core.Signature signature24 = new org.mockito.cglib.core.Signature("V", type2, typeArray22);
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray22);
        java.lang.String str26 = type0.toString();
        java.lang.String str27 = type0.getClassName();
        java.lang.Class<?> wildcardClass28 = type0.getClass();
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass28);
        boolean boolean30 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass28);
        java.lang.String str31 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass28);
        java.lang.String str32 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass28);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setUseFactory(true);
        enhancer33.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter38 = null;
        enhancer33.setCallbackFilter(callbackFilter38);
        java.lang.ClassLoader classLoader40 = enhancer33.getClassLoader();
        enhancer33.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer43.setCallback(callback46);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer43.setCallback(callback48);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy50 = enhancer43.getStrategy();
        enhancer43.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setUseFactory(true);
        enhancer53.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter58 = null;
        enhancer53.setCallbackFilter(callbackFilter58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor63);
        java.lang.Class<?> wildcardClass65 = classAdapter64.getClass();
        java.lang.String str66 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass65);
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        java.lang.Class<?> wildcardClass69 = classAdapter68.getClass();
        java.lang.String str70 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass69);
        org.mockito.asm.ClassVisitor classVisitor71 = null;
        org.mockito.asm.ClassAdapter classAdapter72 = new org.mockito.asm.ClassAdapter(classVisitor71);
        java.lang.Class<?> wildcardClass73 = classAdapter72.getClass();
        java.lang.String str74 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass73);
        org.mockito.asm.ClassVisitor classVisitor75 = null;
        org.mockito.asm.ClassAdapter classAdapter76 = new org.mockito.asm.ClassAdapter(classVisitor75);
        java.lang.Class<?> wildcardClass77 = classAdapter76.getClass();
        boolean boolean78 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass77);
        java.lang.Class[] classArray79 = new java.lang.Class[] { wildcardClass65, wildcardClass69, wildcardClass73, wildcardClass77 };
        enhancer60.setInterfaces(classArray79);
        enhancer53.setInterfaces(classArray79);
        enhancer43.setInterfaces(classArray79);
        enhancer33.setInterfaces(classArray79);
        org.mockito.cglib.proxy.Callback callback84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass28, classArray79, callback84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 116 + "'", int7 == 116);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "V" + "'", str15, "V");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(VZVDDZ)V" + "'", str23, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(VZVDDZ)B" + "'", str25, "(VZVDDZ)B");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "B" + "'", str26, "B");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "byte" + "'", str27, "byte");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/asm/Type" + "'", str29, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/asm/Type" + "'", str31, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org/mockito/asm/Type" + "'", str32, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(classLoader40);
        org.junit.Assert.assertNotNull(generatorStrategy50);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str66, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str70, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str74, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(classArray79);
    }

    @Test
    public void test04329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04329");
        java.lang.Class class0 = null;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local4 = new org.mockito.cglib.core.Local(0, type3);
        org.mockito.cglib.core.Local local5 = new org.mockito.cglib.core.Local((int) (byte) 100, type3);
        org.mockito.asm.Type type6 = local5.getType();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        enhancer7.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean12 = type6.equals((java.lang.Object) enhancer7);
        java.lang.ClassLoader classLoader13 = enhancer7.getClassLoader();
        boolean boolean14 = enhancer7.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass20);
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.asm.ClassAdapter classAdapter23 = new org.mockito.asm.ClassAdapter(classVisitor22);
        java.lang.Class<?> wildcardClass24 = classAdapter23.getClass();
        java.lang.String str25 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass24);
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        java.lang.Class<?> wildcardClass28 = classAdapter27.getClass();
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass28);
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor30);
        java.lang.Class<?> wildcardClass32 = classAdapter31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Class[] classArray34 = new java.lang.Class[] { wildcardClass20, wildcardClass24, wildcardClass28, wildcardClass32 };
        enhancer15.setInterfaces(classArray34);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter36 = null;
        enhancer15.setCallbackFilter(callbackFilter36);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        enhancer38.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback43 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray44 = new org.mockito.cglib.proxy.Callback[] { callback43 };
        enhancer38.setCallbacks(callbackArray44);
        enhancer15.setCallbacks(callbackArray44);
        enhancer7.setCallbacks(callbackArray44);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerCallbacks(class0, callbackArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str21, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str25, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str29, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(callbackArray44);
    }

    @Test
    public void test04330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04330");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        boolean boolean7 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer8.setCallback(callback11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        enhancer13.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback18 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray19 = new org.mockito.cglib.proxy.Callback[] { callback18 };
        enhancer13.setCallbacks(callbackArray19);
        enhancer8.setCallbacks(callbackArray19);
        enhancer8.setUseFactory(false);
        boolean boolean24 = enhancer8.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer8.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer26.setCallback(callback29);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer26.setCallback(callback31);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy33 = enhancer26.getStrategy();
        enhancer26.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer36.setCallback(callback37);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer40.setCallback(callback43);
        org.mockito.cglib.proxy.Callback callback45 = null;
        enhancer40.setCallback(callback45);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer40.getStrategy();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        boolean boolean51 = type48.equals((java.lang.Object) classVisitor49);
        int int53 = type48.getOpcode(116);
        boolean boolean54 = generatorStrategy47.equals((java.lang.Object) 116);
        enhancer39.setStrategy(generatorStrategy47);
        enhancer36.setStrategy(generatorStrategy47);
        org.mockito.cglib.proxy.Enhancer enhancer57 = new org.mockito.cglib.proxy.Enhancer();
        enhancer57.setUseFactory(true);
        enhancer57.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter62 = null;
        enhancer57.setCallbackFilter(callbackFilter62);
        java.lang.ClassLoader classLoader64 = enhancer57.getClassLoader();
        enhancer36.setClassLoader(classLoader64);
        java.lang.ClassLoader classLoader66 = enhancer36.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        enhancer67.setUseFactory(true);
        enhancer67.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        enhancer72.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor75 = null;
        org.mockito.asm.ClassAdapter classAdapter76 = new org.mockito.asm.ClassAdapter(classVisitor75);
        java.lang.Class<?> wildcardClass77 = classAdapter76.getClass();
        java.lang.String str78 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass77);
        org.mockito.asm.ClassVisitor classVisitor79 = null;
        org.mockito.asm.ClassAdapter classAdapter80 = new org.mockito.asm.ClassAdapter(classVisitor79);
        java.lang.Class<?> wildcardClass81 = classAdapter80.getClass();
        java.lang.String str82 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass81);
        org.mockito.asm.ClassVisitor classVisitor83 = null;
        org.mockito.asm.ClassAdapter classAdapter84 = new org.mockito.asm.ClassAdapter(classVisitor83);
        java.lang.Class<?> wildcardClass85 = classAdapter84.getClass();
        java.lang.String str86 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass85);
        org.mockito.asm.ClassVisitor classVisitor87 = null;
        org.mockito.asm.ClassAdapter classAdapter88 = new org.mockito.asm.ClassAdapter(classVisitor87);
        java.lang.Class<?> wildcardClass89 = classAdapter88.getClass();
        boolean boolean90 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass89);
        java.lang.Class[] classArray91 = new java.lang.Class[] { wildcardClass77, wildcardClass81, wildcardClass85, wildcardClass89 };
        enhancer72.setInterfaces(classArray91);
        enhancer67.setInterfaces(classArray91);
        enhancer36.setInterfaces(classArray91);
        enhancer26.setInterfaces(classArray91);
        enhancer8.setInterfaces(classArray91);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackTypes(classArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.asm.ClassAdapter");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(callbackArray19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(generatorStrategy25);
        org.junit.Assert.assertNotNull(generatorStrategy33);
        org.junit.Assert.assertNotNull(generatorStrategy47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 116 + "'", int53 == 116);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(classLoader66);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str78, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str82, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str86, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(classArray91);
    }

    @Test
    public void test04331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04331");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("L1948923726");
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        boolean boolean10 = type7.equals((java.lang.Object) classVisitor8);
        int int12 = type7.getOpcode(116);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        boolean boolean18 = type15.equals((java.lang.Object) classVisitor16);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str20 = type19.getDescriptor();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        boolean boolean26 = type23.equals((java.lang.Object) classVisitor24);
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type14, type15, type19, type21, type22, type23 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray27);
        org.mockito.cglib.core.Signature signature29 = new org.mockito.cglib.core.Signature("V", type7, typeArray27);
        org.mockito.cglib.core.Signature signature30 = new org.mockito.cglib.core.Signature("hi!", type5, typeArray27);
        org.mockito.cglib.core.Signature signature31 = new org.mockito.cglib.core.Signature("hi!", type3, typeArray27);
        java.lang.String str32 = type3.getInternalName();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback36 = null;
        enhancer33.setCallback(callback36);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer33.setCallback(callback38);
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer40.setCallback(callback43);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter45 = null;
        enhancer40.setCallbackFilter(callbackFilter45);
        org.mockito.cglib.proxy.Callback callback47 = null;
        enhancer40.setCallback(callback47);
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer40.getNamingPolicy();
        enhancer33.setNamingPolicy(namingPolicy49);
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor51);
        java.lang.Class<?> wildcardClass53 = classAdapter52.getClass();
        enhancer33.setSuperclass((java.lang.Class) wildcardClass53);
        boolean boolean55 = enhancer33.getAttemptLoad();
        enhancer33.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter58 = null;
        enhancer33.setCallbackFilter(callbackFilter58);
        java.lang.ClassLoader classLoader60 = enhancer33.getClassLoader();
        boolean boolean61 = type3.equals((java.lang.Object) enhancer33);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.cglib.core.Local local65 = new org.mockito.cglib.core.Local(2, type64);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getType("Lorg/mockito/cglib/proxy/Enhancer;");
        org.mockito.asm.Type type70 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type72 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type73 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor74 = null;
        org.mockito.asm.ClassAdapter classAdapter75 = new org.mockito.asm.ClassAdapter(classVisitor74);
        boolean boolean76 = type73.equals((java.lang.Object) classVisitor74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str78 = type77.getDescriptor();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type81 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor82 = null;
        org.mockito.asm.ClassAdapter classAdapter83 = new org.mockito.asm.ClassAdapter(classVisitor82);
        boolean boolean84 = type81.equals((java.lang.Object) classVisitor82);
        org.mockito.asm.Type[] typeArray85 = new org.mockito.asm.Type[] { type72, type73, type77, type79, type80, type81 };
        java.lang.String str86 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray85);
        org.mockito.cglib.core.Signature signature87 = new org.mockito.cglib.core.Signature("L1057808593", type70, typeArray85);
        java.lang.String str88 = signature87.toString();
        java.lang.String str89 = signature87.getDescriptor();
        java.lang.String str90 = signature87.getDescriptor();
        org.mockito.asm.Type[] typeArray91 = signature87.getArgumentTypes();
        org.mockito.cglib.core.Signature signature92 = new org.mockito.cglib.core.Signature("", type68, typeArray91);
        org.mockito.cglib.core.Signature signature93 = new org.mockito.cglib.core.Signature("L471599702", type64, typeArray91);
        org.mockito.cglib.core.Signature signature94 = new org.mockito.cglib.core.Signature("L1833924179", type3, typeArray91);
        java.lang.String str95 = type3.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type96 = type3.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 116 + "'", int12 == 116);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "V" + "'", str20, "V");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(VZVDDZ)V" + "'", str28, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "L1948923726" + "'", str32, "L1948923726");
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(classLoader60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "V" + "'", str78, "V");
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(VZVDDZ)V" + "'", str86, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "L1057808593(VZVDDZ)F" + "'", str88, "L1057808593(VZVDDZ)F");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(VZVDDZ)F" + "'", str89, "(VZVDDZ)F");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(VZVDDZ)F" + "'", str90, "(VZVDDZ)F");
        org.junit.Assert.assertNotNull(typeArray91);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "LL1948923726;" + "'", str95, "LL1948923726;");
    }

    @Test
    public void test04332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04332");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        java.lang.Class<?> wildcardClass12 = classAdapter11.getClass();
        java.lang.String str13 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor14);
        java.lang.Class<?> wildcardClass16 = classAdapter15.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass20);
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.asm.ClassAdapter classAdapter23 = new org.mockito.asm.ClassAdapter(classVisitor22);
        java.lang.Class<?> wildcardClass24 = classAdapter23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass12, wildcardClass16, wildcardClass20, wildcardClass24 };
        enhancer7.setInterfaces(classArray26);
        enhancer0.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer29.setCallback(callback32);
        enhancer29.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer29.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy36);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer38.setCallback(callback41);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer38.setCallback(callback43);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer38.getNamingPolicy();
        boolean boolean46 = namingPolicy36.equals((java.lang.Object) namingPolicy45);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str49 = type48.getClassName();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local53 = new org.mockito.cglib.core.Local(0, type52);
        org.mockito.cglib.core.Local local54 = new org.mockito.cglib.core.Local((int) (byte) 100, type52);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        org.mockito.asm.ClassAdapter classAdapter61 = new org.mockito.asm.ClassAdapter(classVisitor60);
        boolean boolean62 = type59.equals((java.lang.Object) classVisitor60);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str64 = type63.getDescriptor();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        boolean boolean70 = type67.equals((java.lang.Object) classVisitor68);
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type58, type59, type63, type65, type66, type67 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray71);
        org.mockito.cglib.core.Signature signature73 = new org.mockito.cglib.core.Signature("L1057808593", type56, typeArray71);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray71);
        org.mockito.cglib.core.Signature signature75 = new org.mockito.cglib.core.Signature("L1346580404", type48, typeArray71);
        boolean boolean76 = namingPolicy36.equals((java.lang.Object) signature75);
        org.mockito.asm.MethodVisitor methodVisitor79 = null;
        org.mockito.asm.MethodAdapter methodAdapter80 = new org.mockito.asm.MethodAdapter(methodVisitor79);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter81 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter80);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter82 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter81);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter83 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter81);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter84 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter83);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter85 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter83);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter86 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter85);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter87 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter85);
        boolean boolean88 = namingPolicy36.equals((java.lang.Object) localVariablesSorter85);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter85.visitMaxs(155, 124);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str13, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str17, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str21, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "double" + "'", str49, "double");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "V" + "'", str64, "V");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VZVDDZ)V" + "'", str72, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VZVDDZ)D" + "'", str74, "(VZVDDZ)D");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test04333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04333");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter32 = null;
        enhancer0.setCallbackFilter(callbackFilter32);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Callback callback36 = null;
        enhancer0.setCallback(callback36);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter38 = null;
        enhancer0.setCallbackFilter(callbackFilter38);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
    }

    @Test
    public void test04334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04334");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.Signature signature14 = new org.mockito.cglib.core.Signature("L1323327747", "L503953013");
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer15.setCallback(callback16);
        enhancer15.setInterceptDuringConstruction(true);
        enhancer15.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer22.setCallback(callback25);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer22.setCallback(callback27);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer29.setCallback(callback32);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter34 = null;
        enhancer29.setCallbackFilter(callbackFilter34);
        org.mockito.cglib.proxy.Callback callback36 = null;
        enhancer29.setCallback(callback36);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer29.getNamingPolicy();
        enhancer22.setNamingPolicy(namingPolicy38);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        java.lang.Class<?> wildcardClass42 = classAdapter41.getClass();
        enhancer22.setSuperclass((java.lang.Class) wildcardClass42);
        boolean boolean44 = enhancer22.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter45 = null;
        enhancer22.setCallbackFilter(callbackFilter45);
        enhancer22.setAttemptLoad(false);
        enhancer22.setInterceptDuringConstruction(true);
        java.lang.ClassLoader classLoader51 = enhancer22.getClassLoader();
        enhancer15.setClassLoader(classLoader51);
        boolean boolean53 = signature14.equals((java.lang.Object) enhancer15);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        boolean boolean60 = type57.equals((java.lang.Object) classVisitor58);
        int int62 = type57.getOpcode(116);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type64 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        boolean boolean68 = type65.equals((java.lang.Object) classVisitor66);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str70 = type69.getDescriptor();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type72 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type73 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor74 = null;
        org.mockito.asm.ClassAdapter classAdapter75 = new org.mockito.asm.ClassAdapter(classVisitor74);
        boolean boolean76 = type73.equals((java.lang.Object) classVisitor74);
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] { type64, type65, type69, type71, type72, type73 };
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray77);
        org.mockito.cglib.core.Signature signature79 = new org.mockito.cglib.core.Signature("V", type57, typeArray77);
        org.mockito.cglib.core.Signature signature80 = new org.mockito.cglib.core.Signature("hi!", type55, typeArray77);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter81 = classEmitter0.begin_method(0, signature14, typeArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@5ebe15e3");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(classLoader51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 116 + "'", int62 == 116);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "V" + "'", str70, "V");
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(VZVDDZ)V" + "'", str78, "(VZVDDZ)V");
    }

    @Test
    public void test04335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04335");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter(classVisitor6);
        java.lang.Class<?> wildcardClass8 = classAdapter7.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass8);
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        java.lang.Class<?> wildcardClass12 = classAdapter11.getClass();
        java.lang.String str13 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor14);
        java.lang.Class<?> wildcardClass16 = classAdapter15.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass8, wildcardClass12, wildcardClass16, wildcardClass20 };
        enhancer3.setInterfaces(classArray22);
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        java.lang.Class<?> wildcardClass26 = classAdapter25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        enhancer3.setSuperclass((java.lang.Class) wildcardClass26);
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.String str32 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass26);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy36 = enhancer0.getStrategy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str9, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str13, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str17, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str32, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(generatorStrategy36);
    }

    @Test
    public void test04336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04336");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer0.getNamingPolicy();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local34 = new org.mockito.cglib.core.Local(0, type33);
        org.mockito.cglib.core.Local local35 = new org.mockito.cglib.core.Local((int) (byte) 100, type33);
        org.mockito.asm.Type type36 = local35.getType();
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setUseFactory(true);
        enhancer37.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean42 = type36.equals((java.lang.Object) enhancer37);
        java.lang.ClassLoader classLoader43 = enhancer37.getClassLoader();
        boolean boolean44 = enhancer37.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer45.setCallback(callback48);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer45.setCallback(callback50);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer45.getStrategy();
        boolean boolean53 = enhancer45.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter54 = null;
        enhancer45.setCallbackFilter(callbackFilter54);
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setUseFactory(true);
        enhancer56.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback61 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray62 = new org.mockito.cglib.proxy.Callback[] { callback61 };
        enhancer56.setCallbacks(callbackArray62);
        boolean boolean64 = enhancer56.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy65 = enhancer56.getStrategy();
        org.mockito.asm.Label label66 = new org.mockito.asm.Label();
        java.lang.String str67 = label66.toString();
        org.mockito.asm.Label label68 = new org.mockito.asm.Label();
        label66.info = label68;
        org.mockito.asm.Type type71 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local72 = new org.mockito.cglib.core.Local(0, type71);
        label66.info = 0;
        java.lang.String str74 = label66.toString();
        label66.info = "Z(VZVDDZ)Z";
        boolean boolean77 = generatorStrategy65.equals((java.lang.Object) "Z(VZVDDZ)Z");
        enhancer45.setStrategy(generatorStrategy65);
        enhancer37.setStrategy(generatorStrategy65);
        enhancer0.setStrategy(generatorStrategy65);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy83 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer84 = new org.mockito.cglib.proxy.Enhancer();
        enhancer84.setUseFactory(true);
        enhancer84.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback89 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray90 = new org.mockito.cglib.proxy.Callback[] { callback89 };
        enhancer84.setCallbacks(callbackArray90);
        boolean boolean92 = enhancer84.getAttemptLoad();
        enhancer84.setUseFactory(false);
        enhancer84.setInterceptDuringConstruction(true);
        java.lang.ClassLoader classLoader97 = enhancer84.getClassLoader();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray98 = generatorStrategy83.generate((org.mockito.cglib.core.ClassGenerator) enhancer84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classLoader43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(callbackArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(generatorStrategy65);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L1305331131" + "'", str67, "L1305331131");
        org.junit.Assert.assertNotNull(type71);
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L1305331131" + "'", str74, "L1305331131");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(generatorStrategy83);
        org.junit.Assert.assertNotNull(callbackArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(classLoader97);
    }

    @Test
    public void test04337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04337");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local3 = new org.mockito.cglib.core.Local(0, type2);
        org.mockito.cglib.core.Local local4 = new org.mockito.cglib.core.Local((int) (byte) 100, type2);
        org.mockito.asm.Type type5 = local4.getType();
        int int6 = type5.getSize();
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        enhancer7.setSerialVersionUID((java.lang.Long) 100L);
        enhancer7.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer15.setCallback(callback18);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter20 = null;
        enhancer15.setCallbackFilter(callbackFilter20);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer15.setCallback(callback22);
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer15.getNamingPolicy();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local27 = new org.mockito.cglib.core.Local(0, type26);
        int int28 = type26.getSort();
        java.lang.String str29 = type26.getClassName();
        java.lang.String str30 = type26.getClassName();
        boolean boolean31 = namingPolicy24.equals((java.lang.Object) type26);
        enhancer14.setNamingPolicy(namingPolicy24);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback36 = null;
        enhancer33.setCallback(callback36);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter38 = null;
        enhancer33.setCallbackFilter(callbackFilter38);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer33.setCallback(callback40);
        enhancer33.setInterceptDuringConstruction(true);
        boolean boolean44 = namingPolicy24.equals((java.lang.Object) true);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor46);
        classEmitter45.setTarget((org.mockito.asm.ClassVisitor) classAdapter48);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter50.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter50.setTarget((org.mockito.asm.ClassVisitor) classEmitter52);
        classEmitter45.setTarget((org.mockito.asm.ClassVisitor) classEmitter52);
        org.mockito.cglib.core.ClassInfo classInfo55 = classEmitter52.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo57 = classEmitter56.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter56);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter56);
        classEmitter52.setTarget((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo64 = classEmitter63.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter63);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter63);
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor68);
        classEmitter67.setTarget((org.mockito.asm.ClassVisitor) classAdapter70);
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo73 = classEmitter72.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter74 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter72.setTarget((org.mockito.asm.ClassVisitor) classEmitter74);
        classEmitter67.setTarget((org.mockito.asm.ClassVisitor) classEmitter74);
        org.mockito.cglib.core.ClassInfo classInfo77 = classEmitter74.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo79 = classEmitter78.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter78);
        org.mockito.cglib.core.ClassEmitter classEmitter81 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter78);
        classEmitter74.setTarget((org.mockito.asm.ClassVisitor) classEmitter81);
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo84 = classEmitter83.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter85 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter83);
        classEmitter74.setTarget((org.mockito.asm.ClassVisitor) classEmitter83);
        org.mockito.cglib.core.ClassEmitter classEmitter87 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter83);
        org.mockito.cglib.core.ClassEmitter classEmitter88 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter87);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classEmitter88);
        org.mockito.cglib.core.ClassEmitter classEmitter90 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter88);
        org.mockito.cglib.core.ClassInfo classInfo91 = classEmitter88.getClassInfo();
        classEmitter59.setTarget((org.mockito.asm.ClassVisitor) classEmitter88);
        org.mockito.asm.ClassAdapter classAdapter93 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter88);
        boolean boolean94 = namingPolicy24.equals((java.lang.Object) classAdapter93);
        enhancer7.setNamingPolicy(namingPolicy24);
        boolean boolean96 = type5.equals((java.lang.Object) namingPolicy24);
        boolean boolean98 = namingPolicy24.equals((java.lang.Object) "L1156783040");
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "double" + "'", str29, "double");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "double" + "'", str30, "double");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(classInfo51);
        org.junit.Assert.assertNull(classInfo55);
        org.junit.Assert.assertNull(classInfo57);
        org.junit.Assert.assertNull(classInfo64);
        org.junit.Assert.assertNull(classInfo73);
        org.junit.Assert.assertNull(classInfo77);
        org.junit.Assert.assertNull(classInfo79);
        org.junit.Assert.assertNull(classInfo84);
        org.junit.Assert.assertNull(classInfo91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test04338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04338");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        boolean boolean21 = enhancer0.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer0.getStrategy();
        boolean boolean24 = generatorStrategy22.equals((java.lang.Object) "boolean");
        boolean boolean26 = generatorStrategy22.equals((java.lang.Object) "L1102201750");
        org.mockito.asm.MethodVisitor methodVisitor29 = null;
        org.mockito.asm.MethodAdapter methodAdapter30 = new org.mockito.asm.MethodAdapter(methodVisitor29);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter31 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter30);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter32 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter31);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter33 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter31);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter34 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter31);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter35 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter34);
        org.mockito.asm.MethodAdapter methodAdapter36 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter34);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter37 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter34);
        boolean boolean38 = generatorStrategy22.equals((java.lang.Object) localVariablesSorter34);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter34.visitIntInsn((int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test04339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04339");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer9.setCallback(callback12);
        enhancer9.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass16 = enhancer9.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass16);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer18.setCallback(callback21);
        enhancer18.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer18.getNamingPolicy();
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        java.lang.String str27 = label26.toString();
        boolean boolean28 = namingPolicy25.equals((java.lang.Object) str27);
        enhancer0.setNamingPolicy(namingPolicy25);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo31 = classEmitter30.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter32);
        boolean boolean34 = namingPolicy25.equals((java.lang.Object) classEmitter32);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = classEmitter32.getAccess();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(namingPolicy25);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L227861102" + "'", str27, "L227861102");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(classInfo31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test04340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04340");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        boolean boolean8 = enhancer0.getAttemptLoad();
        enhancer0.setUseFactory(false);
        boolean boolean11 = enhancer0.getUseCache();
        boolean boolean12 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader13 = enhancer0.getClassLoader();
        boolean boolean14 = enhancer0.getUseCache();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class15 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(classLoader13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test04341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04341");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.cglib.core.ClassInfo classInfo4 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor7);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classAdapter9);
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter11.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        classEmitter6.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter13);
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo19 = classEmitter18.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor23);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classAdapter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter38.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter21.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter43);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer47.setCallback(callback52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer47.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer47.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor57);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        boolean boolean61 = namingPolicy55.equals((java.lang.Object) classAdapter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter59);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor64);
        classEmitter63.setTarget((org.mockito.asm.ClassVisitor) classAdapter66);
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo69 = classEmitter68.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter68.setTarget((org.mockito.asm.ClassVisitor) classEmitter70);
        classEmitter63.setTarget((org.mockito.asm.ClassVisitor) classEmitter70);
        org.mockito.cglib.core.ClassInfo classInfo73 = classEmitter70.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter74 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo75 = classEmitter74.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter74);
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter74);
        classEmitter70.setTarget((org.mockito.asm.ClassVisitor) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo80 = classEmitter79.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter81 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter79);
        classEmitter70.setTarget((org.mockito.asm.ClassVisitor) classEmitter79);
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter79);
        org.mockito.asm.ClassAdapter classAdapter84 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter83);
        org.mockito.cglib.core.ClassInfo classInfo85 = classEmitter83.getClassInfo();
        classEmitter62.setTarget((org.mockito.asm.ClassVisitor) classEmitter83);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type88 = classEmitter5.getSuperType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo4);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo19);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(classInfo69);
        org.junit.Assert.assertNull(classInfo73);
        org.junit.Assert.assertNull(classInfo75);
        org.junit.Assert.assertNull(classInfo80);
        org.junit.Assert.assertNull(classInfo85);
    }

    @Test
    public void test04342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04342");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        boolean boolean3 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        java.lang.String str18 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass17);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        java.lang.Class<?> wildcardClass21 = classAdapter20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass9, wildcardClass13, wildcardClass17, wildcardClass21 };
        enhancer4.setInterfaces(classArray23);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer4.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setUseFactory(true);
        enhancer27.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback32 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray33 = new org.mockito.cglib.proxy.Callback[] { callback32 };
        enhancer27.setCallbacks(callbackArray33);
        enhancer4.setCallbacks(callbackArray33);
        java.lang.Class class36 = null;
        enhancer4.setSuperclass(class36);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy38 = enhancer4.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer4.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy39);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer0.getStrategy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setUseFactory(true);
        enhancer43.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback48 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray49 = new org.mockito.cglib.proxy.Callback[] { callback48 };
        enhancer43.setCallbacks(callbackArray49);
        boolean boolean51 = enhancer43.getAttemptLoad();
        java.lang.ClassLoader classLoader52 = enhancer43.getClassLoader();
        boolean boolean53 = enhancer43.getUseCache();
        boolean boolean54 = generatorStrategy42.equals((java.lang.Object) enhancer43);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor56);
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classAdapter58);
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo61 = classEmitter60.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter60.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassInfo classInfo65 = classEmitter62.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo67 = classEmitter66.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        classEmitter62.setTarget((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor73);
        org.mockito.asm.ClassAdapter classAdapter75 = new org.mockito.asm.ClassAdapter(classVisitor73);
        classEmitter72.setTarget((org.mockito.asm.ClassVisitor) classAdapter75);
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo78 = classEmitter77.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter77.setTarget((org.mockito.asm.ClassVisitor) classEmitter79);
        classEmitter72.setTarget((org.mockito.asm.ClassVisitor) classEmitter79);
        org.mockito.cglib.core.ClassInfo classInfo82 = classEmitter72.getClassInfo();
        classEmitter69.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        org.mockito.cglib.core.ClassEmitter classEmitter84 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter72);
        org.mockito.cglib.core.ClassInfo classInfo85 = classEmitter72.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter86 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter72);
        // The following exception was thrown during execution in test generation
        try {
            enhancer43.generateClass((org.mockito.asm.ClassVisitor) classEmitter86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str18, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(callbackArray33);
        org.junit.Assert.assertNotNull(generatorStrategy38);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(callbackArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(classLoader52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(classInfo61);
        org.junit.Assert.assertNull(classInfo65);
        org.junit.Assert.assertNull(classInfo67);
        org.junit.Assert.assertNull(classInfo78);
        org.junit.Assert.assertNull(classInfo82);
        org.junit.Assert.assertNull(classInfo85);
    }

    @Test
    public void test04343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04343");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter11 = null;
        enhancer0.setCallbackFilter(callbackFilter11);
        org.mockito.cglib.core.NamingPolicy namingPolicy13 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy13);
        org.junit.Assert.assertNull(classInfo15);
    }

    @Test
    public void test04344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04344");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter10);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer13.setCallback(callback16);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer13.setCallback(callback18);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy20 = enhancer13.getStrategy();
        org.mockito.asm.Label label21 = new org.mockito.asm.Label();
        boolean boolean22 = generatorStrategy20.equals((java.lang.Object) label21);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor24);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classAdapter26);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo29 = classEmitter28.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter30.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter34.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter34);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter37.getClassInfo();
        label21.info = classEmitter37;
        java.lang.String str41 = label21.toString();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitJumpInsn((int) (short) 10, label21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(classInfo29);
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertNull(classInfo39);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L688809952" + "'", str41, "L688809952");
    }

    @Test
    public void test04345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04345");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        boolean boolean21 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer0.setCallback(callback22);
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        enhancer28.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer28.setCallbacks(callbackArray34);
        boolean boolean36 = enhancer28.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy37 = enhancer28.getStrategy();
        enhancer0.setStrategy(generatorStrategy37);
        org.mockito.asm.MethodVisitor methodVisitor41 = null;
        org.mockito.asm.MethodAdapter methodAdapter42 = new org.mockito.asm.MethodAdapter(methodVisitor41);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter43 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter42);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter44 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter43);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter45 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter43);
        boolean boolean46 = generatorStrategy37.equals((java.lang.Object) localVariablesSorter43);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter43.visitMaxs(12, 121);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(generatorStrategy37);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test04346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04346");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        java.lang.String str13 = label12.toString();
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        label12.info = label14;
        java.lang.String str16 = label12.toString();
        java.lang.String str17 = label12.toString();
        java.lang.String str18 = label12.toString();
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        java.lang.String str20 = label19.toString();
        org.mockito.asm.Label label21 = new org.mockito.asm.Label();
        label19.info = label21;
        java.lang.String str23 = label19.toString();
        java.lang.String str24 = label19.toString();
        label12.info = label19;
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor27);
        classEmitter26.setTarget((org.mockito.asm.ClassVisitor) classAdapter29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter33);
        classEmitter26.setTarget((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter37.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter40);
        label12.info = classEmitter40;
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback46 = null;
        enhancer43.setCallback(callback46);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter48 = null;
        enhancer43.setCallbackFilter(callbackFilter48);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer43.setCallback(callback50);
        org.mockito.cglib.core.NamingPolicy namingPolicy52 = enhancer43.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer53.setCallback(callback56);
        org.mockito.cglib.proxy.Callback callback58 = null;
        enhancer53.setCallback(callback58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback63 = null;
        enhancer60.setCallback(callback63);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter65 = null;
        enhancer60.setCallbackFilter(callbackFilter65);
        org.mockito.cglib.proxy.Callback callback67 = null;
        enhancer60.setCallback(callback67);
        org.mockito.cglib.core.NamingPolicy namingPolicy69 = enhancer60.getNamingPolicy();
        enhancer53.setNamingPolicy(namingPolicy69);
        org.mockito.asm.ClassVisitor classVisitor71 = null;
        org.mockito.asm.ClassAdapter classAdapter72 = new org.mockito.asm.ClassAdapter(classVisitor71);
        java.lang.Class<?> wildcardClass73 = classAdapter72.getClass();
        enhancer53.setSuperclass((java.lang.Class) wildcardClass73);
        enhancer43.setSuperclass((java.lang.Class) wildcardClass73);
        enhancer43.setUseCache(true);
        enhancer43.setAttemptLoad(false);
        enhancer43.setAttemptLoad(true);
        org.mockito.asm.ClassVisitor classVisitor82 = null;
        org.mockito.asm.ClassAdapter classAdapter83 = new org.mockito.asm.ClassAdapter(classVisitor82);
        java.lang.Class<?> wildcardClass84 = classAdapter83.getClass();
        boolean boolean85 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass84);
        boolean boolean86 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass84);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass84);
        java.lang.String str88 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass84);
        java.lang.String str89 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass84);
        enhancer43.setSuperclass((java.lang.Class) wildcardClass84);
        label12.info = wildcardClass84;
        java.lang.String str92 = label12.toString();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter9.visitJumpInsn(121, label12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L374613209" + "'", str13, "L374613209");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L374613209" + "'", str16, "L374613209");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L374613209" + "'", str17, "L374613209");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L374613209" + "'", str18, "L374613209");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1001125200" + "'", str20, "L1001125200");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1001125200" + "'", str23, "L1001125200");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1001125200" + "'", str24, "L1001125200");
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNotNull(namingPolicy52);
        org.junit.Assert.assertNotNull(namingPolicy69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str88, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str89, "Lorg/mockito/asm/ClassAdapter;");
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "L374613209" + "'", str92, "L374613209");
    }

    @Test
    public void test04347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04347");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter7.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor25);
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor25);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classAdapter27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter31);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo41 = classEmitter40.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassInfo classInfo48 = classEmitter45.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        java.lang.Class<?> wildcardClass52 = classEmitter50.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass52);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        boolean boolean60 = type57.equals((java.lang.Object) classVisitor58);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str62 = type61.getDescriptor();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type64 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        boolean boolean68 = type65.equals((java.lang.Object) classVisitor66);
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type56, type57, type61, type63, type64, type65 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray69);
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray69);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter7.declare_field(40, "L212126511", type54, (java.lang.Object) 36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo21);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo41);
        org.junit.Assert.assertNull(classInfo48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "V" + "'", str62, "V");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(VZVDDZ)V" + "'", str70, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(VZVDDZ)Lorg/mockito/cglib/core/ClassEmitter;" + "'", str71, "(VZVDDZ)Lorg/mockito/cglib/core/ClassEmitter;");
    }

    @Test
    public void test04348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04348");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BYTE_TYPE;
        int int1 = type0.getSort();
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter(methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter9);
        boolean boolean12 = type0.equals((java.lang.Object) methodAdapter11);
        org.mockito.asm.MethodAdapter methodAdapter13 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter11);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer14.setCallback(callback17);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer14.setCallback(callback19);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy21 = enhancer14.getStrategy();
        boolean boolean22 = enhancer14.getUseCache();
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer14.setCallback(callback23);
        java.lang.ClassLoader classLoader25 = null;
        enhancer14.setClassLoader(classLoader25);
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter13.visitLdcInsn((java.lang.Object) enhancer14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3 + "'", int1 == 3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(generatorStrategy21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test04349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04349");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer12.setCallback(callback15);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter17 = null;
        enhancer12.setCallbackFilter(callbackFilter17);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer12.setCallback(callback19);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer12.getNamingPolicy();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local24 = new org.mockito.cglib.core.Local(0, type23);
        int int25 = type23.getSort();
        java.lang.String str26 = type23.getClassName();
        java.lang.String str27 = type23.getClassName();
        boolean boolean28 = namingPolicy21.equals((java.lang.Object) type23);
        enhancer11.setNamingPolicy(namingPolicy21);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer11.getNamingPolicy();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str32 = type31.getClassName();
        boolean boolean33 = namingPolicy30.equals((java.lang.Object) str32);
        enhancer0.setNamingPolicy(namingPolicy30);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer0.setCallback(callback37);
        boolean boolean39 = enhancer0.getAttemptLoad();
        boolean boolean40 = enhancer0.getUseCache();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor42);
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor42);
        classEmitter41.setTarget((org.mockito.asm.ClassVisitor) classAdapter44);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo47 = classEmitter46.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter46.setTarget((org.mockito.asm.ClassVisitor) classEmitter48);
        classEmitter41.setTarget((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter48.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo53 = classEmitter52.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter52);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter52);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo62 = classEmitter61.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor66);
        classEmitter65.setTarget((org.mockito.asm.ClassVisitor) classAdapter68);
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo71 = classEmitter70.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter70.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        classEmitter65.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        org.mockito.cglib.core.ClassInfo classInfo75 = classEmitter72.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo77 = classEmitter76.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter76);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter76);
        classEmitter72.setTarget((org.mockito.asm.ClassVisitor) classEmitter79);
        org.mockito.cglib.core.ClassEmitter classEmitter81 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo82 = classEmitter81.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter81);
        classEmitter72.setTarget((org.mockito.asm.ClassVisitor) classEmitter81);
        org.mockito.cglib.core.ClassEmitter classEmitter85 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter81);
        org.mockito.cglib.core.ClassEmitter classEmitter86 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter85);
        classEmitter64.setTarget((org.mockito.asm.ClassVisitor) classEmitter86);
        org.mockito.cglib.core.ClassInfo classInfo88 = classEmitter86.getClassInfo();
        classEmitter58.setTarget((org.mockito.asm.ClassVisitor) classEmitter86);
        org.mockito.asm.ClassAdapter classAdapter90 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter86);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classAdapter90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "double" + "'", str26, "double");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "double" + "'", str27, "double");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "double" + "'", str32, "double");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(classInfo47);
        org.junit.Assert.assertNull(classInfo51);
        org.junit.Assert.assertNull(classInfo53);
        org.junit.Assert.assertNull(classInfo62);
        org.junit.Assert.assertNull(classInfo71);
        org.junit.Assert.assertNull(classInfo75);
        org.junit.Assert.assertNull(classInfo77);
        org.junit.Assert.assertNull(classInfo82);
        org.junit.Assert.assertNull(classInfo88);
    }

    @Test
    public void test04350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04350");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        java.lang.ClassLoader classLoader30 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor34);
        java.lang.Class<?> wildcardClass36 = classAdapter35.getClass();
        java.lang.String str37 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass36);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor42);
        java.lang.Class<?> wildcardClass44 = classAdapter43.getClass();
        java.lang.String str45 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass44);
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        java.lang.Class<?> wildcardClass48 = classAdapter47.getClass();
        boolean boolean49 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        java.lang.Class[] classArray50 = new java.lang.Class[] { wildcardClass36, wildcardClass40, wildcardClass44, wildcardClass48 };
        enhancer31.setInterfaces(classArray50);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter52 = null;
        enhancer31.setCallbackFilter(callbackFilter52);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setUseFactory(true);
        enhancer54.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback59 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray60 = new org.mockito.cglib.proxy.Callback[] { callback59 };
        enhancer54.setCallbacks(callbackArray60);
        enhancer31.setCallbacks(callbackArray60);
        enhancer0.setCallbacks(callbackArray60);
        boolean boolean64 = enhancer0.getAttemptLoad();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str37, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str41, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str45, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(callbackArray60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test04351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04351");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.asm.ClassAdapter classAdapter1 = new org.mockito.asm.ClassAdapter(classVisitor0);
        java.lang.Class<?> wildcardClass2 = classAdapter1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str7 = type6.getInternalName();
        java.lang.String str8 = type6.getClassName();
        java.lang.Class<?> wildcardClass9 = type6.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(true);
        enhancer10.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass20);
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.asm.ClassAdapter classAdapter23 = new org.mockito.asm.ClassAdapter(classVisitor22);
        java.lang.Class<?> wildcardClass24 = classAdapter23.getClass();
        java.lang.String str25 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass24);
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        java.lang.Class<?> wildcardClass28 = classAdapter27.getClass();
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass28);
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor30);
        java.lang.Class<?> wildcardClass32 = classAdapter31.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        java.lang.Class[] classArray34 = new java.lang.Class[] { wildcardClass20, wildcardClass24, wildcardClass28, wildcardClass32 };
        enhancer15.setInterfaces(classArray34);
        enhancer10.setInterfaces(classArray34);
        org.mockito.cglib.proxy.Callback callback37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass9, classArray34, callback37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str3, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str4, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str5, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str7, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.mockito.asm.ClassAdapter" + "'", str8, "org.mockito.asm.ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str21, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str25, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str29, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classArray34);
    }

    @Test
    public void test04352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04352");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.asm.ClassAdapter classAdapter5 = new org.mockito.asm.ClassAdapter(classVisitor4);
        boolean boolean6 = type3.equals((java.lang.Object) classVisitor4);
        int int8 = type3.getOpcode(116);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        boolean boolean14 = type11.equals((java.lang.Object) classVisitor12);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str16 = type15.getDescriptor();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        boolean boolean22 = type19.equals((java.lang.Object) classVisitor20);
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type10, type11, type15, type17, type18, type19 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray23);
        org.mockito.cglib.core.Signature signature25 = new org.mockito.cglib.core.Signature("V", type3, typeArray23);
        org.mockito.cglib.core.Signature signature26 = new org.mockito.cglib.core.Signature("hi!", type1, typeArray23);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer27.setCallback(callback28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer31.setCallback(callback34);
        org.mockito.cglib.proxy.Callback callback36 = null;
        enhancer31.setCallback(callback36);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy38 = enhancer31.getStrategy();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        boolean boolean42 = type39.equals((java.lang.Object) classVisitor40);
        int int44 = type39.getOpcode(116);
        boolean boolean45 = generatorStrategy38.equals((java.lang.Object) 116);
        enhancer30.setStrategy(generatorStrategy38);
        enhancer27.setStrategy(generatorStrategy38);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setUseFactory(true);
        enhancer48.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter53 = null;
        enhancer48.setCallbackFilter(callbackFilter53);
        java.lang.ClassLoader classLoader55 = enhancer48.getClassLoader();
        enhancer27.setClassLoader(classLoader55);
        enhancer27.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter59 = null;
        enhancer27.setCallbackFilter(callbackFilter59);
        enhancer27.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        enhancer63.setUseFactory(true);
        enhancer63.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback68 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray69 = new org.mockito.cglib.proxy.Callback[] { callback68 };
        enhancer63.setCallbacks(callbackArray69);
        enhancer27.setCallbacks(callbackArray69);
        boolean boolean72 = signature26.equals((java.lang.Object) enhancer27);
        org.mockito.cglib.proxy.Callback callback73 = null;
        enhancer27.setCallback(callback73);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj75 = enhancer27.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 116 + "'", int8 == 116);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "V" + "'", str16, "V");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VZVDDZ)V" + "'", str24, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(generatorStrategy38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 116 + "'", int44 == 116);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classLoader55);
        org.junit.Assert.assertNotNull(callbackArray69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test04353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04353");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy3 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.asm.ClassAdapter classAdapter6 = new org.mockito.asm.ClassAdapter(classVisitor5);
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter(classVisitor5);
        classEmitter4.setTarget((org.mockito.asm.ClassVisitor) classAdapter7);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter9.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter4.setTarget((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        classEmitter11.setTarget((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        classEmitter11.setTarget((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter24.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor28);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classAdapter30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassInfo classInfo37 = classEmitter34.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter38.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter34.getClassInfo();
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter24.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy3);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo21);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo37);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertNull(classInfo46);
    }

    @Test
    public void test04354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04354");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer0.setCallback(callback14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        java.lang.String str20 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass18);
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass18);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass18);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.Class<?> wildcardClass25 = type24.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass25);
        enhancer0.setAttemptLoad(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str20, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test04355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04355");
        org.mockito.asm.MethodVisitor methodVisitor0 = null;
        org.mockito.asm.MethodAdapter methodAdapter1 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter2 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter4 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.asm.MethodAdapter methodAdapter6 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.asm.MethodAdapter methodAdapter7 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter6);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer10.setCallback(callback13);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter15 = null;
        enhancer10.setCallbackFilter(callbackFilter15);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer10.setCallback(callback17);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer10.getNamingPolicy();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local22 = new org.mockito.cglib.core.Local(0, type21);
        int int23 = type21.getSort();
        java.lang.String str24 = type21.getClassName();
        java.lang.String str25 = type21.getClassName();
        boolean boolean26 = namingPolicy19.equals((java.lang.Object) type21);
        enhancer9.setNamingPolicy(namingPolicy19);
        java.lang.Class<?> wildcardClass28 = namingPolicy19.getClass();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        int int30 = type29.getSort();
        java.lang.String str31 = type29.toString();
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter7.visitLdcInsn((java.lang.Object) type29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8 + "'", int23 == 8);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "double" + "'", str24, "double");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "double" + "'", str25, "double");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/cglib/core/DefaultNamingPolicy;" + "'", str31, "Lorg/mockito/cglib/core/DefaultNamingPolicy;");
    }

    @Test
    public void test04356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04356");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        boolean boolean8 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy9 = enhancer0.getStrategy();
        org.mockito.asm.MethodVisitor methodVisitor12 = null;
        org.mockito.asm.MethodAdapter methodAdapter13 = new org.mockito.asm.MethodAdapter(methodVisitor12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.asm.MethodAdapter methodAdapter19 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter18);
        org.mockito.asm.MethodAdapter methodAdapter21 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.asm.MethodAdapter methodAdapter23 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        boolean boolean24 = generatorStrategy9.equals((java.lang.Object) methodAdapter23);
        org.mockito.asm.MethodAdapter methodAdapter25 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter23);
        org.mockito.asm.MethodAdapter methodAdapter26 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer28.setCallback(callback31);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter33 = null;
        enhancer28.setCallbackFilter(callbackFilter33);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer28.setCallback(callback35);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer28.getNamingPolicy();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local40 = new org.mockito.cglib.core.Local(0, type39);
        int int41 = type39.getSort();
        java.lang.String str42 = type39.getClassName();
        java.lang.String str43 = type39.getClassName();
        boolean boolean44 = namingPolicy37.equals((java.lang.Object) type39);
        enhancer27.setNamingPolicy(namingPolicy37);
        org.mockito.cglib.core.NamingPolicy namingPolicy46 = enhancer27.getNamingPolicy();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor48);
        boolean boolean50 = type47.equals((java.lang.Object) classVisitor48);
        java.lang.String str51 = type47.getDescriptor();
        java.lang.String str52 = type47.getClassName();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        boolean boolean58 = type55.equals((java.lang.Object) classVisitor56);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str60 = type59.getDescriptor();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type62 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type63 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        boolean boolean66 = type63.equals((java.lang.Object) classVisitor64);
        org.mockito.asm.Type[] typeArray67 = new org.mockito.asm.Type[] { type54, type55, type59, type61, type62, type63 };
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray67);
        boolean boolean69 = type47.equals((java.lang.Object) typeArray67);
        java.lang.Class<?> wildcardClass70 = typeArray67.getClass();
        enhancer27.setSuperclass((java.lang.Class) wildcardClass70);
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter26.visitLdcInsn((java.lang.Object) wildcardClass70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(generatorStrategy9);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 8 + "'", int41 == 8);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "double" + "'", str42, "double");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "double" + "'", str43, "double");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(namingPolicy46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Z" + "'", str51, "Z");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "boolean" + "'", str52, "boolean");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "V" + "'", str60, "V");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(VZVDDZ)V" + "'", str68, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test04357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04357");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.asm.ClassAdapter classAdapter22 = new org.mockito.asm.ClassAdapter(classVisitor21);
        java.lang.Class<?> wildcardClass23 = classAdapter22.getClass();
        boolean boolean24 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass23);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass23);
        java.lang.String str28 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass23);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        int int31 = type29.getOpcode(98);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str28, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 102 + "'", int31 == 102);
    }

    @Test
    public void test04358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04358");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.Label label2 = new org.mockito.asm.Label();
        label0.info = label2;
        java.lang.Object obj4 = label0.info;
        java.lang.Object obj5 = label0.info;
        java.lang.String str6 = label0.toString();
        java.lang.Object obj7 = label0.info;
        java.lang.String str8 = label0.toString();
        org.mockito.asm.MethodVisitor methodVisitor11 = null;
        org.mockito.asm.MethodAdapter methodAdapter12 = new org.mockito.asm.MethodAdapter(methodVisitor11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter15);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter17);
        label0.info = localVariablesSorter18;
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer20.setCallback(callback23);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer20.setCallback(callback25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback30 = null;
        enhancer27.setCallback(callback30);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter32 = null;
        enhancer27.setCallbackFilter(callbackFilter32);
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer27.setCallback(callback34);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer27.getNamingPolicy();
        enhancer20.setNamingPolicy(namingPolicy36);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        enhancer20.setSuperclass((java.lang.Class) wildcardClass40);
        boolean boolean42 = enhancer20.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter43 = null;
        enhancer20.setCallbackFilter(callbackFilter43);
        enhancer20.setAttemptLoad(false);
        enhancer20.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        java.lang.Class<?> wildcardClass54 = classAdapter53.getClass();
        java.lang.String str55 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass54);
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        java.lang.Class<?> wildcardClass58 = classAdapter57.getClass();
        java.lang.String str59 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass58);
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        org.mockito.asm.ClassAdapter classAdapter61 = new org.mockito.asm.ClassAdapter(classVisitor60);
        java.lang.Class<?> wildcardClass62 = classAdapter61.getClass();
        java.lang.String str63 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass62);
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        java.lang.Class<?> wildcardClass66 = classAdapter65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Class[] classArray68 = new java.lang.Class[] { wildcardClass54, wildcardClass58, wildcardClass62, wildcardClass66 };
        enhancer49.setInterfaces(classArray68);
        boolean boolean70 = enhancer49.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor71 = null;
        org.mockito.asm.ClassAdapter classAdapter72 = new org.mockito.asm.ClassAdapter(classVisitor71);
        java.lang.Class<?> wildcardClass73 = classAdapter72.getClass();
        boolean boolean74 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass73);
        boolean boolean75 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass73);
        enhancer49.setSuperclass((java.lang.Class) wildcardClass73);
        enhancer20.setSuperclass((java.lang.Class) wildcardClass73);
        enhancer20.setUseFactory(false);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter18.visitLdcInsn((java.lang.Object) enhancer20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1039332548" + "'", str1, "L1039332548");
        org.junit.Assert.assertNotNull(obj4);
// flaky:         org.junit.Assert.assertEquals(obj4.toString(), "L1442127886");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "L1442127886");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "L1442127886");
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "L1442127886");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "L1442127886");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "L1442127886");
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "L1039332548" + "'", str6, "L1039332548");
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "L1442127886");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "L1442127886");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "L1442127886");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "L1039332548" + "'", str8, "L1039332548");
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str55, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str59, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str63, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test04359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04359");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass20);
        boolean boolean22 = enhancer0.getAttemptLoad();
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer0.setCallbackFilter(callbackFilter25);
        java.lang.ClassLoader classLoader27 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classLoader27);
    }

    @Test
    public void test04360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04360");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        java.lang.Class<?> wildcardClass12 = classAdapter11.getClass();
        java.lang.String str13 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor14);
        java.lang.Class<?> wildcardClass16 = classAdapter15.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass20);
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.asm.ClassAdapter classAdapter23 = new org.mockito.asm.ClassAdapter(classVisitor22);
        java.lang.Class<?> wildcardClass24 = classAdapter23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass12, wildcardClass16, wildcardClass20, wildcardClass24 };
        enhancer7.setInterfaces(classArray26);
        enhancer0.setInterfaces(classArray26);
        boolean boolean29 = enhancer0.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer0.getNamingPolicy();
        java.lang.Object obj33 = null;
        org.mockito.cglib.core.Predicate predicate34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = namingPolicy30.getClassName("L1081905902", "L435688701", obj33, predicate34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str13, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str17, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str21, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(namingPolicy30);
    }

    @Test
    public void test04361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04361");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass25, wildcardClass29, wildcardClass33, wildcardClass37 };
        enhancer20.setInterfaces(classArray39);
        boolean boolean41 = enhancer20.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer20.getStrategy();
        enhancer0.setStrategy(generatorStrategy42);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer45.setCallback(callback48);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer45.setCallback(callback50);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer45.getStrategy();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        boolean boolean56 = type53.equals((java.lang.Object) classVisitor54);
        int int58 = type53.getOpcode(116);
        boolean boolean59 = generatorStrategy52.equals((java.lang.Object) 116);
        enhancer0.setStrategy(generatorStrategy52);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor62);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classAdapter64);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor67);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classAdapter69);
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo72 = classEmitter71.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter71.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        boolean boolean78 = generatorStrategy52.equals((java.lang.Object) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo81 = classEmitter80.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter82 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter80.setTarget((org.mockito.asm.ClassVisitor) classEmitter82);
        classEmitter79.setTarget((org.mockito.asm.ClassVisitor) classEmitter80);
        org.mockito.asm.ClassAdapter classAdapter85 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter80);
        java.lang.String[] strArray91 = new java.lang.String[] { "L1764818346" };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor92 = classEmitter80.visitMethod((int) (short) -1, "L843684297", "L1033966099", "L748383636", strArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@70111844");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str26, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str34, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 116 + "'", int58 == 116);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(classInfo72);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(classInfo81);
        org.junit.Assert.assertNotNull(strArray91);
    }

    @Test
    public void test04362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04362");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer1.setCallback(callback4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer1.setCallbackFilter(callbackFilter6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer1.setCallback(callback8);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer1.getNamingPolicy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(0, type12);
        int int14 = type12.getSort();
        java.lang.String str15 = type12.getClassName();
        java.lang.String str16 = type12.getClassName();
        boolean boolean17 = namingPolicy10.equals((java.lang.Object) type12);
        enhancer0.setNamingPolicy(namingPolicy10);
        java.lang.ClassLoader classLoader19 = enhancer0.getClassLoader();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer22.setCallback(callback25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setUseFactory(true);
        enhancer27.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback32 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray33 = new org.mockito.cglib.proxy.Callback[] { callback32 };
        enhancer27.setCallbacks(callbackArray33);
        enhancer22.setCallbacks(callbackArray33);
        java.lang.ClassLoader classLoader36 = enhancer22.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer22.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy37);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        boolean boolean46 = type43.equals((java.lang.Object) classVisitor44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str48 = type47.getDescriptor();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        boolean boolean54 = type51.equals((java.lang.Object) classVisitor52);
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type42, type43, type47, type49, type50, type51 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray55);
        org.mockito.cglib.core.Signature signature57 = new org.mockito.cglib.core.Signature("L1057808593", type40, typeArray55);
        java.lang.String str58 = signature57.toString();
        org.mockito.asm.Type type59 = signature57.getReturnType();
        java.lang.String str60 = signature57.toString();
        org.mockito.asm.Type[] typeArray61 = signature57.getArgumentTypes();
        boolean boolean62 = namingPolicy37.equals((java.lang.Object) typeArray61);
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double" + "'", str15, "double");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double" + "'", str16, "double");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classLoader19);
        org.junit.Assert.assertNotNull(callbackArray33);
        org.junit.Assert.assertNotNull(classLoader36);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "V" + "'", str48, "V");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(VZVDDZ)V" + "'", str56, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "L1057808593(VZVDDZ)F" + "'", str58, "L1057808593(VZVDDZ)F");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "L1057808593(VZVDDZ)F" + "'", str60, "L1057808593(VZVDDZ)F");
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test04363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04363");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        java.lang.ClassLoader classLoader7 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(true);
        enhancer10.setInterceptDuringConstruction(true);
        enhancer10.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer17.setCallback(callback20);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer17.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        java.lang.String str38 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass37);
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        java.lang.Class<?> wildcardClass41 = classAdapter40.getClass();
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        java.lang.Class[] classArray43 = new java.lang.Class[] { wildcardClass29, wildcardClass33, wildcardClass37, wildcardClass41 };
        enhancer24.setInterfaces(classArray43);
        enhancer17.setInterfaces(classArray43);
        enhancer10.setInterfaces(classArray43);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer10.getStrategy();
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter48);
        boolean boolean50 = generatorStrategy47.equals((java.lang.Object) classEmitter48);
        enhancer0.setStrategy(generatorStrategy47);
        org.mockito.asm.MethodVisitor methodVisitor54 = null;
        org.mockito.asm.MethodAdapter methodAdapter55 = new org.mockito.asm.MethodAdapter(methodVisitor54);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter56 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter55);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter57 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter56);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter58 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter57);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter59 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter57);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter60 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter57);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter61 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter57);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter62 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter57);
        org.mockito.asm.MethodAdapter methodAdapter63 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter57);
        boolean boolean64 = generatorStrategy47.equals((java.lang.Object) methodAdapter63);
        org.mockito.asm.Label label68 = new org.mockito.asm.Label();
        java.lang.String str69 = label68.toString();
        org.mockito.asm.Label label70 = new org.mockito.asm.Label();
        label68.info = label70;
        java.lang.String str72 = label68.toString();
        java.lang.String str73 = label68.toString();
        java.lang.String str74 = label68.toString();
        org.mockito.asm.Label label75 = new org.mockito.asm.Label();
        java.lang.String str76 = label75.toString();
        org.mockito.asm.Label label77 = new org.mockito.asm.Label();
        label75.info = label77;
        java.lang.String str79 = label75.toString();
        java.lang.String str80 = label75.toString();
        label68.info = label75;
        java.lang.Object obj82 = label75.info;
        org.mockito.cglib.proxy.Enhancer enhancer83 = new org.mockito.cglib.proxy.Enhancer();
        enhancer83.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback86 = null;
        enhancer83.setCallback(callback86);
        org.mockito.cglib.proxy.Callback callback88 = null;
        enhancer83.setCallback(callback88);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy90 = enhancer83.getStrategy();
        org.mockito.asm.Label label91 = new org.mockito.asm.Label();
        boolean boolean92 = generatorStrategy90.equals((java.lang.Object) label91);
        java.lang.String str93 = label91.toString();
        java.lang.String str94 = label91.toString();
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter63.visitLocalVariable("L786820231", "L2124881793", "L2027704193", label75, label91, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str34, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str38, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(generatorStrategy47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L752519556" + "'", str69, "L752519556");
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "L752519556" + "'", str72, "L752519556");
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "L752519556" + "'", str73, "L752519556");
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L752519556" + "'", str74, "L752519556");
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "L2118146435" + "'", str76, "L2118146435");
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "L2118146435" + "'", str79, "L2118146435");
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L2118146435" + "'", str80, "L2118146435");
        org.junit.Assert.assertNotNull(obj82);
// flaky:         org.junit.Assert.assertEquals(obj82.toString(), "L640239693");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "L640239693");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "L640239693");
        org.junit.Assert.assertNotNull(generatorStrategy90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str93 + "' != '" + "L1723619388" + "'", str93, "L1723619388");
// flaky:         org.junit.Assert.assertEquals("'" + str94 + "' != '" + "L1723619388" + "'", str94, "L1723619388");
    }

    @Test
    public void test04364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04364");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        enhancer28.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer28.setCallbacks(callbackArray34);
        boolean boolean36 = enhancer28.getAttemptLoad();
        enhancer28.setUseFactory(false);
        enhancer28.setInterceptDuringConstruction(true);
        java.lang.ClassLoader classLoader41 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback45 = null;
        enhancer42.setCallback(callback45);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        enhancer47.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback52 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray53 = new org.mockito.cglib.proxy.Callback[] { callback52 };
        enhancer47.setCallbacks(callbackArray53);
        enhancer42.setCallbacks(callbackArray53);
        enhancer28.setCallbacks(callbackArray53);
        enhancer28.setUseFactory(false);
        enhancer28.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback64 = null;
        enhancer61.setCallback(callback64);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter66 = null;
        enhancer61.setCallbackFilter(callbackFilter66);
        org.mockito.cglib.proxy.Callback callback68 = null;
        enhancer61.setCallback(callback68);
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback73 = null;
        enhancer70.setCallback(callback73);
        enhancer70.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass77 = enhancer70.getClass();
        enhancer61.setSuperclass((java.lang.Class) wildcardClass77);
        boolean boolean79 = enhancer61.getAttemptLoad();
        boolean boolean80 = enhancer61.getUseCache();
        enhancer61.setUseCache(true);
        boolean boolean83 = enhancer61.getUseCache();
        enhancer61.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer61.setAttemptLoad(true);
        enhancer61.setUseFactory(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy90 = enhancer61.getNamingPolicy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy91 = enhancer61.getStrategy();
        org.mockito.cglib.core.Signature signature94 = new org.mockito.cglib.core.Signature("[Lorg/mockito/asm/Type;", "L1185912160");
        boolean boolean95 = generatorStrategy91.equals((java.lang.Object) "[Lorg/mockito/asm/Type;");
        enhancer28.setStrategy(generatorStrategy91);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor97 = classEmitter23.visitField((int) (byte) -1, "L1279922822", "L2117187482", "L1843150733", (java.lang.Object) generatorStrategy91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classLoader41);
        org.junit.Assert.assertNotNull(callbackArray53);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(namingPolicy90);
        org.junit.Assert.assertNotNull(generatorStrategy91);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test04365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04365");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass25, wildcardClass29, wildcardClass33, wildcardClass37 };
        enhancer20.setInterfaces(classArray39);
        boolean boolean41 = enhancer20.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer20.getStrategy();
        enhancer0.setStrategy(generatorStrategy42);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer45.setCallback(callback48);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer45.setCallback(callback50);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer45.getStrategy();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        boolean boolean56 = type53.equals((java.lang.Object) classVisitor54);
        int int58 = type53.getOpcode(116);
        boolean boolean59 = generatorStrategy52.equals((java.lang.Object) 116);
        enhancer0.setStrategy(generatorStrategy52);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor62);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classAdapter64);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor67);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classAdapter69);
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo72 = classEmitter71.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter71.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        boolean boolean78 = generatorStrategy52.equals((java.lang.Object) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter77);
        org.mockito.asm.ClassAdapter classAdapter80 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter79);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type81 = classEmitter79.getSuperType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str26, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str34, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 116 + "'", int58 == 116);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(classInfo72);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test04366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04366");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass9);
        enhancer0.setUseFactory(false);
        java.lang.ClassLoader classLoader14 = null;
        enhancer0.setClassLoader(classLoader14);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test04367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04367");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.cglib.core.Local local3 = new org.mockito.cglib.core.Local(2, type2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType("Lorg/mockito/cglib/proxy/Enhancer;");
        org.mockito.asm.Type type8 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        boolean boolean14 = type11.equals((java.lang.Object) classVisitor12);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str16 = type15.getDescriptor();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        boolean boolean22 = type19.equals((java.lang.Object) classVisitor20);
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type10, type11, type15, type17, type18, type19 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray23);
        org.mockito.cglib.core.Signature signature25 = new org.mockito.cglib.core.Signature("L1057808593", type8, typeArray23);
        java.lang.String str26 = signature25.toString();
        java.lang.String str27 = signature25.getDescriptor();
        java.lang.String str28 = signature25.getDescriptor();
        org.mockito.asm.Type[] typeArray29 = signature25.getArgumentTypes();
        org.mockito.cglib.core.Signature signature30 = new org.mockito.cglib.core.Signature("", type6, typeArray29);
        org.mockito.cglib.core.Signature signature31 = new org.mockito.cglib.core.Signature("L471599702", type2, typeArray29);
        java.lang.String str32 = type2.getClassName();
        java.lang.String str33 = type2.getDescriptor();
        org.mockito.asm.MethodVisitor methodVisitor36 = null;
        org.mockito.asm.MethodAdapter methodAdapter37 = new org.mockito.asm.MethodAdapter(methodVisitor36);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter38 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter37);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter39 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter38);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter40 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter39);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter41 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter40);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter42 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter41);
        org.mockito.asm.MethodAdapter methodAdapter43 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter42);
        boolean boolean44 = type2.equals((java.lang.Object) localVariablesSorter42);
        org.mockito.asm.Label label45 = new org.mockito.asm.Label();
        java.lang.String str46 = label45.toString();
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        label45.info = label47;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local51 = new org.mockito.cglib.core.Local(0, type50);
        label45.info = 0;
        java.lang.Object obj53 = label45.info;
        java.lang.Object obj54 = label45.info;
        int[] intArray58 = new int[] { 154, 111, 60 };
        org.mockito.asm.Label label59 = new org.mockito.asm.Label();
        java.lang.String str60 = label59.toString();
        org.mockito.asm.Label label61 = new org.mockito.asm.Label();
        label59.info = label61;
        org.mockito.asm.Type type64 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local65 = new org.mockito.cglib.core.Local(0, type64);
        label59.info = 0;
        java.lang.String str67 = label59.toString();
        label59.info = "Z(VZVDDZ)Z";
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback73 = null;
        enhancer70.setCallback(callback73);
        enhancer70.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass77 = enhancer70.getClass();
        label59.info = wildcardClass77;
        java.lang.String str79 = label59.toString();
        java.lang.Object obj80 = label59.info;
        java.lang.String str81 = label59.toString();
        org.mockito.cglib.proxy.Enhancer enhancer82 = new org.mockito.cglib.proxy.Enhancer();
        enhancer82.setUseFactory(true);
        enhancer82.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback87 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray88 = new org.mockito.cglib.proxy.Callback[] { callback87 };
        enhancer82.setCallbacks(callbackArray88);
        label59.info = enhancer82;
        org.mockito.asm.Label[] labelArray91 = new org.mockito.asm.Label[] { label59 };
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter42.visitLookupSwitchInsn(label45, intArray58, labelArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "V" + "'", str16, "V");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VZVDDZ)V" + "'", str24, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1057808593(VZVDDZ)F" + "'", str26, "L1057808593(VZVDDZ)F");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(VZVDDZ)F" + "'", str27, "(VZVDDZ)F");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(VZVDDZ)F" + "'", str28, "(VZVDDZ)F");
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "short" + "'", str32, "short");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L1167925039" + "'", str46, "L1167925039");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0 + "'", obj54, 0);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[154, 111, 60]");
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "L168191857" + "'", str60, "L168191857");
        org.junit.Assert.assertNotNull(type64);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L168191857" + "'", str67, "L168191857");
        org.junit.Assert.assertNotNull(wildcardClass77);
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "L168191857" + "'", str79, "L168191857");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class org.mockito.cglib.proxy.Enhancer");
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "L168191857" + "'", str81, "L168191857");
        org.junit.Assert.assertNotNull(callbackArray88);
        org.junit.Assert.assertNotNull(labelArray91);
    }

    @Test
    public void test04368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04368");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        enhancer5.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        java.lang.Class<?> wildcardClass15 = classAdapter14.getClass();
        java.lang.String str16 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass15);
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        java.lang.Class<?> wildcardClass19 = classAdapter18.getClass();
        java.lang.String str20 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass19);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.asm.ClassAdapter classAdapter22 = new org.mockito.asm.ClassAdapter(classVisitor21);
        java.lang.Class<?> wildcardClass23 = classAdapter22.getClass();
        java.lang.String str24 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass23);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor25);
        java.lang.Class<?> wildcardClass27 = classAdapter26.getClass();
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass27);
        java.lang.Class[] classArray29 = new java.lang.Class[] { wildcardClass15, wildcardClass19, wildcardClass23, wildcardClass27 };
        enhancer10.setInterfaces(classArray29);
        enhancer5.setInterfaces(classArray29);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass34);
        java.lang.String str36 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass34);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        java.lang.Class<?> wildcardClass39 = classAdapter38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        boolean boolean41 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Class[] classArray42 = new java.lang.Class[] { wildcardClass34, wildcardClass39 };
        enhancer5.setInterfaces(classArray42);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer5.getStrategy();
        enhancer0.setStrategy(generatorStrategy44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        enhancer46.setInterceptDuringConstruction(true);
        enhancer46.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer53.setCallback(callback56);
        org.mockito.cglib.proxy.Callback callback58 = null;
        enhancer53.setCallback(callback58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor63);
        java.lang.Class<?> wildcardClass65 = classAdapter64.getClass();
        java.lang.String str66 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass65);
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        java.lang.Class<?> wildcardClass69 = classAdapter68.getClass();
        java.lang.String str70 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass69);
        org.mockito.asm.ClassVisitor classVisitor71 = null;
        org.mockito.asm.ClassAdapter classAdapter72 = new org.mockito.asm.ClassAdapter(classVisitor71);
        java.lang.Class<?> wildcardClass73 = classAdapter72.getClass();
        java.lang.String str74 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass73);
        org.mockito.asm.ClassVisitor classVisitor75 = null;
        org.mockito.asm.ClassAdapter classAdapter76 = new org.mockito.asm.ClassAdapter(classVisitor75);
        java.lang.Class<?> wildcardClass77 = classAdapter76.getClass();
        boolean boolean78 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass77);
        java.lang.Class[] classArray79 = new java.lang.Class[] { wildcardClass65, wildcardClass69, wildcardClass73, wildcardClass77 };
        enhancer60.setInterfaces(classArray79);
        enhancer53.setInterfaces(classArray79);
        enhancer46.setInterfaces(classArray79);
        enhancer0.setInterfaces(classArray79);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class84 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str16, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str20, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str24, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str35, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str36, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str66, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str70, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str74, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(classArray79);
    }

    @Test
    public void test04369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04369");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        boolean boolean10 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass9);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass9);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer0.getNamingPolicy();
        java.lang.Class<?> wildcardClass15 = enhancer0.getClass();
        org.mockito.cglib.proxy.Callback callback16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass15, callback16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test04370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04370");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        enhancer11.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        java.lang.Class<?> wildcardClass21 = classAdapter20.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass21);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        boolean boolean34 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass33);
        java.lang.Class[] classArray35 = new java.lang.Class[] { wildcardClass21, wildcardClass25, wildcardClass29, wildcardClass33 };
        enhancer16.setInterfaces(classArray35);
        enhancer11.setInterfaces(classArray35);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        java.lang.String str42 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        java.lang.Class<?> wildcardClass45 = classAdapter44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Class[] classArray48 = new java.lang.Class[] { wildcardClass40, wildcardClass45 };
        enhancer11.setInterfaces(classArray48);
        java.lang.ClassLoader classLoader50 = enhancer11.getClassLoader();
        enhancer0.setClassLoader(classLoader50);
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        boolean boolean54 = enhancer0.getAttemptLoad();
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str22, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str26, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str41, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str42, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(classArray48);
        org.junit.Assert.assertNotNull(classLoader50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test04371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04371");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local3 = new org.mockito.cglib.core.Local(0, type2);
        org.mockito.cglib.core.Local local4 = new org.mockito.cglib.core.Local((int) (byte) 100, type2);
        org.mockito.asm.Type type5 = local4.getType();
        org.mockito.asm.MethodVisitor methodVisitor8 = null;
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter(methodVisitor8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        org.mockito.asm.MethodAdapter methodAdapter14 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter12);
        boolean boolean15 = type5.equals((java.lang.Object) methodAdapter14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer16.setCallback(callback19);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter21 = null;
        enhancer16.setCallbackFilter(callbackFilter21);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer16.setCallback(callback23);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer16.getNamingPolicy();
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter14.visitLdcInsn((java.lang.Object) enhancer16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(namingPolicy25);
    }

    @Test
    public void test04372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04372");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        enhancer0.setUseCache(true);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass25);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        boolean boolean38 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass37);
        java.lang.Class[] classArray39 = new java.lang.Class[] { wildcardClass25, wildcardClass29, wildcardClass33, wildcardClass37 };
        enhancer20.setInterfaces(classArray39);
        boolean boolean41 = enhancer20.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer20.getStrategy();
        enhancer0.setStrategy(generatorStrategy42);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy44 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer45.setCallback(callback48);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer45.setCallback(callback50);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy52 = enhancer45.getStrategy();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        boolean boolean56 = type53.equals((java.lang.Object) classVisitor54);
        int int58 = type53.getOpcode(116);
        boolean boolean59 = generatorStrategy52.equals((java.lang.Object) 116);
        enhancer0.setStrategy(generatorStrategy52);
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor62);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classAdapter64);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor67);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classAdapter69);
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo72 = classEmitter71.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter71.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter61.setTarget((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.cglib.core.ClassEmitter classEmitter77 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        boolean boolean78 = generatorStrategy52.equals((java.lang.Object) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter77);
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter77);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter77.end_class();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str26, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str34, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(generatorStrategy44);
        org.junit.Assert.assertNotNull(generatorStrategy52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 116 + "'", int58 == 116);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(classInfo72);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test04373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04373");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        java.lang.ClassLoader classLoader7 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(true);
        enhancer10.setInterceptDuringConstruction(true);
        enhancer10.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer17.setCallback(callback20);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer17.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        java.lang.String str38 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass37);
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        java.lang.Class<?> wildcardClass41 = classAdapter40.getClass();
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        java.lang.Class[] classArray43 = new java.lang.Class[] { wildcardClass29, wildcardClass33, wildcardClass37, wildcardClass41 };
        enhancer24.setInterfaces(classArray43);
        enhancer17.setInterfaces(classArray43);
        enhancer10.setInterfaces(classArray43);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer10.getStrategy();
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter48);
        boolean boolean50 = generatorStrategy47.equals((java.lang.Object) classEmitter48);
        enhancer0.setStrategy(generatorStrategy47);
        org.mockito.asm.MethodVisitor methodVisitor54 = null;
        org.mockito.asm.MethodAdapter methodAdapter55 = new org.mockito.asm.MethodAdapter(methodVisitor54);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter56 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter55);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter57 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter56);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter58 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter57);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter59 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter57);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter60 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter57);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter61 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter57);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter62 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter57);
        org.mockito.asm.MethodAdapter methodAdapter63 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter57);
        boolean boolean64 = generatorStrategy47.equals((java.lang.Object) methodAdapter63);
        org.mockito.asm.Label label66 = new org.mockito.asm.Label();
        java.lang.String str67 = label66.toString();
        org.mockito.asm.Label label68 = new org.mockito.asm.Label();
        label66.info = label68;
        java.lang.String str70 = label66.toString();
        java.lang.String str71 = label66.toString();
        java.lang.String str72 = label66.toString();
        org.mockito.asm.Label label73 = new org.mockito.asm.Label();
        java.lang.String str74 = label73.toString();
        org.mockito.asm.Label label75 = new org.mockito.asm.Label();
        label73.info = label75;
        java.lang.String str77 = label73.toString();
        java.lang.String str78 = label73.toString();
        label66.info = label73;
        org.mockito.asm.Label label80 = new org.mockito.asm.Label();
        label80.info = 10.0f;
        java.lang.String str83 = label80.toString();
        java.lang.String str84 = label80.toString();
        label73.info = label80;
        java.lang.Object obj86 = label73.info;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter63.visitJumpInsn((int) '#', label73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str34, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str38, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(generatorStrategy47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L1489789491" + "'", str67, "L1489789491");
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L1489789491" + "'", str70, "L1489789491");
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "L1489789491" + "'", str71, "L1489789491");
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "L1489789491" + "'", str72, "L1489789491");
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L1822399895" + "'", str74, "L1822399895");
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L1822399895" + "'", str77, "L1822399895");
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "L1822399895" + "'", str78, "L1822399895");
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "L437257812" + "'", str83, "L437257812");
// flaky:         org.junit.Assert.assertEquals("'" + str84 + "' != '" + "L437257812" + "'", str84, "L437257812");
        org.junit.Assert.assertNotNull(obj86);
// flaky:         org.junit.Assert.assertEquals(obj86.toString(), "L437257812");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "L437257812");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "L437257812");
    }

    @Test
    public void test04374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04374");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter14.getClassInfo();
        org.mockito.asm.Type type19 = null;
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        enhancer20.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer20.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor30);
        java.lang.Class<?> wildcardClass32 = classAdapter31.getClass();
        java.lang.String str33 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass32);
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor34);
        java.lang.Class<?> wildcardClass36 = classAdapter35.getClass();
        java.lang.String str37 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass36);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor42);
        java.lang.Class<?> wildcardClass44 = classAdapter43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        java.lang.Class[] classArray46 = new java.lang.Class[] { wildcardClass32, wildcardClass36, wildcardClass40, wildcardClass44 };
        enhancer27.setInterfaces(classArray46);
        enhancer20.setInterfaces(classArray46);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter14.declare_field(7, "L313695521", type19, (java.lang.Object) classArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str33, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str37, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str41, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classArray46);
    }

    @Test
    public void test04375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04375");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        boolean boolean8 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer9.setCallback(callback10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer13.setCallback(callback16);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer13.setCallback(callback18);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy20 = enhancer13.getStrategy();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.asm.ClassAdapter classAdapter23 = new org.mockito.asm.ClassAdapter(classVisitor22);
        boolean boolean24 = type21.equals((java.lang.Object) classVisitor22);
        int int26 = type21.getOpcode(116);
        boolean boolean27 = generatorStrategy20.equals((java.lang.Object) 116);
        enhancer12.setStrategy(generatorStrategy20);
        enhancer9.setStrategy(generatorStrategy20);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        enhancer30.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter35 = null;
        enhancer30.setCallbackFilter(callbackFilter35);
        java.lang.ClassLoader classLoader37 = enhancer30.getClassLoader();
        enhancer9.setClassLoader(classLoader37);
        java.lang.ClassLoader classLoader39 = enhancer9.getClassLoader();
        enhancer0.setClassLoader(classLoader39);
        boolean boolean41 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader42 = enhancer0.getClassLoader();
        boolean boolean43 = enhancer0.getUseCache();
        boolean boolean44 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer45.setCallback(callback48);
        enhancer45.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass52 = enhancer45.getClass();
        java.lang.String str53 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass52);
        java.lang.String str54 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass52);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass52);
        java.lang.String str56 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass52);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass52);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass52);
        java.lang.String str59 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass52);
        java.lang.String str60 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass52);
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(generatorStrategy20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 116 + "'", int26 == 116);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(classLoader42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str53, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str54, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str56, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str59, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str60, "Lorg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test04376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04376");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer11.setCallback(callback14);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer11.setCallback(callback16);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy18 = enhancer11.getStrategy();
        org.mockito.asm.Label label19 = new org.mockito.asm.Label();
        boolean boolean20 = generatorStrategy18.equals((java.lang.Object) label19);
        java.lang.String str21 = label19.toString();
        java.lang.String str22 = label19.toString();
        java.lang.Object obj23 = label19.info;
        java.lang.String str24 = label19.toString();
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter10.visitLabel(label19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L726502269" + "'", str21, "L726502269");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L726502269" + "'", str22, "L726502269");
        org.junit.Assert.assertNull(obj23);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L726502269" + "'", str24, "L726502269");
    }

    @Test
    public void test04377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04377");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.asm.ClassAdapter classAdapter1 = new org.mockito.asm.ClassAdapter(classVisitor0);
        java.lang.Class<?> wildcardClass2 = classAdapter1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        boolean boolean4 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer9.setCallback(callback12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer9.setCallback(callback14);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer9.getStrategy();
        boolean boolean17 = enhancer9.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter18 = null;
        enhancer9.setCallbackFilter(callbackFilter18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer20.setCallback(callback23);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer20.setCallback(callback25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback30 = null;
        enhancer27.setCallback(callback30);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter32 = null;
        enhancer27.setCallbackFilter(callbackFilter32);
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer27.setCallback(callback34);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer27.getNamingPolicy();
        enhancer20.setNamingPolicy(namingPolicy36);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        enhancer20.setSuperclass((java.lang.Class) wildcardClass40);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter42 = null;
        enhancer20.setCallbackFilter(callbackFilter42);
        java.lang.ClassLoader classLoader44 = enhancer20.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        enhancer45.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.asm.ClassAdapter classAdapter54 = new org.mockito.asm.ClassAdapter(classVisitor53);
        java.lang.Class<?> wildcardClass55 = classAdapter54.getClass();
        java.lang.String str56 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass55);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        java.lang.Class<?> wildcardClass59 = classAdapter58.getClass();
        java.lang.String str60 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass59);
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        java.lang.Class<?> wildcardClass63 = classAdapter62.getClass();
        java.lang.String str64 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass63);
        org.mockito.asm.ClassVisitor classVisitor65 = null;
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor65);
        java.lang.Class<?> wildcardClass67 = classAdapter66.getClass();
        boolean boolean68 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass67);
        java.lang.Class[] classArray69 = new java.lang.Class[] { wildcardClass55, wildcardClass59, wildcardClass63, wildcardClass67 };
        enhancer50.setInterfaces(classArray69);
        enhancer45.setInterfaces(classArray69);
        org.mockito.asm.ClassVisitor classVisitor72 = null;
        org.mockito.asm.ClassAdapter classAdapter73 = new org.mockito.asm.ClassAdapter(classVisitor72);
        java.lang.Class<?> wildcardClass74 = classAdapter73.getClass();
        java.lang.String str75 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass74);
        java.lang.String str76 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass74);
        org.mockito.asm.ClassVisitor classVisitor77 = null;
        org.mockito.asm.ClassAdapter classAdapter78 = new org.mockito.asm.ClassAdapter(classVisitor77);
        java.lang.Class<?> wildcardClass79 = classAdapter78.getClass();
        boolean boolean80 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass79);
        boolean boolean81 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass79);
        java.lang.Class[] classArray82 = new java.lang.Class[] { wildcardClass74, wildcardClass79 };
        enhancer45.setInterfaces(classArray82);
        enhancer45.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy86 = enhancer45.getStrategy();
        enhancer45.setUseCache(true);
        java.lang.Class[] classArray89 = new java.lang.Class[] {};
        enhancer45.setInterfaces(classArray89);
        enhancer20.setInterfaces(classArray89);
        enhancer9.setInterfaces(classArray89);
        java.util.List list93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods((java.lang.Class) wildcardClass2, classArray89, list93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str3, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(classLoader44);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str56, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str60, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str64, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str75, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str76, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(generatorStrategy86);
        org.junit.Assert.assertNotNull(classArray89);
    }

    @Test
    public void test04378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04378");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        java.lang.Object obj15 = label14.info;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        int int17 = type16.getSort();
        label14.info = type16;
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer19.setCallback(callback22);
        enhancer19.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer19.getNamingPolicy();
        boolean boolean28 = namingPolicy26.equals((java.lang.Object) 5);
        label14.info = boolean28;
        java.lang.Object obj30 = label14.info;
        java.lang.Object obj31 = label14.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter12.visitLineNumber(13, label14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
    }

    @Test
    public void test04379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04379");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        enhancer7.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy14);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer19.setCallback(callback22);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter24 = null;
        enhancer19.setCallbackFilter(callbackFilter24);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer19.setCallback(callback26);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer19.getNamingPolicy();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local31 = new org.mockito.cglib.core.Local(0, type30);
        int int32 = type30.getSort();
        java.lang.String str33 = type30.getClassName();
        java.lang.String str34 = type30.getClassName();
        boolean boolean35 = namingPolicy28.equals((java.lang.Object) type30);
        enhancer18.setNamingPolicy(namingPolicy28);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer18.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy37);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        boolean boolean46 = type43.equals((java.lang.Object) classVisitor44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str48 = type47.getDescriptor();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        boolean boolean54 = type51.equals((java.lang.Object) classVisitor52);
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type42, type43, type47, type49, type50, type51 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray55);
        org.mockito.cglib.core.Signature signature57 = new org.mockito.cglib.core.Signature("L1057808593", type40, typeArray55);
        java.lang.String str58 = signature57.toString();
        org.mockito.asm.Type type59 = signature57.getReturnType();
        org.mockito.asm.Type type60 = signature57.getReturnType();
        boolean boolean61 = namingPolicy37.equals((java.lang.Object) type60);
        java.lang.String str62 = type60.getDescriptor();
        // The following exception was thrown during execution in test generation
        try {
            int int63 = type60.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "double" + "'", str33, "double");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "double" + "'", str34, "double");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "V" + "'", str48, "V");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(VZVDDZ)V" + "'", str56, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "L1057808593(VZVDDZ)F" + "'", str58, "L1057808593(VZVDDZ)F");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "F" + "'", str62, "F");
    }

    @Test
    public void test04380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04380");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        boolean boolean8 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy9 = enhancer0.getStrategy();
        org.mockito.asm.MethodVisitor methodVisitor12 = null;
        org.mockito.asm.MethodAdapter methodAdapter13 = new org.mockito.asm.MethodAdapter(methodVisitor12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.asm.MethodAdapter methodAdapter19 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter18);
        org.mockito.asm.MethodAdapter methodAdapter21 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.asm.MethodAdapter methodAdapter23 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        boolean boolean24 = generatorStrategy9.equals((java.lang.Object) methodAdapter23);
        org.mockito.asm.MethodAdapter methodAdapter25 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter23);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor26 = methodAdapter23.visitAnnotationDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(generatorStrategy9);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test04381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04381");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass20);
        boolean boolean22 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer0.setCallbackFilter(callbackFilter23);
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        java.lang.Class<?> wildcardClass30 = classAdapter29.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass34);
        org.mockito.asm.ClassVisitor classVisitor36 = null;
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter(classVisitor36);
        java.lang.Class<?> wildcardClass38 = classAdapter37.getClass();
        java.lang.String str39 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        java.lang.Class<?> wildcardClass42 = classAdapter41.getClass();
        boolean boolean43 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass42);
        java.lang.Class[] classArray44 = new java.lang.Class[] { wildcardClass30, wildcardClass34, wildcardClass38, wildcardClass42 };
        enhancer25.setInterfaces(classArray44);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter46 = null;
        enhancer25.setCallbackFilter(callbackFilter46);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setUseFactory(true);
        enhancer48.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback53 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray54 = new org.mockito.cglib.proxy.Callback[] { callback53 };
        enhancer48.setCallbacks(callbackArray54);
        enhancer25.setCallbacks(callbackArray54);
        enhancer0.setCallbacks(callbackArray54);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter58 = null;
        enhancer0.setCallbackFilter(callbackFilter58);
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy62 = null;
        enhancer0.setStrategy(generatorStrategy62);
        boolean boolean64 = enhancer0.getAttemptLoad();
        enhancer0.setUseCache(false);
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str31, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str35, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str39, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(callbackArray54);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test04382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04382");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.ClassLoader classLoader7 = enhancer0.getClassLoader();
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy12 = enhancer0.getStrategy();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor14);
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor14);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classAdapter16);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo19 = classEmitter18.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter18.setTarget((org.mockito.asm.ClassVisitor) classEmitter20);
        classEmitter13.setTarget((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo25 = classEmitter24.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor34);
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor34);
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classAdapter36);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter38.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classEmitter40);
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter33.getClassInfo();
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo47 = classEmitter46.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter46);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter46);
        boolean boolean50 = generatorStrategy12.equals((java.lang.Object) classEmitter20);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter20.visitSource("L1850359739", "L1733099147");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(generatorStrategy12);
        org.junit.Assert.assertNull(classInfo19);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo25);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertNull(classInfo47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test04383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04383");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        boolean boolean8 = enhancer0.getAttemptLoad();
        enhancer0.setUseFactory(false);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer13.setCallback(callback16);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter18 = null;
        enhancer13.setCallbackFilter(callbackFilter18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer13.setCallback(callback20);
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer13.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy22);
        org.mockito.cglib.core.Signature signature28 = new org.mockito.cglib.core.Signature("", "L49653721");
        org.mockito.cglib.core.Predicate predicate29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = namingPolicy22.getClassName("L1801457769", "Lorg/mockito/cglib/core/DefaultNamingPolicy;", (java.lang.Object) "L49653721", predicate29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(namingPolicy22);
    }

    @Test
    public void test04384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04384");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter10);
        org.mockito.asm.MethodAdapter methodAdapter12 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer13.setCallback(callback16);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer13.setCallback(callback18);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy20 = enhancer13.getStrategy();
        boolean boolean21 = enhancer13.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter22 = null;
        enhancer13.setCallbackFilter(callbackFilter22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setUseFactory(true);
        enhancer24.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback29 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray30 = new org.mockito.cglib.proxy.Callback[] { callback29 };
        enhancer24.setCallbacks(callbackArray30);
        boolean boolean32 = enhancer24.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy33 = enhancer24.getStrategy();
        org.mockito.asm.Label label34 = new org.mockito.asm.Label();
        java.lang.String str35 = label34.toString();
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        label34.info = label36;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local40 = new org.mockito.cglib.core.Local(0, type39);
        label34.info = 0;
        java.lang.String str42 = label34.toString();
        label34.info = "Z(VZVDDZ)Z";
        boolean boolean45 = generatorStrategy33.equals((java.lang.Object) "Z(VZVDDZ)Z");
        enhancer13.setStrategy(generatorStrategy33);
        enhancer13.setUseCache(false);
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter12.visitLdcInsn((java.lang.Object) enhancer13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(callbackArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(generatorStrategy33);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L930171194" + "'", str35, "L930171194");
        org.junit.Assert.assertNotNull(type39);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L930171194" + "'", str42, "L930171194");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test04385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04385");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor18);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classAdapter20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter17.getClassInfo();
        classEmitter14.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor32);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classAdapter34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor37);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classAdapter39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter41.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter41.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer47.setCallback(callback52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer47.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer47.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor57);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        boolean boolean61 = namingPolicy55.equals((java.lang.Object) classAdapter59);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        java.lang.String[] strArray69 = new java.lang.String[] {};
        // The following exception was thrown during execution in test generation
        try {
            classEmitter36.visit(139, 12, "L685686423", "L1792092702", "L864585199", strArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertNull(classInfo42);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strArray69);
    }

    @Test
    public void test04386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04386");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        boolean boolean9 = namingPolicy7.equals((java.lang.Object) (byte) 100);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor11);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classAdapter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        boolean boolean28 = namingPolicy7.equals((java.lang.Object) classEmitter27);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer30.setCallback(callback33);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter35 = null;
        enhancer30.setCallbackFilter(callbackFilter35);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer30.setCallback(callback37);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer30.getNamingPolicy();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local42 = new org.mockito.cglib.core.Local(0, type41);
        int int43 = type41.getSort();
        java.lang.String str44 = type41.getClassName();
        java.lang.String str45 = type41.getClassName();
        boolean boolean46 = namingPolicy39.equals((java.lang.Object) type41);
        enhancer29.setNamingPolicy(namingPolicy39);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback51 = null;
        enhancer48.setCallback(callback51);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer48.setCallback(callback53);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback58 = null;
        enhancer55.setCallback(callback58);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter60 = null;
        enhancer55.setCallbackFilter(callbackFilter60);
        org.mockito.cglib.proxy.Callback callback62 = null;
        enhancer55.setCallback(callback62);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer55.getNamingPolicy();
        enhancer48.setNamingPolicy(namingPolicy64);
        boolean boolean66 = namingPolicy39.equals((java.lang.Object) enhancer48);
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        boolean boolean69 = namingPolicy39.equals((java.lang.Object) classAdapter68);
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classAdapter68);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classAdapter68);
        // The following exception was thrown during execution in test generation
        try {
            classAdapter68.visitInnerClass("L942139626", "L831802684", "L989716351", 162);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8 + "'", int43 == 8);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "double" + "'", str44, "double");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "double" + "'", str45, "double");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test04387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04387");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        java.lang.ClassLoader classLoader7 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer10.setCallback(callback13);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer10.setCallback(callback15);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy17 = enhancer10.getStrategy();
        enhancer10.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        enhancer20.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer20.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor30);
        java.lang.Class<?> wildcardClass32 = classAdapter31.getClass();
        java.lang.String str33 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass32);
        org.mockito.asm.ClassVisitor classVisitor34 = null;
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor34);
        java.lang.Class<?> wildcardClass36 = classAdapter35.getClass();
        java.lang.String str37 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass36);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor42);
        java.lang.Class<?> wildcardClass44 = classAdapter43.getClass();
        boolean boolean45 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass44);
        java.lang.Class[] classArray46 = new java.lang.Class[] { wildcardClass32, wildcardClass36, wildcardClass40, wildcardClass44 };
        enhancer27.setInterfaces(classArray46);
        enhancer20.setInterfaces(classArray46);
        enhancer10.setInterfaces(classArray46);
        enhancer0.setInterfaces(classArray46);
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass(classVisitor51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(generatorStrategy17);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str33, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str37, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str41, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classArray46);
    }

    @Test
    public void test04388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04388");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor18);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classAdapter20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter17.getClassInfo();
        classEmitter14.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor30);
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor30);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classAdapter32);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter(classVisitor35);
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classAdapter37);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter39.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassInfo classInfo45 = classEmitter34.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter34.getClassInfo();
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        enhancer52.setUseFactory(true);
        enhancer52.setInterceptDuringConstruction(true);
        enhancer52.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy59 = enhancer52.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy60 = enhancer52.getNamingPolicy();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor61 = classEmitter17.visitField(96, "L2113522084", "", "L1748820355", (java.lang.Object) enhancer52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo45);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNotNull(generatorStrategy59);
        org.junit.Assert.assertNotNull(namingPolicy60);
    }

    @Test
    public void test04389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04389");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local3 = new org.mockito.cglib.core.Local(0, type2);
        org.mockito.cglib.core.Local local4 = new org.mockito.cglib.core.Local((int) (byte) 100, type2);
        org.mockito.asm.Type type5 = local4.getType();
        org.mockito.cglib.proxy.Enhancer enhancer6 = new org.mockito.cglib.proxy.Enhancer();
        enhancer6.setUseFactory(true);
        enhancer6.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean11 = type5.equals((java.lang.Object) enhancer6);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setUseFactory(true);
        enhancer12.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        java.lang.String str23 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass22);
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        java.lang.Class<?> wildcardClass26 = classAdapter25.getClass();
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        java.lang.Class<?> wildcardClass30 = classAdapter29.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray36 = new java.lang.Class[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass34 };
        enhancer17.setInterfaces(classArray36);
        enhancer12.setInterfaces(classArray36);
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        java.lang.Class<?> wildcardClass41 = classAdapter40.getClass();
        java.lang.String str42 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass41);
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass41);
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        java.lang.Class<?> wildcardClass46 = classAdapter45.getClass();
        boolean boolean47 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass46);
        java.lang.Class[] classArray49 = new java.lang.Class[] { wildcardClass41, wildcardClass46 };
        enhancer12.setInterfaces(classArray49);
        enhancer12.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy53 = enhancer12.getStrategy();
        enhancer12.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer56 = new org.mockito.cglib.proxy.Enhancer();
        enhancer56.setUseFactory(true);
        enhancer56.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        java.lang.Class<?> wildcardClass66 = classAdapter65.getClass();
        java.lang.String str67 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass66);
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        java.lang.Class<?> wildcardClass70 = classAdapter69.getClass();
        java.lang.String str71 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass70);
        org.mockito.asm.ClassVisitor classVisitor72 = null;
        org.mockito.asm.ClassAdapter classAdapter73 = new org.mockito.asm.ClassAdapter(classVisitor72);
        java.lang.Class<?> wildcardClass74 = classAdapter73.getClass();
        java.lang.String str75 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass74);
        org.mockito.asm.ClassVisitor classVisitor76 = null;
        org.mockito.asm.ClassAdapter classAdapter77 = new org.mockito.asm.ClassAdapter(classVisitor76);
        java.lang.Class<?> wildcardClass78 = classAdapter77.getClass();
        boolean boolean79 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass78);
        java.lang.Class[] classArray80 = new java.lang.Class[] { wildcardClass66, wildcardClass70, wildcardClass74, wildcardClass78 };
        enhancer61.setInterfaces(classArray80);
        enhancer56.setInterfaces(classArray80);
        enhancer12.setInterfaces(classArray80);
        // The following exception was thrown during execution in test generation
        try {
            enhancer6.setCallbackTypes(classArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.asm.ClassAdapter");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str23, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str27, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str31, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str42, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str43, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(classArray49);
        org.junit.Assert.assertNotNull(generatorStrategy53);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str67, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str71, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str75, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(classArray80);
    }

    @Test
    public void test04390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04390");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        boolean boolean9 = generatorStrategy7.equals((java.lang.Object) label8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor11);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classAdapter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter24.getClassInfo();
        label8.info = classEmitter24;
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer28.setCallback(callback31);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter33 = null;
        enhancer28.setCallbackFilter(callbackFilter33);
        enhancer28.setSerialVersionUID((java.lang.Long) 0L);
        enhancer28.setUseCache(false);
        enhancer28.setUseFactory(false);
        boolean boolean41 = enhancer28.getAttemptLoad();
        enhancer28.setUseFactory(false);
        label8.info = enhancer28;
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor48);
        java.lang.Class<?> wildcardClass50 = classAdapter49.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        java.lang.Class<?> wildcardClass54 = classAdapter53.getClass();
        java.lang.String str55 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass54);
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        java.lang.Class<?> wildcardClass58 = classAdapter57.getClass();
        java.lang.String str59 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass58);
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        org.mockito.asm.ClassAdapter classAdapter61 = new org.mockito.asm.ClassAdapter(classVisitor60);
        java.lang.Class<?> wildcardClass62 = classAdapter61.getClass();
        boolean boolean63 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass62);
        java.lang.Class[] classArray64 = new java.lang.Class[] { wildcardClass50, wildcardClass54, wildcardClass58, wildcardClass62 };
        enhancer45.setInterfaces(classArray64);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter66 = null;
        enhancer45.setCallbackFilter(callbackFilter66);
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        enhancer68.setUseFactory(true);
        enhancer68.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback73 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray74 = new org.mockito.cglib.proxy.Callback[] { callback73 };
        enhancer68.setCallbacks(callbackArray74);
        enhancer45.setCallbacks(callbackArray74);
        java.lang.Class class77 = null;
        enhancer45.setSuperclass(class77);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy79 = enhancer45.getStrategy();
        enhancer28.setStrategy(generatorStrategy79);
        org.mockito.cglib.core.NamingPolicy namingPolicy81 = enhancer28.getNamingPolicy();
        java.lang.Object obj84 = null;
        org.mockito.cglib.core.Predicate predicate85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str86 = namingPolicy81.getClassName("L1210778352", "L47068164", obj84, predicate85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str51, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str55, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str59, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(classArray64);
        org.junit.Assert.assertNotNull(callbackArray74);
        org.junit.Assert.assertNotNull(generatorStrategy79);
        org.junit.Assert.assertNotNull(namingPolicy81);
    }

    @Test
    public void test04391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04391");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classAdapter12);
        boolean boolean14 = namingPolicy8.equals((java.lang.Object) classAdapter12);
        java.lang.String[] strArray24 = new java.lang.String[] { "L1429447740", "L1969888727L1539056572", "LL1184256594;Lorg/mockito/cglib/proxy/Enhancer;(VZVDDZ)F", "L1681308853", "L1807869393" };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor25 = classAdapter12.visitMethod((int) '4', "L1865306536", "L522024245", "L1992547009", strArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray24);
    }

    @Test
    public void test04392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04392");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass20);
        boolean boolean22 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer0.setCallbackFilter(callbackFilter23);
        enhancer0.setAttemptLoad(false);
        boolean boolean27 = enhancer0.getUseCache();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer30.setCallback(callback31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer34.setCallback(callback37);
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer34.setCallback(callback39);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer34.getStrategy();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        boolean boolean45 = type42.equals((java.lang.Object) classVisitor43);
        int int47 = type42.getOpcode(116);
        boolean boolean48 = generatorStrategy41.equals((java.lang.Object) 116);
        enhancer33.setStrategy(generatorStrategy41);
        enhancer30.setStrategy(generatorStrategy41);
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setUseFactory(true);
        enhancer51.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter56 = null;
        enhancer51.setCallbackFilter(callbackFilter56);
        java.lang.ClassLoader classLoader58 = enhancer51.getClassLoader();
        enhancer30.setClassLoader(classLoader58);
        org.mockito.cglib.proxy.Enhancer enhancer60 = new org.mockito.cglib.proxy.Enhancer();
        enhancer60.setUseFactory(true);
        enhancer60.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter65 = null;
        enhancer60.setCallbackFilter(callbackFilter65);
        java.lang.ClassLoader classLoader67 = enhancer60.getClassLoader();
        enhancer30.setClassLoader(classLoader67);
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setUseFactory(true);
        enhancer69.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback74 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray75 = new org.mockito.cglib.proxy.Callback[] { callback74 };
        enhancer69.setCallbacks(callbackArray75);
        enhancer69.setSerialVersionUID((java.lang.Long) 1L);
        java.lang.ClassLoader classLoader79 = enhancer69.getClassLoader();
        enhancer30.setClassLoader(classLoader79);
        boolean boolean81 = enhancer30.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer82 = new org.mockito.cglib.proxy.Enhancer();
        enhancer82.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback85 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray86 = new org.mockito.cglib.proxy.Callback[] { callback85 };
        enhancer82.setCallbacks(callbackArray86);
        enhancer30.setCallbacks(callbackArray86);
        enhancer0.setCallbacks(callbackArray86);
        boolean boolean90 = enhancer0.getUseCache();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj91 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 116 + "'", int47 == 116);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(classLoader67);
        org.junit.Assert.assertNotNull(callbackArray75);
        org.junit.Assert.assertNotNull(classLoader79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(callbackArray86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test04393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04393");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        boolean boolean9 = namingPolicy7.equals((java.lang.Object) (byte) 100);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor11);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classAdapter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        boolean boolean28 = namingPolicy7.equals((java.lang.Object) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        classEmitter34.setTarget(classVisitor35);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor39);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classAdapter41);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor44);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classAdapter46);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo49 = classEmitter48.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback57 = null;
        enhancer54.setCallback(callback57);
        org.mockito.cglib.proxy.Callback callback59 = null;
        enhancer54.setCallback(callback59);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy61 = enhancer54.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy62 = enhancer54.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor64);
        classEmitter63.setTarget((org.mockito.asm.ClassVisitor) classAdapter66);
        boolean boolean68 = namingPolicy62.equals((java.lang.Object) classAdapter66);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classAdapter66);
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classAdapter66);
        org.mockito.asm.ClassAdapter classAdapter71 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.asm.ClassAdapter classAdapter72 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter34);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor75 = classAdapter72.visitAnnotation("", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo49);
        org.junit.Assert.assertNotNull(generatorStrategy61);
        org.junit.Assert.assertNotNull(namingPolicy62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test04394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04394");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter6 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter6);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo15 = classEmitter14.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        classEmitter8.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType("V");
        int int27 = type26.getSize();
        java.lang.String str28 = type26.getClassName();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.String str31 = type30.getDescriptor();
        java.lang.String str32 = type30.getDescriptor();
        org.mockito.cglib.core.Signature signature35 = new org.mockito.cglib.core.Signature("org/mockito/asm/ClassAdapter", "L1933965693");
        org.mockito.asm.ClassVisitor classVisitor36 = null;
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter(classVisitor36);
        java.lang.Class<?> wildcardClass38 = classAdapter37.getClass();
        boolean boolean39 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass38);
        boolean boolean42 = signature35.equals((java.lang.Object) type41);
        int int43 = type41.getSort();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        boolean boolean47 = type44.equals((java.lang.Object) classVisitor45);
        java.lang.String str48 = type44.getDescriptor();
        java.lang.String str49 = type44.getClassName();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.asm.ClassAdapter classAdapter54 = new org.mockito.asm.ClassAdapter(classVisitor53);
        boolean boolean55 = type52.equals((java.lang.Object) classVisitor53);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str57 = type56.getDescriptor();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        boolean boolean63 = type60.equals((java.lang.Object) classVisitor61);
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type51, type52, type56, type58, type59, type60 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray64);
        boolean boolean66 = type44.equals((java.lang.Object) typeArray64);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray64);
        org.mockito.cglib.core.Signature signature68 = new org.mockito.cglib.core.Signature("", type30, typeArray64);
        org.mockito.cglib.core.Signature signature69 = new org.mockito.cglib.core.Signature("L647336328", type26, typeArray64);
        java.lang.Object obj70 = null;
        boolean boolean71 = type26.equals(obj70);
        org.mockito.cglib.core.Signature signature74 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", "(VZVDDZ)Z");
        org.mockito.asm.Type type75 = signature74.getReturnType();
        org.mockito.asm.Type[] typeArray76 = signature74.getArgumentTypes();
        // The following exception was thrown during execution in test generation
        try {
            classEmitter8.begin_class(104, (int) '4', "L123369339", type26, typeArray76, "L1112377739");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNull(classInfo15);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "void" + "'", str28, "void");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "F" + "'", str31, "F");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "F" + "'", str32, "F");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Z" + "'", str48, "Z");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "boolean" + "'", str49, "boolean");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "V" + "'", str57, "V");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(VZVDDZ)V" + "'", str65, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;" + "'", str67, "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(typeArray76);
    }

    @Test
    public void test04395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04395");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass7 = enhancer0.getClass();
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        java.lang.String str10 = type9.getClassName();
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        enhancer11.setInterceptDuringConstruction(true);
        enhancer11.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer18.setCallback(callback21);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer18.setCallbackFilter(callbackFilter23);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer18.setCallback(callback25);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer18.getStrategy();
        enhancer11.setStrategy(generatorStrategy27);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback30 = null;
        enhancer29.setCallback(callback30);
        enhancer29.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer34.setCallback(callback35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer38.setCallback(callback41);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer38.setCallback(callback43);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer38.getStrategy();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        boolean boolean49 = type46.equals((java.lang.Object) classVisitor47);
        int int51 = type46.getOpcode(116);
        boolean boolean52 = generatorStrategy45.equals((java.lang.Object) 116);
        enhancer37.setStrategy(generatorStrategy45);
        enhancer34.setStrategy(generatorStrategy45);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        enhancer55.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter60 = null;
        enhancer55.setCallbackFilter(callbackFilter60);
        java.lang.ClassLoader classLoader62 = enhancer55.getClassLoader();
        enhancer34.setClassLoader(classLoader62);
        java.lang.ClassLoader classLoader64 = enhancer34.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setUseFactory(true);
        enhancer65.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor73);
        java.lang.Class<?> wildcardClass75 = classAdapter74.getClass();
        java.lang.String str76 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        org.mockito.asm.ClassVisitor classVisitor77 = null;
        org.mockito.asm.ClassAdapter classAdapter78 = new org.mockito.asm.ClassAdapter(classVisitor77);
        java.lang.Class<?> wildcardClass79 = classAdapter78.getClass();
        java.lang.String str80 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass79);
        org.mockito.asm.ClassVisitor classVisitor81 = null;
        org.mockito.asm.ClassAdapter classAdapter82 = new org.mockito.asm.ClassAdapter(classVisitor81);
        java.lang.Class<?> wildcardClass83 = classAdapter82.getClass();
        java.lang.String str84 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass83);
        org.mockito.asm.ClassVisitor classVisitor85 = null;
        org.mockito.asm.ClassAdapter classAdapter86 = new org.mockito.asm.ClassAdapter(classVisitor85);
        java.lang.Class<?> wildcardClass87 = classAdapter86.getClass();
        boolean boolean88 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass87);
        java.lang.Class[] classArray89 = new java.lang.Class[] { wildcardClass75, wildcardClass79, wildcardClass83, wildcardClass87 };
        enhancer70.setInterfaces(classArray89);
        enhancer65.setInterfaces(classArray89);
        enhancer34.setInterfaces(classArray89);
        enhancer29.setInterfaces(classArray89);
        enhancer11.setInterfaces(classArray89);
        boolean boolean95 = type9.equals((java.lang.Object) enhancer11);
        java.lang.String str96 = type9.getClassName();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str10, "org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 116 + "'", int51 == 116);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(classLoader64);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str76, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str80, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str84, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(classArray89);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "org.mockito.cglib.proxy.Enhancer" + "'", str96, "org.mockito.cglib.proxy.Enhancer");
    }

    @Test
    public void test04396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04396");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor26);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classAdapter28);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo31 = classEmitter30.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo37 = classEmitter36.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter36);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter41.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo48 = classEmitter47.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        org.mockito.asm.ClassAdapter classAdapter56 = new org.mockito.asm.ClassAdapter(classVisitor54);
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classAdapter56);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo59 = classEmitter58.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter58.setTarget((org.mockito.asm.ClassVisitor) classEmitter60);
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classEmitter60);
        org.mockito.cglib.core.ClassInfo classInfo63 = classEmitter60.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo65 = classEmitter64.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter64);
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter64);
        classEmitter60.setTarget((org.mockito.asm.ClassVisitor) classEmitter67);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter67);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.cglib.core.ClassInfo classInfo71 = classEmitter69.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter72 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter69);
        classEmitter24.setTarget((org.mockito.asm.ClassVisitor) classAdapter72);
        org.mockito.cglib.proxy.Enhancer enhancer78 = new org.mockito.cglib.proxy.Enhancer();
        enhancer78.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback81 = null;
        enhancer78.setCallback(callback81);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter83 = null;
        enhancer78.setCallbackFilter(callbackFilter83);
        org.mockito.cglib.proxy.Callback callback85 = null;
        enhancer78.setCallback(callback85);
        enhancer78.setUseCache(false);
        boolean boolean89 = enhancer78.getAttemptLoad();
        enhancer78.setUseFactory(false);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor92 = classAdapter72.visitField(119, "L1980048603", "L1967463002", "L484638952", (java.lang.Object) enhancer78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo31);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertNull(classInfo37);
        org.junit.Assert.assertNull(classInfo42);
        org.junit.Assert.assertNull(classInfo48);
        org.junit.Assert.assertNull(classInfo59);
        org.junit.Assert.assertNull(classInfo63);
        org.junit.Assert.assertNull(classInfo65);
        org.junit.Assert.assertNull(classInfo71);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test04397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04397");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        java.lang.ClassLoader classLoader7 = enhancer0.getClassLoader();
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(true);
        enhancer10.setInterceptDuringConstruction(true);
        enhancer10.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer17.setCallback(callback20);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer17.setCallback(callback22);
        org.mockito.cglib.proxy.Enhancer enhancer24 = new org.mockito.cglib.proxy.Enhancer();
        enhancer24.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        java.lang.String str38 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass37);
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        java.lang.Class<?> wildcardClass41 = classAdapter40.getClass();
        boolean boolean42 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        java.lang.Class[] classArray43 = new java.lang.Class[] { wildcardClass29, wildcardClass33, wildcardClass37, wildcardClass41 };
        enhancer24.setInterfaces(classArray43);
        enhancer17.setInterfaces(classArray43);
        enhancer10.setInterfaces(classArray43);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy47 = enhancer10.getStrategy();
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter48);
        boolean boolean50 = generatorStrategy47.equals((java.lang.Object) classEmitter48);
        enhancer0.setStrategy(generatorStrategy47);
        org.mockito.asm.MethodVisitor methodVisitor54 = null;
        org.mockito.asm.MethodAdapter methodAdapter55 = new org.mockito.asm.MethodAdapter(methodVisitor54);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter56 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter55);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter57 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter56);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter58 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter57);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter59 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter57);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter60 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter57);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter61 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter57);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter62 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter57);
        org.mockito.asm.MethodAdapter methodAdapter63 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter57);
        boolean boolean64 = generatorStrategy47.equals((java.lang.Object) methodAdapter63);
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter63.visitIincInsn(114, 40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoader7);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str34, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str38, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(generatorStrategy47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test04398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04398");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback6 = null;
        enhancer3.setCallback(callback6);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setUseFactory(true);
        enhancer8.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback13 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray14 = new org.mockito.cglib.proxy.Callback[] { callback13 };
        enhancer8.setCallbacks(callbackArray14);
        enhancer3.setCallbacks(callbackArray14);
        enhancer0.setCallbacks(callbackArray14);
        enhancer0.setInterceptDuringConstruction(false);
        org.junit.Assert.assertNotNull(callbackArray14);
    }

    @Test
    public void test04399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04399");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("L618770809", "L1783926541");
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.String str5 = type4.toString();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local9 = new org.mockito.cglib.core.Local(0, type8);
        org.mockito.cglib.core.Local local10 = new org.mockito.cglib.core.Local((int) (byte) 100, type8);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        boolean boolean18 = type15.equals((java.lang.Object) classVisitor16);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str20 = type19.getDescriptor();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        boolean boolean26 = type23.equals((java.lang.Object) classVisitor24);
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type14, type15, type19, type21, type22, type23 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray27);
        org.mockito.cglib.core.Signature signature29 = new org.mockito.cglib.core.Signature("L1057808593", type12, typeArray27);
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray27);
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray27);
        int int32 = type4.getSort();
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback36 = null;
        enhancer33.setCallback(callback36);
        enhancer33.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy40 = enhancer33.getNamingPolicy();
        org.mockito.asm.Label label41 = new org.mockito.asm.Label();
        java.lang.String str42 = label41.toString();
        boolean boolean43 = namingPolicy40.equals((java.lang.Object) str42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.String str45 = type44.toString();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local49 = new org.mockito.cglib.core.Local(0, type48);
        org.mockito.cglib.core.Local local50 = new org.mockito.cglib.core.Local((int) (byte) 100, type48);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type53 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        boolean boolean58 = type55.equals((java.lang.Object) classVisitor56);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str60 = type59.getDescriptor();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type62 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type63 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        boolean boolean66 = type63.equals((java.lang.Object) classVisitor64);
        org.mockito.asm.Type[] typeArray67 = new org.mockito.asm.Type[] { type54, type55, type59, type61, type62, type63 };
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray67);
        org.mockito.cglib.core.Signature signature69 = new org.mockito.cglib.core.Signature("L1057808593", type52, typeArray67);
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray67);
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray67);
        boolean boolean72 = namingPolicy40.equals((java.lang.Object) typeArray67);
        org.mockito.cglib.core.Signature signature73 = new org.mockito.cglib.core.Signature("L1001933146", type4, typeArray67);
        java.lang.String str74 = signature73.getName();
        org.mockito.asm.Type type75 = signature73.getReturnType();
        boolean boolean76 = signature2.equals((java.lang.Object) signature73);
        java.lang.String str77 = signature73.toString();
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "B" + "'", str5, "B");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "V" + "'", str20, "V");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(VZVDDZ)V" + "'", str28, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(VZVDDZ)D" + "'", str30, "(VZVDDZ)D");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(VZVDDZ)B" + "'", str31, "(VZVDDZ)B");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 3 + "'", int32 == 3);
        org.junit.Assert.assertNotNull(namingPolicy40);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L1560480772" + "'", str42, "L1560480772");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "B" + "'", str45, "B");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "V" + "'", str60, "V");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(VZVDDZ)V" + "'", str68, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(VZVDDZ)D" + "'", str70, "(VZVDDZ)D");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(VZVDDZ)B" + "'", str71, "(VZVDDZ)B");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L1001933146" + "'", str74, "L1001933146");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L1001933146(VZVDDZ)B" + "'", str77, "L1001933146(VZVDDZ)B");
    }

    @Test
    public void test04400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04400");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter(classVisitor6);
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor6);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classAdapter8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter10.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer16.setCallback(callback19);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer16.setCallback(callback21);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = enhancer16.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy24 = enhancer16.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor26 = null;
        org.mockito.asm.ClassAdapter classAdapter27 = new org.mockito.asm.ClassAdapter(classVisitor26);
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor26);
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classAdapter28);
        boolean boolean30 = namingPolicy24.equals((java.lang.Object) classAdapter28);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classAdapter28);
        org.mockito.asm.Label label32 = new org.mockito.asm.Label();
        java.lang.String str33 = label32.toString();
        org.mockito.asm.Label label34 = new org.mockito.asm.Label();
        label32.info = label34;
        java.lang.String str36 = label32.toString();
        java.lang.String str37 = label32.toString();
        java.lang.String str38 = label32.toString();
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        java.lang.String str40 = label39.toString();
        org.mockito.asm.Label label41 = new org.mockito.asm.Label();
        label39.info = label41;
        java.lang.String str43 = label39.toString();
        java.lang.String str44 = label39.toString();
        label32.info = label39;
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor47);
        classEmitter46.setTarget((org.mockito.asm.ClassVisitor) classAdapter49);
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo52 = classEmitter51.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter51.setTarget((org.mockito.asm.ClassVisitor) classEmitter53);
        classEmitter46.setTarget((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.cglib.core.ClassInfo classInfo56 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo58 = classEmitter57.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter57);
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classEmitter60);
        label32.info = classEmitter60;
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter63);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type65 = classEmitter63.getSuperType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNotNull(generatorStrategy23);
        org.junit.Assert.assertNotNull(namingPolicy24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L575892654" + "'", str33, "L575892654");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "L575892654" + "'", str36, "L575892654");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L575892654" + "'", str37, "L575892654");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L575892654" + "'", str38, "L575892654");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1952183066" + "'", str40, "L1952183066");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "L1952183066" + "'", str43, "L1952183066");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "L1952183066" + "'", str44, "L1952183066");
        org.junit.Assert.assertNull(classInfo52);
        org.junit.Assert.assertNull(classInfo56);
        org.junit.Assert.assertNull(classInfo58);
    }

    @Test
    public void test04401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04401");
        org.mockito.asm.MethodVisitor methodVisitor0 = null;
        org.mockito.asm.MethodAdapter methodAdapter1 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter2 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter4 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.asm.MethodAdapter methodAdapter6 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter5);
        org.mockito.asm.MethodAdapter methodAdapter7 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter5);
        org.mockito.asm.Label label10 = new org.mockito.asm.Label();
        java.lang.String str11 = label10.toString();
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        label10.info = label12;
        java.lang.Object obj14 = label10.info;
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass17);
        label10.info = type18;
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        java.lang.String str21 = label20.toString();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        label20.info = label22;
        java.lang.Object obj24 = label22.info;
        java.lang.String str25 = label22.toString();
        java.lang.String str26 = label22.toString();
        org.mockito.cglib.core.Signature signature29 = new org.mockito.cglib.core.Signature("", "V");
        java.lang.String str30 = signature29.getDescriptor();
        java.lang.String str31 = signature29.getDescriptor();
        label22.info = str31;
        java.lang.String str33 = label22.toString();
        java.lang.Object obj34 = label22.info;
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer36.setCallback(callback39);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer36.setCallback(callback41);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy43 = enhancer36.getStrategy();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        boolean boolean47 = type44.equals((java.lang.Object) classVisitor45);
        int int49 = type44.getOpcode(116);
        boolean boolean50 = generatorStrategy43.equals((java.lang.Object) 116);
        enhancer35.setStrategy(generatorStrategy43);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local55 = new org.mockito.cglib.core.Local(0, type54);
        int int56 = type54.getSort();
        java.lang.String str57 = type54.getClassName();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local61 = new org.mockito.cglib.core.Local(0, type60);
        org.mockito.cglib.core.Local local62 = new org.mockito.cglib.core.Local((int) (byte) 100, type60);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        boolean boolean70 = type67.equals((java.lang.Object) classVisitor68);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str72 = type71.getDescriptor();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type74 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type75 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor76 = null;
        org.mockito.asm.ClassAdapter classAdapter77 = new org.mockito.asm.ClassAdapter(classVisitor76);
        boolean boolean78 = type75.equals((java.lang.Object) classVisitor76);
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type66, type67, type71, type73, type74, type75 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray79);
        org.mockito.cglib.core.Signature signature81 = new org.mockito.cglib.core.Signature("L1057808593", type64, typeArray79);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray79);
        org.mockito.cglib.core.Signature signature83 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type54, typeArray79);
        boolean boolean84 = generatorStrategy43.equals((java.lang.Object) signature83);
        java.lang.String str85 = signature83.toString();
        label22.info = str85;
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] { label22 };
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter5.visitTableSwitchInsn(0, 56, label10, labelArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L1547983353" + "'", str11, "L1547983353");
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals(obj14.toString(), "L688069767");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "L688069767");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "L688069767");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(type18);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L112651947" + "'", str21, "L112651947");
        org.junit.Assert.assertNull(obj24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1055575676" + "'", str25, "L1055575676");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1055575676" + "'", str26, "L1055575676");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "V" + "'", str30, "V");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "V" + "'", str31, "V");
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1055575676" + "'", str33, "L1055575676");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "V" + "'", obj34, "V");
        org.junit.Assert.assertNotNull(generatorStrategy43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 116 + "'", int49 == 116);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8 + "'", int56 == 8);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "double" + "'", str57, "double");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "V" + "'", str72, "V");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(VZVDDZ)V" + "'", str80, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VZVDDZ)D" + "'", str82, "(VZVDDZ)D");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Lorg/mockito/asm/ClassAdapter;(VZVDDZ)D" + "'", str85, "Lorg/mockito/asm/ClassAdapter;(VZVDDZ)D");
        org.junit.Assert.assertNotNull(labelArray87);
    }

    @Test
    public void test04402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04402");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("", "Z");
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.asm.ClassAdapter classAdapter6 = new org.mockito.asm.ClassAdapter(classVisitor5);
        boolean boolean7 = type4.equals((java.lang.Object) classVisitor5);
        int int9 = type4.getOpcode(116);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str17 = type16.getDescriptor();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.asm.ClassAdapter classAdapter22 = new org.mockito.asm.ClassAdapter(classVisitor21);
        boolean boolean23 = type20.equals((java.lang.Object) classVisitor21);
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type11, type12, type16, type18, type19, type20 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray24);
        org.mockito.cglib.core.Signature signature26 = new org.mockito.cglib.core.Signature("V", type4, typeArray24);
        java.lang.String str27 = signature26.getDescriptor();
        java.lang.String str28 = signature26.getName();
        java.lang.String str29 = signature26.getName();
        boolean boolean30 = signature2.equals((java.lang.Object) signature26);
        org.mockito.asm.Type type31 = signature2.getReturnType();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setUseFactory(true);
        enhancer32.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback37 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray38 = new org.mockito.cglib.proxy.Callback[] { callback37 };
        enhancer32.setCallbacks(callbackArray38);
        boolean boolean40 = enhancer32.getAttemptLoad();
        enhancer32.setUseFactory(false);
        enhancer32.setInterceptDuringConstruction(true);
        enhancer32.setUseCache(true);
        enhancer32.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer32.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        enhancer50.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.asm.ClassAdapter classAdapter54 = new org.mockito.asm.ClassAdapter(classVisitor53);
        java.lang.Class<?> wildcardClass55 = classAdapter54.getClass();
        java.lang.String str56 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass55);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        java.lang.Class<?> wildcardClass59 = classAdapter58.getClass();
        java.lang.String str60 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass59);
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        java.lang.Class<?> wildcardClass63 = classAdapter62.getClass();
        java.lang.String str64 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass63);
        org.mockito.asm.ClassVisitor classVisitor65 = null;
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor65);
        java.lang.Class<?> wildcardClass67 = classAdapter66.getClass();
        boolean boolean68 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass67);
        java.lang.Class[] classArray69 = new java.lang.Class[] { wildcardClass55, wildcardClass59, wildcardClass63, wildcardClass67 };
        enhancer50.setInterfaces(classArray69);
        boolean boolean71 = enhancer50.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy72 = enhancer50.getStrategy();
        java.lang.Class<?> wildcardClass73 = generatorStrategy72.getClass();
        enhancer32.setSuperclass((java.lang.Class) wildcardClass73);
        boolean boolean75 = type31.equals((java.lang.Object) enhancer32);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter76 = null;
        enhancer32.setCallbackFilter(callbackFilter76);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy78 = enhancer32.getStrategy();
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 116 + "'", int9 == 116);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "V" + "'", str17, "V");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(VZVDDZ)V" + "'", str25, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(VZVDDZ)Z" + "'", str27, "(VZVDDZ)Z");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "V" + "'", str28, "V");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "V" + "'", str29, "V");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(callbackArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str56, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str60, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str64, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(generatorStrategy72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(generatorStrategy78);
    }

    @Test
    public void test04403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04403");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        boolean boolean8 = enhancer0.getAttemptLoad();
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(true);
        java.lang.ClassLoader classLoader13 = enhancer0.getClassLoader();
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer0.setCallback(callback14);
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(classLoader13);
    }

    @Test
    public void test04404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04404");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter7.getClassInfo();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor17);
        classEmitter7.setTarget(classVisitor17);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor23);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classAdapter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter29.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter33);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter38.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo45 = classEmitter44.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter46 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor51);
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor51);
        classEmitter50.setTarget((org.mockito.asm.ClassVisitor) classAdapter53);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo56 = classEmitter55.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        classEmitter50.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter57.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo62 = classEmitter61.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter61);
        classEmitter57.setTarget((org.mockito.asm.ClassVisitor) classEmitter64);
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter64);
        classEmitter29.setTarget((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.cglib.core.ClassInfo classInfo68 = classEmitter66.getClassInfo();
        org.mockito.cglib.proxy.Enhancer enhancer69 = new org.mockito.cglib.proxy.Enhancer();
        enhancer69.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback72 = null;
        enhancer69.setCallback(callback72);
        org.mockito.cglib.proxy.Callback callback74 = null;
        enhancer69.setCallback(callback74);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy76 = enhancer69.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy77 = enhancer69.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor79 = null;
        org.mockito.asm.ClassAdapter classAdapter80 = new org.mockito.asm.ClassAdapter(classVisitor79);
        org.mockito.asm.ClassAdapter classAdapter81 = new org.mockito.asm.ClassAdapter(classVisitor79);
        classEmitter78.setTarget((org.mockito.asm.ClassVisitor) classAdapter81);
        boolean boolean83 = namingPolicy77.equals((java.lang.Object) classAdapter81);
        org.mockito.cglib.core.ClassEmitter classEmitter84 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter81);
        classEmitter66.setTarget((org.mockito.asm.ClassVisitor) classAdapter81);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter66);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter7.visitOuterClass("L647336328L2092172268", "L763650835", "L973675329");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNull(classInfo45);
        org.junit.Assert.assertNull(classInfo56);
        org.junit.Assert.assertNull(classInfo60);
        org.junit.Assert.assertNull(classInfo62);
        org.junit.Assert.assertNull(classInfo68);
        org.junit.Assert.assertNotNull(generatorStrategy76);
        org.junit.Assert.assertNotNull(namingPolicy77);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test04405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04405");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        enhancer7.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy14);
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer18.setCallback(callback21);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer18.setCallback(callback23);
        org.mockito.cglib.core.NamingPolicy namingPolicy25 = enhancer18.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy25);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer0.getStrategy();
        org.mockito.asm.MethodVisitor methodVisitor28 = null;
        org.mockito.asm.MethodAdapter methodAdapter29 = new org.mockito.asm.MethodAdapter(methodVisitor28);
        org.mockito.asm.MethodAdapter methodAdapter30 = new org.mockito.asm.MethodAdapter(methodVisitor28);
        org.mockito.asm.MethodAdapter methodAdapter31 = new org.mockito.asm.MethodAdapter(methodVisitor28);
        org.mockito.asm.MethodAdapter methodAdapter32 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter31);
        boolean boolean33 = generatorStrategy27.equals((java.lang.Object) methodAdapter32);
        org.mockito.asm.MethodAdapter methodAdapter34 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter32);
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter34.visitInsn(153);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertNotNull(namingPolicy25);
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test04406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04406");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter(classVisitor6);
        java.lang.Class<?> wildcardClass8 = classAdapter7.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass8);
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        java.lang.Class<?> wildcardClass12 = classAdapter11.getClass();
        java.lang.String str13 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor14);
        java.lang.Class<?> wildcardClass16 = classAdapter15.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass8, wildcardClass12, wildcardClass16, wildcardClass20 };
        enhancer3.setInterfaces(classArray22);
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        java.lang.Class<?> wildcardClass26 = classAdapter25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        enhancer3.setSuperclass((java.lang.Class) wildcardClass26);
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.String str32 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass26);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setUseFactory(true);
        enhancer36.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback41 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray42 = new org.mockito.cglib.proxy.Callback[] { callback41 };
        enhancer36.setCallbacks(callbackArray42);
        boolean boolean44 = enhancer36.getAttemptLoad();
        enhancer36.setUseFactory(false);
        boolean boolean47 = enhancer36.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer36.getStrategy();
        enhancer0.setStrategy(generatorStrategy48);
        org.mockito.cglib.core.NamingPolicy namingPolicy50 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        org.mockito.asm.ClassAdapter classAdapter54 = new org.mockito.asm.ClassAdapter(classVisitor52);
        classEmitter51.setTarget((org.mockito.asm.ClassVisitor) classAdapter54);
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo57 = classEmitter56.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        classEmitter51.setTarget((org.mockito.asm.ClassVisitor) classEmitter58);
        org.mockito.cglib.core.ClassInfo classInfo61 = classEmitter58.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo63 = classEmitter62.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter62);
        classEmitter58.setTarget((org.mockito.asm.ClassVisitor) classEmitter65);
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo68 = classEmitter67.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter67);
        classEmitter58.setTarget((org.mockito.asm.ClassVisitor) classEmitter67);
        org.mockito.asm.ClassAdapter classAdapter71 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter58);
        boolean boolean72 = namingPolicy50.equals((java.lang.Object) classEmitter58);
        java.lang.String[] strArray84 = new java.lang.String[] { "L158562243", "L1714799919", "L1414328519", "L1608435376", "L1428851219", "L1630157585" };
        // The following exception was thrown during execution in test generation
        try {
            classEmitter58.visit(123, 8, "L169842602", "L2098130694", "L1490122246", strArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str9, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str13, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str17, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str32, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(callbackArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertNotNull(namingPolicy50);
        org.junit.Assert.assertNull(classInfo57);
        org.junit.Assert.assertNull(classInfo61);
        org.junit.Assert.assertNull(classInfo63);
        org.junit.Assert.assertNull(classInfo68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strArray84);
    }

    @Test
    public void test04407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04407");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter8 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter5);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter5);
        java.lang.Class<?> wildcardClass11 = classEmitter5.getClass();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setUseFactory(true);
        boolean boolean15 = enhancer12.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        enhancer12.setSuperclass((java.lang.Class) wildcardClass18);
        boolean boolean21 = enhancer12.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer12.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer23.setCallback(callback26);
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer23.setCallback(callback28);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        java.lang.Class<?> wildcardClass35 = classAdapter34.getClass();
        java.lang.String str36 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass35);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        java.lang.Class<?> wildcardClass39 = classAdapter38.getClass();
        java.lang.String str40 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        java.lang.Class<?> wildcardClass43 = classAdapter42.getClass();
        java.lang.String str44 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass43);
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        java.lang.Class<?> wildcardClass47 = classAdapter46.getClass();
        boolean boolean48 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass47);
        java.lang.Class[] classArray49 = new java.lang.Class[] { wildcardClass35, wildcardClass39, wildcardClass43, wildcardClass47 };
        enhancer30.setInterfaces(classArray49);
        enhancer23.setInterfaces(classArray49);
        enhancer12.setInterfaces(classArray49);
        java.util.List list53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods((java.lang.Class) wildcardClass11, classArray49, list53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str36, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str40, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str44, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(classArray49);
    }

    @Test
    public void test04408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04408");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.Class<?> wildcardClass1 = type0.getClass();
        java.lang.String str2 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass1);
        boolean boolean3 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        enhancer5.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback10 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray11 = new org.mockito.cglib.proxy.Callback[] { callback10 };
        enhancer5.setCallbacks(callbackArray11);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback16 = null;
        enhancer13.setCallback(callback16);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer13.setCallback(callback18);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer20.setCallback(callback23);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer20.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer20.setCallback(callback27);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer20.getNamingPolicy();
        enhancer13.setNamingPolicy(namingPolicy29);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        enhancer13.setSuperclass((java.lang.Class) wildcardClass33);
        boolean boolean35 = enhancer13.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setUseFactory(true);
        enhancer36.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        java.lang.Class<?> wildcardClass46 = classAdapter45.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor48);
        java.lang.Class<?> wildcardClass50 = classAdapter49.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        java.lang.Class<?> wildcardClass54 = classAdapter53.getClass();
        java.lang.String str55 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass54);
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        java.lang.Class<?> wildcardClass58 = classAdapter57.getClass();
        boolean boolean59 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        java.lang.Class[] classArray60 = new java.lang.Class[] { wildcardClass46, wildcardClass50, wildcardClass54, wildcardClass58 };
        enhancer41.setInterfaces(classArray60);
        enhancer36.setInterfaces(classArray60);
        enhancer13.setInterfaces(classArray60);
        enhancer5.setInterfaces(classArray60);
        java.util.List list65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.getMethods((java.lang.Class) wildcardClass1, classArray60, list65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org/mockito/asm/Type" + "'", str2, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(callbackArray11);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str47, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str51, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str55, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(classArray60);
    }

    @Test
    public void test04409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04409");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter21 = null;
        enhancer0.setCallbackFilter(callbackFilter21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        enhancer23.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback28 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray29 = new org.mockito.cglib.proxy.Callback[] { callback28 };
        enhancer23.setCallbacks(callbackArray29);
        enhancer0.setCallbacks(callbackArray29);
        java.lang.Class class32 = null;
        enhancer0.setSuperclass(class32);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy34 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy35 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor37);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classAdapter39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter41.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter41.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter43.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo48 = classEmitter47.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter50);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter52);
        org.mockito.asm.ClassAdapter classAdapter54 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter52);
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter52);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(callbackArray29);
        org.junit.Assert.assertNotNull(generatorStrategy34);
        org.junit.Assert.assertNotNull(namingPolicy35);
        org.junit.Assert.assertNull(classInfo42);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo48);
    }

    @Test
    public void test04410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04410");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        boolean boolean8 = enhancer0.getAttemptLoad();
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseCache(true);
        enhancer0.setUseCache(true);
        org.mockito.cglib.core.NamingPolicy namingPolicy17 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        boolean boolean20 = enhancer0.getAttemptLoad();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(namingPolicy17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test04411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04411");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter7);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter9);
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        java.lang.String str15 = label14.toString();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        label14.info = label16;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local20 = new org.mockito.cglib.core.Local(0, type19);
        label14.info = 0;
        java.lang.String str22 = label14.toString();
        label14.info = "Z(VZVDDZ)Z";
        java.lang.Object obj25 = label14.info;
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer26.setCallback(callback29);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer26.setCallback(callback31);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback36 = null;
        enhancer33.setCallback(callback36);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter38 = null;
        enhancer33.setCallbackFilter(callbackFilter38);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer33.setCallback(callback40);
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer33.getNamingPolicy();
        enhancer26.setNamingPolicy(namingPolicy42);
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        java.lang.Class<?> wildcardClass46 = classAdapter45.getClass();
        enhancer26.setSuperclass((java.lang.Class) wildcardClass46);
        boolean boolean48 = enhancer26.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter49 = null;
        enhancer26.setCallbackFilter(callbackFilter49);
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        java.lang.Class<?> wildcardClass56 = classAdapter55.getClass();
        java.lang.String str57 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass56);
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        java.lang.Class<?> wildcardClass60 = classAdapter59.getClass();
        java.lang.String str61 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass60);
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        java.lang.Class<?> wildcardClass64 = classAdapter63.getClass();
        java.lang.String str65 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass64);
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        java.lang.Class<?> wildcardClass68 = classAdapter67.getClass();
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass68);
        java.lang.Class[] classArray70 = new java.lang.Class[] { wildcardClass56, wildcardClass60, wildcardClass64, wildcardClass68 };
        enhancer51.setInterfaces(classArray70);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter72 = null;
        enhancer51.setCallbackFilter(callbackFilter72);
        org.mockito.cglib.proxy.Enhancer enhancer74 = new org.mockito.cglib.proxy.Enhancer();
        enhancer74.setUseFactory(true);
        enhancer74.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback79 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray80 = new org.mockito.cglib.proxy.Callback[] { callback79 };
        enhancer74.setCallbacks(callbackArray80);
        enhancer51.setCallbacks(callbackArray80);
        enhancer26.setCallbacks(callbackArray80);
        org.mockito.cglib.proxy.Callback callback84 = null;
        enhancer26.setCallback(callback84);
        boolean boolean86 = enhancer26.getUseCache();
        label14.info = boolean86;
        java.lang.Object obj88 = label14.info;
        org.mockito.asm.Label label89 = new org.mockito.asm.Label();
        java.lang.String str90 = label89.toString();
        org.mockito.asm.Label label91 = new org.mockito.asm.Label();
        label89.info = label91;
        java.lang.String str93 = label89.toString();
        java.lang.String str94 = label89.toString();
        java.lang.Object obj95 = label89.info;
        java.lang.String str96 = label89.toString();
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter10.visitLocalVariable("L395315804", "L1655564471", "L1882053372", label14, label89, 171);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 171");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L179872736" + "'", str15, "L179872736");
        org.junit.Assert.assertNotNull(type19);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L179872736" + "'", str22, "L179872736");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "Z(VZVDDZ)Z" + "'", obj25, "Z(VZVDDZ)Z");
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str57, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str61, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str65, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(callbackArray80);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + true + "'", obj88, true);
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "L673484133" + "'", str90, "L673484133");
// flaky:         org.junit.Assert.assertEquals("'" + str93 + "' != '" + "L673484133" + "'", str93, "L673484133");
// flaky:         org.junit.Assert.assertEquals("'" + str94 + "' != '" + "L673484133" + "'", str94, "L673484133");
        org.junit.Assert.assertNotNull(obj95);
// flaky:         org.junit.Assert.assertEquals(obj95.toString(), "L1334456686");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "L1334456686");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "L1334456686");
// flaky:         org.junit.Assert.assertEquals("'" + str96 + "' != '" + "L673484133" + "'", str96, "L673484133");
    }

    @Test
    public void test04412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04412");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        enhancer5.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback10 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray11 = new org.mockito.cglib.proxy.Callback[] { callback10 };
        enhancer5.setCallbacks(callbackArray11);
        enhancer0.setCallbacks(callbackArray11);
        enhancer0.setUseFactory(false);
        boolean boolean16 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy17 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        enhancer18.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer18.setCallback(callback21);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer18.setCallback(callback23);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy25 = enhancer18.getStrategy();
        enhancer18.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer28.setCallback(callback29);
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer32.setCallback(callback35);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer32.setCallback(callback37);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy39 = enhancer32.getStrategy();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        boolean boolean43 = type40.equals((java.lang.Object) classVisitor41);
        int int45 = type40.getOpcode(116);
        boolean boolean46 = generatorStrategy39.equals((java.lang.Object) 116);
        enhancer31.setStrategy(generatorStrategy39);
        enhancer28.setStrategy(generatorStrategy39);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setUseFactory(true);
        enhancer49.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter54 = null;
        enhancer49.setCallbackFilter(callbackFilter54);
        java.lang.ClassLoader classLoader56 = enhancer49.getClassLoader();
        enhancer28.setClassLoader(classLoader56);
        java.lang.ClassLoader classLoader58 = enhancer28.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setUseFactory(true);
        enhancer59.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        java.lang.Class<?> wildcardClass69 = classAdapter68.getClass();
        java.lang.String str70 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass69);
        org.mockito.asm.ClassVisitor classVisitor71 = null;
        org.mockito.asm.ClassAdapter classAdapter72 = new org.mockito.asm.ClassAdapter(classVisitor71);
        java.lang.Class<?> wildcardClass73 = classAdapter72.getClass();
        java.lang.String str74 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass73);
        org.mockito.asm.ClassVisitor classVisitor75 = null;
        org.mockito.asm.ClassAdapter classAdapter76 = new org.mockito.asm.ClassAdapter(classVisitor75);
        java.lang.Class<?> wildcardClass77 = classAdapter76.getClass();
        java.lang.String str78 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass77);
        org.mockito.asm.ClassVisitor classVisitor79 = null;
        org.mockito.asm.ClassAdapter classAdapter80 = new org.mockito.asm.ClassAdapter(classVisitor79);
        java.lang.Class<?> wildcardClass81 = classAdapter80.getClass();
        boolean boolean82 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass81);
        java.lang.Class[] classArray83 = new java.lang.Class[] { wildcardClass69, wildcardClass73, wildcardClass77, wildcardClass81 };
        enhancer64.setInterfaces(classArray83);
        enhancer59.setInterfaces(classArray83);
        enhancer28.setInterfaces(classArray83);
        enhancer18.setInterfaces(classArray83);
        enhancer0.setInterfaces(classArray83);
        org.mockito.cglib.core.NamingPolicy namingPolicy89 = enhancer0.getNamingPolicy();
        java.lang.ClassLoader classLoader90 = enhancer0.getClassLoader();
        org.junit.Assert.assertNotNull(callbackArray11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(generatorStrategy17);
        org.junit.Assert.assertNotNull(generatorStrategy25);
        org.junit.Assert.assertNotNull(generatorStrategy39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 116 + "'", int45 == 116);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(classLoader56);
        org.junit.Assert.assertNotNull(classLoader58);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str70, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str74, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str78, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(classArray83);
        org.junit.Assert.assertNotNull(namingPolicy89);
        org.junit.Assert.assertNotNull(classLoader90);
    }

    @Test
    public void test04413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04413");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter7 = null;
        enhancer0.setCallbackFilter(callbackFilter7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer0.setCallback(callback9);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer11.setCallback(callback14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        enhancer16.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback21 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray22 = new org.mockito.cglib.proxy.Callback[] { callback21 };
        enhancer16.setCallbacks(callbackArray22);
        enhancer11.setCallbacks(callbackArray22);
        java.lang.ClassLoader classLoader25 = enhancer11.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy26 = enhancer11.getNamingPolicy();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        boolean boolean30 = type27.equals((java.lang.Object) classVisitor28);
        java.lang.String str31 = type27.getDescriptor();
        java.lang.String str32 = type27.getDescriptor();
        int int34 = type27.getOpcode(112);
        boolean boolean35 = namingPolicy26.equals((java.lang.Object) 112);
        enhancer0.setNamingPolicy(namingPolicy26);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer0.getNamingPolicy();
        org.junit.Assert.assertNotNull(callbackArray22);
        org.junit.Assert.assertNotNull(classLoader25);
        org.junit.Assert.assertNotNull(namingPolicy26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Z" + "'", str31, "Z");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Z" + "'", str32, "Z");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 112 + "'", int34 == 112);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(namingPolicy37);
    }

    @Test
    public void test04414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04414");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer1.setCallback(callback4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer1.setCallbackFilter(callbackFilter6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer1.setCallback(callback8);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer1.getNamingPolicy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(0, type12);
        int int14 = type12.getSort();
        java.lang.String str15 = type12.getClassName();
        java.lang.String str16 = type12.getClassName();
        boolean boolean17 = namingPolicy10.equals((java.lang.Object) type12);
        enhancer0.setNamingPolicy(namingPolicy10);
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer19.setCallback(callback22);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter24 = null;
        enhancer19.setCallbackFilter(callbackFilter24);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer19.setCallback(callback26);
        enhancer19.setInterceptDuringConstruction(true);
        boolean boolean30 = namingPolicy10.equals((java.lang.Object) true);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor32);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classAdapter34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo37 = classEmitter36.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassInfo classInfo41 = classEmitter38.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter42.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo50 = classEmitter49.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.cglib.core.ClassEmitter classEmitter52 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter49);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        org.mockito.asm.ClassAdapter classAdapter56 = new org.mockito.asm.ClassAdapter(classVisitor54);
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classAdapter56);
        org.mockito.cglib.core.ClassEmitter classEmitter58 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo59 = classEmitter58.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter58.setTarget((org.mockito.asm.ClassVisitor) classEmitter60);
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classEmitter60);
        org.mockito.cglib.core.ClassInfo classInfo63 = classEmitter60.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo65 = classEmitter64.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter64);
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter64);
        classEmitter60.setTarget((org.mockito.asm.ClassVisitor) classEmitter67);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo70 = classEmitter69.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter69);
        classEmitter60.setTarget((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.cglib.core.ClassEmitter classEmitter74 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter73);
        classEmitter52.setTarget((org.mockito.asm.ClassVisitor) classEmitter74);
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter74);
        org.mockito.cglib.core.ClassInfo classInfo77 = classEmitter74.getClassInfo();
        classEmitter45.setTarget((org.mockito.asm.ClassVisitor) classEmitter74);
        org.mockito.asm.ClassAdapter classAdapter79 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter74);
        boolean boolean80 = namingPolicy10.equals((java.lang.Object) classAdapter79);
        // The following exception was thrown during execution in test generation
        try {
            classAdapter79.visitInnerClass("L1652565201", "L941876605", "L1423705223", 39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double" + "'", str15, "double");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double" + "'", str16, "double");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(classInfo37);
        org.junit.Assert.assertNull(classInfo41);
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertNull(classInfo50);
        org.junit.Assert.assertNull(classInfo59);
        org.junit.Assert.assertNull(classInfo63);
        org.junit.Assert.assertNull(classInfo65);
        org.junit.Assert.assertNull(classInfo70);
        org.junit.Assert.assertNull(classInfo77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test04415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04415");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        boolean boolean21 = enhancer0.getUseCache();
        boolean boolean22 = enhancer0.getUseCache();
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass25);
        java.lang.String str29 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass25);
        java.lang.String str30 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass25);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass25);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer34.setCallback(callback35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer38.setCallback(callback41);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer38.setCallback(callback43);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer38.getStrategy();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        boolean boolean49 = type46.equals((java.lang.Object) classVisitor47);
        int int51 = type46.getOpcode(116);
        boolean boolean52 = generatorStrategy45.equals((java.lang.Object) 116);
        enhancer37.setStrategy(generatorStrategy45);
        enhancer34.setStrategy(generatorStrategy45);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        enhancer55.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter60 = null;
        enhancer55.setCallbackFilter(callbackFilter60);
        java.lang.ClassLoader classLoader62 = enhancer55.getClassLoader();
        enhancer34.setClassLoader(classLoader62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setUseFactory(true);
        enhancer64.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter69 = null;
        enhancer64.setCallbackFilter(callbackFilter69);
        java.lang.ClassLoader classLoader71 = enhancer64.getClassLoader();
        enhancer34.setClassLoader(classLoader71);
        org.mockito.cglib.proxy.Enhancer enhancer73 = new org.mockito.cglib.proxy.Enhancer();
        enhancer73.setUseFactory(true);
        enhancer73.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback78 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray79 = new org.mockito.cglib.proxy.Callback[] { callback78 };
        enhancer73.setCallbacks(callbackArray79);
        enhancer73.setSerialVersionUID((java.lang.Long) 1L);
        java.lang.ClassLoader classLoader83 = enhancer73.getClassLoader();
        enhancer34.setClassLoader(classLoader83);
        boolean boolean85 = enhancer34.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer86 = new org.mockito.cglib.proxy.Enhancer();
        enhancer86.setUseFactory(false);
        org.mockito.cglib.proxy.Callback callback89 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray90 = new org.mockito.cglib.proxy.Callback[] { callback89 };
        enhancer86.setCallbacks(callbackArray90);
        enhancer34.setCallbacks(callbackArray90);
        enhancer0.setCallbacks(callbackArray90);
        java.lang.ClassLoader classLoader94 = enhancer0.getClassLoader();
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str29, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str30, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 116 + "'", int51 == 116);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertNotNull(classLoader71);
        org.junit.Assert.assertNotNull(callbackArray79);
        org.junit.Assert.assertNotNull(classLoader83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(callbackArray90);
        org.junit.Assert.assertNotNull(classLoader94);
    }

    @Test
    public void test04416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04416");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseFactory(false);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy16 = enhancer0.getStrategy();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy17 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer18 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer18.setCallback(callback19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer22.setCallback(callback25);
        org.mockito.cglib.proxy.Callback callback27 = null;
        enhancer22.setCallback(callback27);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy29 = enhancer22.getStrategy();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        boolean boolean33 = type30.equals((java.lang.Object) classVisitor31);
        int int35 = type30.getOpcode(116);
        boolean boolean36 = generatorStrategy29.equals((java.lang.Object) 116);
        enhancer21.setStrategy(generatorStrategy29);
        enhancer18.setStrategy(generatorStrategy29);
        org.mockito.cglib.proxy.Enhancer enhancer39 = new org.mockito.cglib.proxy.Enhancer();
        enhancer39.setUseFactory(true);
        enhancer39.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter44 = null;
        enhancer39.setCallbackFilter(callbackFilter44);
        java.lang.ClassLoader classLoader46 = enhancer39.getClassLoader();
        enhancer18.setClassLoader(classLoader46);
        java.lang.ClassLoader classLoader48 = enhancer18.getClassLoader();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        java.lang.Class<?> wildcardClass54 = classAdapter53.getClass();
        java.lang.String str55 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass54);
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        java.lang.Class<?> wildcardClass58 = classAdapter57.getClass();
        java.lang.String str59 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass58);
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        org.mockito.asm.ClassAdapter classAdapter61 = new org.mockito.asm.ClassAdapter(classVisitor60);
        java.lang.Class<?> wildcardClass62 = classAdapter61.getClass();
        java.lang.String str63 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass62);
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        java.lang.Class<?> wildcardClass66 = classAdapter65.getClass();
        boolean boolean67 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.Class[] classArray68 = new java.lang.Class[] { wildcardClass54, wildcardClass58, wildcardClass62, wildcardClass66 };
        enhancer49.setInterfaces(classArray68);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter70 = null;
        enhancer49.setCallbackFilter(callbackFilter70);
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        enhancer72.setUseFactory(true);
        enhancer72.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback77 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray78 = new org.mockito.cglib.proxy.Callback[] { callback77 };
        enhancer72.setCallbacks(callbackArray78);
        enhancer49.setCallbacks(callbackArray78);
        enhancer18.setCallbacks(callbackArray78);
        enhancer18.setInterceptDuringConstruction(false);
        enhancer18.setUseFactory(true);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray86 = generatorStrategy17.generate((org.mockito.cglib.core.ClassGenerator) enhancer18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertNotNull(generatorStrategy16);
        org.junit.Assert.assertNotNull(generatorStrategy17);
        org.junit.Assert.assertNotNull(generatorStrategy29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 116 + "'", int35 == 116);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classLoader46);
        org.junit.Assert.assertNotNull(classLoader48);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str55, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str59, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str63, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertNotNull(callbackArray78);
    }

    @Test
    public void test04417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04417");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        java.lang.ClassLoader classLoader30 = enhancer0.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor33);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor38);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classAdapter40);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter42.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor49);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classAdapter51);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        org.mockito.cglib.core.ClassInfo classInfo58 = classEmitter55.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter59 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo60 = classEmitter59.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter61 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter59);
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassInfo classInfo64 = classEmitter62.getClassInfo();
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        boolean boolean66 = namingPolicy31.equals((java.lang.Object) classEmitter37);
        org.mockito.cglib.core.ClassInfo classInfo67 = classEmitter37.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter68 = classEmitter37.begin_static();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@686f586d");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertNull(classInfo54);
        org.junit.Assert.assertNull(classInfo58);
        org.junit.Assert.assertNull(classInfo60);
        org.junit.Assert.assertNull(classInfo64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(classInfo67);
    }

    @Test
    public void test04418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04418");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getType("I");
        java.lang.String str3 = type2.getDescriptor();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        boolean boolean10 = type7.equals((java.lang.Object) classVisitor8);
        int int12 = type7.getOpcode(116);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        boolean boolean18 = type15.equals((java.lang.Object) classVisitor16);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str20 = type19.getDescriptor();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        boolean boolean26 = type23.equals((java.lang.Object) classVisitor24);
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type14, type15, type19, type21, type22, type23 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray27);
        org.mockito.cglib.core.Signature signature29 = new org.mockito.cglib.core.Signature("V", type7, typeArray27);
        org.mockito.cglib.core.Signature signature30 = new org.mockito.cglib.core.Signature("hi!", type5, typeArray27);
        org.mockito.cglib.core.Signature signature31 = new org.mockito.cglib.core.Signature("L1748603513", type2, typeArray27);
        org.mockito.asm.Type[] typeArray32 = signature31.getArgumentTypes();
        java.lang.String str33 = signature31.toString();
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer34.setCallback(callback35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer38.setCallback(callback41);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer38.setCallback(callback43);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy45 = enhancer38.getStrategy();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        boolean boolean49 = type46.equals((java.lang.Object) classVisitor47);
        int int51 = type46.getOpcode(116);
        boolean boolean52 = generatorStrategy45.equals((java.lang.Object) 116);
        enhancer37.setStrategy(generatorStrategy45);
        enhancer34.setStrategy(generatorStrategy45);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        enhancer55.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter60 = null;
        enhancer55.setCallbackFilter(callbackFilter60);
        java.lang.ClassLoader classLoader62 = enhancer55.getClassLoader();
        enhancer34.setClassLoader(classLoader62);
        boolean boolean64 = signature31.equals((java.lang.Object) enhancer34);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback66 = null;
        enhancer65.setCallback(callback66);
        java.lang.Class<?> wildcardClass68 = enhancer65.getClass();
        java.lang.String str69 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass68);
        enhancer34.setSuperclass((java.lang.Class) wildcardClass68);
        java.lang.String str72 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass68);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "I" + "'", str3, "I");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 116 + "'", int12 == 116);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "V" + "'", str20, "V");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(VZVDDZ)V" + "'", str28, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L1748603513(VZVDDZ)I" + "'", str33, "L1748603513(VZVDDZ)I");
        org.junit.Assert.assertNotNull(generatorStrategy45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 116 + "'", int51 == 116);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classLoader62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str69, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str72, "Lorg/mockito/cglib/proxy/Enhancer;");
    }

    @Test
    public void test04419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04419");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.asm.ClassAdapter classAdapter5 = new org.mockito.asm.ClassAdapter(classVisitor4);
        boolean boolean6 = type3.equals((java.lang.Object) classVisitor4);
        int int8 = type3.getOpcode(116);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        boolean boolean14 = type11.equals((java.lang.Object) classVisitor12);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str16 = type15.getDescriptor();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        boolean boolean22 = type19.equals((java.lang.Object) classVisitor20);
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type10, type11, type15, type17, type18, type19 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray23);
        org.mockito.cglib.core.Signature signature25 = new org.mockito.cglib.core.Signature("V", type3, typeArray23);
        org.mockito.cglib.core.Local local26 = new org.mockito.cglib.core.Local(100, type3);
        int int27 = local26.getIndex();
        int int28 = local26.getIndex();
        org.mockito.asm.Type type29 = local26.getType();
        org.mockito.asm.Type type30 = local26.getType();
        int int31 = type30.getSize();
        java.lang.String str32 = type30.toString();
        int int33 = type30.getSize();
        org.mockito.cglib.core.Local local34 = new org.mockito.cglib.core.Local(129, type30);
        java.lang.Class<?> wildcardClass35 = local34.getClass();
        java.lang.Class[] classArray36 = null;
        org.mockito.cglib.proxy.Callback callback37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass35, classArray36, callback37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 116 + "'", int8 == 116);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "V" + "'", str16, "V");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(VZVDDZ)V" + "'", str24, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Z" + "'", str32, "Z");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test04420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04420");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        org.mockito.asm.Type[] typeArray3 = signature2.getArgumentTypes();
        java.lang.String str4 = signature2.getDescriptor();
        java.lang.String str5 = signature2.toString();
        java.lang.Object obj6 = null;
        boolean boolean7 = signature2.equals(obj6);
        org.mockito.asm.Type type8 = signature2.getReturnType();
        org.mockito.asm.Type type9 = signature2.getReturnType();
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback13 = null;
        enhancer10.setCallback(callback13);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer10.setCallback(callback15);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy17 = enhancer10.getStrategy();
        org.mockito.asm.Label label18 = new org.mockito.asm.Label();
        boolean boolean19 = generatorStrategy17.equals((java.lang.Object) label18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.asm.ClassAdapter classAdapter22 = new org.mockito.asm.ClassAdapter(classVisitor21);
        org.mockito.asm.ClassAdapter classAdapter23 = new org.mockito.asm.ClassAdapter(classVisitor21);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classAdapter23);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter25.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter25.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter20.setTarget((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassInfo classInfo30 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter31);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter34.getClassInfo();
        label18.info = classEmitter34;
        java.lang.Object obj38 = label18.info;
        java.lang.String str39 = label18.toString();
        java.lang.Object obj40 = label18.info;
        java.lang.String str41 = label18.toString();
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter42.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter42.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor49);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classAdapter51);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter53.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        classEmitter47.setTarget((org.mockito.asm.ClassVisitor) classEmitter55);
        label18.info = classEmitter55;
        boolean boolean60 = type9.equals((java.lang.Object) label18);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = label18.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(VZVDDZ)Z" + "'", str4, "(VZVDDZ)Z");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Z(VZVDDZ)Z" + "'", str5, "Z(VZVDDZ)Z");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(generatorStrategy17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNull(classInfo30);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNotNull(obj38);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "L1635974218" + "'", str39, "L1635974218");
        org.junit.Assert.assertNotNull(obj40);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L1635974218" + "'", str41, "L1635974218");
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo54);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test04421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04421");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        java.lang.String str14 = label13.toString();
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        label13.info = label15;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.asm.ClassAdapter classAdapter23 = new org.mockito.asm.ClassAdapter(classVisitor22);
        boolean boolean24 = type21.equals((java.lang.Object) classVisitor22);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str26 = type25.getDescriptor();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor30);
        boolean boolean32 = type29.equals((java.lang.Object) classVisitor30);
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type20, type21, type25, type27, type28, type29 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray33);
        org.mockito.cglib.core.Signature signature35 = new org.mockito.cglib.core.Signature("L1057808593", type18, typeArray33);
        label15.info = type18;
        org.mockito.asm.Label label37 = new org.mockito.asm.Label();
        java.lang.String str38 = label37.toString();
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        label37.info = label39;
        org.mockito.cglib.proxy.Enhancer enhancer41 = new org.mockito.cglib.proxy.Enhancer();
        enhancer41.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        java.lang.Class<?> wildcardClass46 = classAdapter45.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor48);
        java.lang.Class<?> wildcardClass50 = classAdapter49.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        java.lang.Class<?> wildcardClass54 = classAdapter53.getClass();
        java.lang.String str55 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass54);
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        java.lang.Class<?> wildcardClass58 = classAdapter57.getClass();
        boolean boolean59 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass58);
        java.lang.Class[] classArray60 = new java.lang.Class[] { wildcardClass46, wildcardClass50, wildcardClass54, wildcardClass58 };
        enhancer41.setInterfaces(classArray60);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter62 = null;
        enhancer41.setCallbackFilter(callbackFilter62);
        org.mockito.cglib.proxy.Enhancer enhancer64 = new org.mockito.cglib.proxy.Enhancer();
        enhancer64.setUseFactory(true);
        enhancer64.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback69 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray70 = new org.mockito.cglib.proxy.Callback[] { callback69 };
        enhancer64.setCallbacks(callbackArray70);
        enhancer41.setCallbacks(callbackArray70);
        java.lang.Class class73 = null;
        enhancer41.setSuperclass(class73);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy75 = enhancer41.getStrategy();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.Class<?> wildcardClass77 = type76.getClass();
        enhancer41.setSuperclass((java.lang.Class) wildcardClass77);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.Class<?> wildcardClass80 = type79.getClass();
        boolean boolean81 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass80);
        enhancer41.setSuperclass((java.lang.Class) wildcardClass80);
        java.lang.String str83 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass80);
        label37.info = wildcardClass80;
        java.lang.Object obj85 = label37.info;
        label15.info = obj85;
        int[] intArray89 = new int[] { 163, 8 };
        org.mockito.asm.Label[] labelArray90 = new org.mockito.asm.Label[] {};
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter12.visitLookupSwitchInsn(label15, intArray89, labelArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1038460656" + "'", str14, "L1038460656");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "V" + "'", str26, "V");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(VZVDDZ)V" + "'", str34, "(VZVDDZ)V");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "L82805614" + "'", str38, "L82805614");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str47, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str51, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str55, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(callbackArray70);
        org.junit.Assert.assertNotNull(generatorStrategy75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str83, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class org.mockito.asm.Type");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class org.mockito.asm.Type");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[163, 8]");
        org.junit.Assert.assertNotNull(labelArray90);
    }

    @Test
    public void test04422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04422");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        enhancer3.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor6 = null;
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter(classVisitor6);
        java.lang.Class<?> wildcardClass8 = classAdapter7.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass8);
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        java.lang.Class<?> wildcardClass12 = classAdapter11.getClass();
        java.lang.String str13 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor14);
        java.lang.Class<?> wildcardClass16 = classAdapter15.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass20);
        java.lang.Class[] classArray22 = new java.lang.Class[] { wildcardClass8, wildcardClass12, wildcardClass16, wildcardClass20 };
        enhancer3.setInterfaces(classArray22);
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        java.lang.Class<?> wildcardClass26 = classAdapter25.getClass();
        boolean boolean27 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        boolean boolean28 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        enhancer3.setSuperclass((java.lang.Class) wildcardClass26);
        boolean boolean31 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass26);
        java.lang.String str32 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass26);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local36 = new org.mockito.cglib.core.Local(0, type35);
        int int37 = type35.getSort();
        java.lang.String str38 = type35.getClassName();
        java.lang.String str39 = type35.getClassName();
        java.lang.Class<?> wildcardClass40 = type35.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.asm.Type");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str9, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str13, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str17, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str32, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "double" + "'", str38, "double");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "double" + "'", str39, "double");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str41, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test04423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04423");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.asm.ClassAdapter classAdapter1 = new org.mockito.asm.ClassAdapter(classVisitor0);
        java.lang.Class<?> wildcardClass2 = classAdapter1.getClass();
        boolean boolean3 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        boolean boolean4 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.cglib.core.Signature signature8 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        boolean boolean10 = signature8.equals((java.lang.Object) "(VZVDDZ)B");
        org.mockito.asm.Type[] typeArray11 = signature8.getArgumentTypes();
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray11);
        java.lang.Class<?> wildcardClass13 = typeArray11.getClass();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        java.lang.String str16 = label15.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        label15.info = label17;
        java.lang.String str19 = label15.toString();
        java.lang.String str20 = label15.toString();
        java.lang.String str21 = label15.toString();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        java.lang.String str23 = label22.toString();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        label22.info = label24;
        java.lang.String str26 = label22.toString();
        java.lang.String str27 = label22.toString();
        label15.info = label22;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        boolean boolean33 = type30.equals((java.lang.Object) classVisitor31);
        int int35 = type30.getOpcode(116);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        boolean boolean41 = type38.equals((java.lang.Object) classVisitor39);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str43 = type42.getDescriptor();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type46 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        boolean boolean49 = type46.equals((java.lang.Object) classVisitor47);
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type37, type38, type42, type44, type45, type46 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray50);
        org.mockito.cglib.core.Signature signature52 = new org.mockito.cglib.core.Signature("V", type30, typeArray50);
        int int54 = type30.getOpcode((-1));
        int int56 = type30.getOpcode((int) 'a');
        label15.info = type30;
        label15.info = 100;
        org.mockito.cglib.core.Signature signature62 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        org.mockito.asm.Type[] typeArray63 = signature62.getArgumentTypes();
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo65 = classEmitter64.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter64.setTarget((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.cglib.core.ClassInfo classInfo68 = classEmitter64.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter64);
        boolean boolean70 = signature62.equals((java.lang.Object) classEmitter69);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback74 = null;
        enhancer71.setCallback(callback74);
        boolean boolean76 = enhancer71.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter77 = null;
        enhancer71.setCallbackFilter(callbackFilter77);
        boolean boolean79 = signature62.equals((java.lang.Object) callbackFilter77);
        label15.info = signature62;
        org.mockito.asm.Type[] typeArray81 = signature62.getArgumentTypes();
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray81);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;" + "'", str12, "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(type14);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1279968332" + "'", str16, "L1279968332");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1279968332" + "'", str19, "L1279968332");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1279968332" + "'", str20, "L1279968332");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1279968332" + "'", str21, "L1279968332");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1958264931" + "'", str23, "L1958264931");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L1958264931" + "'", str26, "L1958264931");
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L1958264931" + "'", str27, "L1958264931");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 116 + "'", int35 == 116);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "V" + "'", str43, "V");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VZVDDZ)V" + "'", str51, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 97 + "'", int56 == 97);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertNull(classInfo65);
        org.junit.Assert.assertNull(classInfo68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(VZVDDZ)[Lorg/mockito/asm/Type;" + "'", str82, "(VZVDDZ)[Lorg/mockito/asm/Type;");
    }

    @Test
    public void test04424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04424");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setUseFactory(true);
        boolean boolean35 = enhancer32.getAttemptLoad();
        org.mockito.asm.ClassVisitor classVisitor36 = null;
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter(classVisitor36);
        java.lang.Class<?> wildcardClass38 = classAdapter37.getClass();
        java.lang.String str39 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass38);
        enhancer32.setSuperclass((java.lang.Class) wildcardClass38);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass38);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy42 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer0.getNamingPolicy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str39, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(generatorStrategy42);
        org.junit.Assert.assertNotNull(namingPolicy43);
    }

    @Test
    public void test04425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04425");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        java.lang.Class<?> wildcardClass10 = classAdapter9.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass10, wildcardClass14, wildcardClass18, wildcardClass22 };
        enhancer5.setInterfaces(classArray24);
        enhancer0.setInterfaces(classArray24);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass29, wildcardClass34 };
        enhancer0.setInterfaces(classArray37);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer0.getStrategy();
        enhancer0.setUseFactory(false);
        boolean boolean44 = enhancer0.getUseCache();
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter45.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassInfo classInfo51 = classEmitter50.getClassInfo();
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str11, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str15, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str31, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo51);
    }

    @Test
    public void test04426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04426");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer9.setCallback(callback12);
        enhancer9.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass16 = enhancer9.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass16);
        boolean boolean18 = enhancer0.getAttemptLoad();
        boolean boolean19 = enhancer0.getUseCache();
        org.mockito.cglib.core.NamingPolicy namingPolicy20 = enhancer0.getNamingPolicy();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local24 = new org.mockito.cglib.core.Local(0, type23);
        org.mockito.cglib.core.Local local25 = new org.mockito.cglib.core.Local((int) (byte) 100, type23);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        boolean boolean33 = type30.equals((java.lang.Object) classVisitor31);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str35 = type34.getDescriptor();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        boolean boolean41 = type38.equals((java.lang.Object) classVisitor39);
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type29, type30, type34, type36, type37, type38 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray42);
        org.mockito.cglib.core.Signature signature44 = new org.mockito.cglib.core.Signature("L1057808593", type27, typeArray42);
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray42);
        int int47 = type23.getOpcode((int) (byte) -1);
        java.lang.String str48 = type23.getDescriptor();
        int int49 = type23.getSort();
        boolean boolean50 = namingPolicy20.equals((java.lang.Object) int49);
        boolean boolean52 = namingPolicy20.equals((java.lang.Object) "L1792092702");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(namingPolicy20);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "V" + "'", str35, "V");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(VZVDDZ)V" + "'", str43, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(VZVDDZ)D" + "'", str45, "(VZVDDZ)D");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "D" + "'", str48, "D");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8 + "'", int49 == 8);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test04427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04427");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Enhancer enhancer3 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer4.setCallback(callback9);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer4.getStrategy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        boolean boolean15 = type12.equals((java.lang.Object) classVisitor13);
        int int17 = type12.getOpcode(116);
        boolean boolean18 = generatorStrategy11.equals((java.lang.Object) 116);
        enhancer3.setStrategy(generatorStrategy11);
        enhancer0.setStrategy(generatorStrategy11);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        enhancer21.setUseFactory(true);
        enhancer21.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter26 = null;
        enhancer21.setCallbackFilter(callbackFilter26);
        java.lang.ClassLoader classLoader28 = enhancer21.getClassLoader();
        enhancer0.setClassLoader(classLoader28);
        java.lang.ClassLoader classLoader30 = enhancer0.getClassLoader();
        boolean boolean31 = enhancer0.getUseCache();
        enhancer0.setUseFactory(false);
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo35 = classEmitter34.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter34.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter34);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 116 + "'", int17 == 116);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classLoader28);
        org.junit.Assert.assertNotNull(classLoader30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(classInfo35);
        org.junit.Assert.assertNull(classInfo36);
    }

    @Test
    public void test04428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04428");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback12 = null;
        enhancer9.setCallback(callback12);
        enhancer9.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass16 = enhancer9.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass16);
        java.lang.String str18 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass16);
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer22.setCallback(callback25);
        enhancer22.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy29 = enhancer22.getNamingPolicy();
        boolean boolean31 = namingPolicy29.equals((java.lang.Object) 5);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        java.lang.String str38 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass37);
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        java.lang.Class<?> wildcardClass41 = classAdapter40.getClass();
        java.lang.String str42 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass41);
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        java.lang.Class<?> wildcardClass45 = classAdapter44.getClass();
        java.lang.String str46 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass45);
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        java.lang.Class<?> wildcardClass49 = classAdapter48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.Class[] classArray51 = new java.lang.Class[] { wildcardClass37, wildcardClass41, wildcardClass45, wildcardClass49 };
        enhancer32.setInterfaces(classArray51);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter53 = null;
        enhancer32.setCallbackFilter(callbackFilter53);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        enhancer55.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback60 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray61 = new org.mockito.cglib.proxy.Callback[] { callback60 };
        enhancer55.setCallbacks(callbackArray61);
        enhancer32.setCallbacks(callbackArray61);
        boolean boolean64 = namingPolicy29.equals((java.lang.Object) enhancer32);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer68 = new org.mockito.cglib.proxy.Enhancer();
        enhancer68.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback71 = null;
        enhancer68.setCallback(callback71);
        org.mockito.cglib.proxy.Enhancer enhancer73 = new org.mockito.cglib.proxy.Enhancer();
        enhancer73.setUseFactory(true);
        enhancer73.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback78 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray79 = new org.mockito.cglib.proxy.Callback[] { callback78 };
        enhancer73.setCallbacks(callbackArray79);
        enhancer68.setCallbacks(callbackArray79);
        enhancer65.setCallbacks(callbackArray79);
        enhancer32.setCallbacks(callbackArray79);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerStaticCallbacks((java.lang.Class) wildcardClass16, callbackArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.proxy.Enhancer is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str18, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str19, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(namingPolicy29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str38, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str42, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str46, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(callbackArray61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(callbackArray79);
    }

    @Test
    public void test04429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04429");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        boolean boolean8 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy9 = enhancer0.getStrategy();
        org.mockito.asm.Label label10 = new org.mockito.asm.Label();
        java.lang.String str11 = label10.toString();
        org.mockito.asm.Label label12 = new org.mockito.asm.Label();
        label10.info = label12;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local16 = new org.mockito.cglib.core.Local(0, type15);
        label10.info = 0;
        java.lang.String str18 = label10.toString();
        label10.info = "Z(VZVDDZ)Z";
        boolean boolean21 = generatorStrategy9.equals((java.lang.Object) "Z(VZVDDZ)Z");
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer23.setCallback(callback26);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter28 = null;
        enhancer23.setCallbackFilter(callbackFilter28);
        org.mockito.cglib.proxy.Callback callback30 = null;
        enhancer23.setCallback(callback30);
        org.mockito.cglib.core.NamingPolicy namingPolicy32 = enhancer23.getNamingPolicy();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local35 = new org.mockito.cglib.core.Local(0, type34);
        int int36 = type34.getSort();
        java.lang.String str37 = type34.getClassName();
        java.lang.String str38 = type34.getClassName();
        boolean boolean39 = namingPolicy32.equals((java.lang.Object) type34);
        enhancer22.setNamingPolicy(namingPolicy32);
        java.lang.Class<?> wildcardClass41 = namingPolicy32.getClass();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        boolean boolean43 = generatorStrategy9.equals((java.lang.Object) wildcardClass41);
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass41);
        org.mockito.cglib.proxy.Enhancer enhancer45 = new org.mockito.cglib.proxy.Enhancer();
        enhancer45.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback48 = null;
        enhancer45.setCallback(callback48);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter50 = null;
        enhancer45.setCallbackFilter(callbackFilter50);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        java.lang.Class<?> wildcardClass54 = classAdapter53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        enhancer45.setSuperclass((java.lang.Class) wildcardClass54);
        enhancer45.setUseFactory(true);
        boolean boolean59 = enhancer45.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback60 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray61 = new org.mockito.cglib.proxy.Callback[] { callback60 };
        enhancer45.setCallbacks(callbackArray61);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.proxy.Enhancer.registerCallbacks((java.lang.Class) wildcardClass41, callbackArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: class org.mockito.cglib.core.DefaultNamingPolicy is not an enhanced class");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(generatorStrategy9);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L427300298" + "'", str11, "L427300298");
        org.junit.Assert.assertNotNull(type15);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L427300298" + "'", str18, "L427300298");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(namingPolicy32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "double" + "'", str37, "double");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "double" + "'", str38, "double");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(callbackArray61);
    }

    @Test
    public void test04430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04430");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo13 = classEmitter12.getClassInfo();
        java.lang.Class<?> wildcardClass14 = classEmitter12.getClass();
        boolean boolean15 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass14);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass14);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer17.setCallback(callback20);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter22 = null;
        enhancer17.setCallbackFilter(callbackFilter22);
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer17.setCallback(callback24);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer26.setCallback(callback29);
        enhancer26.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass33 = enhancer26.getClass();
        enhancer17.setSuperclass((java.lang.Class) wildcardClass33);
        boolean boolean35 = enhancer17.getAttemptLoad();
        boolean boolean36 = enhancer17.getUseCache();
        java.lang.ClassLoader classLoader37 = enhancer17.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer17.getNamingPolicy();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.BYTE_TYPE;
        int int40 = type39.getSize();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        boolean boolean45 = type42.equals((java.lang.Object) classVisitor43);
        int int47 = type42.getOpcode(116);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor51);
        boolean boolean53 = type50.equals((java.lang.Object) classVisitor51);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str55 = type54.getDescriptor();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor59 = null;
        org.mockito.asm.ClassAdapter classAdapter60 = new org.mockito.asm.ClassAdapter(classVisitor59);
        boolean boolean61 = type58.equals((java.lang.Object) classVisitor59);
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type49, type50, type54, type56, type57, type58 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray62);
        org.mockito.cglib.core.Signature signature64 = new org.mockito.cglib.core.Signature("V", type42, typeArray62);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray62);
        java.lang.Class<?> wildcardClass66 = typeArray62.getClass();
        boolean boolean67 = namingPolicy38.equals((java.lang.Object) typeArray62);
        enhancer0.setNamingPolicy(namingPolicy38);
        org.mockito.asm.MethodVisitor methodVisitor71 = null;
        org.mockito.asm.MethodAdapter methodAdapter72 = new org.mockito.asm.MethodAdapter(methodVisitor71);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter73 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter72);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter74 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter73);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter75 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter73);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter76 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter75);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter77 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter75);
        org.mockito.asm.MethodAdapter methodAdapter78 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter77);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter79 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter77);
        org.mockito.asm.MethodAdapter methodAdapter80 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter77);
        org.mockito.asm.MethodAdapter methodAdapter81 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter80);
        org.mockito.asm.MethodAdapter methodAdapter82 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter81);
        boolean boolean83 = namingPolicy38.equals((java.lang.Object) methodAdapter81);
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter81.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 116 + "'", int47 == 116);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "V" + "'", str55, "V");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VZVDDZ)V" + "'", str63, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(VZVDDZ)B" + "'", str65, "(VZVDDZ)B");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test04431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04431");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter(methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(158, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter10);
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        java.lang.String str16 = label15.toString();
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        label15.info = label17;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local21 = new org.mockito.cglib.core.Local(0, type20);
        label15.info = 0;
        java.lang.String str23 = label15.toString();
        label15.info = "Z(VZVDDZ)Z";
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer26.setCallback(callback29);
        enhancer26.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass33 = enhancer26.getClass();
        label15.info = wildcardClass33;
        java.lang.String str35 = label15.toString();
        java.lang.Object obj36 = label15.info;
        java.lang.String str37 = label15.toString();
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        enhancer38.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback43 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray44 = new org.mockito.cglib.proxy.Callback[] { callback43 };
        enhancer38.setCallbacks(callbackArray44);
        label15.info = enhancer38;
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        java.lang.String str48 = label47.toString();
        org.mockito.asm.Label label49 = new org.mockito.asm.Label();
        label47.info = label49;
        java.lang.String str51 = label47.toString();
        java.lang.String str52 = label47.toString();
        java.lang.String str53 = label47.toString();
        org.mockito.asm.Label label54 = new org.mockito.asm.Label();
        java.lang.String str55 = label54.toString();
        org.mockito.asm.Label label56 = new org.mockito.asm.Label();
        label54.info = label56;
        java.lang.String str58 = label54.toString();
        java.lang.String str59 = label54.toString();
        label47.info = label54;
        java.lang.Object obj61 = label47.info;
        org.mockito.cglib.core.Signature signature64 = new org.mockito.cglib.core.Signature("", "L361914688");
        org.mockito.asm.MethodVisitor methodVisitor67 = null;
        org.mockito.asm.MethodAdapter methodAdapter68 = new org.mockito.asm.MethodAdapter(methodVisitor67);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter69 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter68);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter70 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter69);
        boolean boolean71 = signature64.equals((java.lang.Object) localVariablesSorter69);
        org.mockito.asm.MethodAdapter methodAdapter72 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter69);
        org.mockito.asm.MethodAdapter methodAdapter73 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter69);
        label47.info = localVariablesSorter69;
        java.lang.String str75 = label47.toString();
        java.lang.String str76 = label47.toString();
        java.lang.String str77 = label47.toString();
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter10.visitLocalVariable("", "L369165316", "L510073963", label15, label47, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1257159292" + "'", str16, "L1257159292");
        org.junit.Assert.assertNotNull(type20);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1257159292" + "'", str23, "L1257159292");
        org.junit.Assert.assertNotNull(wildcardClass33);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L1257159292" + "'", str35, "L1257159292");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class org.mockito.cglib.proxy.Enhancer");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class org.mockito.cglib.proxy.Enhancer");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "L1257159292" + "'", str37, "L1257159292");
        org.junit.Assert.assertNotNull(callbackArray44);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L194983298" + "'", str48, "L194983298");
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L194983298" + "'", str51, "L194983298");
// flaky:         org.junit.Assert.assertEquals("'" + str52 + "' != '" + "L194983298" + "'", str52, "L194983298");
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L194983298" + "'", str53, "L194983298");
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L833246872" + "'", str55, "L833246872");
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "L833246872" + "'", str58, "L833246872");
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L833246872" + "'", str59, "L833246872");
        org.junit.Assert.assertNotNull(obj61);
// flaky:         org.junit.Assert.assertEquals(obj61.toString(), "L833246872");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "L833246872");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "L833246872");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str75 + "' != '" + "L194983298" + "'", str75, "L194983298");
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "L194983298" + "'", str76, "L194983298");
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L194983298" + "'", str77, "L194983298");
    }

    @Test
    public void test04432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04432");
        org.mockito.asm.MethodVisitor methodVisitor4 = null;
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter(methodVisitor4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(135, "(VZVDDZ)B", (org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.asm.MethodAdapter methodAdapter12 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        java.lang.String str17 = label16.toString();
        org.mockito.asm.Label label18 = new org.mockito.asm.Label();
        label16.info = label18;
        java.lang.String str20 = label16.toString();
        java.lang.String str21 = label16.toString();
        java.lang.String str22 = label16.toString();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        java.lang.String str24 = label23.toString();
        org.mockito.asm.Label label25 = new org.mockito.asm.Label();
        label23.info = label25;
        java.lang.String str27 = label23.toString();
        java.lang.String str28 = label23.toString();
        label16.info = label23;
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor31);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classAdapter33);
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        classEmitter30.setTarget((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter37.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter41.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter41);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        label16.info = classEmitter44;
        java.lang.Object obj47 = label16.info;
        java.lang.String str48 = label16.toString();
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        enhancer49.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer49.setCallback(callback52);
        org.mockito.cglib.proxy.Callback callback54 = null;
        enhancer49.setCallback(callback54);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy56 = enhancer49.getStrategy();
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        boolean boolean58 = generatorStrategy56.equals((java.lang.Object) label57);
        java.lang.String str59 = label57.toString();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter8.visitLocalVariable("L830545528", "", "L1251475828", label16, label57, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown local variable 52");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L979520500" + "'", str17, "L979520500");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L979520500" + "'", str20, "L979520500");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L979520500" + "'", str21, "L979520500");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L979520500" + "'", str22, "L979520500");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L630623737" + "'", str24, "L630623737");
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "L630623737" + "'", str27, "L630623737");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L630623737" + "'", str28, "L630623737");
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo42);
        org.junit.Assert.assertNotNull(obj47);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L979520500" + "'", str48, "L979520500");
        org.junit.Assert.assertNotNull(generatorStrategy56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L389162604" + "'", str59, "L389162604");
    }

    @Test
    public void test04433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04433");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        java.lang.Class<?> wildcardClass10 = classAdapter9.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass10, wildcardClass14, wildcardClass18, wildcardClass22 };
        enhancer5.setInterfaces(classArray24);
        enhancer0.setInterfaces(classArray24);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass29, wildcardClass34 };
        enhancer0.setInterfaces(classArray37);
        enhancer0.setInterceptDuringConstruction(true);
        enhancer0.setUseFactory(true);
        enhancer0.setAttemptLoad(false);
        boolean boolean45 = enhancer0.getAttemptLoad();
        boolean boolean46 = enhancer0.getAttemptLoad();
        enhancer0.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy49 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer50 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback51 = null;
        enhancer50.setCallback(callback51);
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback57 = null;
        enhancer54.setCallback(callback57);
        org.mockito.cglib.proxy.Callback callback59 = null;
        enhancer54.setCallback(callback59);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy61 = enhancer54.getStrategy();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor63 = null;
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter(classVisitor63);
        boolean boolean65 = type62.equals((java.lang.Object) classVisitor63);
        int int67 = type62.getOpcode(116);
        boolean boolean68 = generatorStrategy61.equals((java.lang.Object) 116);
        enhancer53.setStrategy(generatorStrategy61);
        enhancer50.setStrategy(generatorStrategy61);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setUseFactory(true);
        enhancer71.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter76 = null;
        enhancer71.setCallbackFilter(callbackFilter76);
        java.lang.ClassLoader classLoader78 = enhancer71.getClassLoader();
        enhancer50.setClassLoader(classLoader78);
        enhancer50.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter82 = null;
        enhancer50.setCallbackFilter(callbackFilter82);
        boolean boolean84 = enhancer50.getAttemptLoad();
        java.lang.Class[] classArray85 = null;
        enhancer50.setInterfaces(classArray85);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter87 = null;
        enhancer50.setCallbackFilter(callbackFilter87);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray89 = generatorStrategy49.generate((org.mockito.cglib.core.ClassGenerator) enhancer50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str11, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str15, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str31, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(generatorStrategy49);
        org.junit.Assert.assertNotNull(generatorStrategy61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 116 + "'", int67 == 116);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test04434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04434");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        boolean boolean9 = generatorStrategy7.equals((java.lang.Object) label8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor11);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classAdapter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter24.getClassInfo();
        label8.info = classEmitter24;
        java.lang.Object obj28 = label8.info;
        java.lang.String str29 = label8.toString();
        java.lang.Object obj30 = label8.info;
        java.lang.String str31 = label8.toString();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor39);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classAdapter41);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo44 = classEmitter43.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        label8.info = classEmitter45;
        // The following exception was thrown during execution in test generation
        try {
            classEmitter45.visitSource("Lorg/mockito/cglib/core/ClassEmitter;", "L905044318");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNotNull(obj28);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L748951120" + "'", str29, "L748951120");
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L748951120" + "'", str31, "L748951120");
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo44);
    }

    @Test
    public void test04435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04435");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        enhancer0.setSuperclass((java.lang.Class) wildcardClass20);
        boolean boolean22 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter23 = null;
        enhancer0.setCallbackFilter(callbackFilter23);
        enhancer0.setAttemptLoad(false);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setUseFactory(true);
        enhancer29.setInterceptDuringConstruction(true);
        enhancer29.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer36.setCallback(callback39);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer36.setCallback(callback41);
        org.mockito.cglib.proxy.Enhancer enhancer43 = new org.mockito.cglib.proxy.Enhancer();
        enhancer43.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        java.lang.Class<?> wildcardClass48 = classAdapter47.getClass();
        java.lang.String str49 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass48);
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor50);
        java.lang.Class<?> wildcardClass52 = classAdapter51.getClass();
        java.lang.String str53 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass52);
        org.mockito.asm.ClassVisitor classVisitor54 = null;
        org.mockito.asm.ClassAdapter classAdapter55 = new org.mockito.asm.ClassAdapter(classVisitor54);
        java.lang.Class<?> wildcardClass56 = classAdapter55.getClass();
        java.lang.String str57 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass56);
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        java.lang.Class<?> wildcardClass60 = classAdapter59.getClass();
        boolean boolean61 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass60);
        java.lang.Class[] classArray62 = new java.lang.Class[] { wildcardClass48, wildcardClass52, wildcardClass56, wildcardClass60 };
        enhancer43.setInterfaces(classArray62);
        enhancer36.setInterfaces(classArray62);
        enhancer29.setInterfaces(classArray62);
        enhancer0.setInterfaces(classArray62);
        enhancer0.setInterceptDuringConstruction(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str49, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str53, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str57, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(classArray62);
    }

    @Test
    public void test04436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04436");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        java.lang.Class<?> wildcardClass10 = classAdapter9.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass10, wildcardClass14, wildcardClass18, wildcardClass22 };
        enhancer5.setInterfaces(classArray24);
        enhancer0.setInterfaces(classArray24);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass29, wildcardClass34 };
        enhancer0.setInterfaces(classArray37);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer0.getStrategy();
        enhancer0.setUseCache(true);
        java.lang.Class[] classArray44 = new java.lang.Class[] {};
        enhancer0.setInterfaces(classArray44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer46.setCallback(callback49);
        enhancer46.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer46.getNamingPolicy();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int56 = type55.getSort();
        java.lang.String str57 = type55.getDescriptor();
        java.lang.String str58 = type55.getDescriptor();
        org.mockito.cglib.core.Local local59 = new org.mockito.cglib.core.Local((int) (byte) 1, type55);
        org.mockito.asm.Type type60 = local59.getType();
        int int61 = local59.getIndex();
        boolean boolean62 = namingPolicy53.equals((java.lang.Object) local59);
        enhancer0.setNamingPolicy(namingPolicy53);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy64 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter65 = null;
        enhancer0.setCallbackFilter(callbackFilter65);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str11, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str15, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str31, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Z" + "'", str57, "Z");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Z" + "'", str58, "Z");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(generatorStrategy64);
    }

    @Test
    public void test04437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04437");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        enhancer11.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer11.setCallback(callback14);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter16 = null;
        enhancer11.setCallbackFilter(callbackFilter16);
        enhancer11.setSerialVersionUID((java.lang.Long) 0L);
        enhancer11.setUseCache(false);
        enhancer11.setUseFactory(false);
        enhancer11.setInterceptDuringConstruction(false);
        enhancer11.setAttemptLoad(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy28 = enhancer11.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setUseFactory(true);
        enhancer29.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer34 = new org.mockito.cglib.proxy.Enhancer();
        enhancer34.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        java.lang.Class<?> wildcardClass39 = classAdapter38.getClass();
        java.lang.String str40 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        java.lang.Class<?> wildcardClass43 = classAdapter42.getClass();
        java.lang.String str44 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass43);
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        java.lang.Class<?> wildcardClass47 = classAdapter46.getClass();
        java.lang.String str48 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        java.lang.Class<?> wildcardClass51 = classAdapter50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Class[] classArray53 = new java.lang.Class[] { wildcardClass39, wildcardClass43, wildcardClass47, wildcardClass51 };
        enhancer34.setInterfaces(classArray53);
        enhancer29.setInterfaces(classArray53);
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        java.lang.Class<?> wildcardClass58 = classAdapter57.getClass();
        java.lang.String str59 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass58);
        java.lang.String str60 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass58);
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        java.lang.Class<?> wildcardClass63 = classAdapter62.getClass();
        boolean boolean64 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass63);
        java.lang.Class[] classArray66 = new java.lang.Class[] { wildcardClass58, wildcardClass63 };
        enhancer29.setInterfaces(classArray66);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy68 = enhancer29.getStrategy();
        java.lang.Class<?> wildcardClass69 = enhancer29.getClass();
        boolean boolean70 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass69);
        enhancer11.setSuperclass((java.lang.Class) wildcardClass69);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitLdcInsn((java.lang.Object) wildcardClass69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy28);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str40, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str44, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str48, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str59, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str60, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(generatorStrategy68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test04438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04438");
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        java.lang.Class<?> wildcardClass3 = classAdapter2.getClass();
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass3);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        java.lang.String str7 = type6.getInternalName();
        java.lang.String str8 = type6.getInternalName();
        org.mockito.cglib.core.Signature signature12 = new org.mockito.cglib.core.Signature("org/mockito/asm/ClassAdapter", "L1933965693");
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        java.lang.Class<?> wildcardClass15 = classAdapter14.getClass();
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        boolean boolean17 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass15);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass15);
        boolean boolean19 = signature12.equals((java.lang.Object) type18);
        int int21 = type18.getOpcode(97);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local25 = new org.mockito.cglib.core.Local(0, type24);
        int int26 = type24.getSort();
        java.lang.String str27 = type24.getClassName();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local31 = new org.mockito.cglib.core.Local(0, type30);
        org.mockito.cglib.core.Local local32 = new org.mockito.cglib.core.Local((int) (byte) 100, type30);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        boolean boolean40 = type37.equals((java.lang.Object) classVisitor38);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str42 = type41.getDescriptor();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        boolean boolean48 = type45.equals((java.lang.Object) classVisitor46);
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type36, type37, type41, type43, type44, type45 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray49);
        org.mockito.cglib.core.Signature signature51 = new org.mockito.cglib.core.Signature("L1057808593", type34, typeArray49);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray49);
        org.mockito.cglib.core.Signature signature53 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type24, typeArray49);
        org.mockito.asm.Type[] typeArray54 = signature53.getArgumentTypes();
        org.mockito.asm.Type type55 = signature53.getReturnType();
        org.mockito.asm.Type[] typeArray56 = signature53.getArgumentTypes();
        org.mockito.cglib.core.Signature signature57 = new org.mockito.cglib.core.Signature("L1511286124", type18, typeArray56);
        org.mockito.cglib.core.Signature signature60 = new org.mockito.cglib.core.Signature("", "Z");
        org.mockito.asm.Type type61 = signature60.getReturnType();
        java.lang.String str62 = type61.getClassName();
        org.mockito.cglib.proxy.Enhancer enhancer63 = new org.mockito.cglib.proxy.Enhancer();
        enhancer63.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback66 = null;
        enhancer63.setCallback(callback66);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter68 = null;
        enhancer63.setCallbackFilter(callbackFilter68);
        org.mockito.cglib.proxy.Callback callback70 = null;
        enhancer63.setCallback(callback70);
        org.mockito.cglib.core.NamingPolicy namingPolicy72 = enhancer63.getNamingPolicy();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local75 = new org.mockito.cglib.core.Local(0, type74);
        int int76 = type74.getSort();
        java.lang.String str77 = type74.getClassName();
        java.lang.String str78 = type74.getClassName();
        boolean boolean79 = namingPolicy72.equals((java.lang.Object) type74);
        java.lang.String str80 = type74.getDescriptor();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int82 = type81.getSort();
        java.lang.String str83 = type81.getDescriptor();
        org.mockito.asm.Type[] typeArray85 = org.mockito.asm.Type.getArgumentTypes("(VZVDDZ)Z");
        java.lang.String str86 = org.mockito.asm.Type.getMethodDescriptor(type81, typeArray85);
        boolean boolean87 = type74.equals((java.lang.Object) typeArray85);
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray85);
        boolean boolean89 = signature57.equals((java.lang.Object) typeArray85);
        org.mockito.cglib.core.Signature signature90 = new org.mockito.cglib.core.Signature("L1324289057", type6, typeArray85);
        java.lang.String str91 = type6.getDescriptor();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str4, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str5, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str7, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str8, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 101 + "'", int21 == 101);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "double" + "'", str27, "double");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "V" + "'", str42, "V");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(VZVDDZ)V" + "'", str50, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(VZVDDZ)D" + "'", str52, "(VZVDDZ)D");
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "boolean" + "'", str62, "boolean");
        org.junit.Assert.assertNotNull(namingPolicy72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 8 + "'", int76 == 8);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "double" + "'", str77, "double");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "double" + "'", str78, "double");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "D" + "'", str80, "D");
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Z" + "'", str83, "Z");
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(VZVDDZ)Z" + "'", str86, "(VZVDDZ)Z");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(VZVDDZ)Z" + "'", str88, "(VZVDDZ)Z");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str91, "Lorg/mockito/asm/ClassAdapter;");
    }

    @Test
    public void test04439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04439");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer12.setCallback(callback15);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer12.setCallback(callback17);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy19 = enhancer12.getStrategy();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        boolean boolean21 = generatorStrategy19.equals((java.lang.Object) label20);
        java.lang.String str22 = label20.toString();
        java.lang.Object obj23 = label20.info;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitLabel(label20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1121919115" + "'", str22, "L1121919115");
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test04440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04440");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(false);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy11 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer0.setCallbackFilter(callbackFilter12);
        enhancer0.setUseCache(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy11);
    }

    @Test
    public void test04441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04441");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = 10.0f;
        java.lang.String str3 = label0.toString();
        java.lang.String str4 = label0.toString();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback6 = null;
        enhancer5.setCallback(callback6);
        enhancer5.setInterceptDuringConstruction(true);
        boolean boolean10 = enhancer5.getAttemptLoad();
        enhancer5.setUseFactory(true);
        enhancer5.setInterceptDuringConstruction(true);
        label0.info = true;
        org.mockito.asm.MethodVisitor methodVisitor18 = null;
        org.mockito.asm.MethodAdapter methodAdapter19 = new org.mockito.asm.MethodAdapter(methodVisitor18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.asm.MethodAdapter methodAdapter23 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        label0.info = localVariablesSorter24;
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter26 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter24);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter26.visitMultiANewArrayInsn("L31023468", 118);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L2030255002" + "'", str3, "L2030255002");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L2030255002" + "'", str4, "L2030255002");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test04442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04442");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        label0.info = 10.0f;
        java.lang.String str3 = label0.toString();
        java.lang.String str4 = label0.toString();
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback6 = null;
        enhancer5.setCallback(callback6);
        enhancer5.setInterceptDuringConstruction(true);
        boolean boolean10 = enhancer5.getAttemptLoad();
        enhancer5.setUseFactory(true);
        enhancer5.setInterceptDuringConstruction(true);
        label0.info = true;
        org.mockito.asm.MethodVisitor methodVisitor18 = null;
        org.mockito.asm.MethodAdapter methodAdapter19 = new org.mockito.asm.MethodAdapter(methodVisitor18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter19);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter21 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.asm.MethodAdapter methodAdapter23 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter24 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        label0.info = localVariablesSorter24;
        org.mockito.asm.MethodAdapter methodAdapter26 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter24);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter24.visitVarInsn((int) '4', 101);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L414028255" + "'", str3, "L414028255");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "L414028255" + "'", str4, "L414028255");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test04443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04443");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor29);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classAdapter31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter44.getClassInfo();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer47.setCallback(callback52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer47.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer47.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor57);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        boolean boolean61 = namingPolicy55.equals((java.lang.Object) classAdapter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter59);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor66);
        classEmitter65.setTarget((org.mockito.asm.ClassVisitor) classAdapter68);
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo71 = classEmitter70.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter70.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        classEmitter65.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        org.mockito.cglib.core.ClassInfo classInfo75 = classEmitter72.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo77 = classEmitter76.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter76);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter76);
        classEmitter72.setTarget((org.mockito.asm.ClassVisitor) classEmitter79);
        org.mockito.cglib.core.ClassEmitter classEmitter81 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo82 = classEmitter81.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter81);
        classEmitter72.setTarget((org.mockito.asm.ClassVisitor) classEmitter81);
        org.mockito.cglib.core.ClassInfo classInfo85 = classEmitter81.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter86 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter81);
        org.mockito.asm.ClassAdapter classAdapter87 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter81);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classAdapter87);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.AnnotationVisitor annotationVisitor91 = classAdapter87.visitAnnotation("L292396852", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(classInfo71);
        org.junit.Assert.assertNull(classInfo75);
        org.junit.Assert.assertNull(classInfo77);
        org.junit.Assert.assertNull(classInfo82);
        org.junit.Assert.assertNull(classInfo85);
    }

    @Test
    public void test04444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04444");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter16.getClassInfo();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local27 = new org.mockito.cglib.core.Local(0, type26);
        int int28 = type26.getSort();
        java.lang.String str29 = type26.getClassName();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local33 = new org.mockito.cglib.core.Local(0, type32);
        org.mockito.cglib.core.Local local34 = new org.mockito.cglib.core.Local((int) (byte) 100, type32);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor40 = null;
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor40);
        boolean boolean42 = type39.equals((java.lang.Object) classVisitor40);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str44 = type43.getDescriptor();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type46 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor48 = null;
        org.mockito.asm.ClassAdapter classAdapter49 = new org.mockito.asm.ClassAdapter(classVisitor48);
        boolean boolean50 = type47.equals((java.lang.Object) classVisitor48);
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type38, type39, type43, type45, type46, type47 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray51);
        org.mockito.cglib.core.Signature signature53 = new org.mockito.cglib.core.Signature("L1057808593", type36, typeArray51);
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray51);
        org.mockito.cglib.core.Signature signature55 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type26, typeArray51);
        java.lang.String str56 = signature55.toString();
        java.lang.String str57 = signature55.toString();
        org.mockito.asm.Type type58 = signature55.getReturnType();
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback62 = null;
        enhancer59.setCallback(callback62);
        enhancer59.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass66 = enhancer59.getClass();
        java.lang.String str67 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass66);
        java.lang.String str68 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass66);
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.String str70 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass66);
        boolean boolean71 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass66);
        java.lang.String str72 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass66);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass66);
        boolean boolean74 = signature55.equals((java.lang.Object) wildcardClass66);
        org.mockito.cglib.proxy.Enhancer enhancer75 = new org.mockito.cglib.proxy.Enhancer();
        enhancer75.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback78 = null;
        enhancer75.setCallback(callback78);
        enhancer75.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy82 = enhancer75.getNamingPolicy();
        org.mockito.asm.Label label83 = new org.mockito.asm.Label();
        java.lang.String str84 = label83.toString();
        boolean boolean85 = namingPolicy82.equals((java.lang.Object) str84);
        boolean boolean87 = namingPolicy82.equals((java.lang.Object) 1);
        org.mockito.asm.Type[] typeArray89 = org.mockito.asm.Type.getArgumentTypes("(VZVDDZ)J");
        boolean boolean90 = namingPolicy82.equals((java.lang.Object) typeArray89);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.cglib.core.CodeEmitter codeEmitter91 = classEmitter16.begin_method(100, signature55, typeArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@55c5d68a");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "double" + "'", str29, "double");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "V" + "'", str44, "V");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(VZVDDZ)V" + "'", str52, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(VZVDDZ)D" + "'", str54, "(VZVDDZ)D");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Lorg/mockito/asm/ClassAdapter;(VZVDDZ)D" + "'", str56, "Lorg/mockito/asm/ClassAdapter;(VZVDDZ)D");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Lorg/mockito/asm/ClassAdapter;(VZVDDZ)D" + "'", str57, "Lorg/mockito/asm/ClassAdapter;(VZVDDZ)D");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str67, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str68, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str70, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str72, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(namingPolicy82);
// flaky:         org.junit.Assert.assertEquals("'" + str84 + "' != '" + "L491067688" + "'", str84, "L491067688");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test04445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04445");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        boolean boolean21 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer0.setCallback(callback22);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer26.setCallback(callback29);
        org.mockito.cglib.proxy.Callback callback31 = null;
        enhancer26.setCallback(callback31);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy33 = enhancer26.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy34 = enhancer26.getNamingPolicy();
        enhancer26.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer26.setCallback(callback37);
        java.lang.ClassLoader classLoader39 = enhancer26.getClassLoader();
        enhancer0.setClassLoader(classLoader39);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy42 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter43 = null;
        enhancer0.setCallbackFilter(callbackFilter43);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter45.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter49 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor50);
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor50);
        classEmitter49.setTarget((org.mockito.asm.ClassVisitor) classAdapter52);
        org.mockito.cglib.core.ClassEmitter classEmitter54 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo55 = classEmitter54.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter54.setTarget((org.mockito.asm.ClassVisitor) classEmitter56);
        classEmitter49.setTarget((org.mockito.asm.ClassVisitor) classEmitter56);
        org.mockito.cglib.core.ClassInfo classInfo59 = classEmitter56.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo61 = classEmitter60.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        org.mockito.cglib.core.ClassEmitter classEmitter63 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classEmitter63);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo66 = classEmitter65.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter67 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter65);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classEmitter65);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter65);
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter69);
        classEmitter48.setTarget((org.mockito.asm.ClassVisitor) classEmitter70);
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter70);
        org.mockito.cglib.core.ClassInfo classInfo73 = classEmitter70.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter74 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter70);
        org.mockito.cglib.core.ClassEmitter classEmitter75 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor76 = null;
        org.mockito.asm.ClassAdapter classAdapter77 = new org.mockito.asm.ClassAdapter(classVisitor76);
        org.mockito.asm.ClassAdapter classAdapter78 = new org.mockito.asm.ClassAdapter(classVisitor76);
        classEmitter75.setTarget((org.mockito.asm.ClassVisitor) classAdapter78);
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo81 = classEmitter80.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter82 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter80.setTarget((org.mockito.asm.ClassVisitor) classEmitter82);
        classEmitter75.setTarget((org.mockito.asm.ClassVisitor) classEmitter82);
        classEmitter70.setTarget((org.mockito.asm.ClassVisitor) classEmitter82);
        org.mockito.cglib.core.ClassEmitter classEmitter86 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter70);
        org.mockito.asm.ClassAdapter classAdapter87 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter86);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classAdapter87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(generatorStrategy33);
        org.junit.Assert.assertNotNull(namingPolicy34);
        org.junit.Assert.assertNotNull(classLoader39);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(namingPolicy42);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNull(classInfo55);
        org.junit.Assert.assertNull(classInfo59);
        org.junit.Assert.assertNull(classInfo61);
        org.junit.Assert.assertNull(classInfo66);
        org.junit.Assert.assertNull(classInfo73);
        org.junit.Assert.assertNull(classInfo81);
    }

    @Test
    public void test04446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04446");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor18);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classAdapter20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter17.getClassInfo();
        classEmitter14.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor32);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classAdapter34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor37);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classAdapter39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter41.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter41.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer47.setCallback(callback52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer47.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer47.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor57);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        boolean boolean61 = namingPolicy55.equals((java.lang.Object) classAdapter59);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter17.visitInnerClass("L1992547009", "L1310157839", "L61754180", 154);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertNull(classInfo42);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test04447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04447");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.asm.MethodAdapter methodAdapter7 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter4);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer10.setCallback(callback11);
        java.lang.Class<?> wildcardClass13 = enhancer10.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type16 = type15.getElementType();
        int int17 = type16.getSort();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo19 = classEmitter18.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter18.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        boolean boolean27 = type16.equals((java.lang.Object) classEmitter26);
        java.lang.String str28 = type16.toString();
        int int29 = type16.getSort();
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter9.visitLdcInsn((java.lang.Object) int29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str14, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNull(classInfo19);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lg/mockito/cglib/proxy/Enhancer;" + "'", str28, "Lg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
    }

    @Test
    public void test04448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04448");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor2 = null;
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor2);
        boolean boolean4 = type1.equals((java.lang.Object) classVisitor2);
        int int6 = type1.getOpcode(116);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        boolean boolean12 = type9.equals((java.lang.Object) classVisitor10);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str14 = type13.getDescriptor();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        boolean boolean20 = type17.equals((java.lang.Object) classVisitor18);
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type8, type9, type13, type15, type16, type17 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray21);
        org.mockito.cglib.core.Signature signature23 = new org.mockito.cglib.core.Signature("V", type1, typeArray21);
        int int25 = type1.getOpcode((-1));
        int int27 = type1.getOpcode((int) 'a');
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        java.lang.Class<?> wildcardClass30 = classAdapter29.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass30);
        boolean boolean34 = type1.equals((java.lang.Object) type33);
        int int35 = type33.getSort();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        boolean boolean43 = type40.equals((java.lang.Object) classVisitor41);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.getDescriptor();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        boolean boolean51 = type48.equals((java.lang.Object) classVisitor49);
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type39, type40, type44, type46, type47, type48 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray52);
        org.mockito.cglib.core.Signature signature54 = new org.mockito.cglib.core.Signature("L1057808593", type37, typeArray52);
        org.mockito.asm.Type[] typeArray55 = signature54.getArgumentTypes();
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray55);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 116 + "'", int6 == 116);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "V" + "'", str14, "V");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(VZVDDZ)V" + "'", str22, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 97 + "'", int27 == 97);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str31, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(VZVDDZ)V" + "'", str53, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;" + "'", str56, "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;");
    }

    @Test
    public void test04449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04449");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor5 = null;
        org.mockito.asm.ClassAdapter classAdapter6 = new org.mockito.asm.ClassAdapter(classVisitor5);
        org.mockito.asm.ClassAdapter classAdapter7 = new org.mockito.asm.ClassAdapter(classVisitor5);
        classEmitter4.setTarget((org.mockito.asm.ClassVisitor) classAdapter7);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter9.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter4.setTarget((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassInfo classInfo14 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        classEmitter11.setTarget((org.mockito.asm.ClassVisitor) classEmitter18);
        org.mockito.cglib.core.ClassEmitter classEmitter20 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo21 = classEmitter20.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        classEmitter11.setTarget((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter20);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter3.setTarget((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter25.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter25);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter30);
        java.lang.Class<?> wildcardClass32 = classEmitter30.getClass();
        boolean boolean33 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass32);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        boolean boolean40 = type37.equals((java.lang.Object) classVisitor38);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str42 = type41.getDescriptor();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        boolean boolean48 = type45.equals((java.lang.Object) classVisitor46);
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type36, type37, type41, type43, type44, type45 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray49);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray49);
        org.mockito.asm.Type type52 = type34.getElementType();
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo14);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo21);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "V" + "'", str42, "V");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(VZVDDZ)V" + "'", str50, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(VZVDDZ)Lorg/mockito/cglib/core/ClassEmitter;" + "'", str51, "(VZVDDZ)Lorg/mockito/cglib/core/ClassEmitter;");
        org.junit.Assert.assertNotNull(type52);
    }

    @Test
    public void test04450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04450");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.proxy.Enhancer enhancer13 = new org.mockito.cglib.proxy.Enhancer();
        enhancer13.setUseFactory(true);
        enhancer13.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback18 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray19 = new org.mockito.cglib.proxy.Callback[] { callback18 };
        enhancer13.setCallbacks(callbackArray19);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter21 = null;
        enhancer13.setCallbackFilter(callbackFilter21);
        enhancer13.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer13.setCallback(callback25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BYTE_TYPE;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor30 = null;
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor30);
        boolean boolean32 = type29.equals((java.lang.Object) classVisitor30);
        int int34 = type29.getOpcode(116);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        boolean boolean40 = type37.equals((java.lang.Object) classVisitor38);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str42 = type41.getDescriptor();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        boolean boolean48 = type45.equals((java.lang.Object) classVisitor46);
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type36, type37, type41, type43, type44, type45 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray49);
        org.mockito.cglib.core.Signature signature51 = new org.mockito.cglib.core.Signature("V", type29, typeArray49);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray49);
        java.lang.String str53 = type27.toString();
        java.lang.String str54 = type27.getClassName();
        java.lang.Class<?> wildcardClass55 = type27.getClass();
        java.lang.String str56 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass55);
        java.lang.String str57 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass55);
        enhancer13.setSuperclass((java.lang.Class) wildcardClass55);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter10.visitLdcInsn((java.lang.Object) enhancer13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray19);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 116 + "'", int34 == 116);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "V" + "'", str42, "V");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(VZVDDZ)V" + "'", str50, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(VZVDDZ)B" + "'", str52, "(VZVDDZ)B");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "B" + "'", str53, "B");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "byte" + "'", str54, "byte");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/asm/Type" + "'", str56, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str57, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test04451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04451");
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer1.setCallback(callback4);
        enhancer1.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer1.getNamingPolicy();
        enhancer1.setSerialVersionUID((java.lang.Long) 100L);
        enhancer1.setInterceptDuringConstruction(true);
        enhancer1.setUseFactory(false);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        java.lang.String str18 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass17);
        boolean boolean19 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass17);
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass17);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass17);
        java.lang.String str23 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass17);
        enhancer1.setSuperclass((java.lang.Class) wildcardClass17);
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass17);
        java.lang.String str26 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass17);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass17);
        org.mockito.asm.Type type28 = type27.getElementType();
        org.mockito.cglib.core.Local local29 = new org.mockito.cglib.core.Local(139, type27);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer30.setCallback(callback33);
        enhancer30.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer30.getNamingPolicy();
        boolean boolean39 = namingPolicy37.equals((java.lang.Object) "(VZVDDZ)B");
        boolean boolean40 = type27.equals((java.lang.Object) boolean39);
        int int41 = type27.getSort();
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str18, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str21, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str23, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str25, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str26, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
    }

    @Test
    public void test04452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04452");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.asm.MethodAdapter methodAdapter9 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter8);
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        java.lang.String str12 = label11.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        label11.info = label13;
        java.lang.Object obj15 = label13.info;
        java.lang.String str16 = label13.toString();
        java.lang.Object obj17 = label13.info;
        label13.info = "[Ljava/lang/Class;";
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.String str24 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass22);
        java.lang.String str25 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass22);
        label13.info = str25;
        java.lang.Object obj27 = label13.info;
        java.lang.Object obj28 = label13.info;
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer29.setCallback(callback32);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter34 = null;
        enhancer29.setCallbackFilter(callbackFilter34);
        enhancer29.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer29.getNamingPolicy();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter39 = null;
        enhancer29.setCallbackFilter(callbackFilter39);
        label13.info = callbackFilter39;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter9.visitLineNumber(108, label13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L74671381" + "'", str12, "L74671381");
        org.junit.Assert.assertNull(obj15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L1227163617" + "'", str16, "L1227163617");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str24, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str25, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", obj27, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", obj28, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(namingPolicy38);
    }

    @Test
    public void test04453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04453");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter12 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter11);
        org.mockito.asm.MethodAdapter methodAdapter13 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter12);
        org.mockito.asm.MethodAdapter methodAdapter14 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter13);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer16.setCallback(callback19);
        org.mockito.cglib.proxy.Callback callback21 = null;
        enhancer16.setCallback(callback21);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy23 = enhancer16.getStrategy();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        boolean boolean25 = generatorStrategy23.equals((java.lang.Object) label24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor27);
        classEmitter26.setTarget((org.mockito.asm.ClassVisitor) classAdapter29);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo32 = classEmitter31.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter33);
        classEmitter26.setTarget((org.mockito.asm.ClassVisitor) classEmitter33);
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter37.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter37);
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter40);
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter40.getClassInfo();
        label24.info = classEmitter40;
        label24.info = "L1446612185";
        java.lang.String str46 = label24.toString();
        java.lang.Object obj47 = label24.info;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter14.visitLineNumber(130, label24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(classInfo32);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo42);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "L1012243105" + "'", str46, "L1012243105");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "L1446612185" + "'", obj47, "L1446612185");
    }

    @Test
    public void test04454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04454");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback5 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray6 = new org.mockito.cglib.proxy.Callback[] { callback5 };
        enhancer0.setCallbacks(callbackArray6);
        boolean boolean8 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy9 = enhancer0.getStrategy();
        org.mockito.asm.MethodVisitor methodVisitor12 = null;
        org.mockito.asm.MethodAdapter methodAdapter13 = new org.mockito.asm.MethodAdapter(methodVisitor12);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter14 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter13);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter15 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter16 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter14);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter17 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter18 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter16);
        org.mockito.asm.MethodAdapter methodAdapter19 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter18);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter20 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter18);
        org.mockito.asm.MethodAdapter methodAdapter21 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter22 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter20);
        org.mockito.asm.MethodAdapter methodAdapter23 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter20);
        boolean boolean24 = generatorStrategy9.equals((java.lang.Object) methodAdapter23);
        org.mockito.asm.MethodVisitor methodVisitor27 = null;
        org.mockito.asm.MethodAdapter methodAdapter28 = new org.mockito.asm.MethodAdapter(methodVisitor27);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter29 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter28);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter30 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter29);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter31 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter29);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter32 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter31);
        org.mockito.asm.MethodAdapter methodAdapter33 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter31);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter34 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter31);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter35 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter34);
        boolean boolean36 = generatorStrategy9.equals((java.lang.Object) localVariablesSorter35);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter35.visitMultiANewArrayInsn("L414460466", 116);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(callbackArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(generatorStrategy9);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test04455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04455");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer12.setCallback(callback15);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter17 = null;
        enhancer12.setCallbackFilter(callbackFilter17);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer12.setCallback(callback19);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer12.getNamingPolicy();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local24 = new org.mockito.cglib.core.Local(0, type23);
        int int25 = type23.getSort();
        java.lang.String str26 = type23.getClassName();
        java.lang.String str27 = type23.getClassName();
        boolean boolean28 = namingPolicy21.equals((java.lang.Object) type23);
        enhancer11.setNamingPolicy(namingPolicy21);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer11.getNamingPolicy();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str32 = type31.getClassName();
        boolean boolean33 = namingPolicy30.equals((java.lang.Object) str32);
        enhancer0.setNamingPolicy(namingPolicy30);
        boolean boolean35 = enhancer0.getAttemptLoad();
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor38);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classAdapter40);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter42.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter42.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassInfo classInfo47 = classEmitter44.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo49 = classEmitter48.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter50 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter48);
        org.mockito.cglib.core.ClassEmitter classEmitter51 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter48);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter51);
        org.mockito.cglib.core.ClassEmitter classEmitter53 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo54 = classEmitter53.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter53);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter53);
        org.mockito.cglib.core.ClassEmitter classEmitter57 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        org.mockito.asm.ClassAdapter classAdapter60 = new org.mockito.asm.ClassAdapter(classVisitor58);
        classEmitter57.setTarget((org.mockito.asm.ClassVisitor) classAdapter60);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo63 = classEmitter62.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter64 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter62.setTarget((org.mockito.asm.ClassVisitor) classEmitter64);
        classEmitter57.setTarget((org.mockito.asm.ClassVisitor) classEmitter64);
        org.mockito.cglib.core.ClassInfo classInfo67 = classEmitter57.getClassInfo();
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classEmitter57);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor70 = null;
        org.mockito.asm.ClassAdapter classAdapter71 = new org.mockito.asm.ClassAdapter(classVisitor70);
        org.mockito.asm.ClassAdapter classAdapter72 = new org.mockito.asm.ClassAdapter(classVisitor70);
        classEmitter69.setTarget((org.mockito.asm.ClassVisitor) classAdapter72);
        org.mockito.cglib.core.ClassEmitter classEmitter74 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo75 = classEmitter74.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter74.setTarget((org.mockito.asm.ClassVisitor) classEmitter76);
        classEmitter69.setTarget((org.mockito.asm.ClassVisitor) classEmitter76);
        org.mockito.cglib.core.ClassInfo classInfo79 = classEmitter76.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter80 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo81 = classEmitter80.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter82 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter80);
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter80);
        classEmitter76.setTarget((org.mockito.asm.ClassVisitor) classEmitter83);
        org.mockito.cglib.core.ClassEmitter classEmitter85 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo86 = classEmitter85.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter87 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter85);
        classEmitter76.setTarget((org.mockito.asm.ClassVisitor) classEmitter85);
        org.mockito.asm.ClassAdapter classAdapter89 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter76);
        classEmitter57.setTarget((org.mockito.asm.ClassVisitor) classEmitter76);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classEmitter57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "double" + "'", str26, "double");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "double" + "'", str27, "double");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "double" + "'", str32, "double");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertNull(classInfo47);
        org.junit.Assert.assertNull(classInfo49);
        org.junit.Assert.assertNull(classInfo54);
        org.junit.Assert.assertNull(classInfo63);
        org.junit.Assert.assertNull(classInfo67);
        org.junit.Assert.assertNull(classInfo75);
        org.junit.Assert.assertNull(classInfo79);
        org.junit.Assert.assertNull(classInfo81);
        org.junit.Assert.assertNull(classInfo86);
    }

    @Test
    public void test04456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04456");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classAdapter12);
        boolean boolean14 = namingPolicy8.equals((java.lang.Object) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter15);
        java.lang.String[] strArray25 = new java.lang.String[] { "L87397716", "L2018944773", "L1188168107" };
        // The following exception was thrown during execution in test generation
        try {
            classEmitter16.visit(2, 137, "L1385026472", "L1524189912", "L942129555", strArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray25);
    }

    @Test
    public void test04457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04457");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        java.lang.Class<?> wildcardClass10 = classAdapter9.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass10, wildcardClass14, wildcardClass18, wildcardClass22 };
        enhancer5.setInterfaces(classArray24);
        enhancer0.setInterfaces(classArray24);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass29, wildcardClass34 };
        enhancer0.setInterfaces(classArray37);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy39 = enhancer0.getStrategy();
        org.mockito.cglib.proxy.Enhancer enhancer40 = new org.mockito.cglib.proxy.Enhancer();
        enhancer40.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer40.setCallback(callback43);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter45 = null;
        enhancer40.setCallbackFilter(callbackFilter45);
        org.mockito.cglib.proxy.Callback callback47 = null;
        enhancer40.setCallback(callback47);
        boolean boolean49 = enhancer40.getUseCache();
        boolean boolean50 = generatorStrategy39.equals((java.lang.Object) enhancer40);
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback54 = null;
        enhancer51.setCallback(callback54);
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer51.setCallback(callback56);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        enhancer58.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback61 = null;
        enhancer58.setCallback(callback61);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter63 = null;
        enhancer58.setCallbackFilter(callbackFilter63);
        org.mockito.cglib.proxy.Callback callback65 = null;
        enhancer58.setCallback(callback65);
        org.mockito.cglib.core.NamingPolicy namingPolicy67 = enhancer58.getNamingPolicy();
        enhancer51.setNamingPolicy(namingPolicy67);
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor69);
        java.lang.Class<?> wildcardClass71 = classAdapter70.getClass();
        enhancer51.setSuperclass((java.lang.Class) wildcardClass71);
        boolean boolean73 = enhancer51.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter74 = null;
        enhancer51.setCallbackFilter(callbackFilter74);
        enhancer51.setAttemptLoad(false);
        enhancer51.setSerialVersionUID((java.lang.Long) (-1L));
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray80 = generatorStrategy39.generate((org.mockito.cglib.core.ClassGenerator) enhancer51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str11, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str15, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str31, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(generatorStrategy39);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(namingPolicy67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test04458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04458");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        java.lang.Class<?> wildcardClass12 = classAdapter11.getClass();
        java.lang.String str13 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass12);
        org.mockito.asm.ClassVisitor classVisitor14 = null;
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor14);
        java.lang.Class<?> wildcardClass16 = classAdapter15.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass16);
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        java.lang.Class<?> wildcardClass20 = classAdapter19.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass20);
        org.mockito.asm.ClassVisitor classVisitor22 = null;
        org.mockito.asm.ClassAdapter classAdapter23 = new org.mockito.asm.ClassAdapter(classVisitor22);
        java.lang.Class<?> wildcardClass24 = classAdapter23.getClass();
        boolean boolean25 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass24);
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass12, wildcardClass16, wildcardClass20, wildcardClass24 };
        enhancer7.setInterfaces(classArray26);
        enhancer0.setInterfaces(classArray26);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer29.setCallback(callback32);
        enhancer29.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy36 = enhancer29.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy36);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer38.setCallback(callback41);
        org.mockito.cglib.proxy.Callback callback43 = null;
        enhancer38.setCallback(callback43);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer38.getNamingPolicy();
        boolean boolean46 = namingPolicy36.equals((java.lang.Object) namingPolicy45);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str49 = type48.getClassName();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local53 = new org.mockito.cglib.core.Local(0, type52);
        org.mockito.cglib.core.Local local54 = new org.mockito.cglib.core.Local((int) (byte) 100, type52);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        org.mockito.asm.ClassAdapter classAdapter61 = new org.mockito.asm.ClassAdapter(classVisitor60);
        boolean boolean62 = type59.equals((java.lang.Object) classVisitor60);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str64 = type63.getDescriptor();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor68 = null;
        org.mockito.asm.ClassAdapter classAdapter69 = new org.mockito.asm.ClassAdapter(classVisitor68);
        boolean boolean70 = type67.equals((java.lang.Object) classVisitor68);
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type58, type59, type63, type65, type66, type67 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray71);
        org.mockito.cglib.core.Signature signature73 = new org.mockito.cglib.core.Signature("L1057808593", type56, typeArray71);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray71);
        org.mockito.cglib.core.Signature signature75 = new org.mockito.cglib.core.Signature("L1346580404", type48, typeArray71);
        boolean boolean76 = namingPolicy36.equals((java.lang.Object) signature75);
        org.mockito.asm.MethodVisitor methodVisitor79 = null;
        org.mockito.asm.MethodAdapter methodAdapter80 = new org.mockito.asm.MethodAdapter(methodVisitor79);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter81 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter80);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter82 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter81);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter83 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter81);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter84 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter83);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter85 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter83);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter86 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter85);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter87 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter85);
        boolean boolean88 = namingPolicy36.equals((java.lang.Object) localVariablesSorter85);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter85.visitInsn(123);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str13, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str17, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str21, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(namingPolicy36);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "double" + "'", str49, "double");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "V" + "'", str64, "V");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(VZVDDZ)V" + "'", str72, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(VZVDDZ)D" + "'", str74, "(VZVDDZ)D");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test04459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04459");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        enhancer7.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy14);
        org.mockito.cglib.proxy.Enhancer enhancer16 = new org.mockito.cglib.proxy.Enhancer();
        enhancer16.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer16.setCallback(callback19);
        boolean boolean21 = enhancer16.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer22.setCallback(callback25);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter27 = null;
        enhancer22.setCallbackFilter(callbackFilter27);
        enhancer22.setSerialVersionUID((java.lang.Long) 0L);
        enhancer22.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer33 = new org.mockito.cglib.proxy.Enhancer();
        enhancer33.setUseFactory(true);
        enhancer33.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        java.lang.Class<?> wildcardClass43 = classAdapter42.getClass();
        java.lang.String str44 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass43);
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        java.lang.Class<?> wildcardClass47 = classAdapter46.getClass();
        java.lang.String str48 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        java.lang.Class<?> wildcardClass51 = classAdapter50.getClass();
        java.lang.String str52 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass51);
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.asm.ClassAdapter classAdapter54 = new org.mockito.asm.ClassAdapter(classVisitor53);
        java.lang.Class<?> wildcardClass55 = classAdapter54.getClass();
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass55);
        java.lang.Class[] classArray57 = new java.lang.Class[] { wildcardClass43, wildcardClass47, wildcardClass51, wildcardClass55 };
        enhancer38.setInterfaces(classArray57);
        enhancer33.setInterfaces(classArray57);
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        org.mockito.asm.ClassAdapter classAdapter61 = new org.mockito.asm.ClassAdapter(classVisitor60);
        java.lang.Class<?> wildcardClass62 = classAdapter61.getClass();
        java.lang.String str63 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass62);
        java.lang.String str64 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass62);
        org.mockito.asm.ClassVisitor classVisitor65 = null;
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor65);
        java.lang.Class<?> wildcardClass67 = classAdapter66.getClass();
        boolean boolean68 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass67);
        boolean boolean69 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass67);
        java.lang.Class[] classArray70 = new java.lang.Class[] { wildcardClass62, wildcardClass67 };
        enhancer33.setInterfaces(classArray70);
        java.lang.ClassLoader classLoader72 = enhancer33.getClassLoader();
        enhancer22.setClassLoader(classLoader72);
        enhancer16.setClassLoader(classLoader72);
        enhancer0.setClassLoader(classLoader72);
        boolean boolean76 = enhancer0.getUseCache();
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str44, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str48, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str52, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str63, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str64, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(classLoader72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test04460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04460");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo8 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.cglib.core.ClassInfo classInfo11 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo13 = classEmitter12.getClassInfo();
        java.lang.Class<?> wildcardClass14 = classEmitter12.getClass();
        boolean boolean15 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass14);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass14);
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer17.setCallback(callback20);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter22 = null;
        enhancer17.setCallbackFilter(callbackFilter22);
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer17.setCallback(callback24);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer26.setCallback(callback29);
        enhancer26.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass33 = enhancer26.getClass();
        enhancer17.setSuperclass((java.lang.Class) wildcardClass33);
        boolean boolean35 = enhancer17.getAttemptLoad();
        boolean boolean36 = enhancer17.getUseCache();
        java.lang.ClassLoader classLoader37 = enhancer17.getClassLoader();
        org.mockito.cglib.core.NamingPolicy namingPolicy38 = enhancer17.getNamingPolicy();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.BYTE_TYPE;
        int int40 = type39.getSize();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        boolean boolean45 = type42.equals((java.lang.Object) classVisitor43);
        int int47 = type42.getOpcode(116);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor51 = null;
        org.mockito.asm.ClassAdapter classAdapter52 = new org.mockito.asm.ClassAdapter(classVisitor51);
        boolean boolean53 = type50.equals((java.lang.Object) classVisitor51);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str55 = type54.getDescriptor();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor59 = null;
        org.mockito.asm.ClassAdapter classAdapter60 = new org.mockito.asm.ClassAdapter(classVisitor59);
        boolean boolean61 = type58.equals((java.lang.Object) classVisitor59);
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type49, type50, type54, type56, type57, type58 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray62);
        org.mockito.cglib.core.Signature signature64 = new org.mockito.cglib.core.Signature("V", type42, typeArray62);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray62);
        java.lang.Class<?> wildcardClass66 = typeArray62.getClass();
        boolean boolean67 = namingPolicy38.equals((java.lang.Object) typeArray62);
        enhancer0.setNamingPolicy(namingPolicy38);
        org.mockito.asm.MethodVisitor methodVisitor71 = null;
        org.mockito.asm.MethodAdapter methodAdapter72 = new org.mockito.asm.MethodAdapter(methodVisitor71);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter73 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter72);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter74 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter73);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter75 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter73);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter76 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter75);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter77 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter75);
        org.mockito.asm.MethodAdapter methodAdapter78 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter77);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter79 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter77);
        org.mockito.asm.MethodAdapter methodAdapter80 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter77);
        org.mockito.asm.MethodAdapter methodAdapter81 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter80);
        org.mockito.asm.MethodAdapter methodAdapter82 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter81);
        boolean boolean83 = namingPolicy38.equals((java.lang.Object) methodAdapter81);
        org.mockito.asm.Attribute attribute84 = null;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter81.visitAttribute(attribute84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo8);
        org.junit.Assert.assertNull(classInfo11);
        org.junit.Assert.assertNull(classInfo13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(classLoader37);
        org.junit.Assert.assertNotNull(namingPolicy38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 116 + "'", int47 == 116);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "V" + "'", str55, "V");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(VZVDDZ)V" + "'", str63, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(VZVDDZ)B" + "'", str65, "(VZVDDZ)B");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test04461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04461");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter8 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter10 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter6);
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        java.lang.String str14 = label13.toString();
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        label13.info = label15;
        java.lang.String str17 = label13.toString();
        java.lang.String str18 = label13.toString();
        java.lang.String str19 = label13.toString();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        java.lang.String str21 = label20.toString();
        org.mockito.asm.Label label22 = new org.mockito.asm.Label();
        label20.info = label22;
        java.lang.String str24 = label20.toString();
        java.lang.String str25 = label20.toString();
        label13.info = label20;
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor28);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classAdapter30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassInfo classInfo37 = classEmitter34.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo39 = classEmitter38.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter40 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter38);
        classEmitter34.setTarget((org.mockito.asm.ClassVisitor) classEmitter41);
        label13.info = classEmitter41;
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback47 = null;
        enhancer44.setCallback(callback47);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter49 = null;
        enhancer44.setCallbackFilter(callbackFilter49);
        org.mockito.cglib.proxy.Callback callback51 = null;
        enhancer44.setCallback(callback51);
        org.mockito.cglib.core.NamingPolicy namingPolicy53 = enhancer44.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer54 = new org.mockito.cglib.proxy.Enhancer();
        enhancer54.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback57 = null;
        enhancer54.setCallback(callback57);
        org.mockito.cglib.proxy.Callback callback59 = null;
        enhancer54.setCallback(callback59);
        org.mockito.cglib.proxy.Enhancer enhancer61 = new org.mockito.cglib.proxy.Enhancer();
        enhancer61.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback64 = null;
        enhancer61.setCallback(callback64);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter66 = null;
        enhancer61.setCallbackFilter(callbackFilter66);
        org.mockito.cglib.proxy.Callback callback68 = null;
        enhancer61.setCallback(callback68);
        org.mockito.cglib.core.NamingPolicy namingPolicy70 = enhancer61.getNamingPolicy();
        enhancer54.setNamingPolicy(namingPolicy70);
        org.mockito.asm.ClassVisitor classVisitor72 = null;
        org.mockito.asm.ClassAdapter classAdapter73 = new org.mockito.asm.ClassAdapter(classVisitor72);
        java.lang.Class<?> wildcardClass74 = classAdapter73.getClass();
        enhancer54.setSuperclass((java.lang.Class) wildcardClass74);
        enhancer44.setSuperclass((java.lang.Class) wildcardClass74);
        enhancer44.setUseCache(true);
        enhancer44.setAttemptLoad(false);
        enhancer44.setAttemptLoad(true);
        org.mockito.asm.ClassVisitor classVisitor83 = null;
        org.mockito.asm.ClassAdapter classAdapter84 = new org.mockito.asm.ClassAdapter(classVisitor83);
        java.lang.Class<?> wildcardClass85 = classAdapter84.getClass();
        boolean boolean86 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass85);
        boolean boolean87 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass85);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass85);
        java.lang.String str89 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass85);
        java.lang.String str90 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass85);
        enhancer44.setSuperclass((java.lang.Class) wildcardClass85);
        label13.info = wildcardClass85;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter6.visitLineNumber(154, label13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L649755452" + "'", str14, "L649755452");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L649755452" + "'", str17, "L649755452");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L649755452" + "'", str18, "L649755452");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L649755452" + "'", str19, "L649755452");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1280227615" + "'", str21, "L1280227615");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "L1280227615" + "'", str24, "L1280227615");
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L1280227615" + "'", str25, "L1280227615");
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo37);
        org.junit.Assert.assertNull(classInfo39);
        org.junit.Assert.assertNotNull(namingPolicy53);
        org.junit.Assert.assertNotNull(namingPolicy70);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str89, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str90, "Lorg/mockito/asm/ClassAdapter;");
    }

    @Test
    public void test04462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04462");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setAttemptLoad(false);
        boolean boolean7 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer0.setCallback(callback8);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test04463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04463");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback11 = null;
        enhancer8.setCallback(callback11);
        enhancer8.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy15 = enhancer8.getNamingPolicy();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        java.lang.String str17 = label16.toString();
        boolean boolean18 = namingPolicy15.equals((java.lang.Object) str17);
        java.lang.Object obj19 = null;
        boolean boolean20 = namingPolicy15.equals(obj19);
        org.mockito.cglib.proxy.Enhancer enhancer21 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer21.setCallback(callback22);
        org.mockito.cglib.proxy.Callback callback24 = null;
        enhancer21.setCallback(callback24);
        enhancer21.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = enhancer21.getNamingPolicy();
        boolean boolean30 = namingPolicy28.equals((java.lang.Object) (byte) 100);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor32);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classAdapter34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo37 = classEmitter36.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter38);
        org.mockito.cglib.core.ClassInfo classInfo41 = classEmitter38.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo43 = classEmitter42.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter47 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter45);
        org.mockito.cglib.core.ClassEmitter classEmitter48 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter47);
        boolean boolean49 = namingPolicy28.equals((java.lang.Object) classEmitter48);
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        classEmitter48.setTarget(classVisitor50);
        boolean boolean52 = namingPolicy15.equals((java.lang.Object) classEmitter48);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter7.visitLdcInsn((java.lang.Object) boolean52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy15);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L396037481" + "'", str17, "L396037481");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(namingPolicy28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(classInfo37);
        org.junit.Assert.assertNull(classInfo41);
        org.junit.Assert.assertNull(classInfo43);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test04464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04464");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer15.setCallback(callback18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer15.setCallback(callback20);
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer22.setCallback(callback25);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter27 = null;
        enhancer22.setCallbackFilter(callbackFilter27);
        org.mockito.cglib.proxy.Callback callback29 = null;
        enhancer22.setCallback(callback29);
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer22.getNamingPolicy();
        enhancer15.setNamingPolicy(namingPolicy31);
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        java.lang.Class<?> wildcardClass35 = classAdapter34.getClass();
        enhancer15.setSuperclass((java.lang.Class) wildcardClass35);
        boolean boolean37 = enhancer15.getAttemptLoad();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter38 = null;
        enhancer15.setCallbackFilter(callbackFilter38);
        enhancer15.setAttemptLoad(false);
        enhancer15.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.Enhancer enhancer44 = new org.mockito.cglib.proxy.Enhancer();
        enhancer44.setUseFactory(true);
        enhancer44.setInterceptDuringConstruction(true);
        enhancer44.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Enhancer enhancer51 = new org.mockito.cglib.proxy.Enhancer();
        enhancer51.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback54 = null;
        enhancer51.setCallback(callback54);
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer51.setCallback(callback56);
        org.mockito.cglib.proxy.Enhancer enhancer58 = new org.mockito.cglib.proxy.Enhancer();
        enhancer58.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor61 = null;
        org.mockito.asm.ClassAdapter classAdapter62 = new org.mockito.asm.ClassAdapter(classVisitor61);
        java.lang.Class<?> wildcardClass63 = classAdapter62.getClass();
        java.lang.String str64 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass63);
        org.mockito.asm.ClassVisitor classVisitor65 = null;
        org.mockito.asm.ClassAdapter classAdapter66 = new org.mockito.asm.ClassAdapter(classVisitor65);
        java.lang.Class<?> wildcardClass67 = classAdapter66.getClass();
        java.lang.String str68 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass67);
        org.mockito.asm.ClassVisitor classVisitor69 = null;
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter(classVisitor69);
        java.lang.Class<?> wildcardClass71 = classAdapter70.getClass();
        java.lang.String str72 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass71);
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor73);
        java.lang.Class<?> wildcardClass75 = classAdapter74.getClass();
        boolean boolean76 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass75);
        java.lang.Class[] classArray77 = new java.lang.Class[] { wildcardClass63, wildcardClass67, wildcardClass71, wildcardClass75 };
        enhancer58.setInterfaces(classArray77);
        enhancer51.setInterfaces(classArray77);
        enhancer44.setInterfaces(classArray77);
        enhancer15.setInterfaces(classArray77);
        org.mockito.cglib.core.Signature signature85 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        boolean boolean87 = signature85.equals((java.lang.Object) "(VZVDDZ)B");
        org.mockito.asm.Type[] typeArray88 = signature85.getArgumentTypes();
        org.mockito.asm.Type type89 = signature85.getReturnType();
        java.lang.String str90 = signature85.getName();
        org.mockito.asm.Type[] typeArray91 = signature85.getArgumentTypes();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter11.visitFrame(137, 163, (java.lang.Object[]) classArray77, 32, (java.lang.Object[]) typeArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str64, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str68, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str72, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Z" + "'", str90, "Z");
        org.junit.Assert.assertNotNull(typeArray91);
    }

    @Test
    public void test04465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04465");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classAdapter12);
        boolean boolean14 = namingPolicy8.equals((java.lang.Object) classAdapter12);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        enhancer15.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback20 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray21 = new org.mockito.cglib.proxy.Callback[] { callback20 };
        enhancer15.setCallbacks(callbackArray21);
        boolean boolean23 = enhancer15.getAttemptLoad();
        boolean boolean24 = namingPolicy8.equals((java.lang.Object) enhancer15);
        enhancer15.setUseFactory(true);
        enhancer15.setAttemptLoad(false);
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(callbackArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test04466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04466");
        org.mockito.asm.MethodVisitor methodVisitor0 = null;
        org.mockito.asm.MethodAdapter methodAdapter1 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter2 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor0);
        org.mockito.asm.MethodAdapter methodAdapter4 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.asm.MethodAdapter methodAdapter5 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) methodAdapter4);
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        java.lang.String str10 = label9.toString();
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        label9.info = label11;
        java.lang.String str13 = label9.toString();
        java.lang.String str14 = label9.toString();
        java.lang.String str15 = label9.toString();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        java.lang.String str17 = label16.toString();
        org.mockito.asm.Label label18 = new org.mockito.asm.Label();
        label16.info = label18;
        java.lang.String str20 = label16.toString();
        java.lang.String str21 = label16.toString();
        label9.info = label16;
        java.lang.String str23 = label16.toString();
        java.lang.Object obj24 = label16.info;
        org.mockito.asm.Label label25 = new org.mockito.asm.Label();
        java.lang.Object obj26 = label25.info;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        int int28 = type27.getSort();
        label25.info = type27;
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer30.setCallback(callback33);
        enhancer30.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy37 = enhancer30.getNamingPolicy();
        boolean boolean39 = namingPolicy37.equals((java.lang.Object) 5);
        label25.info = boolean39;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        boolean boolean46 = type43.equals((java.lang.Object) classVisitor44);
        int int48 = type43.getOpcode(116);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        boolean boolean54 = type51.equals((java.lang.Object) classVisitor52);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str56 = type55.getDescriptor();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor60 = null;
        org.mockito.asm.ClassAdapter classAdapter61 = new org.mockito.asm.ClassAdapter(classVisitor60);
        boolean boolean62 = type59.equals((java.lang.Object) classVisitor60);
        org.mockito.asm.Type[] typeArray63 = new org.mockito.asm.Type[] { type50, type51, type55, type57, type58, type59 };
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray63);
        org.mockito.cglib.core.Signature signature65 = new org.mockito.cglib.core.Signature("V", type43, typeArray63);
        org.mockito.cglib.core.Local local66 = new org.mockito.cglib.core.Local(100, type43);
        int int67 = type43.getSort();
        int int68 = type43.getSize();
        label25.info = type43;
        java.lang.Object obj70 = label25.info;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter4.visitLocalVariable("L885269621", "L2003961302", "L1127612587", label16, label25, 36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L533159918" + "'", str10, "L533159918");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L533159918" + "'", str13, "L533159918");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L533159918" + "'", str14, "L533159918");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L533159918" + "'", str15, "L533159918");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L1379444305" + "'", str17, "L1379444305");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "L1379444305" + "'", str20, "L1379444305");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "L1379444305" + "'", str21, "L1379444305");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1379444305" + "'", str23, "L1379444305");
        org.junit.Assert.assertNotNull(obj24);
// flaky:         org.junit.Assert.assertEquals(obj24.toString(), "L314429657");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "L314429657");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "L314429657");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(namingPolicy37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 116 + "'", int48 == 116);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "V" + "'", str56, "V");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(VZVDDZ)V" + "'", str64, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "Z");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "Z");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "Z");
    }

    @Test
    public void test04467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04467");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        enhancer7.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy14 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy14);
        boolean boolean16 = enhancer0.getAttemptLoad();
        enhancer0.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter19 = null;
        enhancer0.setCallbackFilter(callbackFilter19);
        org.mockito.cglib.proxy.Callback[] callbackArray21 = null;
        enhancer0.setCallbacks(callbackArray21);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer26 = new org.mockito.cglib.proxy.Enhancer();
        enhancer26.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        java.lang.Class<?> wildcardClass31 = classAdapter30.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass31);
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        java.lang.Class<?> wildcardClass35 = classAdapter34.getClass();
        java.lang.String str36 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass35);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        java.lang.Class<?> wildcardClass39 = classAdapter38.getClass();
        java.lang.String str40 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        java.lang.Class<?> wildcardClass43 = classAdapter42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        java.lang.Class[] classArray45 = new java.lang.Class[] { wildcardClass31, wildcardClass35, wildcardClass39, wildcardClass43 };
        enhancer26.setInterfaces(classArray45);
        org.mockito.asm.ClassVisitor classVisitor47 = null;
        org.mockito.asm.ClassAdapter classAdapter48 = new org.mockito.asm.ClassAdapter(classVisitor47);
        java.lang.Class<?> wildcardClass49 = classAdapter48.getClass();
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass49);
        enhancer26.setSuperclass((java.lang.Class) wildcardClass49);
        boolean boolean54 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass49);
        java.lang.String str55 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass49);
        enhancer23.setSuperclass((java.lang.Class) wildcardClass49);
        enhancer23.setAttemptLoad(false);
        org.mockito.cglib.proxy.Enhancer enhancer59 = new org.mockito.cglib.proxy.Enhancer();
        enhancer59.setUseFactory(true);
        enhancer59.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback64 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray65 = new org.mockito.cglib.proxy.Callback[] { callback64 };
        enhancer59.setCallbacks(callbackArray65);
        boolean boolean67 = enhancer59.getAttemptLoad();
        enhancer59.setUseFactory(false);
        boolean boolean70 = enhancer59.getUseCache();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy71 = enhancer59.getStrategy();
        enhancer23.setStrategy(generatorStrategy71);
        enhancer0.setStrategy(generatorStrategy71);
        org.mockito.asm.ClassVisitor classVisitor74 = null;
        org.mockito.asm.ClassAdapter classAdapter75 = new org.mockito.asm.ClassAdapter(classVisitor74);
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter75);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.generateClass((org.mockito.asm.ClassVisitor) classAdapter75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str32, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str36, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str40, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str55, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(callbackArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(generatorStrategy71);
    }

    @Test
    public void test04468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04468");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classAdapter12);
        boolean boolean14 = namingPolicy8.equals((java.lang.Object) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter12);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor17);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classAdapter19);
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter21.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        classEmitter16.setTarget((org.mockito.asm.ClassVisitor) classEmitter23);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter23.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo28 = classEmitter27.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter29 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        org.mockito.cglib.core.ClassEmitter classEmitter30 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter27);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter30);
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        classEmitter23.setTarget((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.asm.ClassAdapter classAdapter37 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter36.getClassInfo();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo41 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter15.getClassInfo();
        org.mockito.asm.Attribute attribute43 = null;
        // The following exception was thrown during execution in test generation
        try {
            classEmitter15.visitAttribute(attribute43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNull(classInfo28);
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo41);
        org.junit.Assert.assertNull(classInfo42);
    }

    @Test
    public void test04469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04469");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer11 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer12 = new org.mockito.cglib.proxy.Enhancer();
        enhancer12.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback15 = null;
        enhancer12.setCallback(callback15);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter17 = null;
        enhancer12.setCallbackFilter(callbackFilter17);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer12.setCallback(callback19);
        org.mockito.cglib.core.NamingPolicy namingPolicy21 = enhancer12.getNamingPolicy();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local24 = new org.mockito.cglib.core.Local(0, type23);
        int int25 = type23.getSort();
        java.lang.String str26 = type23.getClassName();
        java.lang.String str27 = type23.getClassName();
        boolean boolean28 = namingPolicy21.equals((java.lang.Object) type23);
        enhancer11.setNamingPolicy(namingPolicy21);
        org.mockito.cglib.core.NamingPolicy namingPolicy30 = enhancer11.getNamingPolicy();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str32 = type31.getClassName();
        boolean boolean33 = namingPolicy30.equals((java.lang.Object) str32);
        enhancer0.setNamingPolicy(namingPolicy30);
        java.lang.ClassLoader classLoader35 = enhancer0.getClassLoader();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class36 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertNotNull(namingPolicy21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "double" + "'", str26, "double");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "double" + "'", str27, "double");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(namingPolicy30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "double" + "'", str32, "double");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classLoader35);
    }

    @Test
    public void test04470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04470");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        enhancer0.setAttemptLoad(true);
        java.lang.ClassLoader classLoader10 = enhancer0.getClassLoader();
        enhancer0.setUseFactory(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class13 = enhancer0.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertNotNull(classLoader10);
    }

    @Test
    public void test04471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04471");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getObjectType("L1971628708");
        java.lang.String str9 = type8.getDescriptor();
        org.mockito.cglib.core.Local local10 = new org.mockito.cglib.core.Local(6, type8);
        org.mockito.asm.Type type11 = local10.getType();
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        boolean boolean15 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass14);
        boolean boolean16 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass14);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        org.mockito.asm.Type type18 = type17.getElementType();
        org.mockito.cglib.proxy.Enhancer enhancer19 = new org.mockito.cglib.proxy.Enhancer();
        enhancer19.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer19.setCallback(callback22);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter24 = null;
        enhancer19.setCallbackFilter(callbackFilter24);
        enhancer19.setSerialVersionUID((java.lang.Long) 0L);
        enhancer19.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        enhancer30.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor38 = null;
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor38);
        java.lang.Class<?> wildcardClass40 = classAdapter39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass40);
        org.mockito.asm.ClassVisitor classVisitor42 = null;
        org.mockito.asm.ClassAdapter classAdapter43 = new org.mockito.asm.ClassAdapter(classVisitor42);
        java.lang.Class<?> wildcardClass44 = classAdapter43.getClass();
        java.lang.String str45 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass44);
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        java.lang.Class<?> wildcardClass48 = classAdapter47.getClass();
        java.lang.String str49 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass48);
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor50);
        java.lang.Class<?> wildcardClass52 = classAdapter51.getClass();
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass52);
        java.lang.Class[] classArray54 = new java.lang.Class[] { wildcardClass40, wildcardClass44, wildcardClass48, wildcardClass52 };
        enhancer35.setInterfaces(classArray54);
        enhancer30.setInterfaces(classArray54);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        java.lang.Class<?> wildcardClass59 = classAdapter58.getClass();
        java.lang.String str60 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass59);
        java.lang.String str61 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass59);
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        java.lang.Class<?> wildcardClass64 = classAdapter63.getClass();
        boolean boolean65 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        boolean boolean66 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass64);
        java.lang.Class[] classArray67 = new java.lang.Class[] { wildcardClass59, wildcardClass64 };
        enhancer30.setInterfaces(classArray67);
        java.lang.ClassLoader classLoader69 = enhancer30.getClassLoader();
        enhancer19.setClassLoader(classLoader69);
        org.mockito.cglib.proxy.Enhancer enhancer71 = new org.mockito.cglib.proxy.Enhancer();
        enhancer71.setUseFactory(true);
        enhancer71.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter76 = null;
        enhancer71.setCallbackFilter(callbackFilter76);
        java.lang.ClassLoader classLoader78 = enhancer71.getClassLoader();
        enhancer19.setClassLoader(classLoader78);
        boolean boolean80 = type17.equals((java.lang.Object) enhancer19);
        java.lang.ClassLoader classLoader81 = enhancer19.getClassLoader();
        enhancer19.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer19.setUseCache(true);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter3.declare_field(16, "L2007139194", type11, (java.lang.Object) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LL1971628708;" + "'", str9, "LL1971628708;");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str41, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str45, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str49, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str60, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str61, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(classArray67);
        org.junit.Assert.assertNotNull(classLoader69);
        org.junit.Assert.assertNotNull(classLoader78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(classLoader81);
    }

    @Test
    public void test04472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04472");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer1 = new org.mockito.cglib.proxy.Enhancer();
        enhancer1.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback4 = null;
        enhancer1.setCallback(callback4);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer1.setCallbackFilter(callbackFilter6);
        org.mockito.cglib.proxy.Callback callback8 = null;
        enhancer1.setCallback(callback8);
        org.mockito.cglib.core.NamingPolicy namingPolicy10 = enhancer1.getNamingPolicy();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(0, type12);
        int int14 = type12.getSort();
        java.lang.String str15 = type12.getClassName();
        java.lang.String str16 = type12.getClassName();
        boolean boolean17 = namingPolicy10.equals((java.lang.Object) type12);
        enhancer0.setNamingPolicy(namingPolicy10);
        org.mockito.cglib.core.NamingPolicy namingPolicy19 = enhancer0.getNamingPolicy();
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer20.setCallback(callback23);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer20.setCallback(callback25);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer20.getStrategy();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        boolean boolean31 = type28.equals((java.lang.Object) classVisitor29);
        int int33 = type28.getOpcode(116);
        boolean boolean34 = generatorStrategy27.equals((java.lang.Object) 116);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer35.setCallback(callback38);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer35.setCallback(callback40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        java.lang.Class<?> wildcardClass47 = classAdapter46.getClass();
        java.lang.String str48 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        java.lang.Class<?> wildcardClass51 = classAdapter50.getClass();
        java.lang.String str52 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass51);
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.asm.ClassAdapter classAdapter54 = new org.mockito.asm.ClassAdapter(classVisitor53);
        java.lang.Class<?> wildcardClass55 = classAdapter54.getClass();
        java.lang.String str56 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass55);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        java.lang.Class<?> wildcardClass59 = classAdapter58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Class[] classArray61 = new java.lang.Class[] { wildcardClass47, wildcardClass51, wildcardClass55, wildcardClass59 };
        enhancer42.setInterfaces(classArray61);
        enhancer35.setInterfaces(classArray61);
        boolean boolean64 = generatorStrategy27.equals((java.lang.Object) enhancer35);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setUseFactory(true);
        enhancer65.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor73);
        java.lang.Class<?> wildcardClass75 = classAdapter74.getClass();
        java.lang.String str76 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        org.mockito.asm.ClassVisitor classVisitor77 = null;
        org.mockito.asm.ClassAdapter classAdapter78 = new org.mockito.asm.ClassAdapter(classVisitor77);
        java.lang.Class<?> wildcardClass79 = classAdapter78.getClass();
        java.lang.String str80 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass79);
        org.mockito.asm.ClassVisitor classVisitor81 = null;
        org.mockito.asm.ClassAdapter classAdapter82 = new org.mockito.asm.ClassAdapter(classVisitor81);
        java.lang.Class<?> wildcardClass83 = classAdapter82.getClass();
        java.lang.String str84 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass83);
        org.mockito.asm.ClassVisitor classVisitor85 = null;
        org.mockito.asm.ClassAdapter classAdapter86 = new org.mockito.asm.ClassAdapter(classVisitor85);
        java.lang.Class<?> wildcardClass87 = classAdapter86.getClass();
        boolean boolean88 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass87);
        java.lang.Class[] classArray89 = new java.lang.Class[] { wildcardClass75, wildcardClass79, wildcardClass83, wildcardClass87 };
        enhancer70.setInterfaces(classArray89);
        enhancer65.setInterfaces(classArray89);
        enhancer35.setInterfaces(classArray89);
        enhancer0.setInterfaces(classArray89);
        enhancer0.setUseCache(true);
        enhancer0.setSerialVersionUID((java.lang.Long) 100L);
        boolean boolean98 = enhancer0.getUseCache();
        java.lang.ClassLoader classLoader99 = enhancer0.getClassLoader();
        org.junit.Assert.assertNotNull(namingPolicy10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double" + "'", str15, "double");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double" + "'", str16, "double");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(namingPolicy19);
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 116 + "'", int33 == 116);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str48, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str52, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str56, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str76, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str80, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str84, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(classArray89);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(classLoader99);
    }

    @Test
    public void test04473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04473");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        boolean boolean13 = enhancer0.getAttemptLoad();
        boolean boolean14 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback18 = null;
        enhancer15.setCallback(callback18);
        org.mockito.cglib.proxy.Callback callback20 = null;
        enhancer15.setCallback(callback20);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy22 = enhancer15.getStrategy();
        boolean boolean23 = enhancer15.getUseCache();
        boolean boolean24 = enhancer15.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer25 = new org.mockito.cglib.proxy.Enhancer();
        enhancer25.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer25.setCallback(callback28);
        org.mockito.cglib.proxy.Callback callback30 = null;
        enhancer25.setCallback(callback30);
        org.mockito.cglib.proxy.Enhancer enhancer32 = new org.mockito.cglib.proxy.Enhancer();
        enhancer32.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback35 = null;
        enhancer32.setCallback(callback35);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter37 = null;
        enhancer32.setCallbackFilter(callbackFilter37);
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer32.setCallback(callback39);
        org.mockito.cglib.core.NamingPolicy namingPolicy41 = enhancer32.getNamingPolicy();
        enhancer25.setNamingPolicy(namingPolicy41);
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        java.lang.Class<?> wildcardClass45 = classAdapter44.getClass();
        enhancer25.setSuperclass((java.lang.Class) wildcardClass45);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter47 = null;
        enhancer25.setCallbackFilter(callbackFilter47);
        java.lang.ClassLoader classLoader49 = enhancer25.getClassLoader();
        java.lang.Class<?> wildcardClass50 = enhancer25.getClass();
        boolean boolean51 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass50);
        enhancer15.setSuperclass((java.lang.Class) wildcardClass50);
        // The following exception was thrown during execution in test generation
        try {
            enhancer0.setCallbackType((java.lang.Class) wildcardClass50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Unknown callback type class org.mockito.cglib.proxy.Enhancer");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(generatorStrategy22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(namingPolicy41);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(classLoader49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test04474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04474");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        boolean boolean9 = generatorStrategy7.equals((java.lang.Object) label8);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor11);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classAdapter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo26 = classEmitter24.getClassInfo();
        label8.info = classEmitter24;
        java.lang.Object obj28 = label8.info;
        java.lang.String str29 = label8.toString();
        java.lang.Object obj30 = label8.info;
        java.lang.String str31 = label8.toString();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo33 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter34 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classEmitter34);
        org.mockito.cglib.core.ClassInfo classInfo36 = classEmitter32.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter37 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter32);
        org.mockito.cglib.core.ClassEmitter classEmitter38 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        org.mockito.asm.ClassAdapter classAdapter41 = new org.mockito.asm.ClassAdapter(classVisitor39);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classAdapter41);
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo44 = classEmitter43.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter45 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter43.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter38.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        classEmitter37.setTarget((org.mockito.asm.ClassVisitor) classEmitter45);
        label8.info = classEmitter45;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter45);
        java.lang.String[] strArray56 = new java.lang.String[] { "L1630157585" };
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor57 = classAdapter50.visitMethod(101, "L1847695399", "L1833924179(VZVDDZ)D", "L241987795", strArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: classInfo is null! org.mockito.cglib.core.ClassEmitter@559f846f");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertNull(classInfo26);
        org.junit.Assert.assertNotNull(obj28);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "L1988043601" + "'", str29, "L1988043601");
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L1988043601" + "'", str31, "L1988043601");
        org.junit.Assert.assertNull(classInfo33);
        org.junit.Assert.assertNull(classInfo36);
        org.junit.Assert.assertNull(classInfo44);
        org.junit.Assert.assertNotNull(strArray56);
    }

    @Test
    public void test04475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04475");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        boolean boolean10 = enhancer0.getAttemptLoad();
        boolean boolean11 = enhancer0.getAttemptLoad();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertNotNull(namingPolicy9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test04476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04476");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        enhancer0.setUseCache(false);
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(false);
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter19 = null;
        enhancer0.setCallbackFilter(callbackFilter19);
        enhancer0.setUseCache(false);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        enhancer23.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.core.NamingPolicy namingPolicy28 = null;
        enhancer23.setNamingPolicy(namingPolicy28);
        boolean boolean30 = enhancer23.getUseCache();
        org.mockito.cglib.proxy.Enhancer enhancer31 = new org.mockito.cglib.proxy.Enhancer();
        enhancer31.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback34 = null;
        enhancer31.setCallback(callback34);
        enhancer31.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer38 = new org.mockito.cglib.proxy.Enhancer();
        enhancer38.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback41 = null;
        enhancer38.setCallback(callback41);
        enhancer38.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy45 = enhancer38.getNamingPolicy();
        enhancer31.setNamingPolicy(namingPolicy45);
        enhancer31.setUseFactory(true);
        org.mockito.cglib.proxy.Enhancer enhancer49 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer49.setCallback(callback50);
        org.mockito.cglib.proxy.Enhancer enhancer52 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer53 = new org.mockito.cglib.proxy.Enhancer();
        enhancer53.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback56 = null;
        enhancer53.setCallback(callback56);
        org.mockito.cglib.proxy.Callback callback58 = null;
        enhancer53.setCallback(callback58);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy60 = enhancer53.getStrategy();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor62 = null;
        org.mockito.asm.ClassAdapter classAdapter63 = new org.mockito.asm.ClassAdapter(classVisitor62);
        boolean boolean64 = type61.equals((java.lang.Object) classVisitor62);
        int int66 = type61.getOpcode(116);
        boolean boolean67 = generatorStrategy60.equals((java.lang.Object) 116);
        enhancer52.setStrategy(generatorStrategy60);
        enhancer49.setStrategy(generatorStrategy60);
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setUseFactory(true);
        enhancer70.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter75 = null;
        enhancer70.setCallbackFilter(callbackFilter75);
        java.lang.ClassLoader classLoader77 = enhancer70.getClassLoader();
        enhancer49.setClassLoader(classLoader77);
        enhancer49.setAttemptLoad(true);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter81 = null;
        enhancer49.setCallbackFilter(callbackFilter81);
        enhancer49.setSerialVersionUID((java.lang.Long) 10L);
        org.mockito.cglib.proxy.Enhancer enhancer85 = new org.mockito.cglib.proxy.Enhancer();
        enhancer85.setUseFactory(true);
        enhancer85.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback90 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray91 = new org.mockito.cglib.proxy.Callback[] { callback90 };
        enhancer85.setCallbacks(callbackArray91);
        enhancer49.setCallbacks(callbackArray91);
        enhancer31.setCallbacks(callbackArray91);
        enhancer23.setCallbacks(callbackArray91);
        enhancer0.setCallbacks(callbackArray91);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(namingPolicy45);
        org.junit.Assert.assertNotNull(generatorStrategy60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 116 + "'", int66 == 116);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classLoader77);
        org.junit.Assert.assertNotNull(callbackArray91);
    }

    @Test
    public void test04477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04477");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setAttemptLoad(false);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Callback callback9 = null;
        enhancer0.setCallback(callback9);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter11 = null;
        enhancer0.setCallbackFilter(callbackFilter11);
        org.mockito.cglib.proxy.Callback[] callbackArray13 = null;
        enhancer0.setCallbacks(callbackArray13);
    }

    @Test
    public void test04478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04478");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer5 = new org.mockito.cglib.proxy.Enhancer();
        enhancer5.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        java.lang.Class<?> wildcardClass10 = classAdapter9.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        java.lang.Class<?> wildcardClass14 = classAdapter13.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        java.lang.Class<?> wildcardClass18 = classAdapter17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        java.lang.Class<?> wildcardClass22 = classAdapter21.getClass();
        boolean boolean23 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass22);
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass10, wildcardClass14, wildcardClass18, wildcardClass22 };
        enhancer5.setInterfaces(classArray24);
        enhancer0.setInterfaces(classArray24);
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        java.lang.Class<?> wildcardClass29 = classAdapter28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        java.lang.Class<?> wildcardClass34 = classAdapter33.getClass();
        boolean boolean35 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        boolean boolean36 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass34);
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass29, wildcardClass34 };
        enhancer0.setInterfaces(classArray37);
        enhancer0.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy41 = enhancer0.getStrategy();
        enhancer0.setSerialVersionUID((java.lang.Long) (-1L));
        enhancer0.setUseCache(false);
        org.mockito.asm.ClassVisitor classVisitor46 = null;
        org.mockito.asm.ClassAdapter classAdapter47 = new org.mockito.asm.ClassAdapter(classVisitor46);
        java.lang.Class<?> wildcardClass48 = classAdapter47.getClass();
        java.lang.String str49 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass48);
        boolean boolean50 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass48);
        enhancer0.setSuperclass((java.lang.Class) wildcardClass48);
        enhancer0.setUseCache(false);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str11, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str15, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str19, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str30, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str31, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(generatorStrategy41);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str49, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test04479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04479");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter5);
        org.mockito.asm.Label label11 = new org.mockito.asm.Label();
        java.lang.String str12 = label11.toString();
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        label11.info = label13;
        java.lang.String str15 = label11.toString();
        java.lang.String str16 = label11.toString();
        java.lang.String str17 = label11.toString();
        org.mockito.asm.Label label18 = new org.mockito.asm.Label();
        java.lang.String str19 = label18.toString();
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        label18.info = label20;
        java.lang.String str22 = label18.toString();
        java.lang.String str23 = label18.toString();
        label11.info = label18;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor27 = null;
        org.mockito.asm.ClassAdapter classAdapter28 = new org.mockito.asm.ClassAdapter(classVisitor27);
        boolean boolean29 = type26.equals((java.lang.Object) classVisitor27);
        int int31 = type26.getOpcode(116);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        boolean boolean37 = type34.equals((java.lang.Object) classVisitor35);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str39 = type38.getDescriptor();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        boolean boolean45 = type42.equals((java.lang.Object) classVisitor43);
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type33, type34, type38, type40, type41, type42 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray46);
        org.mockito.cglib.core.Signature signature48 = new org.mockito.cglib.core.Signature("V", type26, typeArray46);
        int int50 = type26.getOpcode((-1));
        int int52 = type26.getOpcode((int) 'a');
        label11.info = type26;
        label11.info = 100;
        org.mockito.cglib.core.Signature signature58 = new org.mockito.cglib.core.Signature("Z", "(VZVDDZ)Z");
        org.mockito.asm.Type[] typeArray59 = signature58.getArgumentTypes();
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo61 = classEmitter60.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter60.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassInfo classInfo64 = classEmitter60.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter60);
        boolean boolean66 = signature58.equals((java.lang.Object) classEmitter65);
        org.mockito.cglib.proxy.Enhancer enhancer67 = new org.mockito.cglib.proxy.Enhancer();
        enhancer67.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback70 = null;
        enhancer67.setCallback(callback70);
        boolean boolean72 = enhancer67.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter73 = null;
        enhancer67.setCallbackFilter(callbackFilter73);
        boolean boolean75 = signature58.equals((java.lang.Object) callbackFilter73);
        label11.info = signature58;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter9.visitJumpInsn(0, label11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L2125690956" + "'", str12, "L2125690956");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "L2125690956" + "'", str15, "L2125690956");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L2125690956" + "'", str16, "L2125690956");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "L2125690956" + "'", str17, "L2125690956");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "L1579525448" + "'", str19, "L1579525448");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1579525448" + "'", str22, "L1579525448");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L1579525448" + "'", str23, "L1579525448");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 116 + "'", int31 == 116);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "V" + "'", str39, "V");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(VZVDDZ)V" + "'", str47, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 97 + "'", int52 == 97);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertNull(classInfo61);
        org.junit.Assert.assertNull(classInfo64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test04480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04480");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter8);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter11 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter10);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter12 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter11);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter13 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter12);
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback17 = null;
        enhancer14.setCallback(callback17);
        org.mockito.cglib.proxy.Callback callback19 = null;
        enhancer14.setCallback(callback19);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy21 = enhancer14.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy22 = enhancer14.getNamingPolicy();
        org.mockito.cglib.core.NamingPolicy namingPolicy23 = enhancer14.getNamingPolicy();
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter13.visitLdcInsn((java.lang.Object) namingPolicy23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(generatorStrategy21);
        org.junit.Assert.assertNotNull(namingPolicy22);
        org.junit.Assert.assertNotNull(namingPolicy23);
    }

    @Test
    public void test04481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04481");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local3 = new org.mockito.cglib.core.Local(0, type2);
        int int4 = type2.getSort();
        java.lang.String str5 = type2.getClassName();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local9 = new org.mockito.cglib.core.Local(0, type8);
        org.mockito.cglib.core.Local local10 = new org.mockito.cglib.core.Local((int) (byte) 100, type8);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor16 = null;
        org.mockito.asm.ClassAdapter classAdapter17 = new org.mockito.asm.ClassAdapter(classVisitor16);
        boolean boolean18 = type15.equals((java.lang.Object) classVisitor16);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str20 = type19.getDescriptor();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor24 = null;
        org.mockito.asm.ClassAdapter classAdapter25 = new org.mockito.asm.ClassAdapter(classVisitor24);
        boolean boolean26 = type23.equals((java.lang.Object) classVisitor24);
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type14, type15, type19, type21, type22, type23 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray27);
        org.mockito.cglib.core.Signature signature29 = new org.mockito.cglib.core.Signature("L1057808593", type12, typeArray27);
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray27);
        org.mockito.cglib.core.Signature signature31 = new org.mockito.cglib.core.Signature("Lorg/mockito/asm/ClassAdapter;", type2, typeArray27);
        org.mockito.asm.Type[] typeArray32 = signature31.getArgumentTypes();
        java.lang.String str33 = signature31.toString();
        java.lang.String str34 = signature31.getName();
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer35.setCallback(callback38);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter40 = null;
        enhancer35.setCallbackFilter(callbackFilter40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback45 = null;
        enhancer42.setCallback(callback45);
        enhancer42.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass49 = enhancer42.getClass();
        java.lang.String str50 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass49);
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass49);
        enhancer35.setSuperclass((java.lang.Class) wildcardClass49);
        boolean boolean53 = signature31.equals((java.lang.Object) enhancer35);
        java.lang.String str54 = signature31.getName();
        org.mockito.cglib.core.ClassEmitter classEmitter55 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor56 = null;
        org.mockito.asm.ClassAdapter classAdapter57 = new org.mockito.asm.ClassAdapter(classVisitor56);
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor56);
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classAdapter58);
        org.mockito.cglib.core.ClassEmitter classEmitter60 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo61 = classEmitter60.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter60.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        classEmitter55.setTarget((org.mockito.asm.ClassVisitor) classEmitter62);
        org.mockito.cglib.core.ClassInfo classInfo65 = classEmitter62.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter66 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo67 = classEmitter66.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter68 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        org.mockito.cglib.core.ClassEmitter classEmitter69 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter66);
        classEmitter62.setTarget((org.mockito.asm.ClassVisitor) classEmitter69);
        org.mockito.cglib.core.ClassEmitter classEmitter71 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo72 = classEmitter71.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter73 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter71);
        classEmitter62.setTarget((org.mockito.asm.ClassVisitor) classEmitter71);
        org.mockito.asm.ClassAdapter classAdapter75 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter71);
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter71);
        boolean boolean77 = signature31.equals((java.lang.Object) classEmitter76);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type78 = classEmitter76.getSuperType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "double" + "'", str5, "double");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "V" + "'", str20, "V");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(VZVDDZ)V" + "'", str28, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(VZVDDZ)D" + "'", str30, "(VZVDDZ)D");
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lorg/mockito/asm/ClassAdapter;(VZVDDZ)D" + "'", str33, "Lorg/mockito/asm/ClassAdapter;(VZVDDZ)D");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str34, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/cglib/proxy/Enhancer;" + "'", str50, "Lorg/mockito/cglib/proxy/Enhancer;");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/cglib/proxy/Enhancer" + "'", str51, "org/mockito/cglib/proxy/Enhancer");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str54, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNull(classInfo61);
        org.junit.Assert.assertNull(classInfo65);
        org.junit.Assert.assertNull(classInfo67);
        org.junit.Assert.assertNull(classInfo72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test04482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04482");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor8 = null;
        org.mockito.asm.ClassAdapter classAdapter9 = new org.mockito.asm.ClassAdapter(classVisitor8);
        org.mockito.asm.ClassAdapter classAdapter10 = new org.mockito.asm.ClassAdapter(classVisitor8);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classAdapter10);
        org.mockito.cglib.core.ClassEmitter classEmitter12 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor13 = null;
        org.mockito.asm.ClassAdapter classAdapter14 = new org.mockito.asm.ClassAdapter(classVisitor13);
        org.mockito.asm.ClassAdapter classAdapter15 = new org.mockito.asm.ClassAdapter(classVisitor13);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classAdapter15);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo18 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter19 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classEmitter19);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback26 = null;
        enhancer23.setCallback(callback26);
        org.mockito.cglib.proxy.Callback callback28 = null;
        enhancer23.setCallback(callback28);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy30 = enhancer23.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy31 = enhancer23.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter32 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        org.mockito.asm.ClassAdapter classAdapter35 = new org.mockito.asm.ClassAdapter(classVisitor33);
        classEmitter32.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        boolean boolean37 = namingPolicy31.equals((java.lang.Object) classAdapter35);
        classEmitter12.setTarget((org.mockito.asm.ClassVisitor) classAdapter35);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter12);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter12.end_class();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo18);
        org.junit.Assert.assertNotNull(generatorStrategy30);
        org.junit.Assert.assertNotNull(namingPolicy31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test04483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04483");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        boolean boolean5 = enhancer0.getUseCache();
        org.mockito.cglib.proxy.CallbackFilter callbackFilter6 = null;
        enhancer0.setCallbackFilter(callbackFilter6);
        enhancer0.setUseFactory(false);
        org.mockito.cglib.proxy.Enhancer enhancer10 = new org.mockito.cglib.proxy.Enhancer();
        enhancer10.setUseFactory(true);
        boolean boolean13 = enhancer10.getAttemptLoad();
        org.mockito.cglib.proxy.Enhancer enhancer14 = new org.mockito.cglib.proxy.Enhancer();
        enhancer14.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        java.lang.Class<?> wildcardClass19 = classAdapter18.getClass();
        java.lang.String str20 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass19);
        org.mockito.asm.ClassVisitor classVisitor21 = null;
        org.mockito.asm.ClassAdapter classAdapter22 = new org.mockito.asm.ClassAdapter(classVisitor21);
        java.lang.Class<?> wildcardClass23 = classAdapter22.getClass();
        java.lang.String str24 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass23);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor25);
        java.lang.Class<?> wildcardClass27 = classAdapter26.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        java.lang.Class<?> wildcardClass31 = classAdapter30.getClass();
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass31);
        java.lang.Class[] classArray33 = new java.lang.Class[] { wildcardClass19, wildcardClass23, wildcardClass27, wildcardClass31 };
        enhancer14.setInterfaces(classArray33);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter35 = null;
        enhancer14.setCallbackFilter(callbackFilter35);
        org.mockito.cglib.proxy.Enhancer enhancer37 = new org.mockito.cglib.proxy.Enhancer();
        enhancer37.setUseFactory(true);
        enhancer37.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback42 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray43 = new org.mockito.cglib.proxy.Callback[] { callback42 };
        enhancer37.setCallbacks(callbackArray43);
        enhancer14.setCallbacks(callbackArray43);
        java.lang.Class class46 = null;
        enhancer14.setSuperclass(class46);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy48 = enhancer14.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy49 = enhancer14.getNamingPolicy();
        enhancer10.setNamingPolicy(namingPolicy49);
        org.mockito.asm.ClassVisitor classVisitor52 = null;
        org.mockito.asm.ClassAdapter classAdapter53 = new org.mockito.asm.ClassAdapter(classVisitor52);
        java.lang.Class<?> wildcardClass54 = classAdapter53.getClass();
        boolean boolean55 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        boolean boolean56 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass54);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass54);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass54);
        java.lang.String str59 = type58.getInternalName();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.Type type63 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor64 = null;
        org.mockito.asm.ClassAdapter classAdapter65 = new org.mockito.asm.ClassAdapter(classVisitor64);
        boolean boolean66 = type63.equals((java.lang.Object) classVisitor64);
        int int68 = type63.getOpcode(116);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type71 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor72 = null;
        org.mockito.asm.ClassAdapter classAdapter73 = new org.mockito.asm.ClassAdapter(classVisitor72);
        boolean boolean74 = type71.equals((java.lang.Object) classVisitor72);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str76 = type75.getDescriptor();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type78 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type79 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor80 = null;
        org.mockito.asm.ClassAdapter classAdapter81 = new org.mockito.asm.ClassAdapter(classVisitor80);
        boolean boolean82 = type79.equals((java.lang.Object) classVisitor80);
        org.mockito.asm.Type[] typeArray83 = new org.mockito.asm.Type[] { type70, type71, type75, type77, type78, type79 };
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray83);
        org.mockito.cglib.core.Signature signature85 = new org.mockito.cglib.core.Signature("V", type63, typeArray83);
        org.mockito.cglib.core.Signature signature86 = new org.mockito.cglib.core.Signature("hi!", type61, typeArray83);
        org.mockito.asm.Type[] typeArray87 = signature86.getArgumentTypes();
        org.mockito.cglib.core.Signature signature88 = new org.mockito.cglib.core.Signature("", type58, typeArray87);
        org.mockito.asm.Type type89 = type58.getElementType();
        boolean boolean90 = namingPolicy49.equals((java.lang.Object) type58);
        enhancer0.setNamingPolicy(namingPolicy49);
        org.mockito.cglib.core.Predicate predicate95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str96 = namingPolicy49.getClassName("L203072230", "L1306263371", (java.lang.Object) 155, predicate95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str20, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str24, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str28, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(callbackArray43);
        org.junit.Assert.assertNotNull(generatorStrategy48);
        org.junit.Assert.assertNotNull(namingPolicy49);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str59, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 116 + "'", int68 == 116);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "V" + "'", str76, "V");
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(VZVDDZ)V" + "'", str84, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test04484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04484");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor18);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classAdapter20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter17.getClassInfo();
        classEmitter14.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor32);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classAdapter34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor37);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classAdapter39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter41.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter41.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer47.setCallback(callback52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer47.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer47.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor57);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        boolean boolean61 = namingPolicy55.equals((java.lang.Object) classAdapter59);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter17.visitOuterClass("L1370504595", "L905044318", "L1833924179(VZVDDZ)D");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertNull(classInfo42);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test04485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04485");
        org.mockito.asm.ClassVisitor classVisitor0 = null;
        org.mockito.asm.ClassAdapter classAdapter1 = new org.mockito.asm.ClassAdapter(classVisitor0);
        java.lang.Class<?> wildcardClass2 = classAdapter1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.cglib.proxy.Enhancer enhancer8 = new org.mockito.cglib.proxy.Enhancer();
        enhancer8.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        java.lang.String str18 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass17);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        java.lang.Class<?> wildcardClass21 = classAdapter20.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass21);
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        java.lang.Class<?> wildcardClass25 = classAdapter24.getClass();
        boolean boolean26 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass25);
        java.lang.Class[] classArray27 = new java.lang.Class[] { wildcardClass13, wildcardClass17, wildcardClass21, wildcardClass25 };
        enhancer8.setInterfaces(classArray27);
        org.mockito.cglib.proxy.Callback callback29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = org.mockito.cglib.proxy.Enhancer.create((java.lang.Class) wildcardClass2, classArray27, callback29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str3, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str4, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str5, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str7, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str18, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str22, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(classArray27);
    }

    @Test
    public void test04486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04486");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo1 = classEmitter0.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter2 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter3 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter4 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo5 = classEmitter0.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter6 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassInfo classInfo7 = classEmitter0.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter0);
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter12);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classAdapter12);
        org.mockito.asm.ClassVisitor classVisitor17 = null;
        org.mockito.asm.ClassAdapter classAdapter18 = new org.mockito.asm.ClassAdapter(classVisitor17);
        java.lang.Class<?> wildcardClass19 = classAdapter18.getClass();
        boolean boolean20 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        boolean boolean21 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass19);
        java.lang.String str23 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        java.lang.String str25 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        java.lang.String str27 = type26.getDescriptor();
        int int28 = type26.getDimensions();
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        enhancer29.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback32 = null;
        enhancer29.setCallback(callback32);
        enhancer29.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Enhancer enhancer36 = new org.mockito.cglib.proxy.Enhancer();
        enhancer36.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback39 = null;
        enhancer36.setCallback(callback39);
        enhancer36.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy43 = enhancer36.getNamingPolicy();
        enhancer29.setNamingPolicy(namingPolicy43);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter9.declare_field(129, "L203072230", type26, (java.lang.Object) enhancer29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo1);
        org.junit.Assert.assertNull(classInfo5);
        org.junit.Assert.assertNull(classInfo7);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str23, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str25, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str27, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(namingPolicy43);
    }

    @Test
    public void test04487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04487");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.asm.MethodAdapter methodAdapter6 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter5);
        org.mockito.asm.Label label7 = new org.mockito.asm.Label();
        java.lang.String str8 = label7.toString();
        org.mockito.asm.Label label9 = new org.mockito.asm.Label();
        label7.info = label9;
        java.lang.Object obj11 = label9.info;
        java.lang.String str12 = label9.toString();
        java.lang.Object obj13 = label9.info;
        label9.info = "[Ljava/lang/Class;";
        java.lang.String str16 = label9.toString();
        org.mockito.cglib.proxy.Enhancer enhancer17 = new org.mockito.cglib.proxy.Enhancer();
        enhancer17.setUseFactory(true);
        enhancer17.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer22 = new org.mockito.cglib.proxy.Enhancer();
        enhancer22.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor25 = null;
        org.mockito.asm.ClassAdapter classAdapter26 = new org.mockito.asm.ClassAdapter(classVisitor25);
        java.lang.Class<?> wildcardClass27 = classAdapter26.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass27);
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        java.lang.Class<?> wildcardClass31 = classAdapter30.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass31);
        org.mockito.asm.ClassVisitor classVisitor33 = null;
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor33);
        java.lang.Class<?> wildcardClass35 = classAdapter34.getClass();
        java.lang.String str36 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass35);
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        java.lang.Class<?> wildcardClass39 = classAdapter38.getClass();
        boolean boolean40 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass39);
        java.lang.Class[] classArray41 = new java.lang.Class[] { wildcardClass27, wildcardClass31, wildcardClass35, wildcardClass39 };
        enhancer22.setInterfaces(classArray41);
        enhancer17.setInterfaces(classArray41);
        org.mockito.asm.ClassVisitor classVisitor44 = null;
        org.mockito.asm.ClassAdapter classAdapter45 = new org.mockito.asm.ClassAdapter(classVisitor44);
        java.lang.Class<?> wildcardClass46 = classAdapter45.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        java.lang.String str48 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        java.lang.Class<?> wildcardClass51 = classAdapter50.getClass();
        boolean boolean52 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        boolean boolean53 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass51);
        java.lang.Class[] classArray54 = new java.lang.Class[] { wildcardClass46, wildcardClass51 };
        enhancer17.setInterfaces(classArray54);
        enhancer17.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy58 = enhancer17.getStrategy();
        enhancer17.setUseCache(true);
        java.lang.Class[] classArray61 = new java.lang.Class[] {};
        enhancer17.setInterfaces(classArray61);
        label9.info = enhancer17;
        java.lang.String str64 = label9.toString();
        java.lang.Object obj65 = label9.info;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter6.visitLabel(label9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "L1445733743" + "'", str8, "L1445733743");
        org.junit.Assert.assertNull(obj11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L212278597" + "'", str12, "L212278597");
        org.junit.Assert.assertNull(obj13);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L212278597" + "'", str16, "L212278597");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str28, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str32, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str36, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str47, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str48, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(generatorStrategy58);
        org.junit.Assert.assertNotNull(classArray61);
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "L212278597" + "'", str64, "L212278597");
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test04488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04488");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setAttemptLoad(false);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        org.mockito.asm.Label label8 = new org.mockito.asm.Label();
        java.lang.String str9 = label8.toString();
        boolean boolean10 = namingPolicy7.equals((java.lang.Object) str9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.String str12 = type11.toString();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local16 = new org.mockito.cglib.core.Local(0, type15);
        org.mockito.cglib.core.Local local17 = new org.mockito.cglib.core.Local((int) (byte) 100, type15);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor23 = null;
        org.mockito.asm.ClassAdapter classAdapter24 = new org.mockito.asm.ClassAdapter(classVisitor23);
        boolean boolean25 = type22.equals((java.lang.Object) classVisitor23);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str27 = type26.getDescriptor();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        boolean boolean33 = type30.equals((java.lang.Object) classVisitor31);
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type21, type22, type26, type28, type29, type30 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray34);
        org.mockito.cglib.core.Signature signature36 = new org.mockito.cglib.core.Signature("L1057808593", type19, typeArray34);
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray34);
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray34);
        boolean boolean39 = namingPolicy7.equals((java.lang.Object) typeArray34);
        org.mockito.asm.Label label40 = new org.mockito.asm.Label();
        java.lang.String str41 = label40.toString();
        org.mockito.asm.Label label42 = new org.mockito.asm.Label();
        label40.info = label42;
        java.lang.Object obj44 = label42.info;
        boolean boolean45 = namingPolicy7.equals(obj44);
        org.mockito.cglib.proxy.Enhancer enhancer46 = new org.mockito.cglib.proxy.Enhancer();
        enhancer46.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback49 = null;
        enhancer46.setCallback(callback49);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter51 = null;
        enhancer46.setCallbackFilter(callbackFilter51);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer46.setCallback(callback53);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback58 = null;
        enhancer55.setCallback(callback58);
        enhancer55.setSerialVersionUID((java.lang.Long) 100L);
        java.lang.Class<?> wildcardClass62 = enhancer55.getClass();
        enhancer46.setSuperclass((java.lang.Class) wildcardClass62);
        boolean boolean64 = enhancer46.getAttemptLoad();
        boolean boolean65 = enhancer46.getUseCache();
        enhancer46.setUseCache(true);
        org.mockito.cglib.proxy.Callback[] callbackArray68 = null;
        enhancer46.setCallbacks(callbackArray68);
        enhancer46.setAttemptLoad(true);
        boolean boolean72 = namingPolicy7.equals((java.lang.Object) enhancer46);
        boolean boolean73 = enhancer46.getUseCache();
        enhancer46.setSerialVersionUID((java.lang.Long) 100L);
        enhancer46.setUseFactory(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = enhancer46.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callbacks are required");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy7);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "L1543745642" + "'", str9, "L1543745642");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "B" + "'", str12, "B");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "V" + "'", str27, "V");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(VZVDDZ)V" + "'", str35, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(VZVDDZ)D" + "'", str37, "(VZVDDZ)D");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(VZVDDZ)B" + "'", str38, "(VZVDDZ)B");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L1892873690" + "'", str41, "L1892873690");
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test04489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04489");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor18 = null;
        org.mockito.asm.ClassAdapter classAdapter19 = new org.mockito.asm.ClassAdapter(classVisitor18);
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor18);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classAdapter20);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter22.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassInfo classInfo27 = classEmitter17.getClassInfo();
        classEmitter14.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassEmitter classEmitter31 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor32 = null;
        org.mockito.asm.ClassAdapter classAdapter33 = new org.mockito.asm.ClassAdapter(classVisitor32);
        org.mockito.asm.ClassAdapter classAdapter34 = new org.mockito.asm.ClassAdapter(classVisitor32);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classAdapter34);
        org.mockito.cglib.core.ClassEmitter classEmitter36 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor37 = null;
        org.mockito.asm.ClassAdapter classAdapter38 = new org.mockito.asm.ClassAdapter(classVisitor37);
        org.mockito.asm.ClassAdapter classAdapter39 = new org.mockito.asm.ClassAdapter(classVisitor37);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classAdapter39);
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo42 = classEmitter41.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter43 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter41.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classEmitter43);
        classEmitter31.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer47.setCallback(callback52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer47.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer47.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor57);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        boolean boolean61 = namingPolicy55.equals((java.lang.Object) classAdapter59);
        classEmitter36.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter36);
        // The following exception was thrown during execution in test generation
        try {
            classEmitter17.visitInnerClass("L1606620481", "L2094328947", "L1799203374", 125);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo27);
        org.junit.Assert.assertNull(classInfo42);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test04490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04490");
        org.mockito.asm.MethodVisitor methodVisitor2 = null;
        org.mockito.asm.MethodAdapter methodAdapter3 = new org.mockito.asm.MethodAdapter(methodVisitor2);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter4 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter3);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter5 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter6 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter4);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter7 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter8 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter9 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter6);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter10 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter9);
        org.mockito.asm.MethodAdapter methodAdapter11 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter9);
        org.mockito.asm.Label label13 = new org.mockito.asm.Label();
        java.lang.String str14 = label13.toString();
        org.mockito.asm.Label label15 = new org.mockito.asm.Label();
        label13.info = label15;
        java.lang.Object obj17 = label15.info;
        java.lang.String str18 = label15.toString();
        java.lang.Object obj19 = label15.info;
        label15.info = "[Ljava/lang/Class;";
        java.lang.String str22 = label15.toString();
        org.mockito.cglib.proxy.Enhancer enhancer23 = new org.mockito.cglib.proxy.Enhancer();
        enhancer23.setUseFactory(true);
        enhancer23.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor31 = null;
        org.mockito.asm.ClassAdapter classAdapter32 = new org.mockito.asm.ClassAdapter(classVisitor31);
        java.lang.Class<?> wildcardClass33 = classAdapter32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.ClassVisitor classVisitor35 = null;
        org.mockito.asm.ClassAdapter classAdapter36 = new org.mockito.asm.ClassAdapter(classVisitor35);
        java.lang.Class<?> wildcardClass37 = classAdapter36.getClass();
        java.lang.String str38 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass37);
        org.mockito.asm.ClassVisitor classVisitor39 = null;
        org.mockito.asm.ClassAdapter classAdapter40 = new org.mockito.asm.ClassAdapter(classVisitor39);
        java.lang.Class<?> wildcardClass41 = classAdapter40.getClass();
        java.lang.String str42 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass41);
        org.mockito.asm.ClassVisitor classVisitor43 = null;
        org.mockito.asm.ClassAdapter classAdapter44 = new org.mockito.asm.ClassAdapter(classVisitor43);
        java.lang.Class<?> wildcardClass45 = classAdapter44.getClass();
        boolean boolean46 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass45);
        java.lang.Class[] classArray47 = new java.lang.Class[] { wildcardClass33, wildcardClass37, wildcardClass41, wildcardClass45 };
        enhancer28.setInterfaces(classArray47);
        enhancer23.setInterfaces(classArray47);
        org.mockito.asm.ClassVisitor classVisitor50 = null;
        org.mockito.asm.ClassAdapter classAdapter51 = new org.mockito.asm.ClassAdapter(classVisitor50);
        java.lang.Class<?> wildcardClass52 = classAdapter51.getClass();
        java.lang.String str53 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass52);
        java.lang.String str54 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass52);
        org.mockito.asm.ClassVisitor classVisitor55 = null;
        org.mockito.asm.ClassAdapter classAdapter56 = new org.mockito.asm.ClassAdapter(classVisitor55);
        java.lang.Class<?> wildcardClass57 = classAdapter56.getClass();
        boolean boolean58 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        boolean boolean59 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass57);
        java.lang.Class[] classArray60 = new java.lang.Class[] { wildcardClass52, wildcardClass57 };
        enhancer23.setInterfaces(classArray60);
        enhancer23.setInterceptDuringConstruction(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy64 = enhancer23.getStrategy();
        enhancer23.setUseCache(true);
        java.lang.Class[] classArray67 = new java.lang.Class[] {};
        enhancer23.setInterfaces(classArray67);
        label15.info = enhancer23;
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter9.visitLineNumber(160, label15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "L1378527380" + "'", str14, "L1378527380");
        org.junit.Assert.assertNull(obj17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "L1884120127" + "'", str18, "L1884120127");
        org.junit.Assert.assertNull(obj19);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1884120127" + "'", str22, "L1884120127");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str34, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str38, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str42, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str53, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Lorg/mockito/asm/ClassAdapter;" + "'", str54, "Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(generatorStrategy64);
        org.junit.Assert.assertNotNull(classArray67);
    }

    @Test
    public void test04491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04491");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.Label label2 = new org.mockito.asm.Label();
        label0.info = label2;
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer4.setCallback(callback7);
        org.mockito.cglib.proxy.Enhancer enhancer9 = new org.mockito.cglib.proxy.Enhancer();
        enhancer9.setUseFactory(true);
        enhancer9.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback14 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray15 = new org.mockito.cglib.proxy.Callback[] { callback14 };
        enhancer9.setCallbacks(callbackArray15);
        enhancer4.setCallbacks(callbackArray15);
        boolean boolean18 = enhancer4.getUseCache();
        label0.info = enhancer4;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class20 = enhancer4.createClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: createClass does not accept callbacks");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L4800120" + "'", str1, "L4800120");
        org.junit.Assert.assertNotNull(callbackArray15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test04492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04492");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter5 = null;
        enhancer0.setCallbackFilter(callbackFilter5);
        org.mockito.cglib.proxy.Callback callback7 = null;
        enhancer0.setCallback(callback7);
        org.mockito.cglib.core.NamingPolicy namingPolicy9 = enhancer0.getNamingPolicy();
        enhancer0.setUseFactory(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy9);
    }

    @Test
    public void test04493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04493");
        org.mockito.cglib.core.Signature signature3 = new org.mockito.cglib.core.Signature("org/mockito/asm/ClassAdapter", "L1933965693");
        org.mockito.asm.ClassVisitor classVisitor4 = null;
        org.mockito.asm.ClassAdapter classAdapter5 = new org.mockito.asm.ClassAdapter(classVisitor4);
        java.lang.Class<?> wildcardClass6 = classAdapter5.getClass();
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        boolean boolean8 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        boolean boolean10 = signature3.equals((java.lang.Object) type9);
        org.mockito.asm.Type type11 = type9.getElementType();
        int int12 = type11.getSize();
        org.mockito.cglib.core.Local local13 = new org.mockito.cglib.core.Local(128, type11);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test04494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04494");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Callback callback1 = null;
        enhancer0.setCallback(callback1);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        enhancer0.setSerialVersionUID((java.lang.Long) 1L);
        org.mockito.cglib.core.NamingPolicy namingPolicy7 = enhancer0.getNamingPolicy();
        boolean boolean9 = namingPolicy7.equals((java.lang.Object) (byte) 100);
        org.mockito.cglib.core.ClassEmitter classEmitter10 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor11);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classAdapter13);
        org.mockito.cglib.core.ClassEmitter classEmitter15 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo16 = classEmitter15.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter17 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter15.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        classEmitter10.setTarget((org.mockito.asm.ClassVisitor) classEmitter17);
        org.mockito.cglib.core.ClassInfo classInfo20 = classEmitter17.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter21 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo22 = classEmitter21.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter23 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter21);
        classEmitter17.setTarget((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter24);
        org.mockito.cglib.core.ClassEmitter classEmitter27 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter26);
        boolean boolean28 = namingPolicy7.equals((java.lang.Object) classEmitter27);
        org.mockito.cglib.proxy.Enhancer enhancer29 = new org.mockito.cglib.proxy.Enhancer();
        org.mockito.cglib.proxy.Enhancer enhancer30 = new org.mockito.cglib.proxy.Enhancer();
        enhancer30.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback33 = null;
        enhancer30.setCallback(callback33);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter35 = null;
        enhancer30.setCallbackFilter(callbackFilter35);
        org.mockito.cglib.proxy.Callback callback37 = null;
        enhancer30.setCallback(callback37);
        org.mockito.cglib.core.NamingPolicy namingPolicy39 = enhancer30.getNamingPolicy();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.cglib.core.Local local42 = new org.mockito.cglib.core.Local(0, type41);
        int int43 = type41.getSort();
        java.lang.String str44 = type41.getClassName();
        java.lang.String str45 = type41.getClassName();
        boolean boolean46 = namingPolicy39.equals((java.lang.Object) type41);
        enhancer29.setNamingPolicy(namingPolicy39);
        org.mockito.cglib.proxy.Enhancer enhancer48 = new org.mockito.cglib.proxy.Enhancer();
        enhancer48.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback51 = null;
        enhancer48.setCallback(callback51);
        org.mockito.cglib.proxy.Callback callback53 = null;
        enhancer48.setCallback(callback53);
        org.mockito.cglib.proxy.Enhancer enhancer55 = new org.mockito.cglib.proxy.Enhancer();
        enhancer55.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback58 = null;
        enhancer55.setCallback(callback58);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter60 = null;
        enhancer55.setCallbackFilter(callbackFilter60);
        org.mockito.cglib.proxy.Callback callback62 = null;
        enhancer55.setCallback(callback62);
        org.mockito.cglib.core.NamingPolicy namingPolicy64 = enhancer55.getNamingPolicy();
        enhancer48.setNamingPolicy(namingPolicy64);
        boolean boolean66 = namingPolicy39.equals((java.lang.Object) enhancer48);
        org.mockito.asm.ClassVisitor classVisitor67 = null;
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor67);
        boolean boolean69 = namingPolicy39.equals((java.lang.Object) classAdapter68);
        org.mockito.asm.ClassAdapter classAdapter70 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classAdapter68);
        classEmitter27.setTarget((org.mockito.asm.ClassVisitor) classAdapter68);
        org.mockito.asm.Attribute attribute72 = null;
        // The following exception was thrown during execution in test generation
        try {
            classAdapter68.visitAttribute(attribute72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(classInfo16);
        org.junit.Assert.assertNull(classInfo20);
        org.junit.Assert.assertNull(classInfo22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(namingPolicy39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8 + "'", int43 == 8);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "double" + "'", str44, "double");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "double" + "'", str45, "double");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(namingPolicy64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test04495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04495");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        boolean boolean18 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass17);
        java.lang.Class[] classArray19 = new java.lang.Class[] { wildcardClass5, wildcardClass9, wildcardClass13, wildcardClass17 };
        enhancer0.setInterfaces(classArray19);
        boolean boolean21 = enhancer0.getAttemptLoad();
        org.mockito.cglib.proxy.Callback callback22 = null;
        enhancer0.setCallback(callback22);
        enhancer0.setUseFactory(false);
        enhancer0.setInterceptDuringConstruction(false);
        org.mockito.cglib.proxy.Enhancer enhancer28 = new org.mockito.cglib.proxy.Enhancer();
        enhancer28.setUseFactory(true);
        enhancer28.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback33 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray34 = new org.mockito.cglib.proxy.Callback[] { callback33 };
        enhancer28.setCallbacks(callbackArray34);
        boolean boolean36 = enhancer28.getAttemptLoad();
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy37 = enhancer28.getStrategy();
        enhancer0.setStrategy(generatorStrategy37);
        org.mockito.asm.MethodVisitor methodVisitor41 = null;
        org.mockito.asm.MethodAdapter methodAdapter42 = new org.mockito.asm.MethodAdapter(methodVisitor41);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter43 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter42);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter44 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter43);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter45 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter43);
        boolean boolean46 = generatorStrategy37.equals((java.lang.Object) localVariablesSorter43);
        org.mockito.asm.MethodAdapter methodAdapter47 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter43);
        // The following exception was thrown during execution in test generation
        try {
            localVariablesSorter43.visitFieldInsn(118, "org/mockito/asm/ClassAdapterL1933965693", "L1886236094", "org/mockito/asm/Type");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str6, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(callbackArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(generatorStrategy37);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test04496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04496");
        org.mockito.cglib.core.ClassEmitter classEmitter0 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor1 = null;
        org.mockito.asm.ClassAdapter classAdapter2 = new org.mockito.asm.ClassAdapter(classVisitor1);
        org.mockito.asm.ClassAdapter classAdapter3 = new org.mockito.asm.ClassAdapter(classVisitor1);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classAdapter3);
        org.mockito.cglib.core.ClassEmitter classEmitter5 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo6 = classEmitter5.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter7 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter5.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        classEmitter0.setTarget((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassInfo classInfo10 = classEmitter7.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter11 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo12 = classEmitter11.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter13 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        org.mockito.cglib.core.ClassEmitter classEmitter14 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter11);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter14);
        org.mockito.cglib.core.ClassEmitter classEmitter16 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo17 = classEmitter16.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter18 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter16);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter16);
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter7);
        org.mockito.cglib.core.ClassEmitter classEmitter22 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo23 = classEmitter22.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter24 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter25 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter26 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter22);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter22);
        org.mockito.cglib.core.ClassEmitter classEmitter28 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        org.mockito.asm.ClassAdapter classAdapter31 = new org.mockito.asm.ClassAdapter(classVisitor29);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classAdapter31);
        org.mockito.cglib.core.ClassEmitter classEmitter33 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo34 = classEmitter33.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter35 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter33.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        classEmitter28.setTarget((org.mockito.asm.ClassVisitor) classEmitter35);
        org.mockito.cglib.core.ClassInfo classInfo38 = classEmitter35.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter39 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo40 = classEmitter39.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter41 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        org.mockito.cglib.core.ClassEmitter classEmitter42 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter39);
        classEmitter35.setTarget((org.mockito.asm.ClassVisitor) classEmitter42);
        org.mockito.cglib.core.ClassEmitter classEmitter44 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter42);
        classEmitter7.setTarget((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassInfo classInfo46 = classEmitter44.getClassInfo();
        org.mockito.cglib.proxy.Enhancer enhancer47 = new org.mockito.cglib.proxy.Enhancer();
        enhancer47.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback50 = null;
        enhancer47.setCallback(callback50);
        org.mockito.cglib.proxy.Callback callback52 = null;
        enhancer47.setCallback(callback52);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy54 = enhancer47.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy55 = enhancer47.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter56 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor57);
        classEmitter56.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        boolean boolean61 = namingPolicy55.equals((java.lang.Object) classAdapter59);
        org.mockito.cglib.core.ClassEmitter classEmitter62 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classAdapter59);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classAdapter59);
        org.mockito.asm.ClassAdapter classAdapter64 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter44);
        org.mockito.cglib.core.ClassEmitter classEmitter65 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        org.mockito.asm.ClassAdapter classAdapter68 = new org.mockito.asm.ClassAdapter(classVisitor66);
        classEmitter65.setTarget((org.mockito.asm.ClassVisitor) classAdapter68);
        org.mockito.cglib.core.ClassEmitter classEmitter70 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo71 = classEmitter70.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter72 = new org.mockito.cglib.core.ClassEmitter();
        classEmitter70.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        classEmitter65.setTarget((org.mockito.asm.ClassVisitor) classEmitter72);
        org.mockito.cglib.core.ClassInfo classInfo75 = classEmitter72.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter76 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo77 = classEmitter76.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter78 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter76);
        org.mockito.cglib.core.ClassEmitter classEmitter79 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter76);
        classEmitter72.setTarget((org.mockito.asm.ClassVisitor) classEmitter79);
        org.mockito.cglib.core.ClassEmitter classEmitter81 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.cglib.core.ClassInfo classInfo82 = classEmitter81.getClassInfo();
        org.mockito.cglib.core.ClassEmitter classEmitter83 = new org.mockito.cglib.core.ClassEmitter((org.mockito.asm.ClassVisitor) classEmitter81);
        classEmitter72.setTarget((org.mockito.asm.ClassVisitor) classEmitter81);
        org.mockito.cglib.core.ClassInfo classInfo85 = classEmitter81.getClassInfo();
        org.mockito.asm.ClassAdapter classAdapter86 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter81);
        org.mockito.asm.ClassAdapter classAdapter87 = new org.mockito.asm.ClassAdapter((org.mockito.asm.ClassVisitor) classEmitter81);
        classEmitter44.setTarget((org.mockito.asm.ClassVisitor) classAdapter87);
        // The following exception was thrown during execution in test generation
        try {
            classAdapter87.visitOuterClass("L634753274", "L716910472", "L895177676");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(classInfo6);
        org.junit.Assert.assertNull(classInfo10);
        org.junit.Assert.assertNull(classInfo12);
        org.junit.Assert.assertNull(classInfo17);
        org.junit.Assert.assertNull(classInfo23);
        org.junit.Assert.assertNull(classInfo34);
        org.junit.Assert.assertNull(classInfo38);
        org.junit.Assert.assertNull(classInfo40);
        org.junit.Assert.assertNull(classInfo46);
        org.junit.Assert.assertNotNull(generatorStrategy54);
        org.junit.Assert.assertNotNull(namingPolicy55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(classInfo71);
        org.junit.Assert.assertNull(classInfo75);
        org.junit.Assert.assertNull(classInfo77);
        org.junit.Assert.assertNull(classInfo82);
        org.junit.Assert.assertNull(classInfo85);
    }

    @Test
    public void test04497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04497");
        org.mockito.cglib.core.Signature signature2 = new org.mockito.cglib.core.Signature("org/mockito/asm/ClassAdapter", "L1933965693");
        org.mockito.asm.ClassVisitor classVisitor3 = null;
        org.mockito.asm.ClassAdapter classAdapter4 = new org.mockito.asm.ClassAdapter(classVisitor3);
        java.lang.Class<?> wildcardClass5 = classAdapter4.getClass();
        boolean boolean6 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        boolean boolean7 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        boolean boolean9 = signature2.equals((java.lang.Object) type8);
        int int10 = type8.getSort();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor12 = null;
        org.mockito.asm.ClassAdapter classAdapter13 = new org.mockito.asm.ClassAdapter(classVisitor12);
        boolean boolean14 = type11.equals((java.lang.Object) classVisitor12);
        java.lang.String str15 = type11.getDescriptor();
        java.lang.String str16 = type11.getClassName();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor20 = null;
        org.mockito.asm.ClassAdapter classAdapter21 = new org.mockito.asm.ClassAdapter(classVisitor20);
        boolean boolean22 = type19.equals((java.lang.Object) classVisitor20);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str24 = type23.getDescriptor();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        boolean boolean30 = type27.equals((java.lang.Object) classVisitor28);
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type18, type19, type23, type25, type26, type27 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray31);
        boolean boolean33 = type11.equals((java.lang.Object) typeArray31);
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray31);
        int int35 = type8.getSize();
        org.mockito.asm.MethodVisitor methodVisitor38 = null;
        org.mockito.asm.MethodAdapter methodAdapter39 = new org.mockito.asm.MethodAdapter(methodVisitor38);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter40 = new org.mockito.cglib.core.LocalVariablesSorter((int) (byte) 0, "(VZVDDZ)Z", (org.mockito.asm.MethodVisitor) methodAdapter39);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter41 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter40);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter42 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter40);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter43 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter42);
        org.mockito.asm.MethodAdapter methodAdapter44 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter42);
        org.mockito.cglib.core.LocalVariablesSorter localVariablesSorter45 = new org.mockito.cglib.core.LocalVariablesSorter(localVariablesSorter42);
        org.mockito.asm.MethodAdapter methodAdapter46 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter42);
        org.mockito.asm.MethodAdapter methodAdapter47 = new org.mockito.asm.MethodAdapter((org.mockito.asm.MethodVisitor) localVariablesSorter42);
        boolean boolean48 = type8.equals((java.lang.Object) methodAdapter47);
        org.mockito.asm.Label label50 = null;
        // The following exception was thrown during execution in test generation
        try {
            methodAdapter47.visitLineNumber(124, label50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Z" + "'", str15, "Z");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "boolean" + "'", str16, "boolean");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "V" + "'", str24, "V");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(VZVDDZ)V" + "'", str32, "(VZVDDZ)V");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;" + "'", str34, "(VZVDDZ)Lorg/mockito/asm/ClassAdapter;");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test04498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04498");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.proxy.Enhancer enhancer7 = new org.mockito.cglib.proxy.Enhancer();
        enhancer7.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback10 = null;
        enhancer7.setCallback(callback10);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter12 = null;
        enhancer7.setCallbackFilter(callbackFilter12);
        org.mockito.cglib.proxy.Callback callback14 = null;
        enhancer7.setCallback(callback14);
        org.mockito.cglib.core.NamingPolicy namingPolicy16 = enhancer7.getNamingPolicy();
        enhancer0.setNamingPolicy(namingPolicy16);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        org.mockito.cglib.proxy.Enhancer enhancer20 = new org.mockito.cglib.proxy.Enhancer();
        enhancer20.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback23 = null;
        enhancer20.setCallback(callback23);
        org.mockito.cglib.proxy.Callback callback25 = null;
        enhancer20.setCallback(callback25);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer20.getStrategy();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor29 = null;
        org.mockito.asm.ClassAdapter classAdapter30 = new org.mockito.asm.ClassAdapter(classVisitor29);
        boolean boolean31 = type28.equals((java.lang.Object) classVisitor29);
        int int33 = type28.getOpcode(116);
        boolean boolean34 = generatorStrategy27.equals((java.lang.Object) 116);
        org.mockito.cglib.proxy.Enhancer enhancer35 = new org.mockito.cglib.proxy.Enhancer();
        enhancer35.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback38 = null;
        enhancer35.setCallback(callback38);
        org.mockito.cglib.proxy.Callback callback40 = null;
        enhancer35.setCallback(callback40);
        org.mockito.cglib.proxy.Enhancer enhancer42 = new org.mockito.cglib.proxy.Enhancer();
        enhancer42.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor45 = null;
        org.mockito.asm.ClassAdapter classAdapter46 = new org.mockito.asm.ClassAdapter(classVisitor45);
        java.lang.Class<?> wildcardClass47 = classAdapter46.getClass();
        java.lang.String str48 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass47);
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        java.lang.Class<?> wildcardClass51 = classAdapter50.getClass();
        java.lang.String str52 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass51);
        org.mockito.asm.ClassVisitor classVisitor53 = null;
        org.mockito.asm.ClassAdapter classAdapter54 = new org.mockito.asm.ClassAdapter(classVisitor53);
        java.lang.Class<?> wildcardClass55 = classAdapter54.getClass();
        java.lang.String str56 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass55);
        org.mockito.asm.ClassVisitor classVisitor57 = null;
        org.mockito.asm.ClassAdapter classAdapter58 = new org.mockito.asm.ClassAdapter(classVisitor57);
        java.lang.Class<?> wildcardClass59 = classAdapter58.getClass();
        boolean boolean60 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass59);
        java.lang.Class[] classArray61 = new java.lang.Class[] { wildcardClass47, wildcardClass51, wildcardClass55, wildcardClass59 };
        enhancer42.setInterfaces(classArray61);
        enhancer35.setInterfaces(classArray61);
        boolean boolean64 = generatorStrategy27.equals((java.lang.Object) enhancer35);
        org.mockito.cglib.proxy.Enhancer enhancer65 = new org.mockito.cglib.proxy.Enhancer();
        enhancer65.setUseFactory(true);
        enhancer65.setSerialVersionUID((java.lang.Long) (-1L));
        org.mockito.cglib.proxy.Enhancer enhancer70 = new org.mockito.cglib.proxy.Enhancer();
        enhancer70.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor73 = null;
        org.mockito.asm.ClassAdapter classAdapter74 = new org.mockito.asm.ClassAdapter(classVisitor73);
        java.lang.Class<?> wildcardClass75 = classAdapter74.getClass();
        java.lang.String str76 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        org.mockito.asm.ClassVisitor classVisitor77 = null;
        org.mockito.asm.ClassAdapter classAdapter78 = new org.mockito.asm.ClassAdapter(classVisitor77);
        java.lang.Class<?> wildcardClass79 = classAdapter78.getClass();
        java.lang.String str80 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass79);
        org.mockito.asm.ClassVisitor classVisitor81 = null;
        org.mockito.asm.ClassAdapter classAdapter82 = new org.mockito.asm.ClassAdapter(classVisitor81);
        java.lang.Class<?> wildcardClass83 = classAdapter82.getClass();
        java.lang.String str84 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass83);
        org.mockito.asm.ClassVisitor classVisitor85 = null;
        org.mockito.asm.ClassAdapter classAdapter86 = new org.mockito.asm.ClassAdapter(classVisitor85);
        java.lang.Class<?> wildcardClass87 = classAdapter86.getClass();
        boolean boolean88 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass87);
        java.lang.Class[] classArray89 = new java.lang.Class[] { wildcardClass75, wildcardClass79, wildcardClass83, wildcardClass87 };
        enhancer70.setInterfaces(classArray89);
        enhancer65.setInterfaces(classArray89);
        enhancer35.setInterfaces(classArray89);
        enhancer0.setInterfaces(classArray89);
        enhancer0.setSerialVersionUID((java.lang.Long) 0L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = enhancer0.create();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Callback is null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(namingPolicy16);
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 116 + "'", int33 == 116);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str48, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str52, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str56, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str76, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str80, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str84, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(classArray89);
    }

    @Test
    public void test04499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04499");
        org.mockito.cglib.proxy.Enhancer enhancer0 = new org.mockito.cglib.proxy.Enhancer();
        enhancer0.setUseFactory(true);
        org.mockito.cglib.proxy.Callback callback3 = null;
        enhancer0.setCallback(callback3);
        org.mockito.cglib.proxy.Callback callback5 = null;
        enhancer0.setCallback(callback5);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy7 = enhancer0.getStrategy();
        org.mockito.cglib.core.NamingPolicy namingPolicy8 = enhancer0.getNamingPolicy();
        org.mockito.cglib.core.ClassEmitter classEmitter9 = new org.mockito.cglib.core.ClassEmitter();
        org.mockito.asm.ClassVisitor classVisitor10 = null;
        org.mockito.asm.ClassAdapter classAdapter11 = new org.mockito.asm.ClassAdapter(classVisitor10);
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor10);
        classEmitter9.setTarget((org.mockito.asm.ClassVisitor) classAdapter12);
        boolean boolean14 = namingPolicy8.equals((java.lang.Object) classAdapter12);
        org.mockito.cglib.proxy.Enhancer enhancer15 = new org.mockito.cglib.proxy.Enhancer();
        enhancer15.setUseFactory(true);
        enhancer15.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback20 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray21 = new org.mockito.cglib.proxy.Callback[] { callback20 };
        enhancer15.setCallbacks(callbackArray21);
        boolean boolean23 = enhancer15.getAttemptLoad();
        boolean boolean24 = namingPolicy8.equals((java.lang.Object) enhancer15);
        enhancer15.setUseFactory(true);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy27 = enhancer15.getStrategy();
        org.mockito.asm.ClassVisitor classVisitor28 = null;
        org.mockito.asm.ClassAdapter classAdapter29 = new org.mockito.asm.ClassAdapter(classVisitor28);
        java.lang.Class<?> wildcardClass30 = classAdapter29.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        boolean boolean32 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass30);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass30);
        java.lang.String str34 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        boolean boolean35 = generatorStrategy27.equals((java.lang.Object) wildcardClass30);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor41 = null;
        org.mockito.asm.ClassAdapter classAdapter42 = new org.mockito.asm.ClassAdapter(classVisitor41);
        boolean boolean43 = type40.equals((java.lang.Object) classVisitor41);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str45 = type44.getDescriptor();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor49 = null;
        org.mockito.asm.ClassAdapter classAdapter50 = new org.mockito.asm.ClassAdapter(classVisitor49);
        boolean boolean51 = type48.equals((java.lang.Object) classVisitor49);
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type39, type40, type44, type46, type47, type48 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray52);
        org.mockito.cglib.core.Signature signature54 = new org.mockito.cglib.core.Signature("L1057808593", type37, typeArray52);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor58 = null;
        org.mockito.asm.ClassAdapter classAdapter59 = new org.mockito.asm.ClassAdapter(classVisitor58);
        boolean boolean60 = type57.equals((java.lang.Object) classVisitor58);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.VOID_TYPE;
        java.lang.String str62 = type61.getDescriptor();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type64 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.ClassVisitor classVisitor66 = null;
        org.mockito.asm.ClassAdapter classAdapter67 = new org.mockito.asm.ClassAdapter(classVisitor66);
        boolean boolean68 = type65.equals((java.lang.Object) classVisitor66);
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type56, type57, type61, type63, type64, type65 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray69);
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray69);
        org.mockito.cglib.proxy.Enhancer enhancer72 = new org.mockito.cglib.proxy.Enhancer();
        enhancer72.setUseFactory(true);
        enhancer72.setSerialVersionUID((java.lang.Long) (-1L));
        boolean boolean77 = type37.equals((java.lang.Object) (-1L));
        boolean boolean78 = generatorStrategy27.equals((java.lang.Object) type37);
        java.lang.String str79 = type37.getClassName();
        java.lang.String str80 = type37.toString();
        org.junit.Assert.assertNotNull(generatorStrategy7);
        org.junit.Assert.assertNotNull(namingPolicy8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(callbackArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(generatorStrategy27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str31, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str34, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "V" + "'", str45, "V");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(VZVDDZ)V" + "'", str53, "(VZVDDZ)V");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "V" + "'", str62, "V");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(VZVDDZ)V" + "'", str70, "(VZVDDZ)V");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(VZVDDZ)F" + "'", str71, "(VZVDDZ)F");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "float" + "'", str79, "float");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "F" + "'", str80, "F");
    }

    @Test
    public void test04500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04500");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        java.lang.String str1 = label0.toString();
        org.mockito.asm.Label label2 = new org.mockito.asm.Label();
        label0.info = label2;
        org.mockito.cglib.proxy.Enhancer enhancer4 = new org.mockito.cglib.proxy.Enhancer();
        enhancer4.setUseFactory(true);
        org.mockito.asm.ClassVisitor classVisitor7 = null;
        org.mockito.asm.ClassAdapter classAdapter8 = new org.mockito.asm.ClassAdapter(classVisitor7);
        java.lang.Class<?> wildcardClass9 = classAdapter8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.mockito.asm.ClassVisitor classVisitor11 = null;
        org.mockito.asm.ClassAdapter classAdapter12 = new org.mockito.asm.ClassAdapter(classVisitor11);
        java.lang.Class<?> wildcardClass13 = classAdapter12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass13);
        org.mockito.asm.ClassVisitor classVisitor15 = null;
        org.mockito.asm.ClassAdapter classAdapter16 = new org.mockito.asm.ClassAdapter(classVisitor15);
        java.lang.Class<?> wildcardClass17 = classAdapter16.getClass();
        java.lang.String str18 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass17);
        org.mockito.asm.ClassVisitor classVisitor19 = null;
        org.mockito.asm.ClassAdapter classAdapter20 = new org.mockito.asm.ClassAdapter(classVisitor19);
        java.lang.Class<?> wildcardClass21 = classAdapter20.getClass();
        boolean boolean22 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass21);
        java.lang.Class[] classArray23 = new java.lang.Class[] { wildcardClass9, wildcardClass13, wildcardClass17, wildcardClass21 };
        enhancer4.setInterfaces(classArray23);
        org.mockito.cglib.proxy.CallbackFilter callbackFilter25 = null;
        enhancer4.setCallbackFilter(callbackFilter25);
        org.mockito.cglib.proxy.Enhancer enhancer27 = new org.mockito.cglib.proxy.Enhancer();
        enhancer27.setUseFactory(true);
        enhancer27.setSerialVersionUID((java.lang.Long) 100L);
        org.mockito.cglib.proxy.Callback callback32 = null;
        org.mockito.cglib.proxy.Callback[] callbackArray33 = new org.mockito.cglib.proxy.Callback[] { callback32 };
        enhancer27.setCallbacks(callbackArray33);
        enhancer4.setCallbacks(callbackArray33);
        java.lang.Class class36 = null;
        enhancer4.setSuperclass(class36);
        org.mockito.cglib.core.GeneratorStrategy generatorStrategy38 = enhancer4.getStrategy();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.Class<?> wildcardClass40 = type39.getClass();
        enhancer4.setSuperclass((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.FLOAT_TYPE;
        java.lang.Class<?> wildcardClass43 = type42.getClass();
        boolean boolean44 = org.mockito.cglib.proxy.Enhancer.isEnhanced((java.lang.Class) wildcardClass43);
        enhancer4.setSuperclass((java.lang.Class) wildcardClass43);
        java.lang.String str46 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass43);
        label0.info = wildcardClass43;
        java.lang.String str48 = label0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int49 = label0.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "L1040618132" + "'", str1, "L1040618132");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str10, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str14, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org/mockito/asm/ClassAdapter" + "'", str18, "org/mockito/asm/ClassAdapter");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(callbackArray33);
        org.junit.Assert.assertNotNull(generatorStrategy38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str46, "Lorg/mockito/asm/Type;");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "L1040618132" + "'", str48, "L1040618132");
    }
}
