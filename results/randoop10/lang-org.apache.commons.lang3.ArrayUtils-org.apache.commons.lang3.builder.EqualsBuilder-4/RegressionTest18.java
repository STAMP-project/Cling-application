import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest18 {

    public static boolean debug = false;

    @Test
    public void test09001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09001");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray5);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7);
        byte[] byteArray9 = new byte[] {};
        byte[] byteArray14 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray9, byteArray14);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) -1);
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray9, (byte) -1);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray9);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray9, (int) (byte) -1, (int) '4');
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray9, (byte) 100);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray9);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 0);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(byteArray9, (byte) 100);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 1, -1, 10]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test09002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09002");
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) -1);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.clone(byteArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 100);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(byteArray9, (byte) 0);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.clone(byteArray9);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray14, (byte) -1);
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray23, (byte) 1);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(byteArray25, (byte) 100);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(byteArray25, (byte) 1);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray36, (byte) 1);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray38, (int) (byte) 0, (int) (byte) 1);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray25, byteArray41);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray25, (byte) 10);
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray25);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.clone(byteArray45);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray53, (byte) 1);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(byteArray55, (byte) 100);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(byteArray55, (byte) 1);
        java.lang.Byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray55);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray60, (byte) 100);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.add(byteArray62, (byte) 10);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.clone(byteArray64);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray64);
        byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.add(byteArray64, (byte) 100);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray68, (byte) 0);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray68, (byte) 10, 5);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray46, byteArray68);
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray14, byteArray46);
        int int78 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray46, (byte) 0, (int) (short) 10);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray46, (byte) 0, (int) '#');
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[10, 0, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[10, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[100, -1, 10, -1, -1, 100, -1, 0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 5 + "'", int78 == 5);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test09003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09003");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, 'a');
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(charArray5, ' ');
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray5, '4');
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.toObject(charArray5);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertNotNull(charArray19);
    }

    @Test
    public void test09004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09004");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        boolean boolean35 = equalsBuilder34.isEquals();
        long[] longArray37 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray37);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(longArray37, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray37);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray37, (long) 0);
        long[] longArray50 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.subarray(longArray50, 3, (int) (byte) 0);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray50);
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.subarray(longArray50, 5, (int) (short) 10);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.add(longArray57, 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder34.append(longArray37, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder34.append(true, false);
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray67);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray67);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray67);
        java.lang.Boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray67);
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray71);
        boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray72);
        java.lang.Boolean[] booleanArray79 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray79);
        boolean[] booleanArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray79, false);
        boolean[] booleanArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray79);
        java.lang.Boolean[] booleanArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray79);
        boolean[] booleanArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray79, false);
        boolean[] booleanArray88 = org.apache.commons.lang3.ArrayUtils.add(booleanArray86, true);
        boolean[] booleanArray91 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray88, (int) ' ', (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder63.append(booleanArray73, booleanArray91);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray73);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray73, true);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[100]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[100, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray82), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray83), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray86), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray88), "[false, false, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test09005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09005");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray0);
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, 5);
        int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray0, 1);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test09006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09006");
        byte[] byteArray0 = null;
        byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) 1);
        org.junit.Assert.assertNull(byteArray2);
    }

    @Test
    public void test09007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09007");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean[] booleanArray38 = new boolean[] { false, false, false, true, false, false };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38);
        boolean[] booleanArray46 = new boolean[] { false, false, false, true, false, false };
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray38, booleanArray46);
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray53, false);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray53, false);
        boolean[] booleanArray63 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, (int) (byte) 0, 0);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, 4, (int) '4');
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray57, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder0.append(booleanArray46, booleanArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder0.append((long) 4, (long) (-1));
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray75);
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.clone(charArray75);
        char[] charArray83 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray87 = new char[] { '#', 'a', 'a' };
        char[] charArray88 = org.apache.commons.lang3.ArrayUtils.addAll(charArray83, charArray87);
        char[] charArray90 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray83, ' ');
        char[] charArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder74.append(charArray77, charArray91);
        java.lang.Character[] charArray93 = org.apache.commons.lang3.ArrayUtils.toObject(charArray91);
        char[] charArray94 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray93);
        java.lang.Character[] charArray95 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray93);
        char[] charArray96 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray95);
        java.lang.Character[] charArray97 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray95);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray97);
    }

    @Test
    public void test09008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09008");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 1);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray26);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray26, (int) (byte) 0, 5);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
    }

    @Test
    public void test09009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09009");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray9, '4');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, 'a');
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray17, '4');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.subarray(charArray17, 3, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray24 = org.apache.commons.lang3.ArrayUtils.remove(charArray17, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
    }

    @Test
    public void test09010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09010");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        java.lang.String[] strArray29 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.stream.Stream<java.lang.String> strStream32 = strList30.parallelStream();
        boolean boolean33 = strList24.addAll((java.util.Collection<java.lang.String>) strList30);
        java.lang.Object obj34 = null;
        boolean boolean35 = strList30.equals(obj34);
        int int36 = strList30.size();
        float[] floatArray42 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray42);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray42, (float) 1);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.add(floatArray42, (float) 10);
        boolean boolean48 = strList30.remove((java.lang.Object) floatArray42);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray42, (float) (short) 100);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray5, floatArray42);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray5);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.remove(floatArray5, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 100.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test09011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09011");
        boolean[] booleanArray5 = new boolean[] { false, true, false, false, false };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray9, true, (int) (byte) 100);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray9, false);
        short[] shortArray19 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray19, (short) (byte) 100, (int) 'a');
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(shortArray19, (short) (byte) 1);
        boolean[] booleanArray25 = new boolean[] {};
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray25, false);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray25, false);
        java.lang.Character[] charArray30 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray30, '4');
        java.lang.Character[] charArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray30);
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray30);
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray30);
        java.lang.String[] strArray38 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.stream.Stream<java.lang.String> strStream41 = strList39.parallelStream();
        java.lang.String[] strArray44 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.stream.Stream<java.lang.String> strStream47 = strList45.parallelStream();
        boolean boolean48 = strList39.addAll((java.util.Collection<java.lang.String>) strList45);
        java.util.stream.Stream<java.lang.String> strStream49 = strList39.parallelStream();
        boolean boolean51 = strList39.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray56 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray65 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray65);
        float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.remove(floatArray65, (int) (short) 1);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray59, floatArray68);
        boolean boolean70 = strList57.equals((java.lang.Object) floatArray69);
        int int71 = strList57.size();
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray72, (int) (byte) 1);
        boolean boolean75 = strList57.contains((java.lang.Object) int74);
        boolean boolean76 = strList39.addAll((java.util.Collection<java.lang.String>) strList57);
        boolean boolean77 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int29, (java.lang.Object) charArray30, (java.util.Collection<java.lang.String>) strList39);
        java.lang.Object obj78 = null;
        java.lang.String[] strArray79 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray81 = org.apache.commons.lang3.ArrayUtils.add(strArray79, "{true,true}");
        java.lang.String[] strArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray81);
        boolean boolean83 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int29, obj78, strArray82);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) strArray82);
        java.lang.String[] strArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray82);
        boolean boolean86 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int14, (java.lang.Object) shortArray19, strArray85);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strStream49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 4 + "'", int71 == 4);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test09012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09012");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        short[] shortArray38 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray42 = new java.lang.Short[] {};
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray38, shortArray45);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray45, (int) '4', (int) (short) 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray45, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray59 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray59, (short) (byte) 0);
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, (int) (byte) 100, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append(shortArray45, shortArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder31.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder31.append((long) (byte) 10, (long) (short) -1);
        java.lang.Boolean[] booleanArray80 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray80);
        boolean[] booleanArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray80, true);
        java.lang.Boolean[] booleanArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray80);
        boolean[] booleanArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray80, false);
        boolean[] booleanArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray80);
        java.lang.Boolean[] booleanArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray80);
        java.lang.Double[] doubleArray94 = new java.lang.Double[] { 100.0d, (-1.0d), 100.0d, 100.0d, (-1.0d) };
        java.lang.Double[] doubleArray95 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray94);
        double[] doubleArray97 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray95, (double) 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder76.append((java.lang.Object[]) booleanArray88, (java.lang.Object[]) doubleArray95);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray81), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray83), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray86), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray87), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray88);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test09013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09013");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 10);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray16, (short) (byte) 1);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray18, (short) (byte) 100);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray18);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray21, (short) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[100, 0, 0, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[100, 0, 0, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
    }

    @Test
    public void test09014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09014");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) -1, (int) (short) 100);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4);
        short[] shortArray9 = null;
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.add(shortArray10, (short) 100);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray10, (short) 0);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.clone(shortArray10);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray15, 1, 0);
        java.lang.Short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray18);
        short[] shortArray25 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray29 = new java.lang.Short[] {};
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29, (short) 1);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray25, shortArray32);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray32);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray18, shortArray32);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[100]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test09015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09015");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        java.lang.Long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray6);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray6);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray6, (long) (-1));
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray17 = org.apache.commons.lang3.ArrayUtils.remove(longArray6, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test09016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09016");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray9, '4');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, '4');
        java.lang.Character[] charArray18 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19, '4');
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) charArray18, (java.lang.Object[]) charArray19);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19, '#');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
    }

    @Test
    public void test09017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09017");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, true);
        boolean[] booleanArray13 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray13, (int) (byte) 0, 0);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray17);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray17);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray17, false, (int) (short) 10);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test09018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09018");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        java.lang.Long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) longArray11);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray11);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[10, 1, -1, 1, -1, 100]");
    }

    @Test
    public void test09019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09019");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray8);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test09020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09020");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) -1);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) 0);
        short[] shortArray15 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray19 = new java.lang.Short[] {};
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray19);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray19, (short) 1);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray15, shortArray22);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) 0, 0);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.add(shortArray15, (int) (byte) 0, (short) 0);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray29, (short) (byte) 1, (int) (short) 0);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray29, (short) (byte) -1, 0);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray29, (int) (byte) 100, (int) (byte) 100);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray38);
        java.lang.Short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray38);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.clone(shortArray38);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray38);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test09021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09021");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray1, (long) '4');
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray1, (long) (byte) -1);
        long[] longArray14 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(longArray14, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray14);
        boolean boolean19 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray14);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray14);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray14);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.clone(longArray14);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray22);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.add(longArray22, (long) (short) 10);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray1, longArray26);
        java.lang.Long[] longArray33 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray33);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray33);
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.add(longArray35, (int) (byte) 1, 1L);
        long[] longArray40 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, 0L);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray40);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray44);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(longArray45, (long) 4);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray45, (long) 4, 5);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray35, longArray45);
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.addAll(longArray1, longArray45);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray1);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[-1, 10]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[0, 1, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[-1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test09022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09022");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray29);
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray29);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray31, (double) 0L);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray33, (double) (short) 10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 0.0, -1.0]");
    }

    @Test
    public void test09023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09023");
        short[] shortArray4 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 100, (int) 'a');
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 1, 3);
        short[] shortArray16 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray16, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray20 = new java.lang.Short[] {};
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray20);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray20, (short) 1);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray16, shortArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray16);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(shortArray16, (short) (byte) 100);
        java.lang.Short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (short) (byte) 1);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.remove(shortArray30, (int) (short) 0);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray4, shortArray32);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[100, 0, 0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[0, 0, 1, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test09024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09024");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray8, 11);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[11]");
    }

    @Test
    public void test09025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09025");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray13);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.clone(floatArray13);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray18, (int) (byte) 1, 2);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray18, 100.0f);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray23, (float) (byte) 0);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.remove(floatArray23, 0);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[1.0, 100.0]");
    }

    @Test
    public void test09026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09026");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        double[] doubleArray40 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray32, doubleArray40);
        float[] floatArray46 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray49 = new float[] { (byte) -1, 1L };
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray49, (float) 10L);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray49);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray40, (java.lang.Object) boolean52);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray40);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray40, (double) (byte) 0, (double) 2);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray40);
        double[] doubleArray63 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray63, (double) (byte) 100, 1.0d);
        double[] doubleArray71 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray63, doubleArray71);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray72);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray72, 0.0d, (int) (byte) 100, (-1.0d));
        int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray72, (double) 100L);
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray72);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray72, (double) (byte) 0, (double) 10);
        double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray40, doubleArray72);
        int int87 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray72, (double) 11, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.add(doubleArray72, 10, (double) 3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 3 + "'", int58 == 3);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 10.0, 0.0, 1.0, -1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test09027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09027");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, true);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11, true);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray15, true);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[true, false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test09028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09028");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray10 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray14 = new char[] { '#', 'a', 'a' };
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray14);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray14, ' ', 2);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.subarray(charArray14, 0, (int) (byte) 10);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.add(charArray21, ' ');
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray4, charArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, 'a');
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray23);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a,  ]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test09029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09029");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray8);
        java.lang.Long[] longArray15 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray15);
        float[] floatArray22 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray22, 0.0f);
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        long[] longArray28 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray28);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray26, (java.lang.Object) longArray28);
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.addAll(longArray16, longArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray8, longArray16);
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) '#');
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray8, (long) (byte) 10);
        java.lang.Long[] longArray37 = org.apache.commons.lang3.ArrayUtils.toObject(longArray8);
        java.lang.Long[] longArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray37);
        long[] longArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray38);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[0, 1, 100, 100, 0, -1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[-1, 35]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[-1]");
    }

    @Test
    public void test09030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09030");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray5, (float) 10);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray5, 5, (float) 7);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray11, (float) 100L);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray11, 5, (int) (short) 0);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 100.0, 100.0, 10.0, 35.0, 7.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 10.0, 35.0, 7.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]");
    }

    @Test
    public void test09031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09031");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Byte[] byteArray22 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray22, (byte) 1);
        java.lang.Byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray22);
        java.lang.Byte[][] byteArray26 = org.apache.commons.lang3.ArrayUtils.add(byteArray12, byteArray25);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray25);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 100, -1, -1, 0]");
    }

    @Test
    public void test09032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09032");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, (int) (byte) 1);
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray0);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray3, (int) '#');
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray3);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray14);
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray15, intArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray16, (int) (byte) 0);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray16);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray21, (int) (byte) 1);
        int[] intArray24 = new int[] {};
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray24, intArray25);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.addAll(intArray21, intArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder7.append(intArray20, intArray24);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray20, (int) (short) -1);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray20, (int) ' ', 3);
        int[] intArray39 = new int[] { 100, 1, (byte) 0, 2, (short) -1 };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray20, intArray39);
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray39);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(intArray39, 1);
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.addAll(intArray6, intArray39);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 0, 2, -1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 0, 2, -1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 0, 2, -1]");
    }

    @Test
    public void test09033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09033");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) (byte) 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray11, (short) 0);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.remove(shortArray11, 0);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray11);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.remove(shortArray11, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09034");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, (int) (byte) 1);
        int[] intArray3 = new int[] {};
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray3, intArray4);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.addAll(intArray0, intArray3);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, (int) '4', (int) (byte) 1);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray0, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray18 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray22 = new char[] { '#', 'a', 'a' };
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray18, charArray22);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray18, ' ');
        char[] charArray31 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray35 = new char[] { '#', 'a', 'a' };
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.addAll(charArray31, charArray35);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray35, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder12.append((java.lang.Object) ' ', (java.lang.Object) charArray35);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder12.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray53);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray54, intArray55);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(intArray55, (int) '4');
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.add(intArray55, (int) (short) 100);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray55);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray55);
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray55, (int) (short) 1);
        int[] intArray65 = new int[] {};
        int[] intArray66 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray65, intArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder46.append(intArray55, intArray66);
        int[] intArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray66);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray69);
        int[] intArray73 = org.apache.commons.lang3.ArrayUtils.subarray(intArray69, 5, (int) (byte) 1);
        int[] intArray74 = org.apache.commons.lang3.ArrayUtils.addAll(intArray0, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray77 = org.apache.commons.lang3.ArrayUtils.add(intArray73, (int) (byte) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[]");
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[]");
    }

    @Test
    public void test09035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09035");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(floatArray5, (float) 'a');
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray5, (float) (short) 100);
        float[] floatArray21 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.remove(floatArray21, (int) (short) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray21);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray5, floatArray21);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray26);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray26, (int) '#', 9);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray26);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[35.0, 10.0, 100.0, 100.0, -1.0, 35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[]");
    }

    @Test
    public void test09036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09036");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        java.lang.Double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray29, (-1.0d));
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray29);
        java.lang.Short[] shortArray33 = new java.lang.Short[] {};
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33, (short) 1);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33, (short) 0);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray38, (short) -1);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray38, (short) 0);
        java.lang.Short[] shortArray43 = new java.lang.Short[] {};
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43, (short) 1);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.clone(shortArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray38, shortArray47);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray47, (short) (byte) 1);
        short[] shortArray56 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray56, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray56);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray56, (short) (byte) 0);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray62, (short) (byte) 10);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray62, (short) (byte) -1);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray62);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray67, (short) -1, (int) (byte) 100);
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.add(shortArray67, 0, (short) 100);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.contains(shortArray67, (short) (byte) -1);
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray47, shortArray67);
        int int78 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray29, (java.lang.Object) shortArray76, 4);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[100, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[100, 100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
    }

    @Test
    public void test09037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09037");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, (float) (short) 100);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) 6);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, 0.0f, (int) (short) 10);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test09038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09038");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, 2);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(intArray22, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray22);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.add(intArray22, (int) (byte) 10);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(intArray22, 7);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray22, 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test09039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09039");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 100);
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) -1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 0, 100, -1, -1, 0]");
    }

    @Test
    public void test09040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09040");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        java.lang.Boolean[] booleanArray38 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray47 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray47, (int) (byte) 0, 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray47, true);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray41, booleanArray47);
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray57);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray58);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray58, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder34.append(booleanArray47, booleanArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder62.append(true, true);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
    }

    @Test
    public void test09041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09041");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((short) (byte) 100, (short) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((float) (-1L), (float) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder37.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder37.append('a', '4');
        boolean boolean46 = equalsBuilder37.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder37.append((short) (byte) 0, (short) 0);
        boolean[] booleanArray50 = null;
        java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray54);
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray55, (int) (short) 10, 3);
        long[] longArray60 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(longArray60, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray60);
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.clone(longArray60);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray60);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray60);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.contains(longArray60, (long) (short) 100);
        long[] longArray71 = org.apache.commons.lang3.ArrayUtils.add(longArray60, (long) '#');
        boolean boolean73 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray58, (java.lang.Object) longArray71, true);
        boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray58);
        boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray74, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray74);
        java.lang.Boolean[] booleanArray81 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray81);
        boolean[] booleanArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray81);
        int int84 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) booleanArray83);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray74, booleanArray83);
        boolean[] booleanArray87 = org.apache.commons.lang3.ArrayUtils.add(booleanArray74, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder49.append(booleanArray50, booleanArray87);
        java.lang.Boolean boolean89 = equalsBuilder49.build();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[-1, 35]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[]");
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray82), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray83), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 3 + "'", int84 == 3);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(booleanArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray87), "[true]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertEquals("'" + boolean89 + "' != '" + false + "'", boolean89, false);
    }

    @Test
    public void test09042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09042");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.appendSuper(false);
        equalsBuilder0.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append('#', ' ');
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray39);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray39);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray39, '#');
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.clone(charArray39);
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.subarray(charArray44, (int) ' ', (int) (byte) 0);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.add(charArray44, (int) (short) 0, 'a');
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray44, '4', (int) (byte) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray44);
        java.lang.Object obj55 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder38.append((java.lang.Object) charArray44, obj55);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder56);
    }

    @Test
    public void test09043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09043");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray1);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray10, (long) 0, 4);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray10, (long) (short) 0);
        long[] longArray17 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(longArray17, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray17);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray15, longArray17);
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray17, (long) 8);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[-1]");
    }

    @Test
    public void test09044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09044");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        java.lang.Object[] objArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray9);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9, (float) (byte) 10);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9, (float) 'a');
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) (byte) -1, (int) (short) 1);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray15, 6, 2);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray15, (int) (short) 1, 2);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[100.0]");
    }

    @Test
    public void test09045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09045");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '4');
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray25 = new char[] { '#', 'a', 'a' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray25);
        java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray21);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray28);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.remove(charArray9, (int) (short) 1);
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray9);
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray34, ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{4,#,a,4,#}" + "'", str27, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, a, a]");
    }

    @Test
    public void test09046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09046");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray20 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.remove(floatArray29, (int) (short) 1);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray23, floatArray32);
        boolean boolean34 = strList21.equals((java.lang.Object) floatArray33);
        int int35 = strList21.size();
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray36, (int) (byte) 1);
        boolean boolean39 = strList21.contains((java.lang.Object) int38);
        boolean boolean40 = strList3.addAll((java.util.Collection<java.lang.String>) strList21);
        strList21.clear();
        byte[] byteArray44 = new byte[] { (byte) 0, (byte) -1 };
        byte[] byteArray47 = new byte[] { (byte) 0, (byte) -1 };
        byte[][] byteArray48 = new byte[][] { byteArray44, byteArray47 };
        byte[] byteArray51 = new byte[] { (byte) 0, (byte) -1 };
        byte[] byteArray54 = new byte[] { (byte) 0, (byte) -1 };
        byte[][] byteArray55 = new byte[][] { byteArray51, byteArray54 };
        byte[][][] byteArray56 = new byte[][][] { byteArray48, byteArray55 };
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) 10, (byte) 0, (byte) 10, (byte) 10 };
        byte[] byteArray68 = new byte[] { (byte) 1, (byte) 10, (byte) 0, (byte) 10, (byte) 10 };
        byte[] byteArray74 = new byte[] { (byte) 1, (byte) 10, (byte) 0, (byte) 10, (byte) 10 };
        byte[] byteArray80 = new byte[] { (byte) 1, (byte) 10, (byte) 0, (byte) 10, (byte) 10 };
        byte[][] byteArray81 = new byte[][] { byteArray62, byteArray68, byteArray74, byteArray80 };
        byte[][][] byteArray82 = org.apache.commons.lang3.ArrayUtils.add(byteArray56, byteArray81);
        boolean boolean83 = strList21.equals((java.lang.Object) byteArray56);
        java.util.Iterator<java.lang.String> strItor84 = strList21.iterator();
        java.util.Iterator<java.lang.String> strItor85 = strList21.iterator();
        java.util.stream.Stream<java.lang.String> strStream86 = strList21.stream();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0, -1]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0, -1]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[0, -1]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, 10, 0, 10, 10]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1, 10, 0, 10, 10]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[1, 10, 0, 10, 10]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[1, 10, 0, 10, 10]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strItor84);
        org.junit.Assert.assertNotNull(strItor85);
        org.junit.Assert.assertNotNull(strStream86);
    }

    @Test
    public void test09047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09047");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.remove(intArray26, 3);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray28, (int) ' ');
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.clone(intArray30);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, -1, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 1, 0, -1, 1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 1, 0, -1, 1]");
    }

    @Test
    public void test09048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09048");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.add(shortArray4, (short) -1);
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.add(shortArray4, 0, (short) 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray10, (short) (byte) 100);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test09049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09049");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "class [Ljava.lang.Integer;", "{true,true}", "class [Ljava.lang.Integer;", "100", "{{},{}}", "{-1,1,0,0,100}" };
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "class [Ljava.lang.Integer;", "{true,true}", "class [Ljava.lang.Integer;", "100", "{{},{}}", "{-1,1,0,0,100}" };
        java.lang.CharSequence[][] charSequenceArray14 = new java.lang.CharSequence[][] { charSequenceArray6, charSequenceArray13 };
        java.lang.String[][] strArray15 = new java.lang.String[][] {};
        java.lang.String[][] strArray16 = org.apache.commons.lang3.ArrayUtils.clone(strArray15);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.CharSequence[][]) strArray15);
        java.lang.String[][] strArray18 = org.apache.commons.lang3.ArrayUtils.clone(strArray15);
        java.lang.CharSequence[][] charSequenceArray19 = org.apache.commons.lang3.ArrayUtils.addAll(charSequenceArray14, (java.lang.CharSequence[][]) strArray15);
        java.lang.CharSequence[][] charSequenceArray22 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.CharSequence[][]) strArray15, 4, (int) (byte) 100);
        java.lang.Comparable<java.lang.String>[][] strComparableArray25 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.Comparable<java.lang.String>[][]) strArray15, (int) (byte) -1, 11);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertNotNull(strComparableArray25);
    }

    @Test
    public void test09050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09050");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((int) (short) 0, (int) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder53.append((long) 0, 10L);
        java.lang.Character[] charArray57 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray57, '4');
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray59);
        java.lang.Character[] charArray61 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61);
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray61);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray63);
        char[] charArray70 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray74 = new char[] { '#', 'a', 'a' };
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.addAll(charArray70, charArray74);
        java.lang.String str76 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray70);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray63, charArray70);
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.subarray(charArray63, 4, (int) '#');
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray60, charArray80);
        int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray80, '#');
        char[] charArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray80);
        java.lang.Character[] charArray90 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray90);
        char[] charArray93 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray91, '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder56.append(charArray80, charArray93);
        char[] charArray97 = org.apache.commons.lang3.ArrayUtils.add(charArray93, 0, '4');
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{4,#,a,4,#}" + "'", str76, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(charArray97);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray97), "4 #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray97), "4 #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray97), "[4,  , #, 4, a, a]");
    }

    @Test
    public void test09051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09051");
        byte[] byteArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray0, (byte) 1, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test09052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09052");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        java.lang.Long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        java.lang.Object[] objArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray3);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray3, (long) ' ');
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray3, (long) 3);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray3, (long) (byte) -1);
        java.lang.Object obj11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) (byte) -1, obj11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Array must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[]");
    }

    @Test
    public void test09053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09053");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        java.lang.Object[] objArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray9);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9, (float) (byte) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray13, (float) 0L);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray13, (float) (short) 10);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray13, (float) (byte) 10);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 100.0, 100.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 100.0, 100.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray20);
    }

    @Test
    public void test09054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09054");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        java.lang.String[] strArray29 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.stream.Stream<java.lang.String> strStream32 = strList30.parallelStream();
        boolean boolean33 = strList24.addAll((java.util.Collection<java.lang.String>) strList30);
        java.lang.Object obj34 = null;
        boolean boolean35 = strList30.equals(obj34);
        int int36 = strList30.size();
        float[] floatArray42 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray42);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray42, (float) 1);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.add(floatArray42, (float) 10);
        boolean boolean48 = strList30.remove((java.lang.Object) floatArray42);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray42, (float) (short) 100);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray5, floatArray42);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, 0, (int) (byte) 100);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strStream32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 100.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test09055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09055");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9);
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray9, (double) 10.0f);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[52.0, 10.0, -1.0]");
    }

    @Test
    public void test09056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09056");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append('4', 'a');
        float[] floatArray46 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray46);
        float[] floatArray53 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray56 = new float[] { (byte) -1, 1L };
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray56, (float) 10L);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray53, floatArray56);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray56);
        float[] floatArray66 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray66);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray56, floatArray66);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray75 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray75);
        float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.remove(floatArray75, (int) (short) 1);
        float[] floatArray79 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray69, floatArray78);
        float[] floatArray81 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray79, (float) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder34.append(floatArray66, floatArray81);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray81);
        int int86 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray81, (float) 0, 5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[-1.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
    }

    @Test
    public void test09057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09057");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) (-1L), (int) (short) 100, (double) 100.0f);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray32);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray37, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
    }

    @Test
    public void test09058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09058");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray18 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.stream.Stream<java.lang.String> strStream21 = strList19.parallelStream();
        java.util.Iterator<java.lang.String> strItor22 = strList19.iterator();
        java.lang.String[] strArray27 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray36 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray36);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.remove(floatArray36, (int) (short) 1);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray30, floatArray39);
        boolean boolean41 = strList28.equals((java.lang.Object) floatArray40);
        int int42 = strList28.size();
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray43, (int) (byte) 1);
        boolean boolean46 = strList28.contains((java.lang.Object) int45);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray53, (byte) 1);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(byteArray55, (byte) 100);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(byteArray55, (byte) 1);
        java.lang.Byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray55);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray60, (byte) 100);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.add(byteArray62, (byte) 10);
        boolean boolean65 = strList28.contains((java.lang.Object) byteArray62);
        boolean boolean66 = strList19.addAll((java.util.Collection<java.lang.String>) strList28);
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.stream.Stream<java.lang.String> strStream74 = strList72.parallelStream();
        boolean boolean75 = strList19.removeAll((java.util.Collection<java.lang.String>) strList72);
        boolean boolean76 = strList3.contains((java.lang.Object) strList19);
        int int77 = strList19.size();
        java.lang.Object[] objArray78 = strList19.toArray();
        java.util.Iterator<java.lang.String> strItor79 = strList19.iterator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strStream74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[1]");
        org.junit.Assert.assertNotNull(strItor79);
    }

    @Test
    public void test09059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09059");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.appendSuper(false);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray47 = new java.lang.Byte[][] { byteArray40, byteArray46 };
        java.lang.Byte[][] byteArray50 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray47, (int) '#', 10);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray57);
        java.lang.Byte[][] byteArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray47, (java.lang.Object) intArray57);
        java.lang.Integer[] intArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray57);
        java.lang.Short[] shortArray61 = null;
        java.lang.Short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray61);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder34.append((java.lang.Object[]) intArray57, (java.lang.Object[]) shortArray63);
        java.lang.Integer[] intArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray57);
        int[] intArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray57, 2);
        int[] intArray68 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray68, (int) (byte) 1);
        int[] intArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray68);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray71, (int) '#');
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) intArray57, (java.lang.Object) intArray71);
        int[] intArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray57);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 1, 0, 10, -1, 1]");
    }

    @Test
    public void test09060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09060");
        double[] doubleArray0 = null;
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray0, (int) 'a', (int) (short) 1);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test09061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09061");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray26);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) '#');
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 0.0d);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 0.0d);
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray35);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 0.0, 1.0]");
    }

    @Test
    public void test09062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09062");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10, (double) (byte) 100);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray3);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        java.lang.Double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder18 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray24 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray28 = new char[] { '#', 'a', 'a' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray24, charArray28);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray24, ' ');
        char[] charArray37 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray41 = new char[] { '#', 'a', 'a' };
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.addAll(charArray37, charArray41);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray41, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder18.append((java.lang.Object) ' ', (java.lang.Object) charArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder18.append((int) (short) 1, 10);
        boolean boolean50 = equalsBuilder18.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder18.append('a', '#');
        java.lang.Boolean boolean54 = equalsBuilder18.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder18.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append('a', '#');
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray17, (java.lang.Object) equalsBuilder59);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test09063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09063");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        java.lang.Integer[][][][] intArray10 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray11 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray12 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray13 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray14 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray15 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][][] intArray16 = new java.lang.Integer[][][][][] { intArray10, intArray11, intArray12, intArray13, intArray14, intArray15 };
        java.lang.Integer[][][][] intArray17 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray18 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray19 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray20 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray21 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray22 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][][] intArray23 = new java.lang.Integer[][][][][] { intArray17, intArray18, intArray19, intArray20, intArray21, intArray22 };
        java.lang.Integer[][][][] intArray24 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray25 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray26 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray27 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray28 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray29 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][][] intArray30 = new java.lang.Integer[][][][][] { intArray24, intArray25, intArray26, intArray27, intArray28, intArray29 };
        java.lang.Integer[][][][] intArray31 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray32 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray33 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray34 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray35 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray36 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][][] intArray37 = new java.lang.Integer[][][][][] { intArray31, intArray32, intArray33, intArray34, intArray35, intArray36 };
        java.lang.Integer[][][][] intArray38 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray39 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray40 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray41 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray42 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][] intArray43 = new java.lang.Integer[][][][] {};
        java.lang.Integer[][][][][] intArray44 = new java.lang.Integer[][][][][] { intArray38, intArray39, intArray40, intArray41, intArray42, intArray43 };
        java.lang.Integer[][][][][][] intArray45 = new java.lang.Integer[][][][][][] { intArray16, intArray23, intArray30, intArray37, intArray44 };
        java.lang.Integer[][][][][][] intArray48 = org.apache.commons.lang3.ArrayUtils.subarray(intArray45, (int) (byte) 0, 0);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) doubleArray9, (java.lang.Object[]) intArray48);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test09064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09064");
        float[] floatArray0 = null;
        float[] floatArray2 = org.apache.commons.lang3.ArrayUtils.add(floatArray0, (float) 5);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[5.0]");
    }

    @Test
    public void test09065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09065");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 100.0f);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test09066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09066");
        double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray0, (double) 100.0f);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray0, (double) 9, 3, 0.0d);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray0, (double) 0L);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test09067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09067");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, true);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11, false);
        java.lang.Boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11, false);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray18);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray29 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray33 = new char[] { '#', 'a', 'a' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray33);
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray29, ' ');
        char[] charArray42 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray46 = new char[] { '#', 'a', 'a' };
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.addAll(charArray42, charArray46);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray46, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder23.append((java.lang.Object) ' ', (java.lang.Object) charArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder51.append(0.0d, (double) 10);
        long[] longArray57 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray57);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(longArray57, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray57);
        boolean boolean62 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray57);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray57);
        java.lang.Long[] longArray64 = org.apache.commons.lang3.ArrayUtils.toObject(longArray63);
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray64, (long) 'a');
        java.lang.Long[] longArray67 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray67);
        long[] longArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray67);
        java.lang.Long[] longArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray67);
        java.lang.Object[] objArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray70);
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray70);
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.subarray(longArray72, 7, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder51.append(longArray66, longArray72);
        java.lang.Boolean[] booleanArray80 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray80);
        boolean[] booleanArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray80);
        boolean[] booleanArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray80);
        java.lang.Boolean[] booleanArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray80);
        boolean boolean86 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder76, (java.lang.Object) booleanArray80, false);
        boolean[] booleanArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray80);
        boolean[] booleanArray88 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray22, booleanArray87);
        boolean[] booleanArray89 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray88);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[-1]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[-1]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[]");
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray81), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray82), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray83), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(booleanArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray87), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray88), "[true, false, true, true, true, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray89), "[true, false, true, true, true, false, true, true]");
    }

    @Test
    public void test09068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09068");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 0);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(shortArray5, (short) (byte) 0);
        int int19 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) shortArray5);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray5);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test09069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09069");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray9);
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray9);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) charArray5, (java.lang.Object) charArray12);
        java.lang.Character[] charArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray14);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray14);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray16);
        char[] charArray23 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray27 = new char[] { '#', 'a', 'a' };
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.addAll(charArray23, charArray27);
        java.lang.String str29 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray23);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray16, charArray23);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray12, charArray16);
        char[] charArray32 = null;
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray32);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray43 = new char[] { '#', 'a', 'a' };
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.addAll(charArray39, charArray43);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray43, 'a', (int) (byte) 0);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray43, '4');
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray33, charArray43);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.add(charArray43, '#');
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray12, charArray43);
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.add(charArray43, (int) (short) 1, '4');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{4,#,a,4,#}" + "'", str29, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, a, a, #]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, 4, a, a]");
    }

    @Test
    public void test09070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09070");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        double[] doubleArray40 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray32, doubleArray40);
        float[] floatArray46 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray49 = new float[] { (byte) -1, 1L };
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray49, (float) 10L);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray49);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray40, (java.lang.Object) boolean52);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray40);
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray40);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray40, (double) (short) 1);
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray40, 2, (int) (byte) 100);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray61, (double) 0L, (double) (byte) 0);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray61, (double) 6, 10.0d);
        java.lang.Double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray61);
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray61, (double) 9, (double) 1L);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    }

    @Test
    public void test09071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09071");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, 'a');
        java.lang.Character[] charArray12 = org.apache.commons.lang3.ArrayUtils.toObject(charArray11);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray11, ' ', 8);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test09072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09072");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) 100L, 2, (double) (short) -1);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) 100.0f, (int) (short) 100);
        double[] doubleArray18 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, (double) (byte) 100, 1.0d);
        double[] doubleArray26 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray18, doubleArray26);
        float[] floatArray32 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray35 = new float[] { (byte) -1, 1L };
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray35, (float) 10L);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray32, floatArray35);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray26, (java.lang.Object) boolean38);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray26, (int) (short) 0, 1);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        double[] doubleArray47 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray47, (double) (byte) 100, 1.0d);
        double[] doubleArray55 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray47, doubleArray55);
        float[] floatArray61 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray64 = new float[] { (byte) -1, 1L };
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray64, (float) 10L);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray61, floatArray64);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray55, (java.lang.Object) boolean67);
        double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray55);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray55);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray7, doubleArray43);
        java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray72);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray73);
        double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray73);
        int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray73, (double) (short) 0, (int) (short) 100, (double) 'a');
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test09073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09073");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray25);
        java.lang.Double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray25, (double) 8);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, 10.0, -1.0]");
    }

    @Test
    public void test09074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09074");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        int int15 = strList9.size();
        float[] floatArray21 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) 1);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, (float) 10);
        boolean boolean27 = strList9.remove((java.lang.Object) floatArray21);
        java.lang.String[] strArray30 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.parallelStream();
        java.util.Iterator<java.lang.String> strItor34 = strList31.iterator();
        boolean boolean35 = strList9.containsAll((java.util.Collection<java.lang.String>) strList31);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.stream.Stream<java.lang.String> strStream43 = strList41.parallelStream();
        boolean boolean44 = strList9.removeAll((java.util.Collection<java.lang.String>) strList41);
        boolean boolean45 = strList9.isEmpty();
        java.util.Iterator<java.lang.String> strItor46 = strList9.iterator();
        strList9.clear();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strItor46);
    }

    @Test
    public void test09075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09075");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) 100);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray29, (double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test09076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09076");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10, (double) (byte) 100);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 0);
        java.lang.Double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray16, (double) 4);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray16);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray16, (double) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[52.0, 10.0, -1.0]");
    }

    @Test
    public void test09077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09077");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray6);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray16, (java.lang.Object) intArray23);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray16, (byte) 10);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray28, (byte) 10);
        java.lang.String[] strArray34 = new java.lang.String[] { "{}", "1", "{}" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean9, (java.lang.Object) (byte) 10, (java.util.Collection<java.lang.String>) strList35);
        java.util.stream.Stream<java.lang.String> strStream38 = strList35.parallelStream();
        short[] shortArray44 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray44, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray48 = new java.lang.Short[] {};
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray48);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray48, (short) 1);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray44, shortArray51);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray44);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.add(shortArray44, (int) (byte) 0, (short) 0);
        boolean boolean57 = strList35.remove((java.lang.Object) shortArray56);
        java.lang.String[] strArray60 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.stream.Stream<java.lang.String> strStream63 = strList61.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream64 = strList61.stream();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray71);
        int[] intArray73 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray72, intArray73);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(intArray73, (int) '4');
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.add(intArray73, (int) (short) 100);
        boolean boolean79 = strList61.contains((java.lang.Object) intArray78);
        boolean boolean80 = strList35.addAll((java.util.Collection<java.lang.String>) strList61);
        boolean boolean81 = strList35.isEmpty();
        boolean boolean83 = strList35.add("{{},{},{},{}}");
        java.util.Spliterator<java.lang.String> strSpliterator84 = strList35.spliterator();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strSpliterator84);
    }

    @Test
    public void test09078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09078");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        java.lang.Byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray10, (byte) 10, (int) 'a');
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray10, (byte) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray10);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray10);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 1, 100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[1, 1, 100, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09079");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray26, (double) (short) -1);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        double[] doubleArray40 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray32, doubleArray40);
        float[] floatArray46 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray49 = new float[] { (byte) -1, 1L };
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray49, (float) 10L);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray49);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray40, (java.lang.Object) boolean52);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        java.lang.Double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray54);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray55);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, (double) '#');
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, 0.0d);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, (double) (byte) 10);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, 1.0d);
        double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray66, 0.0d);
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray68, 1.0d, 1, (double) 4);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray68);
        double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.add(doubleArray28, (double) 10L);
        int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) 0, 8, (double) 100);
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 0.0, 10.0, -1.0, -1.0, -1.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 0.0, 10.0, -1.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 0.0, 10.0, -1.0, -1.0]");
    }

    @Test
    public void test09080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09080");
        java.lang.Integer[][][][][] intArray0 = new java.lang.Integer[][][][][] {};
        java.lang.Integer[][][][][] intArray1 = org.apache.commons.lang3.ArrayUtils.toArray(intArray0);
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray13 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray14 = new java.lang.Byte[][] { byteArray7, byteArray13 };
        java.lang.Byte[][] byteArray17 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray14, (int) '#', 10);
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray24);
        java.lang.Byte[][] byteArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray14, (java.lang.Object) intArray24);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray24, (int) (short) -1);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray24, (int) ' ');
        java.lang.Integer[] intArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray24);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray31);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray33, (int) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray33);
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.add(intArray33, (-1));
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray31, (java.lang.Object) intArray38, (int) (byte) 100);
        java.lang.Integer[][][][][] intArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray0, (java.lang.Object) intArray38);
        java.lang.String str43 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) intArray0, "");
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{}" + "'", str43, "{}");
    }

    @Test
    public void test09081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09081");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray13);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray13);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray13, 'a', (int) '4');
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.add(charArray13, 0, ' ');
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray13, '4');
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray13, 'a');
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray13);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray12, charArray13);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.add(charArray13, '#');
        java.lang.Character[] charArray30 = org.apache.commons.lang3.ArrayUtils.toObject(charArray13);
        java.lang.Character[] charArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray30);
        java.lang.Character[] charArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray31);
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ ]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
    }

    @Test
    public void test09082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09082");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        java.lang.Double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray28);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, 7, (int) (short) 100);
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertNotNull(doubleArray34);
    }

    @Test
    public void test09083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09083");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, (int) (byte) -1, (int) '4');
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray16);
        java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray16);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.add(byteArray16, (byte) 0);
        java.lang.Byte[] byteArray26 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray26);
        java.lang.Byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray27);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray27, (byte) 0);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray30, (byte) 100);
        java.lang.Character[] charArray33 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33, '4');
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray41);
        java.lang.Byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray42);
        boolean boolean45 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray35, (java.lang.Object) byteArray42, true);
        byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray42, (byte) -1);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray47);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray30, byteArray48);
        java.lang.Byte[] byteArray56 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray56, (byte) 1);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(byteArray58, (byte) 100);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(byteArray58, (byte) 1);
        java.lang.Byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray58);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray63, (byte) 100);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.add(byteArray65, (byte) 10);
        byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.clone(byteArray67);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray67);
        byte[] byteArray71 = org.apache.commons.lang3.ArrayUtils.remove(byteArray67, 3);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray30, byteArray67);
        byte[] byteArray73 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray20, byteArray72);
        int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray72, (byte) 0, (int) (byte) 0);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[10, 0, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, 1, 100, 1, -1, 10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[0, 1, 1, 100, 1, -1, 10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test09084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09084");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        java.util.stream.Stream<java.lang.String> strStream7 = strList5.parallelStream();
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray12, (int) (short) 10, 3);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray15);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray15);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray15, true, 0);
        boolean boolean22 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strList5, (java.lang.Object) booleanArray15, false);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray15, false);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strStream7);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test09085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09085");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray12, '4');
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(charArray14, '4');
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.subarray(charArray14, 1, 2);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray19);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09086");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream6 = strList3.stream();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray13);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray14, intArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(intArray15, (int) '4');
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.add(intArray15, (int) (short) 100);
        boolean boolean21 = strList3.contains((java.lang.Object) intArray20);
        java.util.stream.Stream<java.lang.String> strStream22 = strList3.parallelStream();
        java.lang.Object obj23 = null;
        boolean boolean24 = strList3.equals(obj23);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strStream6);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test09087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09087");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray26, (double) '#', (int) ' ', (double) 0.0f);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        float[] floatArray49 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray52 = new float[] { (byte) -1, 1L };
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray52, (float) 10L);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray49, floatArray52);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray43, (java.lang.Object) boolean55);
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray43, (int) (short) 0, 1);
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray59, (double) (short) 100, 0, 10.0d);
        double[] doubleArray67 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray67, (double) (byte) 100, 1.0d);
        double[] doubleArray75 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray67, doubleArray75);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray59, doubleArray75);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray59);
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray26, doubleArray59);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test09088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09088");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(10.0d, (double) 0L);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray41);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) '4');
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray49 = org.apache.commons.lang3.ArrayUtils.add(intArray43, (int) 'a');
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray50, (int) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray50);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.add(intArray50, (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder31.append((java.lang.Object) 'a', (java.lang.Object) intArray55);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.add(intArray55, 0);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray58);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray58);
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray58, 9, (int) ' ');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test09089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09089");
        java.lang.Short[] shortArray0 = null;
        java.lang.Short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0);
        java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) -1);
        java.lang.String str6 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray1, "hi!");
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray13);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray14, intArray15);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray1, (java.lang.Object) intArray14, 3);
        java.lang.Short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray1);
        java.lang.Short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        java.lang.Short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray21);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21, (short) (byte) 1);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray24, (short) 10);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.add(shortArray26, (short) 0);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray26);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{}" + "'", str6, "{}");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[0]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]");
    }

    @Test
    public void test09090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09090");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.add(byteArray17, (byte) 10);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray27, (byte) 1);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(byteArray29, (byte) 100);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(byteArray29, (byte) 1);
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray29);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray34, (byte) 100);
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.add(byteArray36, (byte) 10);
        byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.clone(byteArray38);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray39);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray39, (byte) 0);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.add(byteArray39, (byte) 10);
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray39);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray17, byteArray39);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.add(byteArray39, (int) (short) 1, (byte) 100);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0, 0, 100, -1, -1, 0, 10, 10]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[10, 0, -1, -1, 100, 0, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 0, 100, -1, -1, 0, 10, 10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[10, 100, 0, -1, -1, 100, 0, 0]");
    }

    @Test
    public void test09091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09091");
        boolean[] booleanArray0 = null;
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray20 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[][] doubleArray21 = new java.lang.Double[][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20 };
        java.lang.Double[][] doubleArray22 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray21);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray22);
        java.util.Map<java.lang.Object, java.lang.Object> objMap24 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) doubleArray22);
        boolean[] booleanArray30 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray30, (int) (byte) 0, 0);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray30, 4, (int) '4');
        java.lang.Boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray30);
        java.lang.Double[][] doubleArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray22, (java.lang.Object) booleanArray30);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray30, true, (-1));
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray30, true);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray30, true);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray30, false);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray30);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objMap24);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 4 + "'", int45 == 4);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[true, false, true, true, true]");
    }

    @Test
    public void test09092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09092");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        long[] longArray11 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray11);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray9, (java.lang.Object) longArray11);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9, (float) (-1L));
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) (byte) 1, (int) (short) 10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray15);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 4, 7);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray15);
        java.lang.String str25 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) boolean23, "");
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "false" + "'", str25, "false");
    }

    @Test
    public void test09093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09093");
        java.lang.Long[] longArray0 = null;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0, (long) 'a');
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNull(longArray3);
    }

    @Test
    public void test09094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09094");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) ' ');
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray17 = org.apache.commons.lang3.ArrayUtils.add(longArray1, (int) '4', (long) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test09095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09095");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray10, (byte) 100);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray10, (byte) 0);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) -1);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray26 = new char[] { '#', 'a', 'a' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray26);
        java.lang.String str28 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray22);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray22);
        java.lang.String[] strArray32 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.stream.Stream<java.lang.String> strStream35 = strList33.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream36 = strList33.stream();
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int16, (java.lang.Object) charArray22, (java.util.Collection<java.lang.String>) strList33);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray47 = new char[] { '#', 'a', 'a' };
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.addAll(charArray43, charArray47);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray43, ' ');
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.add(charArray50, ' ');
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray52, ' ');
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray52);
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray55, ' ');
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{4,#,a,4,#}" + "'", str28, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4#a4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4#a4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4, #, a, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "4#a4#4#a4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "4#a4#4#a4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[4, #, a, 4, #, 4, #, a, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4#a4#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4#a4#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4, #, a, 4, #, 4, #, a, 4, #]");
    }

    @Test
    public void test09096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09096");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        short[] shortArray10 = new short[] { (short) 10 };
        short[] shortArray12 = new short[] { (short) 10 };
        short[] shortArray14 = new short[] { (short) 10 };
        short[] shortArray16 = new short[] { (short) 10 };
        short[][] shortArray17 = new short[][] { shortArray10, shortArray12, shortArray14, shortArray16 };
        short[][] shortArray18 = org.apache.commons.lang3.ArrayUtils.clone(shortArray17);
        java.lang.String[] strArray21 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.stream.Stream<java.lang.String> strStream24 = strList22.parallelStream();
        java.lang.String[] strArray27 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.stream.Stream<java.lang.String> strStream30 = strList28.parallelStream();
        boolean boolean31 = strList22.addAll((java.util.Collection<java.lang.String>) strList28);
        boolean boolean33 = strList28.add("{4,#,a,4,#}");
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray0, (java.lang.Object) shortArray17, (java.util.Collection<java.lang.String>) strList28);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray0);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray0);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 1, (int) (byte) 0);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[10]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[10]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[10]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[10]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strStream24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }

    @Test
    public void test09097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09097");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        long[] longArray9 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(longArray9, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray9);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(longArray9, (long) (short) 100);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.add(longArray9, (long) '#');
        boolean boolean22 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray7, (java.lang.Object) longArray20, true);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray7);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray23, false);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray25);
        java.lang.Boolean[] booleanArray32 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray32);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray33);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray33);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray26, booleanArray35);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray36, false);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true, true, false]");
    }

    @Test
    public void test09098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09098");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray9, ' ', 2);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, 0, (int) (byte) 10);
        java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.toObject(charArray16);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray16);
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray21);
        char[] charArray28 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray32 = new char[] { '#', 'a', 'a' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.addAll(charArray28, charArray32);
        java.lang.String str34 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray28);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray21, charArray28);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray21);
        char[] charArray42 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray46 = new char[] { '#', 'a', 'a' };
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.addAll(charArray42, charArray46);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.subarray(charArray46, (int) 'a', (int) (short) 10);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '4');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray52);
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.subarray(charArray52, (int) (byte) 0, 10);
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray52);
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.addAll(charArray16, charArray21);
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray58, ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a, a, #]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{4,#,a,4,#}" + "'", str34, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4, a, a, #]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4, a, a, #]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4, a, a, #]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, a, #]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a, a, #]");
    }

    @Test
    public void test09099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09099");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 10);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray10, (byte) 0, 2);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray20 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray24 = new char[] { '#', 'a', 'a' };
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray24);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray20, ' ');
        char[] charArray33 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray37 = new char[] { '#', 'a', 'a' };
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.addAll(charArray33, charArray37);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray37, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder14.append((java.lang.Object) ' ', (java.lang.Object) charArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder14.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((long) 4, (long) (short) 1);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray52, byteArray57);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray52, (byte) -1);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray52, (byte) -1);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray52, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        java.lang.Byte[] byteArray72 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray72, (byte) 1);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(byteArray74, (byte) 100);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(byteArray74, (byte) 1);
        java.lang.Byte[] byteArray79 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray74);
        byte[] byteArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray79, (byte) 100);
        byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.add(byteArray81, (byte) 10);
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder48.append(byteArray52, byteArray81);
        byte[] byteArray88 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray52, (int) (byte) -1, (int) '4');
        java.lang.Byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray52);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray10, byteArray52);
        byte[] byteArray92 = org.apache.commons.lang3.ArrayUtils.add(byteArray52, (byte) -1);
        byte[] byteArray93 = org.apache.commons.lang3.ArrayUtils.clone(byteArray92);
        int int95 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray93, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[]");
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[-1]");
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[-1]");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test09100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09100");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.add(charArray4, ' ');
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray6, '#');
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(charArray6, 'a');
        java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray13);
        char[] charArray20 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray24 = new char[] { '#', 'a', 'a' };
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray24);
        java.lang.String str26 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray20);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray13, charArray20);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray13);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.clone(charArray28);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.clone(charArray28);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[ ]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{4,#,a,4,#}" + "'", str26, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ ]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ ]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ ]");
    }

    @Test
    public void test09101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09101");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) 10);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.clone(byteArray28);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray28, (byte) 10);
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.clone(byteArray28);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray28);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(byteArray28, (byte) 1);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray28, (byte) -1, 6);
        java.lang.Byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray28);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(byteArray39);
    }

    @Test
    public void test09102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09102");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) (-1.0f));
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray27);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.add(doubleArray27, (double) (short) 0);
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray32, 1.0d, 5, (double) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
    }

    @Test
    public void test09103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09103");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray41);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) '4');
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.add(intArray43, (int) (short) 100);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray43);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray43, (int) (short) 1);
        int[] intArray53 = new int[] {};
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray53, intArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.append(intArray43, intArray54);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray54);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray70 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray71 = new java.lang.Byte[][] { byteArray64, byteArray70 };
        java.lang.Byte[][] byteArray74 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray71, (int) '#', 10);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray81);
        java.lang.Byte[][] byteArray83 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray71, (java.lang.Object) intArray81);
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray81, 1);
        int[] intArray87 = org.apache.commons.lang3.ArrayUtils.remove(intArray85, (int) (byte) 1);
        int[] intArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray87);
        int[] intArray89 = org.apache.commons.lang3.ArrayUtils.clone(intArray88);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray58, intArray88);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray88);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray94 = org.apache.commons.lang3.ArrayUtils.add(intArray88, (int) '#', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[1, -1, 10, 0, -1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[1, -1, 10, 0, -1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test09104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09104");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) '#', 1, (double) (byte) 100);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray32);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray28, (int) (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray28);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray28, 0, (double) (short) 10);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray28);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray47);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray48, (double) 10, (int) (short) -1, (double) (short) 10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
    }

    @Test
    public void test09105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09105");
        org.apache.commons.lang3.builder.Builder<java.lang.Boolean>[][][] booleanBuilderArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.builder.Builder<java.lang.Boolean>[][][] booleanBuilderArray2 = org.apache.commons.lang3.ArrayUtils.remove(booleanBuilderArray0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09106");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        java.lang.Double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        double[] doubleArray33 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray33, (double) (byte) 100, 1.0d);
        double[] doubleArray41 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray33, doubleArray41);
        float[] floatArray47 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray50 = new float[] { (byte) -1, 1L };
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray50, (float) 10L);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray47, floatArray50);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray41, (java.lang.Object) boolean53);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray41, (int) (short) 0, 1);
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray57, (double) (byte) -1);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray59, (int) (byte) 100, 1);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray62, (int) (byte) -1, (int) (short) 100);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray65, (double) 'a', (int) (short) 100);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray65, (double) 1L);
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray29, (java.lang.Object) int70, 3);
        java.lang.Double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray29);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray73);
        int int77 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray74, (double) (byte) 10, (int) (byte) 0);
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.add(doubleArray74, (double) (byte) 0);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray74, (double) 9);
        int int84 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray74, (double) 7, (double) (-1.0f));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 0.0, 10.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test09107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09107");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 100.0f);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 100L, 9, (double) 4);
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray41, true);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray43, true);
        double[] doubleArray49 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray49, (double) (byte) 100, 1.0d);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray49, 100.0d, (int) (short) 1, (double) 1L);
        boolean boolean57 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean45, (java.lang.Object) doubleArray49);
        java.lang.Double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray49);
        java.lang.Double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray58);
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray58, (double) (byte) 0);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray61);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray61, 100, (int) (short) 1);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray11, doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 0.0, 10.0, -1.0, -1.0, 10.0, 52.0]");
    }

    @Test
    public void test09108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09108");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder34.append((long) (short) -1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((float) (short) -1, (float) (byte) 100);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
    }

    @Test
    public void test09109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09109");
        double[] doubleArray0 = new double[] {};
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray0, (int) '#', (int) (short) -1);
        java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) (-1));
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
    }

    @Test
    public void test09110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09110");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) -1, (int) (short) 100);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray8);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) -1);
        short[] shortArray18 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray18, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray18);
        java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23, (short) 10);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray23);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray26);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.add(shortArray27, (short) (byte) 0);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray12, shortArray29);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.clone(shortArray12);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[100, 0, 0, 1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
    }

    @Test
    public void test09111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09111");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) 0);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray3);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3);
        short[] shortArray8 = null;
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray7, shortArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(shortArray7, (short) 10);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray7, (short) (byte) 1);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray7);
        short[] shortArray21 = new short[] { (short) 10, (short) 100, (byte) -1, (byte) 0, (short) 10, (byte) 100 };
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray21, (short) (byte) 0, (int) (short) -1);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray21, (short) (byte) 1);
        java.lang.Short[] shortArray27 = new java.lang.Short[] {};
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27, (short) 1);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27, (short) 0);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray32, (short) -1);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray32, (short) 0);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray36);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray7, shortArray36);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray38);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray38, 0, (int) '#');
        java.lang.Short[] shortArray43 = new java.lang.Short[] {};
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43, (short) 1);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.clone(shortArray46);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray47, (short) (byte) -1, (int) (short) 100);
        java.lang.Short[] shortArray51 = new java.lang.Short[] {};
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray51);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray51, (short) 1);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray47, shortArray54);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray54, 1, (int) (byte) 100);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.add(shortArray58, (short) (byte) 10);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray42, shortArray60);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[10]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test09112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09112");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(shortArray25, (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) 0, (-1));
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray36, (int) (short) 10, 3);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((java.lang.Object) int31, (java.lang.Object) booleanArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder0.append(3, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(1.0f, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder47.append((long) 3, 0L);
        byte[] byteArray54 = null;
        java.lang.Byte[] byteArray61 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray61, (byte) 1);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray63, (byte) -1);
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray65);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder47.append(byteArray54, byteArray66);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray66, (byte) 10);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0, 0, 100, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 0, 100, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 0, 100, -1, 0]");
    }

    @Test
    public void test09113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09113");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '4');
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray25 = new char[] { '#', 'a', 'a' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray25);
        java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray21);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray28);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray30, 'a');
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray30, '4');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{4,#,a,4,#}" + "'", str27, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test09114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09114");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false);
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13);
        boolean[] booleanArray22 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray22, (int) (byte) 0, 0);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray22, true);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray16, booleanArray22);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) booleanArray6, (java.lang.Object) booleanArray16);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        java.lang.Boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray31, false);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, true, true, false]");
    }

    @Test
    public void test09115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09115");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        java.lang.Short[] shortArray39 = new java.lang.Short[] {};
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39, (short) 1);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.clone(shortArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray43);
        java.lang.Short[] shortArray45 = new java.lang.Short[] {};
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 1);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 0);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray50, (short) -1);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.add(shortArray52, (short) 1);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray43, shortArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder37.append(shortArray38, shortArray55);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray38);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
    }

    @Test
    public void test09116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09116");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Boolean boolean1 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = equalsBuilder0.append((long) 4, (long) 6);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append((short) (byte) 10, (short) (byte) 10);
        float[] floatArray8 = null;
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.add(floatArray8, (float) 1);
        float[] floatArray16 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray16, 0.0f);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray16);
        java.lang.Object[] objArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray20);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray20);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray20, (float) (byte) 10);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray24, (float) 0L);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray24, (float) 100, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder7.append(floatArray8, floatArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder30.append((float) 10L, 100.0f);
        org.junit.Assert.assertEquals("'" + boolean1 + "' != '" + true + "'", boolean1, true);
        org.junit.Assert.assertNotNull(equalsBuilder4);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
    }

    @Test
    public void test09117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09117");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray13);
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray14);
        java.lang.Double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray16, (double) '#');
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 10.0, -1.0]");
    }

    @Test
    public void test09118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09118");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, ' ');
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6);
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.toObject(charArray6);
        java.lang.Character[] charArray9 = org.apache.commons.lang3.ArrayUtils.toObject(charArray6);
        int int10 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) charArray6);
        java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray6);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(charArray11);
    }

    @Test
    public void test09119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09119");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) (short) 100);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.subarray(intArray8, 0, (int) (byte) 1);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray8, 9);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray8, (int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test09120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09120");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        short[] shortArray27 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray31 = new java.lang.Short[] {};
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31, (short) 1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray27, shortArray34);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) 0, 0);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.add(shortArray27, (int) (byte) 0, (short) 0);
        java.lang.Short[] shortArray42 = null;
        java.lang.Short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray42);
        java.lang.Short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray43);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(shortArray41, shortArray46);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray46);
        java.lang.Short[] shortArray49 = new java.lang.Short[] {};
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray49);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray49, (short) 1);
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.clone(shortArray52);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray53, (short) (byte) -1, (int) (short) 100);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray53);
        short[] shortArray58 = null;
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray53, shortArray58);
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray53, (short) 0, 3);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray48, shortArray53);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.remove(shortArray53, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test09121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09121");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.Object[] objArray28 = strList13.toArray();
        java.lang.String[] strArray31 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.stream.Stream<java.lang.String> strStream34 = strList32.parallelStream();
        java.lang.String[] strArray37 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.stream.Stream<java.lang.String> strStream40 = strList38.parallelStream();
        boolean boolean41 = strList32.addAll((java.util.Collection<java.lang.String>) strList38);
        java.lang.Object obj42 = null;
        boolean boolean43 = strList38.equals(obj42);
        java.util.Spliterator<java.lang.String> strSpliterator44 = strList38.spliterator();
        boolean boolean45 = strList13.retainAll((java.util.Collection<java.lang.String>) strList38);
        double[] doubleArray49 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray49, (double) (byte) 100, 1.0d);
        double[] doubleArray57 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray49, doubleArray57);
        float[] floatArray63 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray66 = new float[] { (byte) -1, 1L };
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray66, (float) 10L);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray63, floatArray66);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray57, (java.lang.Object) boolean69);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray57, (int) (short) 0, 1);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray57);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray74);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray74, (double) (-1.0f), (double) '4');
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray74, (double) 3);
        boolean boolean81 = strList38.equals((java.lang.Object) boolean80);
        java.lang.Object[] objArray82 = strList38.toArray();
        java.util.stream.Stream<java.lang.String> strStream83 = strList38.parallelStream();
        strList38.clear();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[4, hi!, 4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[4, hi!, 4, hi!]");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[4, hi!]");
        org.junit.Assert.assertNotNull(strStream83);
    }

    @Test
    public void test09122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09122");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        double[] doubleArray54 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray54, (double) (byte) 100, 1.0d);
        double[] doubleArray62 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray54, doubleArray62);
        float[] floatArray68 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray71 = new float[] { (byte) -1, 1L };
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray71, (float) 10L);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray68, floatArray71);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray62, (java.lang.Object) boolean74);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray62);
        java.lang.Double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray76);
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray77, (double) (-1));
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        int int83 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray80, (double) 10L, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder50.append(doubleArray79, doubleArray80);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.add(doubleArray79, 1.0d);
        int int89 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray79, (double) (short) 0, (double) 100.0f);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test09123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09123");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, true);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray5, (int) (short) 1);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.add(booleanArray5, false);
        java.lang.Boolean[] booleanArray19 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray19);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray20, (int) (short) 10, 3);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray23);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray23);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray23, 2, (int) (byte) 0);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.add(booleanArray28, false);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray15, booleanArray28);
        boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray31, false);
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray31, false, 8);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray31, 1);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[true, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[true, false, true, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[true, false, true, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[true, true, true, true, false]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true, true, true, true, false]");
    }

    @Test
    public void test09124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09124");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray6);
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray13);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray13);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray15, (long) (byte) 10);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray15);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.add(longArray15, (long) (byte) 100);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[100]");
    }

    @Test
    public void test09125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09125");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) -1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) ' ');
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        java.lang.Object obj30 = new java.lang.Object();
        long[] longArray37 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.subarray(longArray37, 3, (int) (byte) 0);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray37);
        boolean[] booleanArray48 = new boolean[] { false, false, false, true, false, false };
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray48);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray48, true);
        java.lang.String[] strArray54 = new java.lang.String[] { "4", "1" };
        boolean boolean55 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean41, (java.lang.Object) true, strArray54);
        java.lang.String[] strArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray54);
        java.lang.String[] strArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray56);
        boolean boolean58 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray22, obj30, strArray56);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 0);
        int[] intArray63 = org.apache.commons.lang3.ArrayUtils.subarray(intArray60, (int) (short) 10, (int) (short) 1);
        int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray63, (int) (byte) 0);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test09126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09126");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray27);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray27);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) (short) -1);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) (byte) 100);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (-1), 0, (double) '4');
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test09127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09127");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray17, true);
        boolean[] booleanArray26 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray26, (int) (byte) 0, 0);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray17, booleanArray29);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray29, false, (int) (byte) 1);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray29);
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray41, true);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray43, true);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray43);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray46);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray47, true, (int) '4');
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray47);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray51);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray52, 5);
        java.lang.Boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, true, false, false, false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false, true, false, false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray55);
    }

    @Test
    public void test09128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09128");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) (-1L), 3, (double) (short) -1);
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray29);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray29, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
    }

    @Test
    public void test09129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09129");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (int) (byte) 0, (short) 0);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray19, (short) (byte) 1, (int) (short) 0);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray19, (short) (byte) -1, 0);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray19, (int) (byte) 100, (int) (byte) 100);
        java.lang.Short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray28);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray28);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
    }

    @Test
    public void test09130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09130");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (-1), (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((byte) 1, (byte) 100);
        byte[] byteArray11 = new byte[] { (byte) 10 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray11);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray19);
        java.lang.Byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray20);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray20, (byte) 0);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray23, (byte) 1);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder3.append(byteArray11, byteArray23);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray11, (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test09131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09131");
        byte[] byteArray0 = null;
        java.lang.Byte[] byteArray7 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7, (byte) 1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(byteArray9, (byte) 100);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(byteArray9, (byte) 1);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray20, (byte) 1);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray22, (int) (byte) 0, (int) (byte) 1);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray9, byteArray25);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.add(byteArray25, (byte) 1);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray28, (byte) 100);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray30, (byte) 1);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray30, (byte) -1);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.clone(byteArray30);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 1]");
    }

    @Test
    public void test09132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09132");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) -1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) ' ');
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray36 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray40 = new char[] { '#', 'a', 'a' };
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.addAll(charArray36, charArray40);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray36, ' ');
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray53 = new char[] { '#', 'a', 'a' };
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.addAll(charArray49, charArray53);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray53, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder30.append((java.lang.Object) ' ', (java.lang.Object) charArray53);
        java.lang.Long[] longArray64 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray64);
        java.lang.Long[] longArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray64);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray66);
        char[] charArray71 = new char[] { 'a', '#', ' ' };
        char[][] charArray72 = new char[][] { charArray71 };
        char[][] charArray73 = org.apache.commons.lang3.ArrayUtils.toArray(charArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder58.append((java.lang.Object[]) longArray66, (java.lang.Object[]) charArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder58.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder58.append((float) (byte) -1, 0.0f);
        int int82 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray29, (java.lang.Object) 0.0f, (int) (short) 100);
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray29);
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray29);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = org.apache.commons.lang3.ArrayUtils.add(intArray84, (int) 'a', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 1, 0, 10, -1, 1]");
    }

    @Test
    public void test09133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09133");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) intArray6);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        java.lang.Object[] objArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) intArray6);
        java.lang.Integer[] intArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray6);
        java.lang.Integer[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray11);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertNotNull(intArray12);
    }

    @Test
    public void test09134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09134");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        float[] floatArray11 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray14 = new float[] { (byte) -1, 1L };
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, (float) 10L);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray11, floatArray14);
        java.lang.Float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray6, (java.lang.Object) floatArray18);
        short[] shortArray25 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray25, (short) (byte) 0);
        java.lang.Short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.clone(shortArray25);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray18, (java.lang.Object) shortArray33, 9);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray18, 0.0f);
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray18);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray18);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[100.0, 10.0, -1.0, 97.0]");
    }

    @Test
    public void test09135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09135");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) -1);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) 0);
        short[] shortArray15 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray19 = new java.lang.Short[] {};
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray19);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray19, (short) 1);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray15, shortArray22);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) 0, 0);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.add(shortArray15, (int) (byte) 0, (short) 0);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray29, (short) (byte) 1, (int) (short) 0);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray29, (short) (byte) -1, 0);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray29, (int) (byte) 100, (int) (byte) 100);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray38);
        java.lang.Short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray38);
        short[] shortArray46 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray46, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray50 = new java.lang.Short[] {};
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray50);
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray50, (short) 1);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray46, shortArray53);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray53, (int) '4', (int) (short) 0);
        boolean[] booleanArray64 = new boolean[] { false, false, false, true, false, false };
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray64);
        boolean[] booleanArray72 = new boolean[] { false, false, false, true, false, false };
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray72);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray64, booleanArray72);
        short[] shortArray79 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int82 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray79, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray79);
        boolean boolean84 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean74, (java.lang.Object) shortArray79);
        short[] shortArray85 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray57, shortArray79);
        short[] shortArray88 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray85, (int) 'a', (int) (short) 100);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray38, shortArray85);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray38);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test09136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09136");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray12, (int) '4', (int) (short) 0);
        boolean[] booleanArray23 = new boolean[] { false, false, false, true, false, false };
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23);
        boolean[] booleanArray31 = new boolean[] { false, false, false, true, false, false };
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray31);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray23, booleanArray31);
        short[] shortArray38 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray38);
        boolean boolean43 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean33, (java.lang.Object) shortArray38);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray38);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray16);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray16, (short) (byte) 0);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray47, (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.add(shortArray49, (int) (byte) 1, (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
    }

    @Test
    public void test09137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09137");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, (int) (byte) -1, (int) '4');
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, 2, (int) (byte) 10);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray0, (byte) 0, (int) (byte) -1);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray0);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, (int) (byte) 100, 5);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
    }

    @Test
    public void test09138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09138");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, 2);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(intArray22, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray22);
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(intArray35, 1);
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.addAll(intArray22, intArray35);
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.subarray(intArray22, (int) (short) 100, 4);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray22);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) 'a');
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test09139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09139");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray11);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray11, (long) (-1), (int) '4');
        long[] longArray16 = null;
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray16);
        java.lang.Long[] longArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray18);
        java.lang.Long[] longArray21 = org.apache.commons.lang3.ArrayUtils.toObject(longArray20);
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.subarray(longArray20, (int) '4', (int) (short) 0);
        long[] longArray26 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray26);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(longArray26, 0L);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray26);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray30, (long) (byte) 1, (int) (short) 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray30, (long) 3, (int) 'a');
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(longArray30, (long) 7);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.remove(longArray30, (int) (byte) 0);
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.addAll(longArray20, longArray40);
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray41);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray53 = new char[] { '#', 'a', 'a' };
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.addAll(charArray49, charArray53);
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray49, ' ');
        char[] charArray62 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray66 = new char[] { '#', 'a', 'a' };
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.addAll(charArray62, charArray66);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray66, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder43.append((java.lang.Object) ' ', (java.lang.Object) charArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder43.append((int) (short) 1, 10);
        java.lang.Boolean boolean75 = equalsBuilder74.build();
        boolean boolean76 = equalsBuilder74.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder74.append(true, true);
        long[] longArray81 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray81);
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.contains(longArray81, 0L);
        long[] longArray86 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray86);
        long[] longArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray86);
        int int91 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray88, (long) 5, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder74.append(longArray81, longArray88);
        int int94 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray81, (long) 0);
        long[] longArray95 = org.apache.commons.lang3.ArrayUtils.addAll(longArray41, longArray81);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[]");
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[-1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[-1]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertEquals("'" + boolean75 + "' != '" + false + "'", boolean75, false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray86), "[-1]");
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[-1]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(longArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray95), "[-1]");
    }

    @Test
    public void test09140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09140");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray8);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (byte) -1);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toObject(longArray11);
        java.lang.Long[] longArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray13);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray14, 100L);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[-1, -1]");
    }

    @Test
    public void test09141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09141");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) (-1));
        float[] floatArray15 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        java.lang.Long[] longArray22 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) floatArray16, (java.lang.Object) longArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray9, longArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray23);
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.clone(longArray23);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.clone(longArray27);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[0, 1, 100, 100, 0]");
    }

    @Test
    public void test09142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09142");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        long[] longArray11 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray11);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray9, (java.lang.Object) longArray11);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9, (float) (-1L));
        boolean[] booleanArray22 = new boolean[] { false, false, false, true, false, false };
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray22, true);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray22, true);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray22, true);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray22);
        boolean[] booleanArray31 = new boolean[] {};
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray31, false);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray31, false);
        java.lang.Character[] charArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray36, '4');
        java.lang.Character[] charArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray36);
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray36);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray36);
        java.lang.String[] strArray44 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.stream.Stream<java.lang.String> strStream47 = strList45.parallelStream();
        java.lang.String[] strArray50 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.stream.Stream<java.lang.String> strStream53 = strList51.parallelStream();
        boolean boolean54 = strList45.addAll((java.util.Collection<java.lang.String>) strList51);
        java.util.stream.Stream<java.lang.String> strStream55 = strList45.parallelStream();
        boolean boolean57 = strList45.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray62 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray71 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray72 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray71);
        float[] floatArray74 = org.apache.commons.lang3.ArrayUtils.remove(floatArray71, (int) (short) 1);
        float[] floatArray75 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray65, floatArray74);
        boolean boolean76 = strList63.equals((java.lang.Object) floatArray75);
        int int77 = strList63.size();
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray78, (int) (byte) 1);
        boolean boolean81 = strList63.contains((java.lang.Object) int80);
        boolean boolean82 = strList45.addAll((java.util.Collection<java.lang.String>) strList63);
        boolean boolean83 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int35, (java.lang.Object) charArray36, (java.util.Collection<java.lang.String>) strList45);
        java.lang.Object obj84 = null;
        java.lang.String[] strArray85 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray87 = org.apache.commons.lang3.ArrayUtils.add(strArray85, "{true,true}");
        java.lang.String[] strArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray87);
        boolean boolean89 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int35, obj84, strArray88);
        boolean boolean90 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray9, (java.lang.Object) boolean30, strArray88);
        java.lang.Float[] floatArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray9);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3 + "'", int25 == 3);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strStream53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray74), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 4 + "'", int77 == 4);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(floatArray91);
    }

    @Test
    public void test09143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09143");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray12);
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.clone(charArray13);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray14, ' ', (int) (byte) -1);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.add(charArray14, 5, '4');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.add(charArray20, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.subarray(charArray20, 0, (int) (short) -1);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray25, ' ');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #, 4, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test09144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09144");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5);
        long[] longArray10 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(longArray10, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray20 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray20, 1L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray15, longArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) floatArray5, (java.lang.Object) longArray15);
        float[] floatArray30 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray30);
        java.lang.Float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray30);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray30);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray30);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(floatArray30, 0.0f);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test09145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09145");
        java.lang.Object[] objArray0 = null;
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        java.lang.Byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(objArray0, (java.lang.Object) byteArray10);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10, (byte) 10);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) byteArray10);
        int int16 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray10);
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20, true);
        java.lang.Boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray20);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray24);
        java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray24);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray10, (java.lang.Object) booleanArray24);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10, (byte) 0);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, 1, 100, 1, 1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, 1, 100, 1, 1]");
    }

    @Test
    public void test09146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09146");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder34.appendSuper(false);
        java.lang.Byte[] byteArray42 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray42);
        java.lang.Byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray43);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray44, (byte) 0);
        java.lang.Byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray44);
        java.lang.Long[] longArray53 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray53);
        java.lang.Long[] longArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray53);
        java.lang.Object[] objArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder34.append((java.lang.Object[]) byteArray47, objArray56);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder34.append((byte) -1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder34.appendSuper(false);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder62);
    }

    @Test
    public void test09147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09147");
        int[] intArray0 = null;
        int[] intArray2 = org.apache.commons.lang3.ArrayUtils.add(intArray0, (int) (byte) 1);
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray9);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray10, intArray11);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(intArray11, (int) '4');
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray11, (int) 'a', (int) (short) 0);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(intArray11, (int) '4');
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray11, 0, (int) (short) 10);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray2, intArray11);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.add(intArray11, 5);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.subarray(intArray11, 8, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[5]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
    }

    @Test
    public void test09148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09148");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, 0, (int) (short) 10);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray29);
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray29);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.add(doubleArray29, 4, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
    }

    @Test
    public void test09149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09149");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray12 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray12, (int) (byte) 0, 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, true);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray12);
        long[] longArray26 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.subarray(longArray26, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray26);
        java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray34);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray34);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray34);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray26, (java.lang.Object) booleanArray37);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray37, true);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray40, true, (int) (byte) 1);
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray12, booleanArray40);
        java.lang.Boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray40);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray45, false);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray47, false);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[true, true, true, false, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test09150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09150");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream14 = strList3.parallelStream();
        java.lang.String[] strArray17 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.stream.Stream<java.lang.String> strStream20 = strList18.parallelStream();
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList18.addAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean28 = strList3.containsAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray34);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35, false);
        boolean boolean39 = strList3.remove((java.lang.Object) booleanArray35);
        java.util.Spliterator<java.lang.String> strSpliterator40 = strList3.spliterator();
        java.lang.Short[] shortArray41 = new java.lang.Short[] {};
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray41);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray41, (short) 1);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.clone(shortArray44);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray45, (short) (byte) -1, (int) (short) 100);
        java.lang.Short[] shortArray49 = new java.lang.Short[] {};
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray49);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray49, (short) 1);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray45, shortArray52);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray45, (int) (short) 100, 0);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray56);
        boolean boolean58 = strList3.remove((java.lang.Object) shortArray56);
        boolean boolean60 = strList3.add("{-1,-1}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertNotNull(strStream14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strSpliterator40);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test09151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09151");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        int int15 = strList9.size();
        float[] floatArray21 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) 1);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, (float) 10);
        boolean boolean27 = strList9.remove((java.lang.Object) floatArray21);
        java.lang.String[] strArray30 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.parallelStream();
        java.util.Iterator<java.lang.String> strItor34 = strList31.iterator();
        boolean boolean35 = strList9.containsAll((java.util.Collection<java.lang.String>) strList31);
        java.lang.Object[] objArray36 = strList31.toArray();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[][] intArray55 = new java.lang.Integer[][] { intArray39, intArray42, intArray45, intArray48, intArray51, intArray54 };
        java.lang.String[] strArray58 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.stream.Stream<java.lang.String> strStream61 = strList59.parallelStream();
        java.lang.String[] strArray64 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.stream.Stream<java.lang.String> strStream67 = strList65.parallelStream();
        boolean boolean68 = strList59.addAll((java.util.Collection<java.lang.String>) strList65);
        java.lang.Object obj69 = null;
        boolean boolean70 = strList65.equals(obj69);
        int int71 = strList65.size();
        java.lang.Integer[][] intArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray55, (java.lang.Object) strList65);
        java.util.Iterator<java.lang.String> strItor73 = strList65.iterator();
        java.lang.Object obj74 = null;
        boolean boolean75 = strList65.equals(obj74);
        java.util.Spliterator<java.lang.String> strSpliterator76 = strList65.spliterator();
        boolean boolean77 = strList31.retainAll((java.util.Collection<java.lang.String>) strList65);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[4, hi!]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strStream67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertNotNull(strItor73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strSpliterator76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test09152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09152");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray28);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray27, doubleArray28);
        double[] doubleArray34 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray34, (double) (byte) 100, 1.0d);
        double[] doubleArray42 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray34, doubleArray42);
        float[] floatArray48 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray51 = new float[] { (byte) -1, 1L };
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray51, (float) 10L);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray48, floatArray51);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray42, (java.lang.Object) boolean54);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray42, (int) (short) 0, 1);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray58, (double) (byte) -1);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray60, (int) (byte) 100, 1);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray63);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test09153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09153");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) (byte) 1);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray2, (float) (byte) -1, (int) 'a');
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray16 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray16);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.remove(floatArray16, (int) (short) 1);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray10, floatArray19);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(floatArray10, (float) (byte) 10);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray10, 1, (int) (short) -1);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray10);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test09154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09154");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((short) (byte) 100, (short) 10);
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray38);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray38);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray38, 'a', (int) '4');
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.add(charArray38, 0, ' ');
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray38, '4');
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.clone(charArray38);
        char[] charArray55 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray59 = new char[] { '#', 'a', 'a' };
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.addAll(charArray55, charArray59);
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.subarray(charArray59, (int) 'a', (int) (short) 10);
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray59, '4');
        char[] charArray71 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray75 = new char[] { '#', 'a', 'a' };
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.addAll(charArray71, charArray75);
        java.lang.String str77 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray71);
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray71);
        char[] charArray79 = org.apache.commons.lang3.ArrayUtils.addAll(charArray59, charArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder37.append(charArray49, charArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder80.append(1L, (long) (short) -1);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[ ]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "{4,#,a,4,#}" + "'", str77, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
    }

    @Test
    public void test09155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09155");
        java.lang.Object[][] objArray0 = null;
        java.lang.Object[][] objArray1 = org.apache.commons.lang3.ArrayUtils.toArray(objArray0);
        org.junit.Assert.assertNull(objArray1);
    }

    @Test
    public void test09156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09156");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10, (double) (byte) 100);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        java.lang.Double[] doubleArray21 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray21);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray22, (double) 100L, 2, (double) (short) -1);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray22, (double) 100.0f, (int) (short) 100);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray22);
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        java.lang.Double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray32, (double) 6);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[52.0, 10.0, -1.0, 100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[52.0, 10.0, -1.0]");
    }

    @Test
    public void test09157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09157");
        java.lang.Object[] objArray0 = null;
        java.lang.String[] strArray3 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.stream.Stream<java.lang.String> strStream6 = strList4.parallelStream();
        java.lang.String[] strArray9 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.stream.Stream<java.lang.String> strStream12 = strList10.parallelStream();
        boolean boolean13 = strList4.addAll((java.util.Collection<java.lang.String>) strList10);
        java.lang.Object obj14 = null;
        boolean boolean15 = strList10.equals(obj14);
        int int16 = strList10.size();
        long[] longArray18 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(longArray18, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray18);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray18);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray18);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(longArray18, (long) (short) 100);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray18);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray18, (long) 3, (int) (byte) 100);
        boolean boolean32 = strList10.remove((java.lang.Object) longArray18);
        int int33 = strList10.size();
        java.util.stream.Stream<java.lang.String> strStream34 = strList10.stream();
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(objArray0, (java.lang.Object) strList10);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strStream6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test09158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09158");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray10, (byte) 100);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray10, (byte) 0);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) -1);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray26 = new char[] { '#', 'a', 'a' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray26);
        java.lang.String str28 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray22);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray22);
        java.lang.String[] strArray32 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.stream.Stream<java.lang.String> strStream35 = strList33.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream36 = strList33.stream();
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int16, (java.lang.Object) charArray22, (java.util.Collection<java.lang.String>) strList33);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.add(charArray22, ' ');
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray49 = new char[] { '#', 'a', 'a' };
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.addAll(charArray45, charArray49);
        java.lang.String str51 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray45);
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.remove(charArray45, 0);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray39, charArray53);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray57 = org.apache.commons.lang3.ArrayUtils.add(charArray53, (int) (short) -1, '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{4,#,a,4,#}" + "'", str28, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{4,#,a,4,#}" + "'", str51, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test09159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09159");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(floatArray5, (float) 'a');
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean[] booleanArray19 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (byte) 0, 0);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray19, true);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray32 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray36 = new char[] { '#', 'a', 'a' };
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.addAll(charArray32, charArray36);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray32, ' ');
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray49 = new char[] { '#', 'a', 'a' };
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.addAll(charArray45, charArray49);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray49, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder26.append((java.lang.Object) ' ', (java.lang.Object) charArray49);
        java.lang.Long[] longArray60 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray60);
        java.lang.Long[] longArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray62);
        char[] charArray67 = new char[] { 'a', '#', ' ' };
        char[][] charArray68 = new char[][] { charArray67 };
        char[][] charArray69 = org.apache.commons.lang3.ArrayUtils.toArray(charArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder54.append((java.lang.Object[]) longArray62, (java.lang.Object[]) charArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder54.append(true, false);
        long[] longArray78 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray78, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray80);
        long[] longArray83 = new long[] { (byte) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder54.append(longArray80, longArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((double) (byte) -1, (double) 1L);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray25, (java.lang.Object) equalsBuilder87);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) floatArray13, (java.lang.Object[]) booleanArray25);
        boolean[] booleanArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray25, true);
        java.lang.Boolean[] booleanArray92 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray25);
        boolean[] booleanArray93 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray25);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray92);
        org.junit.Assert.assertNotNull(booleanArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray93), "[true, false, true, true, true]");
    }

    @Test
    public void test09160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09160");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) 0);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray3);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3);
        short[] shortArray8 = null;
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray7, shortArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(shortArray7, (short) 10);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray7, (short) (byte) 1);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray7);
        short[] shortArray21 = new short[] { (short) 10, (short) 100, (byte) -1, (byte) 0, (short) 10, (byte) 100 };
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray21, (short) (byte) 0, (int) (short) -1);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray21, (short) (byte) 1);
        java.lang.Short[] shortArray27 = new java.lang.Short[] {};
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27, (short) 1);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27, (short) 0);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray32, (short) -1);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray32, (short) 0);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray36);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray7, shortArray36);
        java.lang.Short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray7);
        java.lang.Short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray39);
        java.lang.Object[] objArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) shortArray40);
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray40);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
    }

    @Test
    public void test09161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09161");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray9, '4');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray15);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.clone(charArray15);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.clone(charArray18);
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20, '4');
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray23, ' ');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray23);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray27);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray27, '#');
        char[] charArray37 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray41 = new char[] { '#', 'a', 'a' };
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.addAll(charArray37, charArray41);
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray37, ' ');
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.addAll(charArray27, charArray37);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray27, 'a');
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray27);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.add(charArray27, '4');
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray26, charArray50);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray19, charArray51);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, a, a, #]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, a, a, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, a, a, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, a, a, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test09162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09162");
        java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        java.lang.Double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray0);
        double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray1);
        java.lang.Double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray1);
        double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray3, (double) (byte) 10);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray5, (double) 3, 4, (double) (byte) 1);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5);
        double[] doubleArray14 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray14, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray14);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (short) 1, (int) (short) 100);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) 10, (double) (byte) 100);
        java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray14);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray14);
        java.lang.Double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray5, doubleArray14);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray14, (int) (byte) 1, 10);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, -1.0]");
    }

    @Test
    public void test09163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09163");
        java.lang.Long[] longArray2 = new java.lang.Long[] { 1L, 0L };
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2, 0L);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2, 100L);
        java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray8);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray9, (long) (short) 100, (int) (byte) 1);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.add(longArray9, (long) 4);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray14, (long) 7, (int) (byte) 10);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.subarray(longArray14, 10, (int) (byte) 0);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[1, 0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[1, 0, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[]");
    }

    @Test
    public void test09164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09164");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray12);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray12);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, 0, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray17);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray18);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) booleanArray18);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, true, true]");
    }

    @Test
    public void test09165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09165");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        long[] longArray29 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(longArray29, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray29);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray29);
        long[] longArray40 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray40);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, (long) (short) 100);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        long[] longArray52 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, (long) 0);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.addAll(longArray40, longArray52);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray59);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.addAll(longArray29, longArray59);
        long[] longArray63 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray63);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(longArray63, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray63);
        long[] longArray68 = org.apache.commons.lang3.ArrayUtils.clone(longArray63);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray63);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray63);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.contains(longArray63, (long) (short) 100);
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.add(longArray63, (long) '#');
        long[] longArray76 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray76);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.contains(longArray76, 0L);
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray76);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray74, longArray80);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray29, longArray80);
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.contains(longArray80, (long) (byte) -1);
        int int87 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray80, (long) 8, (int) (byte) 0);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[-1, -1, -1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[-1, 35]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test09166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09166");
        float[][][][] floatArray0 = new float[][][][] {};
        float[][][][][] floatArray1 = new float[][][][][] { floatArray0 };
        double[] doubleArray5 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray5, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray5);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray5, (double) (short) 1, (int) (short) 100);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray5, (double) 10, (double) (byte) 100);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray5, (double) (short) 0);
        java.lang.Double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray5);
        java.lang.Object obj19 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.stream.Stream<java.lang.String> strStream29 = strList27.parallelStream();
        java.lang.String[] strArray32 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.stream.Stream<java.lang.String> strStream35 = strList33.parallelStream();
        boolean boolean36 = strList27.addAll((java.util.Collection<java.lang.String>) strList33);
        java.lang.Object obj37 = null;
        boolean boolean38 = strList33.equals(obj37);
        int int39 = strList33.size();
        boolean boolean40 = strList22.removeAll((java.util.Collection<java.lang.String>) strList33);
        java.lang.String[] strArray43 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.stream.Stream<java.lang.String> strStream46 = strList44.parallelStream();
        boolean boolean47 = strList33.addAll((java.util.Collection<java.lang.String>) strList44);
        java.lang.String[] strArray49 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.stream.Stream<java.lang.String> strStream57 = strList55.parallelStream();
        java.lang.String[] strArray60 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.stream.Stream<java.lang.String> strStream63 = strList61.parallelStream();
        boolean boolean64 = strList55.addAll((java.util.Collection<java.lang.String>) strList61);
        java.lang.Object obj65 = null;
        boolean boolean66 = strList61.equals(obj65);
        int int67 = strList61.size();
        boolean boolean68 = strList50.removeAll((java.util.Collection<java.lang.String>) strList61);
        java.util.Iterator<java.lang.String> strItor69 = strList61.iterator();
        boolean boolean70 = strList33.retainAll((java.util.Collection<java.lang.String>) strList61);
        java.util.Spliterator<java.lang.String> strSpliterator71 = strList33.spliterator();
        boolean boolean72 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray5, obj19, (java.util.Collection<java.lang.String>) strList33);
        strList33.clear();
        java.util.Spliterator<java.lang.String> strSpliterator74 = strList33.spliterator();
        float[][] floatArray75 = new float[][] {};
        float[][] floatArray76 = new float[][] {};
        float[][][] floatArray77 = new float[][][] { floatArray75, floatArray76 };
        float[][] floatArray78 = new float[][] {};
        float[][] floatArray79 = new float[][] {};
        float[][][] floatArray80 = new float[][][] { floatArray78, floatArray79 };
        float[][] floatArray81 = new float[][] {};
        float[][] floatArray82 = new float[][] {};
        float[][][] floatArray83 = new float[][][] { floatArray81, floatArray82 };
        float[][] floatArray84 = new float[][] {};
        float[][] floatArray85 = new float[][] {};
        float[][][] floatArray86 = new float[][][] { floatArray84, floatArray85 };
        float[][] floatArray87 = new float[][] {};
        float[][] floatArray88 = new float[][] {};
        float[][][] floatArray89 = new float[][][] { floatArray87, floatArray88 };
        float[][][][] floatArray90 = new float[][][][] { floatArray77, floatArray80, floatArray83, floatArray86, floatArray89 };
        float[][][][] floatArray91 = strList33.toArray(floatArray90);
        float[][][][][] floatArray92 = org.apache.commons.lang3.ArrayUtils.add(floatArray1, floatArray91);
        float[][][][] floatArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            float[][][][][] floatArray95 = org.apache.commons.lang3.ArrayUtils.add(floatArray92, 100, floatArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strStream57);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strSpliterator71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strSpliterator74);
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertNotNull(floatArray84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertNotNull(floatArray91);
        org.junit.Assert.assertNotNull(floatArray92);
    }

    @Test
    public void test09167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09167");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5);
        short[] shortArray20 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray20, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray24 = new java.lang.Short[] {};
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24, (short) 1);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray20, shortArray27);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray20, (short) 0, 0);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.add(shortArray20, (int) (byte) 0, (short) 0);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.add(shortArray20, (short) 0);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray36, (short) (byte) -1);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray38);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray38);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[100, 0, 0, 1, -1, 0]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 1, 0, 0, 100]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[100, 0, 0, 1, -1, 100, 0, 0, 1, 0]");
    }

    @Test
    public void test09168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09168");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray26);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) '#');
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 0.0d);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (byte) 10);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 1.0d);
        double[] doubleArray41 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray41, (double) (byte) 100, 1.0d);
        double[] doubleArray49 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray41, doubleArray49);
        float[] floatArray55 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray58 = new float[] { (byte) -1, 1L };
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray58, (float) 10L);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray55, floatArray58);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray49, (java.lang.Object) boolean61);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, (int) (short) 0, 1);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray49);
        java.lang.Double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray66);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray66, (double) (short) -1);
        java.lang.Double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray66);
        java.lang.Double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray66);
        java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray71);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray71);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray26, (java.lang.Object) doubleArray73);
        java.lang.Double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(doubleArray75);
    }

    @Test
    public void test09169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09169");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray12);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, 0.0d, (int) (byte) 100, (-1.0d));
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 100L);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        double[] doubleArray24 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray24, (double) (byte) 100, 1.0d);
        double[] doubleArray32 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray24, doubleArray32);
        float[] floatArray38 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray41 = new float[] { (byte) -1, 1L };
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray41, (float) 10L);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray38, floatArray41);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray32, (java.lang.Object) boolean44);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray32);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray46, (double) 10, (int) (byte) 1);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray46);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray12, doubleArray50);
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray50, (double) 'a', (int) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test09170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09170");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray12);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray12);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.add(booleanArray4, 0, false);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray17);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray18);
        java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
    }

    @Test
    public void test09171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09171");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        short[] shortArray38 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray42 = new java.lang.Short[] {};
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray38, shortArray45);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray45, (int) '4', (int) (short) 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray45, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray59 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray59, (short) (byte) 0);
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, (int) (byte) 100, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append(shortArray45, shortArray59);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.add(shortArray59, (short) 0);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray72, (short) (byte) -1);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray72);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.remove(shortArray72, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[100, 0, 0, 1, -1, 0]");
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[100, 0, 0, 1, 0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test09172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09172");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.String[] strArray29 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.stream.Stream<java.lang.String> strStream37 = strList35.parallelStream();
        java.lang.String[] strArray40 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.stream.Stream<java.lang.String> strStream43 = strList41.parallelStream();
        boolean boolean44 = strList35.addAll((java.util.Collection<java.lang.String>) strList41);
        java.lang.Object obj45 = null;
        boolean boolean46 = strList41.equals(obj45);
        int int47 = strList41.size();
        boolean boolean48 = strList30.removeAll((java.util.Collection<java.lang.String>) strList41);
        java.util.Iterator<java.lang.String> strItor49 = strList41.iterator();
        boolean boolean50 = strList13.retainAll((java.util.Collection<java.lang.String>) strList41);
        java.util.Iterator<java.lang.String> strItor51 = strList41.iterator();
        java.lang.Object[] objArray52 = strList41.toArray();
        java.lang.String[] strArray54 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.lang.String[] strArray59 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.stream.Stream<java.lang.String> strStream62 = strList60.parallelStream();
        java.lang.String[] strArray65 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.stream.Stream<java.lang.String> strStream68 = strList66.parallelStream();
        boolean boolean69 = strList60.addAll((java.util.Collection<java.lang.String>) strList66);
        java.lang.Object obj70 = null;
        boolean boolean71 = strList66.equals(obj70);
        int int72 = strList66.size();
        boolean boolean73 = strList55.removeAll((java.util.Collection<java.lang.String>) strList66);
        java.lang.Object obj74 = null;
        java.lang.String[] strArray75 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray77 = org.apache.commons.lang3.ArrayUtils.add(strArray75, "{true,true}");
        java.lang.String[] strArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray77);
        boolean boolean79 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strList55, obj74, strArray77);
        java.lang.Object obj80 = null;
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) strArray77, obj80);
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strList41, (java.lang.Object) boolean81);
        boolean boolean84 = strList41.add("{-1.0,10.0,35.0}");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strItor51);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[4, hi!]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strStream68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test09173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09173");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray12);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test09174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09174");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.clone(byteArray10);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.add(byteArray10, (byte) 10);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray13, (byte) -1);
        java.lang.Byte[] byteArray22 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray22, (byte) 1);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(byteArray24, (byte) 100);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(byteArray24, (byte) 1);
        java.lang.Byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray24);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray29, (byte) 100);
        byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.add(byteArray31, (byte) 10);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.clone(byteArray33);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray33);
        byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.add(byteArray33, (byte) 100);
        byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray37, (byte) 0);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray37, (byte) 10, 5);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray37);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray37, (byte) 10);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray15, byteArray37);
        java.lang.Byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray15);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray47);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[10, 0, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[10, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[10, 10, 0, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[10]");
    }

    @Test
    public void test09175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09175");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        java.lang.Short[] shortArray39 = new java.lang.Short[] {};
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39, (short) 1);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.clone(shortArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray43);
        java.lang.Short[] shortArray45 = new java.lang.Short[] {};
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 1);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 0);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray50, (short) -1);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.add(shortArray52, (short) 1);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray43, shortArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder37.append(shortArray38, shortArray55);
        java.lang.Short[] shortArray57 = new java.lang.Short[] {};
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57, (short) 1);
        java.lang.Short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(shortArray60, (short) 10);
        java.lang.Short[] shortArray64 = new java.lang.Short[] {};
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64, (short) 1);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.clone(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.add(shortArray68, (short) -1);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray68);
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray68, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder56.append(shortArray60, shortArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder56.append((int) (byte) 1, 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder56.append(7, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder83.append((short) 10, (short) (byte) 10);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test09176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09176");
        java.lang.Long[] longArray3 = new java.lang.Long[] { 100L, 1L, 1L };
        java.lang.Long[] longArray7 = new java.lang.Long[] { 100L, 1L, 1L };
        java.lang.Long[] longArray11 = new java.lang.Long[] { 100L, 1L, 1L };
        java.lang.Long[][] longArray12 = new java.lang.Long[][] { longArray3, longArray7, longArray11 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = equalsBuilder13.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder19 = equalsBuilder13.append((int) (byte) 0, (int) (byte) 10);
        java.lang.Long[][] longArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray12, (java.lang.Object) equalsBuilder19);
        java.lang.Long[] longArray21 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray21);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray21);
        java.lang.Long[] longArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray21);
        java.lang.Long[][] longArray25 = org.apache.commons.lang3.ArrayUtils.add(longArray12, longArray21);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray21);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray26, (long) (byte) 1);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray26);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.clone(longArray26);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(longArray30, (long) (short) 0);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(equalsBuilder16);
        org.junit.Assert.assertNotNull(equalsBuilder19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test09177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09177");
        float[] floatArray0 = null;
        int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray0, 1.0f);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test09178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09178");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (int) (byte) 0, (short) 0);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.remove(shortArray19, 0);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray19, (short) 100);
        java.lang.Short[] shortArray24 = new java.lang.Short[] {};
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24, (short) 1);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.clone(shortArray27);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.add(shortArray28, (short) -1);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray28);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray28);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray19, shortArray28);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.add(shortArray19, (short) 1);
        boolean[] booleanArray36 = new boolean[] {};
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray36, false);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray36, false);
        java.lang.Character[] charArray41 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray41, '4');
        java.lang.Character[] charArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray41);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray41);
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray41);
        java.lang.String[] strArray49 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.stream.Stream<java.lang.String> strStream52 = strList50.parallelStream();
        java.lang.String[] strArray55 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.stream.Stream<java.lang.String> strStream58 = strList56.parallelStream();
        boolean boolean59 = strList50.addAll((java.util.Collection<java.lang.String>) strList56);
        java.util.stream.Stream<java.lang.String> strStream60 = strList50.parallelStream();
        boolean boolean62 = strList50.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray67 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        float[] floatArray70 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray76 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray77 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray76);
        float[] floatArray79 = org.apache.commons.lang3.ArrayUtils.remove(floatArray76, (int) (short) 1);
        float[] floatArray80 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray70, floatArray79);
        boolean boolean81 = strList68.equals((java.lang.Object) floatArray80);
        int int82 = strList68.size();
        int[] intArray83 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray83, (int) (byte) 1);
        boolean boolean86 = strList68.contains((java.lang.Object) int85);
        boolean boolean87 = strList50.addAll((java.util.Collection<java.lang.String>) strList68);
        boolean boolean88 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int40, (java.lang.Object) charArray41, (java.util.Collection<java.lang.String>) strList50);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) (short) 1, (java.lang.Object) charArray41);
        java.util.Map<java.lang.Object, java.lang.Object> objMap90 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) charArray41);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[0, 100, 0, 0, 1, -1, 1]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strStream52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strStream60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objMap90);
    }

    @Test
    public void test09179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09179");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray8);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray8, (int) (short) 1);
        int[] intArray16 = new int[] {};
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray16, intArray17);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray17, (int) '#', (int) (short) 100);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray17, 4, (int) (short) 100);
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray31);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray32, intArray33);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(intArray33, (int) '4');
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.add(intArray33, (int) (short) 100);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray33);
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.subarray(intArray33, 1, (int) (byte) 1);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.addAll(intArray17, intArray33);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray33);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray33);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray33);
        int[] intArray47 = org.apache.commons.lang3.ArrayUtils.clone(intArray33);
        short[] shortArray53 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray53, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray57 = new java.lang.Short[] {};
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57, (short) 1);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray53, shortArray60);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray60);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(shortArray60, (short) (byte) 10);
        boolean boolean66 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray47, (java.lang.Object) boolean64, true);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test09180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09180");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean[] booleanArray38 = new boolean[] { false, false, false, true, false, false };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38);
        boolean[] booleanArray46 = new boolean[] { false, false, false, true, false, false };
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray38, booleanArray46);
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray53, false);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray53, false);
        boolean[] booleanArray63 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, (int) (byte) 0, 0);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, 4, (int) '4');
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray57, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder0.append(booleanArray46, booleanArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder71.append(1L, (long) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder74.append((long) 0, (long) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder74.appendSuper(false);
        java.lang.Boolean boolean80 = equalsBuilder79.build();
        java.lang.Boolean boolean81 = equalsBuilder79.build();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + false + "'", boolean80, false);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + false + "'", boolean81, false);
    }

    @Test
    public void test09181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09181");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, (int) (byte) 1);
        int[] intArray3 = new int[] {};
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray3, intArray4);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.addAll(intArray0, intArray3);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray3, (int) (short) 10, 9);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray12 = org.apache.commons.lang3.ArrayUtils.add(intArray3, (int) '#', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[]");
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test09182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09182");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray2);
        char[] charArray9 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray13 = new char[] { '#', 'a', 'a' };
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray13);
        java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray2, charArray9);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray26 = new char[] { '#', 'a', 'a' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray26);
        java.lang.String str28 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray22);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray22);
        boolean boolean31 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray9, (java.lang.Object) charArray29, false);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray29, '4');
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray29, '4', (int) ' ');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray29);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{4,#,a,4,#}" + "'", str15, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#4a#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#4a#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, 4, a, #, 4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{4,#,a,4,#}" + "'", str28, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4a#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4a#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4, a, #, 4]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test09183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09183");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        java.lang.Long[] longArray4 = org.apache.commons.lang3.ArrayUtils.toObject(longArray3);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4, (long) 9);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[-1]");
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
    }

    @Test
    public void test09184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09184");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0, (long) '4');
        java.lang.Long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        java.lang.Long[] longArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray3);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray3);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray7 = org.apache.commons.lang3.ArrayUtils.remove(longArray5, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[]");
    }

    @Test
    public void test09185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09185");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray12 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray12, (int) (byte) 0, 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, true);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray12);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray6);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, false);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, true);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true, true, false]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test09186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09186");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray0);
        double[] doubleArray7 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray7, (double) (byte) 100, 1.0d);
        double[] doubleArray15 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray7, doubleArray15);
        float[] floatArray21 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray24 = new float[] { (byte) -1, 1L };
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray24, (float) 10L);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray21, floatArray24);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray15, (java.lang.Object) boolean27);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, (int) (short) 0, 1);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray31, (double) (byte) -1);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray33, (int) (byte) 100, 1);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray33, 0, (int) (short) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray33);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) charArray0, (java.lang.Object) doubleArray33);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray0, '4', 5);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test09187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09187");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.add(charArray12, ' ');
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray12, '4');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.add(charArray12, '4');
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray19);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray19);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray19, '#');
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray18, charArray19);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #, 4]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test09188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09188");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        float[] floatArray5 = null;
        float[] floatArray6 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray20 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.remove(floatArray20, (int) (short) 1);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray14, floatArray23);
        boolean boolean25 = strList12.equals((java.lang.Object) floatArray24);
        float[] floatArray31 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray31, (float) 1);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray24, floatArray31);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder0.append(floatArray5, floatArray6);
        java.lang.Short[] shortArray38 = new java.lang.Short[] {};
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray38);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray38, (short) 1);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.clone(shortArray41);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.add(shortArray42, (short) -1);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray42);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray42, (short) (byte) 10);
        short[] shortArray52 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray52, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray52);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray56, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder37.append(shortArray47, shortArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder37.append((double) '#', (double) 'a');
        java.lang.Object obj63 = null;
        double[] doubleArray67 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray67, (double) (byte) 100, 1.0d);
        double[] doubleArray75 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray67, doubleArray75);
        float[] floatArray81 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray84 = new float[] { (byte) -1, 1L };
        int int86 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray84, (float) 10L);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray81, floatArray84);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray75, (java.lang.Object) boolean87);
        double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray75);
        java.lang.Double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray89);
        double[] doubleArray92 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray90, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray90);
        java.lang.Double[] doubleArray94 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder37.append(obj63, (java.lang.Object) doubleArray94);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder37.appendSuper(true);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray84), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test09189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09189");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, 'a');
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray15);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray15, '#');
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray29 = new char[] { '#', 'a', 'a' };
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray29);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray25, ' ');
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.addAll(charArray15, charArray25);
        java.lang.Character[] charArray39 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray39);
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray40, '4');
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray33, charArray42);
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.add(charArray33, 0, '#');
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray47);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray47);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray47, '#');
        char[] charArray57 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray61 = new char[] { '#', 'a', 'a' };
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.addAll(charArray57, charArray61);
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray57, ' ');
        char[] charArray65 = org.apache.commons.lang3.ArrayUtils.addAll(charArray47, charArray57);
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.subarray(charArray47, 0, 0);
        char[] charArray69 = org.apache.commons.lang3.ArrayUtils.addAll(charArray46, charArray47);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.addAll(charArray14, charArray69);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.contains(charArray14, '#');
        java.lang.Character[] charArray73 = org.apache.commons.lang3.ArrayUtils.toObject(charArray14);
        java.lang.Long[] longArray79 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray79);
        long[] longArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray79, (long) (short) 10);
        long[] longArray83 = org.apache.commons.lang3.ArrayUtils.clone(longArray82);
        long[] longArray85 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray83, (long) (short) 0);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray73, (java.lang.Object) (short) 0);
        java.lang.Character[] charArray87 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray73);
        char[] charArray88 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray87);
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray87);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, 4, #]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[ , #, 4, a, a]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4#4##4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4#4##4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4, #, 4, #, #, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray82), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray85), "[1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[4, #, 4, #]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[4, #, 4, #]");
    }

    @Test
    public void test09190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09190");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 10);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray16, (short) 1, 100);
        java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray20);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[100, 0, 0, 1, -1]");
    }

    @Test
    public void test09191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09191");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, false);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, true);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, true, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false, true]");
    }

    @Test
    public void test09192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09192");
        double[] doubleArray0 = new double[] {};
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray0, (int) '#', (int) (short) -1);
        int int4 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (short) 100);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (short) 0, 3);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 1.0f, 10.0d);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test09193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09193");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        java.lang.Long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        java.lang.Object[] objArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray3);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray3);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray5, (long) (byte) 100);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray7, (-1L));
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test09194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09194");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        boolean[] booleanArray69 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray69, (int) (byte) 0, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray69);
        java.lang.Boolean[] booleanArray77 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77);
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder28.append(booleanArray69, booleanArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder28.append((short) 10, (short) 1);
        char[] charArray84 = null;
        char[] charArray85 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray85);
        char[] charArray87 = org.apache.commons.lang3.ArrayUtils.clone(charArray85);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder28.append(charArray84, charArray85);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder28.append(3, (int) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder94 = equalsBuilder28.append((long) 6, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder28.append((int) (byte) 1, 1);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, true, true]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(equalsBuilder94);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test09195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09195");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        java.lang.Long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        java.lang.Short[] shortArray4 = new java.lang.Short[] {};
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray4);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray4, (short) 1);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray7, (short) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray7);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray7);
        short[] shortArray12 = null;
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray11, shortArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(shortArray11, (short) 10);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray11, (short) (byte) 1);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.clone(shortArray11);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.clone(shortArray18);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray3, (java.lang.Object) shortArray18, 5);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray3, (long) 'a');
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray3, (long) 7);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray25);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test09196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09196");
        long[][] longArray0 = new long[][] {};
        long[][] longArray1 = new long[][] {};
        long[][] longArray2 = new long[][] {};
        long[][] longArray3 = new long[][] {};
        long[][][] longArray4 = new long[][][] { longArray0, longArray1, longArray2, longArray3 };
        long[][][] longArray5 = org.apache.commons.lang3.ArrayUtils.clone(longArray4);
        long[] longArray12 = new long[] { (short) 1, 2, 10L, (-1L), 7, 2 };
        long[] longArray19 = new long[] { (short) 1, 2, 10L, (-1L), 7, 2 };
        long[] longArray26 = new long[] { (short) 1, 2, 10L, (-1L), 7, 2 };
        long[] longArray33 = new long[] { (short) 1, 2, 10L, (-1L), 7, 2 };
        long[][] longArray34 = new long[][] { longArray12, longArray19, longArray26, longArray33 };
        long[][][] longArray35 = new long[][][] { longArray34 };
        long[] longArray36 = new long[] {};
        long[] longArray37 = new long[] {};
        long[] longArray38 = new long[] {};
        long[] longArray39 = new long[] {};
        long[] longArray40 = new long[] {};
        long[] longArray41 = new long[] {};
        long[][] longArray42 = new long[][] { longArray36, longArray37, longArray38, longArray39, longArray40, longArray41 };
        long[] longArray43 = new long[] {};
        long[] longArray44 = new long[] {};
        long[] longArray45 = new long[] {};
        long[] longArray46 = new long[] {};
        long[] longArray47 = new long[] {};
        long[] longArray48 = new long[] {};
        long[][] longArray49 = new long[][] { longArray43, longArray44, longArray45, longArray46, longArray47, longArray48 };
        long[] longArray50 = new long[] {};
        long[] longArray51 = new long[] {};
        long[] longArray52 = new long[] {};
        long[] longArray53 = new long[] {};
        long[] longArray54 = new long[] {};
        long[] longArray55 = new long[] {};
        long[][] longArray56 = new long[][] { longArray50, longArray51, longArray52, longArray53, longArray54, longArray55 };
        long[][][] longArray57 = new long[][][] { longArray42, longArray49, longArray56 };
        long[][][] longArray58 = org.apache.commons.lang3.ArrayUtils.addAll(longArray35, longArray57);
        double[] doubleArray62 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray62, (double) (byte) 100, 1.0d);
        double[] doubleArray70 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray62, doubleArray70);
        float[] floatArray76 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray79 = new float[] { (byte) -1, 1L };
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray79, (float) 10L);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray76, floatArray79);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray70, (java.lang.Object) boolean82);
        double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray70);
        java.lang.Double[] doubleArray85 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray84);
        double[] doubleArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray85, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray85);
        double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray85, (double) '#');
        java.lang.Double[] doubleArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray85);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) longArray58, (java.lang.Object[]) doubleArray91);
        long[][][] longArray93 = org.apache.commons.lang3.ArrayUtils.addAll(longArray4, longArray58);
        // The following exception was thrown during execution in test generation
        try {
            long[][][] longArray95 = org.apache.commons.lang3.ArrayUtils.remove(longArray58, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[1, 2, 10, -1, 7, 2]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[1, 2, 10, -1, 7, 2]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[1, 2, 10, -1, 7, 2]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[1, 2, 10, -1, 7, 2]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[]");
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[]");
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(longArray93);
    }

    @Test
    public void test09197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09197");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 10);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray10, (byte) 0, 2);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray20 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray24 = new char[] { '#', 'a', 'a' };
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray24);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray20, ' ');
        char[] charArray33 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray37 = new char[] { '#', 'a', 'a' };
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.addAll(charArray33, charArray37);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray37, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder14.append((java.lang.Object) ' ', (java.lang.Object) charArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder14.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder48.append((long) 4, (long) (short) 1);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray57 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray52, byteArray57);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray52, (byte) -1);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray52, (byte) -1);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray52, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        java.lang.Byte[] byteArray72 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray72, (byte) 1);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(byteArray74, (byte) 100);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(byteArray74, (byte) 1);
        java.lang.Byte[] byteArray79 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray74);
        byte[] byteArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray79, (byte) 100);
        byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.add(byteArray81, (byte) 10);
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder48.append(byteArray52, byteArray81);
        byte[] byteArray88 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray52, (int) (byte) -1, (int) '4');
        java.lang.Byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray52);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray10, byteArray52);
        int int93 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray52, (byte) 0, 11);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[]");
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
    }

    @Test
    public void test09198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09198");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Boolean boolean1 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder4 = equalsBuilder0.append((long) 4, (long) 6);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append('#', 'a');
        java.lang.Boolean boolean8 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = equalsBuilder0.appendSuper(false);
        org.junit.Assert.assertEquals("'" + boolean1 + "' != '" + true + "'", boolean1, true);
        org.junit.Assert.assertNotNull(equalsBuilder4);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(equalsBuilder10);
    }

    @Test
    public void test09199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09199");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        boolean boolean35 = equalsBuilder34.isEquals();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray42);
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray43, intArray44);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(intArray44, (int) '4');
        int[] intArray49 = org.apache.commons.lang3.ArrayUtils.add(intArray44, (int) (short) 100);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray44);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray44);
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray44, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray61);
        int[] intArray63 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray62, intArray63);
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray63, (int) (byte) 0);
        int[] intArray67 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray63);
        int[] intArray68 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray68, (int) (byte) 1);
        int[] intArray71 = new int[] {};
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray71, intArray72);
        int[] intArray74 = org.apache.commons.lang3.ArrayUtils.addAll(intArray68, intArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder54.append(intArray67, intArray71);
        int[] intArray77 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray67, (int) (short) -1);
        int int80 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray77, (int) '#', (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder34.append(intArray44, intArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder34.append(0, 6);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((short) 1, (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder87.append(true, true);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertNotNull(equalsBuilder90);
    }

    @Test
    public void test09200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09200");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2);
        java.lang.Character[] charArray4 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray4);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray6);
        char[] charArray13 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray17 = new char[] { '#', 'a', 'a' };
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray13, charArray17);
        java.lang.String str19 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray13);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray6, charArray13);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, 4, (int) '#');
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray3, charArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray23, '#');
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray23);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray23, '4', (-1));
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{4,#,a,4,#}" + "'", str19, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test09201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09201");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray20 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.remove(floatArray29, (int) (short) 1);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray23, floatArray32);
        boolean boolean34 = strList21.equals((java.lang.Object) floatArray33);
        int int35 = strList21.size();
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray36, (int) (byte) 1);
        boolean boolean39 = strList21.contains((java.lang.Object) int38);
        boolean boolean40 = strList3.addAll((java.util.Collection<java.lang.String>) strList21);
        java.lang.String[] strArray45 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray54 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray54);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.remove(floatArray54, (int) (short) 1);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray48, floatArray57);
        boolean boolean59 = strList46.equals((java.lang.Object) floatArray58);
        int int60 = strList46.size();
        boolean boolean61 = strList3.removeAll((java.util.Collection<java.lang.String>) strList46);
        java.util.stream.Stream<java.lang.String> strStream62 = strList46.stream();
        java.lang.String[] strArray67 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        float[] floatArray70 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray76 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray77 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray76);
        float[] floatArray79 = org.apache.commons.lang3.ArrayUtils.remove(floatArray76, (int) (short) 1);
        float[] floatArray80 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray70, floatArray79);
        boolean boolean81 = strList68.equals((java.lang.Object) floatArray80);
        int int82 = strList68.size();
        java.lang.Character[] charArray88 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray88);
        char[] charArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray89, '4');
        boolean boolean92 = strList68.remove((java.lang.Object) '4');
        boolean boolean93 = strList46.containsAll((java.util.Collection<java.lang.String>) strList68);
        int int94 = strList68.size();
        java.util.Iterator<java.lang.String> strItor95 = strList68.iterator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[ , #, 4, a, a]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 4 + "'", int94 == 4);
        org.junit.Assert.assertNotNull(strItor95);
    }

    @Test
    public void test09202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09202");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray6, (int) (short) 1, 1);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, false);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, (int) (byte) 10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test09203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09203");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, 0, (int) (short) 10);
        double[] doubleArray39 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) (byte) 100, 1.0d);
        double[] doubleArray47 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray39, doubleArray47);
        float[] floatArray53 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray56 = new float[] { (byte) -1, 1L };
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray56, (float) 10L);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray53, floatArray56);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray47, (java.lang.Object) boolean59);
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray47, (int) (short) 0, 1);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray63, (double) (byte) -1);
        double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray65, (int) (byte) 100, 1);
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray65, 0, (int) (short) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray65);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray35, doubleArray65);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) 10, (double) 8);
        java.lang.Class<?> wildcardClass77 = doubleArray35.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test09204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09204");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray0);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray0, (byte) 100, (int) (short) 100);
        java.lang.Double[] doubleArray23 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray23);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray24, (double) 100L, 2, (double) (short) -1);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray24, (double) (-1L));
        double[] doubleArray34 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray34, (double) (byte) 100, 1.0d);
        double[] doubleArray42 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray34, doubleArray42);
        float[] floatArray48 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray51 = new float[] { (byte) -1, 1L };
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray51, (float) 10L);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray48, floatArray51);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray42, (java.lang.Object) boolean54);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray42, (int) (short) 0, 1);
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray42);
        java.lang.Double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray59);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray24, doubleArray59);
        boolean boolean62 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray0, (java.lang.Object) doubleArray24);
        double[] doubleArray66 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray66, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray66);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) (short) 1, (int) (short) 100);
        int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) 10, (double) (byte) 100);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) (short) 0);
        java.lang.Double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray66);
        double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray79, (double) 4);
        double[] doubleArray85 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray85, (double) (byte) 100, 1.0d);
        double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray81, doubleArray85);
        double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray24, doubleArray81);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray90);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray90, (double) '#');
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[52.0, 10.0, -1.0, -1.0, 10.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0, 52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test09205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09205");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        java.util.stream.Stream<java.lang.String> strStream15 = strList9.parallelStream();
        java.lang.Byte[] byteArray22 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray22, (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray22);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray31);
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray39);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray39);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray32, (java.lang.Object) intArray39);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32, (byte) 10);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray44, (byte) 10);
        java.lang.String[] strArray50 = new java.lang.String[] { "{}", "1", "{}" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean25, (java.lang.Object) (byte) 10, (java.util.Collection<java.lang.String>) strList51);
        boolean boolean54 = strList9.retainAll((java.util.Collection<java.lang.String>) strList51);
        java.lang.Long[] longArray60 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray60);
        java.lang.Long[] longArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray60);
        boolean boolean63 = strList51.contains((java.lang.Object) longArray60);
        java.lang.Long[] longArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray60);
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray60);
        int int68 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray65, (-1L), 7);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test09206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09206");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 4, (int) '4');
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        float[] floatArray19 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray19, 0.0f);
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray23, (float) (byte) 100);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray25);
        long[] longArray33 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.subarray(longArray33, 3, (int) (byte) 0);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray33);
        boolean[] booleanArray44 = new boolean[] { false, false, false, true, false, false };
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray44);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray44, true);
        java.lang.String[] strArray50 = new java.lang.String[] { "4", "1" };
        boolean boolean51 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean37, (java.lang.Object) true, strArray50);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) strArray50);
        java.lang.String[] strArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray50);
        boolean boolean54 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray12, (java.lang.Object) boolean26, strArray53);
        java.lang.Boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray12);
        java.lang.Boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
    }

    @Test
    public void test09207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09207");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray66, 5, 100);
        java.lang.Short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray79);
        java.lang.Character[] charArray81 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray81, '4');
        java.lang.Character[] charArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray81);
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray84, ' ');
        java.lang.Object[] objArray87 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray84);
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray80, (java.lang.Object) charArray84);
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray84);
        char[] charArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray84, ' ');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[]");
    }

    @Test
    public void test09208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09208");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.clone(intArray8);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, (int) (byte) 1);
        int[] intArray16 = new int[] {};
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray16, intArray17);
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.addAll(intArray13, intArray16);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, (int) '4', (int) (byte) 1);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray12, intArray13);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray35 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray36 = new java.lang.Byte[][] { byteArray29, byteArray35 };
        java.lang.Byte[][] byteArray39 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray36, (int) '#', 10);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray46);
        java.lang.Byte[][] byteArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray36, (java.lang.Object) intArray46);
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray46, (int) (short) -1);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray46, (int) ' ');
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.addAll(intArray12, intArray52);
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray12, (int) (short) 0, (int) '#');
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(intArray12, 8);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test09209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09209");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) '#', 1, (double) (byte) 100);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray32);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray28, (int) (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray28);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray28, 0, (double) (short) 10);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray28);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray28);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, -1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test09210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09210");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((short) (byte) 100, (short) 10);
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray38);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray38);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray38, 'a', (int) '4');
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.add(charArray38, 0, ' ');
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray38, '4');
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.clone(charArray38);
        char[] charArray55 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray59 = new char[] { '#', 'a', 'a' };
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.addAll(charArray55, charArray59);
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.subarray(charArray59, (int) 'a', (int) (short) 10);
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray59, '4');
        char[] charArray71 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray75 = new char[] { '#', 'a', 'a' };
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.addAll(charArray71, charArray75);
        java.lang.String str77 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray71);
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray71);
        char[] charArray79 = org.apache.commons.lang3.ArrayUtils.addAll(charArray59, charArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder37.append(charArray49, charArray78);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append(100.0d, (double) (short) 100);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[ ]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "{4,#,a,4,#}" + "'", str77, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test09211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09211");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((double) (byte) 0, (double) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((short) 100, (short) (byte) 100);
        long[] longArray42 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray42);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(longArray42, 0L);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray42);
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray46);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray46, (long) 2, (int) 'a');
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray46);
        long[] longArray56 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray56, 1L);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder40.append(longArray51, longArray58);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.subarray(longArray58, 6, 0);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray63);
        java.lang.String str65 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) longArray63);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(longArray63, (long) 7);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[-1]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[-1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[-1]");
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{}" + "'", str65, "{}");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test09212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09212");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        float[] floatArray25 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray15, floatArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray15);
        float[] floatArray34 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, 0.0f);
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        float[] floatArray44 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray44);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray44, (int) (byte) 1, 0);
        float[] floatArray52 = new float[] { (byte) -1, 1L };
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray52, (float) 10L);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray49, floatArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray52);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray34, floatArray52);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray57);
        float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray57);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray57);
        float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray57, (float) (short) 100);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 1.0, -1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
    }

    @Test
    public void test09213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09213");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        double[] doubleArray54 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray54, (double) (byte) 100, 1.0d);
        double[] doubleArray62 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray54, doubleArray62);
        float[] floatArray68 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray71 = new float[] { (byte) -1, 1L };
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray71, (float) 10L);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray68, floatArray71);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray62, (java.lang.Object) boolean74);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray62);
        java.lang.Double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray76);
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray77, (double) (-1));
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        int int83 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray80, (double) 10L, (double) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder50.append(doubleArray79, doubleArray80);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.add(doubleArray79, 1.0d);
        int int89 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray86, (double) (short) 0, 0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 0.0, 10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test09214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09214");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.clone(intArray5);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray7, (int) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray7);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.add(intArray7, (-1));
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray5, intArray12);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray5, 100);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.subarray(intArray15, 100, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
    }

    @Test
    public void test09215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09215");
        char[] charArray0 = null;
        char[] charArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray7 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray11 = new char[] { '#', 'a', 'a' };
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray11);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray11, 'a', (int) (byte) 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray11, '4');
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray1, charArray11);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.add(charArray11, '#');
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.subarray(charArray20, 3, (int) (byte) 100);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray20);
        char[] charArray30 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray34 = new char[] { '#', 'a', 'a' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray30, charArray34);
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.subarray(charArray34, (int) 'a', (int) (short) 10);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray34, '4');
        char[] charArray46 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray50 = new char[] { '#', 'a', 'a' };
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray46, charArray50);
        java.lang.String str52 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray46);
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray46);
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.addAll(charArray34, charArray53);
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.clone(charArray34);
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.remove(charArray34, (int) (short) 1);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray57, '4', (int) (short) 10);
        char[] charArray61 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray61);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray61);
        char[] charArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray61, '#');
        char[] charArray71 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray75 = new char[] { '#', 'a', 'a' };
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.addAll(charArray71, charArray75);
        int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray75, ' ', 2);
        char[] charArray82 = org.apache.commons.lang3.ArrayUtils.subarray(charArray75, 0, (int) (byte) 10);
        char[] charArray84 = org.apache.commons.lang3.ArrayUtils.add(charArray82, ' ');
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray65, charArray84);
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.addAll(charArray57, charArray84);
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray57, '4');
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray57);
        char[] charArray92 = org.apache.commons.lang3.ArrayUtils.subarray(charArray20, (int) 'a', 10);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, a, a, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{4,#,a,4,#}" + "'", str52, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, a]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "#aa ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "#aa ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[#, a, a,  ]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "#a#aa ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "#a#aa ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#, a, #, a, a,  ]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "#aa##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "#aa##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[#, a, a, #, #, a]");
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[]");
    }

    @Test
    public void test09216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09216");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        java.lang.Character[] charArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' ');
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) charArray5);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , #, 4, a, a]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test09217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09217");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(0.0d, (double) 10);
        long[] longArray34 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(longArray34, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray34);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray34);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        java.lang.Long[] longArray41 = org.apache.commons.lang3.ArrayUtils.toObject(longArray40);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray41, (long) 'a');
        java.lang.Long[] longArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray44);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray44);
        java.lang.Long[] longArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray44);
        java.lang.Object[] objArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray47);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray47);
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.subarray(longArray49, 7, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder28.append(longArray43, longArray49);
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.clone(longArray43);
        long[] longArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray43);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray57 = org.apache.commons.lang3.ArrayUtils.remove(longArray43, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[-1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[-1]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[-1]");
    }

    @Test
    public void test09218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09218");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (-1.0f), (double) '4');
        java.lang.Double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray33);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray33);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test09219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09219");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        float[] floatArray11 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray14 = new float[] { (byte) -1, 1L };
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, (float) 10L);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray11, floatArray14);
        java.lang.Float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray6, (java.lang.Object) floatArray18);
        short[] shortArray25 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray25, (short) (byte) 0);
        java.lang.Short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.clone(shortArray25);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray18, (java.lang.Object) shortArray33, 9);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray18, (float) (byte) 100);
        char[] charArray40 = new char[] { '4', '4' };
        char[] charArray43 = new char[] { '4', '4' };
        char[] charArray46 = new char[] { '4', '4' };
        char[][] charArray47 = new char[][] { charArray40, charArray43, charArray46 };
        char[] charArray50 = new char[] { '4', '4' };
        char[] charArray53 = new char[] { '4', '4' };
        char[] charArray56 = new char[] { '4', '4' };
        char[][] charArray57 = new char[][] { charArray50, charArray53, charArray56 };
        char[] charArray60 = new char[] { '4', '4' };
        char[] charArray63 = new char[] { '4', '4' };
        char[] charArray66 = new char[] { '4', '4' };
        char[][] charArray67 = new char[][] { charArray60, charArray63, charArray66 };
        char[] charArray70 = new char[] { '4', '4' };
        char[] charArray73 = new char[] { '4', '4' };
        char[] charArray76 = new char[] { '4', '4' };
        char[][] charArray77 = new char[][] { charArray70, charArray73, charArray76 };
        char[][][] charArray78 = new char[][][] { charArray47, charArray57, charArray67, charArray77 };
        char[] charArray82 = new char[] { 'a', '#', ' ' };
        char[][] charArray83 = new char[][] { charArray82 };
        char[][] charArray84 = org.apache.commons.lang3.ArrayUtils.toArray(charArray83);
        char[][][] charArray85 = org.apache.commons.lang3.ArrayUtils.add(charArray78, charArray83);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) floatArray18, (java.lang.Object[]) charArray85);
        float[] floatArray88 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray18, (float) (short) 10);
        java.lang.Float[] floatArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray18);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray89);
    }

    @Test
    public void test09220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09220");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray10, 4, (int) '4');
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray10, (float) (byte) -1);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray10, (float) (short) 1, (int) '4');
        float[] floatArray24 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray24);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray25, 100.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray27);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray27);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(floatArray27, (float) 9);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray27, (float) 11, 6);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray27);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test09221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09221");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray10 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray14 = new char[] { '#', 'a', 'a' };
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray14);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray10, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray17);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray20);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.clone(charArray20);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray17, charArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray4, charArray17);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.add(charArray17, 3, '4');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a44#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a44#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, 4, #]");
    }

    @Test
    public void test09222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09222");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        boolean boolean22 = equalsBuilder21.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = equalsBuilder21.append((int) ' ', 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(equalsBuilder25);
    }

    @Test
    public void test09223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09223");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.clone(byteArray0);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
    }

    @Test
    public void test09224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09224");
        java.lang.Object obj0 = null;
        java.lang.Float[] floatArray6 = new java.lang.Float[] { (-1.0f), 0.0f, 10.0f, (-1.0f), 100.0f };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray6);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray7);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray8);
        java.lang.Float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray9);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(floatArray9, (float) (short) 1);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(floatArray9, (float) ' ');
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray9, (float) (short) 10);
        long[] longArray23 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.subarray(longArray23, 3, (int) (byte) 0);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray23);
        boolean[] booleanArray34 = new boolean[] { false, false, false, true, false, false };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray34);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray34, true);
        java.lang.String[] strArray40 = new java.lang.String[] { "4", "1" };
        boolean boolean41 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean27, (java.lang.Object) true, strArray40);
        java.lang.String[] strArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray40);
        java.lang.String[] strArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray42);
        java.lang.String[] strArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray43);
        java.lang.String[] strArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray43);
        boolean boolean46 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, (java.lang.Object) floatArray16, strArray45);
        java.lang.String[] strArray49 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.stream.Stream<java.lang.String> strStream52 = strList50.parallelStream();
        java.lang.String[] strArray55 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.stream.Stream<java.lang.String> strStream58 = strList56.parallelStream();
        boolean boolean59 = strList50.addAll((java.util.Collection<java.lang.String>) strList56);
        java.lang.Object obj60 = null;
        boolean boolean61 = strList56.equals(obj60);
        int int62 = strList56.size();
        float[] floatArray68 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray68);
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray68, (float) 1);
        float[] floatArray73 = org.apache.commons.lang3.ArrayUtils.add(floatArray68, (float) 10);
        boolean boolean74 = strList56.remove((java.lang.Object) floatArray68);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray68);
        int int77 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray68, 0.0f);
        int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray68, (float) 5, (int) (byte) -1);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray16, floatArray68);
        char[] charArray82 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray82);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray82);
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray82, '#');
        char[] charArray88 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray82, ' ');
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray88);
        java.lang.Character[] charArray90 = org.apache.commons.lang3.ArrayUtils.toObject(charArray88);
        char[] charArray92 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray90, '#');
        boolean boolean94 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean81, (java.lang.Object) charArray90, false);
        char[] charArray96 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray90, '4');
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 0.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strStream52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[]");
    }

    @Test
    public void test09225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09225");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.subarray(intArray5, 0, (int) (byte) 1);
        java.lang.Integer[] intArray9 = org.apache.commons.lang3.ArrayUtils.toObject(intArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray16 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray20 = new char[] { '#', 'a', 'a' };
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.addAll(charArray16, charArray20);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray16, ' ');
        char[] charArray29 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray33 = new char[] { '#', 'a', 'a' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray33);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray33, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder10.append((java.lang.Object) ' ', (java.lang.Object) charArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder10.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder41.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder44.append((short) (byte) 100, (short) 10);
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray48);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray48);
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray48, 'a', (int) '4');
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.add(charArray48, 0, ' ');
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray48, '4');
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.clone(charArray48);
        char[] charArray65 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray69 = new char[] { '#', 'a', 'a' };
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.addAll(charArray65, charArray69);
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.subarray(charArray69, (int) 'a', (int) (short) 10);
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray69, '4');
        char[] charArray81 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray85 = new char[] { '#', 'a', 'a' };
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.addAll(charArray81, charArray85);
        java.lang.String str87 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray81);
        char[] charArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray81);
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.addAll(charArray69, charArray88);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder47.append(charArray59, charArray88);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder90.append((float) 1, 100.0f);
        boolean boolean97 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) intArray9, (java.lang.Object) equalsBuilder90);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[ ]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{4,#,a,4,#}" + "'", str87, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test09226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09226");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray27);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) 'a', 2, (double) 10.0f);
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray27, 0);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) 100L, (double) 8);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test09227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09227");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        long[] longArray29 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(longArray29, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray29);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray29);
        long[] longArray39 = org.apache.commons.lang3.ArrayUtils.clone(longArray29);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray39);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[-1]");
    }

    @Test
    public void test09228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09228");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray12, true);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray12, true, (int) (short) 100);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
    }

    @Test
    public void test09229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09229");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder34.appendSuper(true);
        boolean boolean37 = equalsBuilder36.isEquals();
        java.lang.Boolean boolean38 = equalsBuilder36.build();
        java.lang.Boolean boolean39 = equalsBuilder36.build();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + false + "'", boolean38, false);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
    }

    @Test
    public void test09230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09230");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray24, (long) 1, 5);
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.subarray(longArray24, (int) (short) 1, (int) (byte) -1);
        long[] longArray33 = null;
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray24, longArray33);
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.add(longArray33, (long) (short) -1);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[-1]");
    }

    @Test
    public void test09231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09231");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 10, 0, 1.0d);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) (-1.0f), (int) (short) 1);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, 0, 0);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray29, (double) (short) 10);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray29);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray29, (double) (short) 10, (int) (short) 10);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test09232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09232");
        java.lang.Long[] longArray2 = new java.lang.Long[] { 1L, 0L };
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2);
        long[] longArray4 = org.apache.commons.lang3.ArrayUtils.clone(longArray3);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, (long) 100);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 0, (int) '#');
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, 0, 1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[1, 0, 100]");
    }

    @Test
    public void test09233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09233");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray13);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray13);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray6, (java.lang.Object) intArray13);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray18, (byte) 10);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray18);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.remove(byteArray18, 1);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray29 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray24, byteArray29);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray24, (byte) -1);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray24, (byte) -1);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.clone(byteArray34);
        byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.add(byteArray34, (byte) 10);
        byte[] byteArray38 = new byte[] {};
        byte[] byteArray43 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray38, byteArray43);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) -1);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray38, (byte) -1);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray38);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray38, (int) (byte) -1, (int) '4');
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray34, byteArray54);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray54, (byte) 0);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.clone(byteArray54);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray18, byteArray54);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.clone(byteArray54);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[10]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
    }

    @Test
    public void test09234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09234");
        float[] floatArray4 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray7 = new float[] { (byte) -1, 1L };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, (float) 10L);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray4, floatArray7);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray4, (float) '4');
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray12);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.add(floatArray12, (float) 1L);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray15, (float) (byte) 1);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, 10.0, -1.0, 97.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
    }

    @Test
    public void test09235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09235");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray9, '4');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, '4');
        java.lang.Character[] charArray18 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, 'a');
        java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray23);
        char[] charArray30 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray34 = new char[] { '#', 'a', 'a' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray30, charArray34);
        java.lang.String str36 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray30);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray23, charArray30);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray47 = new char[] { '#', 'a', 'a' };
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.addAll(charArray43, charArray47);
        java.lang.String str49 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray43);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray43);
        boolean boolean52 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray30, (java.lang.Object) charArray50, false);
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.remove(charArray30, 0);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray20, charArray30);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray30);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray30, 'a', (int) (short) 100);
        char[] charArray61 = org.apache.commons.lang3.ArrayUtils.add(charArray30, '#');
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.add(charArray61, 2, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{4,#,a,4,#}" + "'", str36, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{4,#,a,4,#}" + "'", str49, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4#a4##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4#a4##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4, #, a, 4, #, #]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4#aa4##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4#aa4##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, #, a, a, 4, #, #]");
    }

    @Test
    public void test09236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09236");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray5, (long) 2, (int) 'a');
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray5, (long) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray5);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1]");
    }

    @Test
    public void test09237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09237");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, (-1.0d), 100.0d, 100.0d, (-1.0d) };
        java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 100.0f, (java.lang.Object) doubleArray7);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, -1.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test09238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09238");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        float[] floatArray12 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray12);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, 0.0f);
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray12);
        long[] longArray18 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray18);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray16, (java.lang.Object) longArray18);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray18);
        java.lang.Long[] longArray27 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray27);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray27, (long) (short) 10);
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.clone(longArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray30, (long) (short) 10);
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.clone(longArray30);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.clone(longArray34);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray35);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray18, longArray35);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray18);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray18);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray18);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[-1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[0, 1, 100, 100, 0, -1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test09239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09239");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, false);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray11, true, (int) (byte) -1);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }

    @Test
    public void test09240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09240");
        int[] intArray0 = null;
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.contains(intArray0, (int) '#');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test09241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09241");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray12, (int) (short) 100, 7);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, true);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray12, false);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, false);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test09242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09242");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray26);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) '#');
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) doubleArray26);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26);
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray42);
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray43, intArray44);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray44, (int) (byte) 0);
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray44);
        int[] intArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray49, (int) (byte) 1);
        int[] intArray52 = new int[] {};
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray52, intArray53);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.addAll(intArray49, intArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder35.append(intArray48, intArray52);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(intArray52, (int) 'a');
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.subarray(intArray52, 10, (int) (short) 100);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray61);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray34, (java.lang.Object) intArray61);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray34);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray64, (double) (short) -1, (int) ' ', (double) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test09243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09243");
        java.util.stream.Stream[][][][][] streamArray1 = new java.util.stream.Stream[0][][][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][][][] strStreamArray2 = (java.util.stream.Stream<java.lang.String>[][][][][]) streamArray1;
        java.util.stream.Stream[][][] streamArray4 = new java.util.stream.Stream[0][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][] strStreamArray5 = (java.util.stream.Stream<java.lang.String>[][][]) streamArray4;
        java.util.stream.Stream[][][][] streamArray7 = new java.util.stream.Stream[1][][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][][] strStreamArray8 = (java.util.stream.Stream<java.lang.String>[][][][]) streamArray7;
        strStreamArray8[0] = strStreamArray5;
        java.util.stream.Stream[][][] streamArray12 = new java.util.stream.Stream[0][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][] strStreamArray13 = (java.util.stream.Stream<java.lang.String>[][][]) streamArray12;
        java.util.stream.Stream[][][][] streamArray15 = new java.util.stream.Stream[1][][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][][] strStreamArray16 = (java.util.stream.Stream<java.lang.String>[][][][]) streamArray15;
        strStreamArray16[0] = strStreamArray13;
        java.util.stream.Stream[][][] streamArray20 = new java.util.stream.Stream[0][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][] strStreamArray21 = (java.util.stream.Stream<java.lang.String>[][][]) streamArray20;
        java.util.stream.Stream[][][][] streamArray23 = new java.util.stream.Stream[1][][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][][] strStreamArray24 = (java.util.stream.Stream<java.lang.String>[][][][]) streamArray23;
        strStreamArray24[0] = strStreamArray21;
        java.util.stream.Stream[][][] streamArray28 = new java.util.stream.Stream[0][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][] strStreamArray29 = (java.util.stream.Stream<java.lang.String>[][][]) streamArray28;
        java.util.stream.Stream[][][][] streamArray31 = new java.util.stream.Stream[1][][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][][] strStreamArray32 = (java.util.stream.Stream<java.lang.String>[][][][]) streamArray31;
        strStreamArray32[0] = strStreamArray29;
        java.util.stream.Stream[][][] streamArray36 = new java.util.stream.Stream[0][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][] strStreamArray37 = (java.util.stream.Stream<java.lang.String>[][][]) streamArray36;
        java.util.stream.Stream[][][][] streamArray39 = new java.util.stream.Stream[1][][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][][] strStreamArray40 = (java.util.stream.Stream<java.lang.String>[][][][]) streamArray39;
        strStreamArray40[0] = strStreamArray37;
        java.util.stream.Stream[][][] streamArray44 = new java.util.stream.Stream[0][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][] strStreamArray45 = (java.util.stream.Stream<java.lang.String>[][][]) streamArray44;
        java.util.stream.Stream[][][][] streamArray47 = new java.util.stream.Stream[1][][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][][] strStreamArray48 = (java.util.stream.Stream<java.lang.String>[][][][]) streamArray47;
        strStreamArray48[0] = strStreamArray45;
        java.util.stream.Stream[][][][][] streamArray52 = new java.util.stream.Stream[6][][][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][][][] strStreamArray53 = (java.util.stream.Stream<java.lang.String>[][][][][]) streamArray52;
        strStreamArray53[0] = strStreamArray8;
        strStreamArray53[1] = strStreamArray16;
        strStreamArray53[2] = strStreamArray24;
        strStreamArray53[3] = strStreamArray32;
        strStreamArray53[4] = strStreamArray40;
        strStreamArray53[5] = strStreamArray48;
        java.util.stream.Stream<java.lang.String>[][][][][] strStreamArray66 = org.apache.commons.lang3.ArrayUtils.addAll(strStreamArray2, strStreamArray53);
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray71);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray72, (int) (short) 100, 0);
        java.lang.Integer[] intArray76 = org.apache.commons.lang3.ArrayUtils.toObject(intArray72);
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray76, (int) (byte) 0);
        int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) strStreamArray66, (java.lang.Object) intArray78);
        org.junit.Assert.assertNotNull(streamArray1);
        org.junit.Assert.assertNotNull(strStreamArray2);
        org.junit.Assert.assertNotNull(streamArray4);
        org.junit.Assert.assertNotNull(strStreamArray5);
        org.junit.Assert.assertNotNull(streamArray7);
        org.junit.Assert.assertNotNull(strStreamArray8);
        org.junit.Assert.assertNotNull(streamArray12);
        org.junit.Assert.assertNotNull(strStreamArray13);
        org.junit.Assert.assertNotNull(streamArray15);
        org.junit.Assert.assertNotNull(strStreamArray16);
        org.junit.Assert.assertNotNull(streamArray20);
        org.junit.Assert.assertNotNull(strStreamArray21);
        org.junit.Assert.assertNotNull(streamArray23);
        org.junit.Assert.assertNotNull(strStreamArray24);
        org.junit.Assert.assertNotNull(streamArray28);
        org.junit.Assert.assertNotNull(strStreamArray29);
        org.junit.Assert.assertNotNull(streamArray31);
        org.junit.Assert.assertNotNull(strStreamArray32);
        org.junit.Assert.assertNotNull(streamArray36);
        org.junit.Assert.assertNotNull(strStreamArray37);
        org.junit.Assert.assertNotNull(streamArray39);
        org.junit.Assert.assertNotNull(strStreamArray40);
        org.junit.Assert.assertNotNull(streamArray44);
        org.junit.Assert.assertNotNull(strStreamArray45);
        org.junit.Assert.assertNotNull(streamArray47);
        org.junit.Assert.assertNotNull(strStreamArray48);
        org.junit.Assert.assertNotNull(streamArray52);
        org.junit.Assert.assertNotNull(strStreamArray53);
        org.junit.Assert.assertNotNull(strStreamArray66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test09244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09244");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray0, (int) '4', 2);
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        java.lang.Integer[] intArray9 = org.apache.commons.lang3.ArrayUtils.toObject(intArray8);
        java.lang.Integer[] intArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray10, 100);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray12, (int) (byte) 1);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.addAll(intArray0, intArray12);
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.clone(intArray12);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray18 = org.apache.commons.lang3.ArrayUtils.remove(intArray12, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1, 0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1, 0]");
    }

    @Test
    public void test09245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09245");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray12, (int) (short) 100, 7);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray15, 2, (int) (short) 0);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray15, true);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.add(booleanArray20, false);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false]");
    }

    @Test
    public void test09246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09246");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.add(shortArray66, (short) -1);
        int int79 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) shortArray78);
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.add(shortArray78, (short) (byte) 10);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray81);
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.contains(shortArray81, (short) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray81);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray81);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[-1]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[-1, 10]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test09247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09247");
        int[] intArray0 = null;
        int[] intArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray0);
        int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray1, (int) (byte) -1, (int) (short) -1);
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray1, (int) (byte) 100);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test09248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09248");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray14);
        java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray14);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09249");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        long[] longArray11 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray11);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray9, (java.lang.Object) longArray11);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9, (float) (-1L));
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray9);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray16, (float) ' ');
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray19);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray20);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[35.0, 10.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test09250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09250");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray7, (int) (short) 0, (long) 10);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.addAll(longArray7, longArray12);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.remove(longArray7, (int) (byte) 1);
        java.lang.Long[] longArray22 = org.apache.commons.lang3.ArrayUtils.toObject(longArray21);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[10, 0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[0, 1, 100, 100, 0, -1]");
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[0, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray22);
    }

    @Test
    public void test09251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09251");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 4, (int) '4');
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[true]");
    }

    @Test
    public void test09252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09252");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 100.0f, 1.0f, 1.0f };
        java.lang.Float[] floatArray7 = new java.lang.Float[] { 100.0f, 1.0f, 1.0f };
        java.lang.Float[] floatArray11 = new java.lang.Float[] { 100.0f, 1.0f, 1.0f };
        java.lang.Float[] floatArray15 = new java.lang.Float[] { 100.0f, 1.0f, 1.0f };
        java.lang.Float[] floatArray19 = new java.lang.Float[] { 100.0f, 1.0f, 1.0f };
        java.lang.Float[][] floatArray20 = new java.lang.Float[][] { floatArray3, floatArray7, floatArray11, floatArray15, floatArray19 };
        java.lang.Float[] floatArray21 = new java.lang.Float[] {};
        java.lang.Float[] floatArray22 = new java.lang.Float[] {};
        java.lang.Float[] floatArray23 = new java.lang.Float[] {};
        java.lang.Float[] floatArray24 = new java.lang.Float[] {};
        java.lang.Float[] floatArray25 = new java.lang.Float[] {};
        java.lang.Float[] floatArray26 = new java.lang.Float[] {};
        java.lang.Float[][] floatArray27 = new java.lang.Float[][] { floatArray21, floatArray22, floatArray23, floatArray24, floatArray25, floatArray26 };
        java.lang.Float[][] floatArray28 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray20, floatArray27);
        java.lang.String[] strArray31 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.stream.Stream<java.lang.String> strStream34 = strList32.parallelStream();
        java.lang.String[] strArray37 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.stream.Stream<java.lang.String> strStream40 = strList38.parallelStream();
        boolean boolean41 = strList32.addAll((java.util.Collection<java.lang.String>) strList38);
        java.lang.Object obj42 = null;
        boolean boolean43 = strList38.equals(obj42);
        java.util.Iterator<java.lang.String> strItor44 = strList38.iterator();
        boolean boolean46 = strList38.add("{-1,1,0,0,100}");
        java.lang.Object[] objArray47 = strList38.toArray();
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray28, (java.lang.Object) strList38, 6);
        java.util.stream.Stream<java.lang.String> strStream50 = strList38.parallelStream();
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[4, hi!, {-1,1,0,0,100}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[4, hi!, {-1,1,0,0,100}]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strStream50);
    }

    @Test
    public void test09253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09253");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) (-1L), (int) (short) 100, (double) 100.0f);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray32);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray37, (int) 'a', 3);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray37);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.add(doubleArray37, (double) '4');
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test09254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09254");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5);
        long[] longArray10 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(longArray10, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray20 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray20, 1L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray15, longArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) floatArray5, (java.lang.Object) longArray15);
        float[] floatArray30 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray30);
        java.lang.Float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray30);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray33);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test09255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09255");
        java.util.stream.Stream[][][][] streamArray1 = new java.util.stream.Stream[0][][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][][] strStreamArray2 = (java.util.stream.Stream<java.lang.String>[][][][]) streamArray1;
        java.util.stream.Stream[] streamArray4 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray5 = (java.util.stream.Stream<java.lang.String>[]) streamArray4;
        java.util.stream.Stream[][] streamArray7 = new java.util.stream.Stream[1][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray8 = (java.util.stream.Stream<java.lang.String>[][]) streamArray7;
        strStreamArray8[0] = strStreamArray5;
        java.util.stream.Stream[] streamArray12 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray13 = (java.util.stream.Stream<java.lang.String>[]) streamArray12;
        java.util.stream.Stream[][] streamArray15 = new java.util.stream.Stream[1][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray16 = (java.util.stream.Stream<java.lang.String>[][]) streamArray15;
        strStreamArray16[0] = strStreamArray13;
        java.util.stream.Stream[] streamArray20 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray21 = (java.util.stream.Stream<java.lang.String>[]) streamArray20;
        java.util.stream.Stream[][] streamArray23 = new java.util.stream.Stream[1][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray24 = (java.util.stream.Stream<java.lang.String>[][]) streamArray23;
        strStreamArray24[0] = strStreamArray21;
        java.util.stream.Stream[] streamArray28 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray29 = (java.util.stream.Stream<java.lang.String>[]) streamArray28;
        java.util.stream.Stream[][] streamArray31 = new java.util.stream.Stream[1][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray32 = (java.util.stream.Stream<java.lang.String>[][]) streamArray31;
        strStreamArray32[0] = strStreamArray29;
        java.util.stream.Stream[] streamArray36 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray37 = (java.util.stream.Stream<java.lang.String>[]) streamArray36;
        java.util.stream.Stream[][] streamArray39 = new java.util.stream.Stream[1][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray40 = (java.util.stream.Stream<java.lang.String>[][]) streamArray39;
        strStreamArray40[0] = strStreamArray37;
        java.util.stream.Stream[][][] streamArray44 = new java.util.stream.Stream[5][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][] strStreamArray45 = (java.util.stream.Stream<java.lang.String>[][][]) streamArray44;
        strStreamArray45[0] = strStreamArray8;
        strStreamArray45[1] = strStreamArray16;
        strStreamArray45[2] = strStreamArray24;
        strStreamArray45[3] = strStreamArray32;
        strStreamArray45[4] = strStreamArray40;
        java.util.stream.Stream<java.lang.String>[][][] strStreamArray56 = org.apache.commons.lang3.ArrayUtils.clone(strStreamArray45);
        java.util.stream.Stream<java.lang.String>[][][][] strStreamArray57 = org.apache.commons.lang3.ArrayUtils.add(strStreamArray2, strStreamArray56);
        java.lang.AutoCloseable[][][][] autoCloseableArray60 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.AutoCloseable[][][][]) strStreamArray2, 3, 10);
        java.lang.AutoCloseable[][][][] autoCloseableArray61 = org.apache.commons.lang3.ArrayUtils.toArray(autoCloseableArray60);
        java.lang.Byte[] byteArray67 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray67);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray67, (byte) 100);
        byte[] byteArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray67);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.clone(byteArray71);
        byte[] byteArray73 = org.apache.commons.lang3.ArrayUtils.clone(byteArray72);
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.add(byteArray72, (byte) 0);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray72);
        int int78 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) autoCloseableArray60, (java.lang.Object) boolean76, 8);
        org.junit.Assert.assertNotNull(streamArray1);
        org.junit.Assert.assertNotNull(strStreamArray2);
        org.junit.Assert.assertNotNull(streamArray4);
        org.junit.Assert.assertNotNull(strStreamArray5);
        org.junit.Assert.assertNotNull(streamArray7);
        org.junit.Assert.assertNotNull(strStreamArray8);
        org.junit.Assert.assertNotNull(streamArray12);
        org.junit.Assert.assertNotNull(strStreamArray13);
        org.junit.Assert.assertNotNull(streamArray15);
        org.junit.Assert.assertNotNull(strStreamArray16);
        org.junit.Assert.assertNotNull(streamArray20);
        org.junit.Assert.assertNotNull(strStreamArray21);
        org.junit.Assert.assertNotNull(streamArray23);
        org.junit.Assert.assertNotNull(strStreamArray24);
        org.junit.Assert.assertNotNull(streamArray28);
        org.junit.Assert.assertNotNull(strStreamArray29);
        org.junit.Assert.assertNotNull(streamArray31);
        org.junit.Assert.assertNotNull(strStreamArray32);
        org.junit.Assert.assertNotNull(streamArray36);
        org.junit.Assert.assertNotNull(strStreamArray37);
        org.junit.Assert.assertNotNull(streamArray39);
        org.junit.Assert.assertNotNull(strStreamArray40);
        org.junit.Assert.assertNotNull(streamArray44);
        org.junit.Assert.assertNotNull(strStreamArray45);
        org.junit.Assert.assertNotNull(strStreamArray56);
        org.junit.Assert.assertNotNull(strStreamArray57);
        org.junit.Assert.assertNotNull(autoCloseableArray60);
        org.junit.Assert.assertNotNull(autoCloseableArray61);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[1, 1, 100, 1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
    }

    @Test
    public void test09256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09256");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream14 = strList3.parallelStream();
        java.lang.String[] strArray17 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.stream.Stream<java.lang.String> strStream20 = strList18.parallelStream();
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList18.addAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean28 = strList3.containsAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray34);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35, false);
        boolean boolean39 = strList3.remove((java.lang.Object) booleanArray35);
        java.util.Spliterator<java.lang.String> strSpliterator40 = strList3.spliterator();
        strList3.clear();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertNotNull(strStream14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strSpliterator40);
    }

    @Test
    public void test09257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09257");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8);
        double[] doubleArray13 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray13, (double) (byte) 100, 1.0d);
        double[] doubleArray21 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray13, doubleArray21);
        float[] floatArray27 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray30 = new float[] { (byte) -1, 1L };
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray30, (float) 10L);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray27, floatArray30);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray21, (java.lang.Object) boolean33);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray21);
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray35);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray35);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray9, doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test09258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09258");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder28.append(true, false);
        long[] longArray52 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray52, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray54);
        long[] longArray57 = new long[] { (byte) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder28.append(longArray54, longArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append((short) (byte) 1, (short) (byte) 10);
        boolean[] booleanArray62 = new boolean[] {};
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray62, true);
        boolean[] booleanArray65 = null;
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray65);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder58.append(booleanArray62, booleanArray66);
        equalsBuilder67.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder67.append((double) 6, (double) 1.0f);
        boolean boolean72 = equalsBuilder67.isEquals();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test09259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09259");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.remove(intArray26, 3);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray28, (int) ' ');
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray28);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray28, (int) '#', 4);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, -1, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 1, 0, -1, 1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 1, 0, -1, 1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test09260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09260");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        java.lang.Boolean[] booleanArray38 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray47 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray47, (int) (byte) 0, 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray47, true);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray41, booleanArray47);
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray57);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray58);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray58, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder34.append(booleanArray47, booleanArray58);
        boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.add(booleanArray47, (int) (short) 0, true);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray47, true);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray47, 0);
        boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.add(booleanArray69, true);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[true, true, false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true, true, true, true]");
    }

    @Test
    public void test09261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09261");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray14, true);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray14, true, 5);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, true);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, true, false, false, true]");
    }

    @Test
    public void test09262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09262");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.remove(intArray26, 3);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray28, (int) ' ');
        int[] intArray31 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray39);
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray40, intArray41);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray41, (int) (byte) 0);
        int[] intArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray41);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray46, (int) (byte) 1);
        int[] intArray49 = new int[] {};
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray49, intArray50);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.addAll(intArray46, intArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder32.append(intArray45, intArray49);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(intArray49, (int) 'a');
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray49, (int) (byte) 1);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray31, intArray49);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray70 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray71 = new java.lang.Byte[][] { byteArray64, byteArray70 };
        java.lang.Byte[][] byteArray74 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray71, (int) '#', 10);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray81);
        java.lang.Byte[][] byteArray83 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray71, (java.lang.Object) intArray81);
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray81, 1);
        int[] intArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray81, (int) '4');
        int[] intArray88 = org.apache.commons.lang3.ArrayUtils.addAll(intArray49, intArray87);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray28, intArray49);
        java.lang.Object obj90 = null;
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) boolean89, obj90);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, -1, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 1, 0, -1, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test09263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09263");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        java.util.stream.Stream<java.lang.String> strStream7 = strList5.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream8 = strList5.stream();
        java.util.Spliterator<java.lang.String> strSpliterator9 = strList5.spliterator();
        java.lang.Object[] objArray10 = strList5.toArray();
        java.lang.String[] strArray13 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.stream.Stream<java.lang.String> strStream16 = strList14.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.util.stream.Stream<java.lang.String> strStream22 = strList20.parallelStream();
        boolean boolean23 = strList14.addAll((java.util.Collection<java.lang.String>) strList20);
        boolean boolean25 = strList20.add("{4,#,a,4,#}");
        boolean boolean26 = strList5.retainAll((java.util.Collection<java.lang.String>) strList20);
        java.util.Iterator<java.lang.String> strItor27 = strList20.iterator();
        java.lang.Object[] objArray28 = strList20.toArray();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[][] intArray47 = new java.lang.Integer[][] { intArray31, intArray34, intArray37, intArray40, intArray43, intArray46 };
        java.lang.String[] strArray50 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.stream.Stream<java.lang.String> strStream53 = strList51.parallelStream();
        java.lang.String[] strArray56 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.stream.Stream<java.lang.String> strStream59 = strList57.parallelStream();
        boolean boolean60 = strList51.addAll((java.util.Collection<java.lang.String>) strList57);
        java.lang.Object obj61 = null;
        boolean boolean62 = strList57.equals(obj61);
        int int63 = strList57.size();
        java.lang.Integer[][] intArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray47, (java.lang.Object) strList57);
        java.util.Iterator<java.lang.String> strItor65 = strList57.iterator();
        int int66 = strList57.size();
        java.util.Iterator<java.lang.String> strItor67 = strList57.iterator();
        java.util.stream.Stream<java.lang.String> strStream68 = strList57.parallelStream();
        boolean boolean69 = strList20.removeAll((java.util.Collection<java.lang.String>) strList57);
        java.util.stream.Stream<java.lang.String> strStream70 = strList20.parallelStream();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strStream7);
        org.junit.Assert.assertNotNull(strStream8);
        org.junit.Assert.assertNotNull(strSpliterator9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, {}, {4,#,a,4,#}, 4]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, {}, {4,#,a,4,#}, 4]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strStream16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strStream22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[4, hi!, {4,#,a,4,#}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[4, hi!, {4,#,a,4,#}]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strStream53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strStream59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertNotNull(strItor65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(strStream68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strStream70);
    }

    @Test
    public void test09264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09264");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray12, (int) '4', (int) (short) 0);
        boolean[] booleanArray23 = new boolean[] { false, false, false, true, false, false };
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23);
        boolean[] booleanArray31 = new boolean[] { false, false, false, true, false, false };
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray31);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray23, booleanArray31);
        short[] shortArray38 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray38);
        boolean boolean43 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean33, (java.lang.Object) shortArray38);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray38);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray16);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (short) (byte) -1);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (short) (byte) 0);
        java.lang.Short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray49);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[-1]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0]");
        org.junit.Assert.assertNotNull(shortArray50);
    }

    @Test
    public void test09265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09265");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray17 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.lang.String[] strArray22 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.stream.Stream<java.lang.String> strStream25 = strList23.parallelStream();
        java.lang.String[] strArray28 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.stream.Stream<java.lang.String> strStream31 = strList29.parallelStream();
        boolean boolean32 = strList23.addAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.Object obj33 = null;
        boolean boolean34 = strList29.equals(obj33);
        int int35 = strList29.size();
        boolean boolean36 = strList18.removeAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.String[] strArray39 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.stream.Stream<java.lang.String> strStream42 = strList40.parallelStream();
        boolean boolean43 = strList29.addAll((java.util.Collection<java.lang.String>) strList40);
        java.lang.String[] strArray46 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.stream.Stream<java.lang.String> strStream49 = strList47.parallelStream();
        java.lang.String[] strArray52 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.stream.Stream<java.lang.String> strStream55 = strList53.parallelStream();
        boolean boolean56 = strList47.addAll((java.util.Collection<java.lang.String>) strList53);
        java.lang.Object obj57 = null;
        boolean boolean58 = strList53.equals(obj57);
        java.lang.Iterable[] iterableArray60 = new java.lang.Iterable[3];
        @SuppressWarnings("unchecked")
        java.lang.Iterable<java.lang.String>[] strIterableArray61 = (java.lang.Iterable<java.lang.String>[]) iterableArray60;
        strIterableArray61[0] = strList3;
        strIterableArray61[1] = strList40;
        strIterableArray61[2] = strList53;
        java.lang.String[] strArray70 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.stream.Stream<java.lang.String> strStream73 = strList71.parallelStream();
        java.lang.String[] strArray76 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.stream.Stream<java.lang.String> strStream79 = strList77.parallelStream();
        boolean boolean80 = strList71.addAll((java.util.Collection<java.lang.String>) strList77);
        java.lang.Iterable<java.lang.String>[] strIterableArray81 = org.apache.commons.lang3.ArrayUtils.add(strIterableArray61, (java.lang.Iterable<java.lang.String>) strList77);
        java.util.stream.Stream<java.lang.String> strStream82 = strList77.parallelStream();
        java.lang.Object[] objArray83 = strList77.toArray();
        java.util.Iterator<java.lang.String> strItor84 = strList77.iterator();
        boolean boolean86 = strList77.add("0");
        java.util.stream.Stream<java.lang.String> strStream87 = strList77.parallelStream();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strStream49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(iterableArray60);
        org.junit.Assert.assertNotNull(strIterableArray61);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strStream73);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strIterableArray81);
        org.junit.Assert.assertNotNull(strStream82);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[4, hi!]");
        org.junit.Assert.assertNotNull(strItor84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strStream87);
    }

    @Test
    public void test09266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09266");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.String[] strArray30 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.parallelStream();
        java.lang.String[] strArray36 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.stream.Stream<java.lang.String> strStream39 = strList37.parallelStream();
        boolean boolean40 = strList31.addAll((java.util.Collection<java.lang.String>) strList37);
        java.util.stream.Stream<java.lang.String> strStream41 = strList31.parallelStream();
        boolean boolean43 = strList31.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray48 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray57 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray57);
        float[] floatArray60 = org.apache.commons.lang3.ArrayUtils.remove(floatArray57, (int) (short) 1);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray51, floatArray60);
        boolean boolean62 = strList49.equals((java.lang.Object) floatArray61);
        int int63 = strList49.size();
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray64, (int) (byte) 1);
        boolean boolean67 = strList49.contains((java.lang.Object) int66);
        boolean boolean68 = strList31.addAll((java.util.Collection<java.lang.String>) strList49);
        java.lang.String[] strArray73 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray82 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray82);
        float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.remove(floatArray82, (int) (short) 1);
        float[] floatArray86 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray76, floatArray85);
        boolean boolean87 = strList74.equals((java.lang.Object) floatArray86);
        int int88 = strList74.size();
        boolean boolean89 = strList31.removeAll((java.util.Collection<java.lang.String>) strList74);
        java.util.Iterator<java.lang.String> strItor90 = strList74.iterator();
        boolean boolean91 = strList13.retainAll((java.util.Collection<java.lang.String>) strList74);
        int int92 = strList74.size();
        java.util.Iterator<java.lang.String> strItor93 = strList74.iterator();
        strList74.clear();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 4 + "'", int63 == 4);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray86), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 4 + "'", int88 == 4);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strItor90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 4 + "'", int92 == 4);
        org.junit.Assert.assertNotNull(strItor93);
    }

    @Test
    public void test09267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09267");
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2);
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        java.lang.Integer[] intArray6 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        short[] shortArray12 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray12, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray16 = new java.lang.Short[] {};
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray16);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray16, (short) 1);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray12, shortArray19);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray19, (int) '4', (int) (short) 0);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray19, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        java.lang.String[] strArray32 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray41 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.remove(floatArray41, (int) (short) 1);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray35, floatArray44);
        boolean boolean46 = strList33.equals((java.lang.Object) floatArray45);
        int int47 = strList33.size();
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray48, (int) (byte) 1);
        boolean boolean51 = strList33.contains((java.lang.Object) int50);
        java.lang.Object[] objArray52 = strList33.toArray();
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray6, (java.lang.Object) shortArray27, (java.util.Collection<java.lang.String>) strList33);
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray54, 4);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.remove(intArray54, 0);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray58);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test09268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09268");
        java.util.stream.Stream[][][][] streamArray1 = new java.util.stream.Stream[0][][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][][] strStreamArray2 = (java.util.stream.Stream<java.lang.String>[][][][]) streamArray1;
        java.util.stream.Stream[] streamArray4 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray5 = (java.util.stream.Stream<java.lang.String>[]) streamArray4;
        java.util.stream.Stream[][] streamArray7 = new java.util.stream.Stream[1][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray8 = (java.util.stream.Stream<java.lang.String>[][]) streamArray7;
        strStreamArray8[0] = strStreamArray5;
        java.util.stream.Stream[] streamArray12 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray13 = (java.util.stream.Stream<java.lang.String>[]) streamArray12;
        java.util.stream.Stream[][] streamArray15 = new java.util.stream.Stream[1][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray16 = (java.util.stream.Stream<java.lang.String>[][]) streamArray15;
        strStreamArray16[0] = strStreamArray13;
        java.util.stream.Stream[] streamArray20 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray21 = (java.util.stream.Stream<java.lang.String>[]) streamArray20;
        java.util.stream.Stream[][] streamArray23 = new java.util.stream.Stream[1][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray24 = (java.util.stream.Stream<java.lang.String>[][]) streamArray23;
        strStreamArray24[0] = strStreamArray21;
        java.util.stream.Stream[] streamArray28 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray29 = (java.util.stream.Stream<java.lang.String>[]) streamArray28;
        java.util.stream.Stream[][] streamArray31 = new java.util.stream.Stream[1][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray32 = (java.util.stream.Stream<java.lang.String>[][]) streamArray31;
        strStreamArray32[0] = strStreamArray29;
        java.util.stream.Stream[] streamArray36 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray37 = (java.util.stream.Stream<java.lang.String>[]) streamArray36;
        java.util.stream.Stream[][] streamArray39 = new java.util.stream.Stream[1][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray40 = (java.util.stream.Stream<java.lang.String>[][]) streamArray39;
        strStreamArray40[0] = strStreamArray37;
        java.util.stream.Stream[][][] streamArray44 = new java.util.stream.Stream[5][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][] strStreamArray45 = (java.util.stream.Stream<java.lang.String>[][][]) streamArray44;
        strStreamArray45[0] = strStreamArray8;
        strStreamArray45[1] = strStreamArray16;
        strStreamArray45[2] = strStreamArray24;
        strStreamArray45[3] = strStreamArray32;
        strStreamArray45[4] = strStreamArray40;
        java.util.stream.Stream<java.lang.String>[][][] strStreamArray56 = org.apache.commons.lang3.ArrayUtils.clone(strStreamArray45);
        java.util.stream.Stream<java.lang.String>[][][][] strStreamArray57 = org.apache.commons.lang3.ArrayUtils.add(strStreamArray2, strStreamArray56);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.AutoCloseable[][][][]) strStreamArray2);
        org.junit.Assert.assertNotNull(streamArray1);
        org.junit.Assert.assertNotNull(strStreamArray2);
        org.junit.Assert.assertNotNull(streamArray4);
        org.junit.Assert.assertNotNull(strStreamArray5);
        org.junit.Assert.assertNotNull(streamArray7);
        org.junit.Assert.assertNotNull(strStreamArray8);
        org.junit.Assert.assertNotNull(streamArray12);
        org.junit.Assert.assertNotNull(strStreamArray13);
        org.junit.Assert.assertNotNull(streamArray15);
        org.junit.Assert.assertNotNull(strStreamArray16);
        org.junit.Assert.assertNotNull(streamArray20);
        org.junit.Assert.assertNotNull(strStreamArray21);
        org.junit.Assert.assertNotNull(streamArray23);
        org.junit.Assert.assertNotNull(strStreamArray24);
        org.junit.Assert.assertNotNull(streamArray28);
        org.junit.Assert.assertNotNull(strStreamArray29);
        org.junit.Assert.assertNotNull(streamArray31);
        org.junit.Assert.assertNotNull(strStreamArray32);
        org.junit.Assert.assertNotNull(streamArray36);
        org.junit.Assert.assertNotNull(strStreamArray37);
        org.junit.Assert.assertNotNull(streamArray39);
        org.junit.Assert.assertNotNull(strStreamArray40);
        org.junit.Assert.assertNotNull(streamArray44);
        org.junit.Assert.assertNotNull(strStreamArray45);
        org.junit.Assert.assertNotNull(strStreamArray56);
        org.junit.Assert.assertNotNull(strStreamArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test09269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09269");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) -1, (int) (short) 100);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray8);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        byte[] byteArray11 = new byte[] {};
        byte[] byteArray16 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray11, byteArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray11, (byte) -1);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray11, (byte) -1);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.clone(byteArray21);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.add(byteArray21, (byte) 10);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray25, byteArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray25, (byte) -1);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray25, (byte) -1);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray25, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray25);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray25, (int) (byte) -1, (int) '4');
        byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray21, byteArray41);
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.clone(byteArray42);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray9, (java.lang.Object) byteArray43);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
    }

    @Test
    public void test09270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09270");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (-1.0d));
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        float[] floatArray49 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray52 = new float[] { (byte) -1, 1L };
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray52, (float) 10L);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray49, floatArray52);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray43, (java.lang.Object) boolean55);
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray43, (int) (short) 0, 1);
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray59, (double) (byte) -1);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray61, (int) (byte) 100, 1);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray61);
        java.lang.String str67 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) doubleArray65, "{}");
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray65, (double) (short) 100);
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.add(doubleArray65, (double) 100L);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray71, (double) (byte) -1, (double) 100.0f);
        double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray71, 11, (-1));
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray29, doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "{1.0}" + "'", str67, "{1.0}");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 1.0, 100.0]");
    }

    @Test
    public void test09271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09271");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray19 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[][] doubleArray20 = new java.lang.Double[][] { doubleArray4, doubleArray9, doubleArray14, doubleArray19 };
        java.lang.Double[][] doubleArray21 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray20);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray21);
        java.util.Map<java.lang.Object, java.lang.Object> objMap23 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) doubleArray21);
        boolean[] booleanArray29 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray29, (int) (byte) 0, 0);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray29, 4, (int) '4');
        java.lang.Boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray29);
        java.lang.Double[][] doubleArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray21, (java.lang.Object) booleanArray29);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray29, true, (-1));
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray29, true);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray29, true);
        java.lang.Boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray29);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objMap23);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertNotNull(booleanArray45);
    }

    @Test
    public void test09272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09272");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Byte[] byteArray8 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        boolean boolean12 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray2, (java.lang.Object) byteArray9, true);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9, (byte) -1);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(byteArray15, (byte) 1);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(byteArray15, (byte) 0);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray15, (byte) 10, 5);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test09273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09273");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) 10);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.clone(byteArray28);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray29);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, -1, -1, 100, 0, 0]");
    }

    @Test
    public void test09274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09274");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        long[] longArray13 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, (long) 0);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.addAll(longArray1, longArray13);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray20, (long) 100);
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.subarray(longArray20, (int) (short) 100, (int) '4');
        org.apache.commons.lang3.ArrayUtils.reverse(longArray25);
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray25);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray25);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[]");
        org.junit.Assert.assertNotNull(longArray27);
    }

    @Test
    public void test09275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09275");
        float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray6 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.remove(floatArray6, (int) (short) 1);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray9);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray0, (float) (byte) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray12, (float) (short) 100, (int) (byte) 0);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.remove(floatArray12, (int) (byte) 0);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray17);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.add(floatArray17, 0, (float) 1L);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, 10.0f);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[10.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, 10.0]");
    }

    @Test
    public void test09276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09276");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray8, (double) (-1));
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray10, 0, 9);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray10);
        double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray10);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) 2, (int) '#');
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test09277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09277");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray41, (byte) 1);
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray41, (byte) -1);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray51 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray46, byteArray51);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray46, (byte) -1);
        byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray46, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder31.append(byteArray45, byteArray46);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.remove(byteArray46, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
    }

    @Test
    public void test09278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09278");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, false);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray12, true);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray14, (int) ' ', (int) (byte) 0);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, 4, false);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray14, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, true, true, false, false, true]");
    }

    @Test
    public void test09279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09279");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray6);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray6, (long) 5);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray6, (long) (short) 1, 6);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toObject(longArray18);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray19);
    }

    @Test
    public void test09280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09280");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5);
        long[] longArray10 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(longArray10, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray20 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray20, 1L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray15, longArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) floatArray5, (java.lang.Object) longArray15);
        float[] floatArray30 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray30);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray30, (float) 6);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, (float) 10);
        java.lang.String str38 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) int36, "{0}");
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 3 + "'", int36 == 3);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "3" + "'", str38, "3");
    }

    @Test
    public void test09281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09281");
        double[] doubleArray0 = new double[] {};
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray0, (int) '#', (int) (short) -1);
        int int4 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (short) 100);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 10, (int) (byte) -1);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 9, (int) (short) 100, (double) 5);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test09282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09282");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13, true);
        java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray13);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray18);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray9, booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09283");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) '4');
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (byte) -1);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 1, 0, 10, -1, 1]");
    }

    @Test
    public void test09284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09284");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray10 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray14 = new char[] { '#', 'a', 'a' };
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray14);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray10, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray10);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.subarray(charArray0, 0, 0);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.subarray(charArray21, (int) '#', (int) (short) 100);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray21, '4', 2);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray21);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test09285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09285");
        java.util.stream.Stream[][] streamArray1 = new java.util.stream.Stream[0][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray2 = (java.util.stream.Stream<java.lang.String>[][]) streamArray1;
        java.util.stream.Stream<java.lang.String>[][] strStreamArray3 = org.apache.commons.lang3.ArrayUtils.clone(strStreamArray2);
        boolean[] booleanArray9 = new boolean[] { false, true, false, false, false };
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray9, false);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray9);
        java.lang.Byte[] byteArray18 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray18);
        java.lang.Byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray19);
        java.lang.Byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray20);
        java.lang.Byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray20);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray12, (java.lang.Object) byteArray20);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray12);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray24, true);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) strStreamArray2, (java.lang.Object) booleanArray24);
        org.junit.Assert.assertNotNull(streamArray1);
        org.junit.Assert.assertNotNull(strStreamArray2);
        org.junit.Assert.assertNotNull(strStreamArray3);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test09286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09286");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) -1, (int) (short) 100);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4);
        short[] shortArray9 = null;
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) 0, 3);
        java.lang.Short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray14);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14, (short) 0);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray17);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.add(shortArray17, (short) (byte) 1);
        java.lang.Class<?> wildcardClass23 = shortArray17.getClass();
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test09287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09287");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray12, (int) '4', (int) (short) 0);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray12, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray12);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray20);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray21, 0, (int) (short) 1);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]");
    }

    @Test
    public void test09288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09288");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray24 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray19, byteArray24);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray19, (byte) -1);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray19, (byte) -1);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.clone(byteArray29);
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.add(byteArray29, (byte) 10);
        byte[] byteArray33 = new byte[] {};
        byte[] byteArray38 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray33, byteArray38);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray33, (byte) -1);
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray33, (byte) -1);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray33, (byte) 1);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray29, byteArray33);
        byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray18, byteArray33);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray33, (byte) -1);
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.add(byteArray33, (byte) 0);
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray33, (byte) 100);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test09289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09289");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) -1, (int) (short) 100);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4);
        short[] shortArray9 = null;
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray9);
        java.lang.Short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray10);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray11);
    }

    @Test
    public void test09290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09290");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append(0L, (long) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray14 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray18 = new char[] { '#', 'a', 'a' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.addAll(charArray14, charArray18);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray14, ' ');
        char[] charArray27 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray31 = new char[] { '#', 'a', 'a' };
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.addAll(charArray27, charArray31);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray31, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder8.append((java.lang.Object) ' ', (java.lang.Object) charArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder42.append((double) (byte) 0, (double) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((short) 100, (short) (byte) 100);
        long[] longArray50 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(longArray50, 0L);
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray50);
        long[] longArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray54);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray54, (long) 2, (int) 'a');
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray54);
        long[] longArray64 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray64, 1L);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray66);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder48.append(longArray59, longArray66);
        long[] longArray71 = org.apache.commons.lang3.ArrayUtils.subarray(longArray66, 6, 0);
        long[] longArray73 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray73);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(longArray73, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray73);
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.clone(longArray73);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray73);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray73);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.contains(longArray73, (long) (short) 100);
        long[] longArray83 = org.apache.commons.lang3.ArrayUtils.clone(longArray73);
        long[] longArray85 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray85);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.contains(longArray85, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray85);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.contains(longArray85, (long) 0);
        long[] longArray92 = org.apache.commons.lang3.ArrayUtils.addAll(longArray73, longArray85);
        long[] longArray94 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray92, (long) (byte) -1);
        java.lang.String str95 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) longArray94);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder96 = equalsBuilder7.append(longArray66, longArray94);
        boolean boolean98 = org.apache.commons.lang3.ArrayUtils.contains(longArray66, (long) 6);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[-1]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[-1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[-1]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[-1]");
        org.junit.Assert.assertNotNull(longArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray85), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(longArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray92), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray94), "[-1]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "{-1}" + "'", str95, "{-1}");
        org.junit.Assert.assertNotNull(equalsBuilder96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test09291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09291");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        long[] longArray9 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(longArray9, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray9);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(longArray9, (long) (short) 100);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.add(longArray9, (long) '#');
        boolean boolean22 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray7, (java.lang.Object) longArray20, true);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray7);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray23, true);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray23, 10, 2);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray23, false);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test09292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09292");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        long[] longArray9 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(longArray9, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray9);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(longArray9, (long) (short) 100);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.add(longArray9, (long) '#');
        boolean boolean22 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray7, (java.lang.Object) longArray20, true);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray7);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray23, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray23);
        java.lang.Boolean[] booleanArray30 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray30);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) booleanArray32);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray23, booleanArray32);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.add(booleanArray23, true);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray23);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.add(booleanArray23, false);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false]");
    }

    @Test
    public void test09293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09293");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.add(charArray0, '4');
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.add(charArray0, '#');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray6);
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray10);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray12);
        double[] doubleArray19 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray19, (double) (byte) 100, 1.0d);
        double[] doubleArray27 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray19, doubleArray27);
        float[] floatArray33 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray36 = new float[] { (byte) -1, 1L };
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray36, (float) 10L);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray33, floatArray36);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray27, (java.lang.Object) boolean39);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray27, (int) (short) 0, 1);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray43, (double) (byte) -1);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray45, (int) (byte) 100, 1);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray45, 0, (int) (short) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray45);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) charArray12, (java.lang.Object) doubleArray45);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray10, charArray12);
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray10, '4');
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray57);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray57);
        char[] charArray61 = org.apache.commons.lang3.ArrayUtils.add(charArray57, '4');
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.add(charArray57, '#');
        char[] charArray65 = org.apache.commons.lang3.ArrayUtils.add(charArray63, '#');
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.add(charArray65, ' ');
        char[] charArray69 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray65, '4');
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.addAll(charArray56, charArray69);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray6, charArray70);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray6);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, #,  ]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, #]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test09294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09294");
        byte[] byteArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.remove(byteArray0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09295");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray13);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray13);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray6, (java.lang.Object) intArray13);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray18, (byte) 10);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray18, (byte) -1);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray22, (int) (byte) 1, (int) '#');
        java.lang.Byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray25);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray26);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 100, 1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 100, 1]");
    }

    @Test
    public void test09296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09296");
        java.lang.Object obj0 = null;
        java.lang.Object obj1 = null;
        boolean boolean3 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, obj1, false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test09297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09297");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(shortArray5, (short) 10);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, (int) ' ');
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09298");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.Spliterator<java.lang.String> strSpliterator13 = strList3.spliterator();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder14 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray20 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray24 = new char[] { '#', 'a', 'a' };
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray24);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray20, ' ');
        char[] charArray33 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray37 = new char[] { '#', 'a', 'a' };
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.addAll(charArray33, charArray37);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray37, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder14.append((java.lang.Object) ' ', (java.lang.Object) charArray37);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder45 = equalsBuilder14.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder45.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray55);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray56, intArray57);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(intArray57, (int) '4');
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.add(intArray57, (int) (short) 100);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray57);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray57);
        int[] intArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray57, (int) (short) 1);
        int[] intArray67 = new int[] {};
        int[] intArray68 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray67, intArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder48.append(intArray57, intArray68);
        int[] intArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray68);
        int[] intArray74 = org.apache.commons.lang3.ArrayUtils.subarray(intArray68, (int) (byte) -1, 6);
        boolean boolean75 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strSpliterator13, (java.lang.Object) (byte) -1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strSpliterator13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(equalsBuilder45);
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test09299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09299");
        java.lang.Byte[] byteArray1 = new java.lang.Byte[] { (byte) -1 };
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 100);
        byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray1, (byte) 1);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray5, (byte) 0, (int) (short) 0);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray15, (byte) 1);
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray15, (byte) -1);
        java.lang.Byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        java.lang.Boolean[] booleanArray24 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray24);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray24, true);
        java.lang.Boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray24);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray20, (java.lang.Object[]) booleanArray24);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray20, (byte) 10);
        byte[] byteArray32 = null;
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray31, byteArray32);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray31);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray5, byteArray31);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, 0, -1, -1, 100, 0, 0]");
    }

    @Test
    public void test09300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09300");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray32, (int) (byte) -1, (int) (short) 100);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray35, (double) 'a', (int) (short) 100);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray35, (double) 1L);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray47 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray47, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray47);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray47, (double) (short) 1, (int) (short) 100);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray47, (double) 10, (double) (byte) 100);
        java.lang.Double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray47);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray47, (double) 4);
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray47);
        java.lang.Double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
    }

    @Test
    public void test09301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09301");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(2, 5);
        java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray35);
        java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray39);
        char[] charArray46 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray50 = new char[] { '#', 'a', 'a' };
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray46, charArray50);
        java.lang.String str52 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray46);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray39, charArray46);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray63 = new char[] { '#', 'a', 'a' };
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.addAll(charArray59, charArray63);
        java.lang.String str65 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray59);
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray59);
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray46, (java.lang.Object) charArray66, false);
        java.lang.Character[] charArray69 = org.apache.commons.lang3.ArrayUtils.toObject(charArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append((java.lang.Object[]) doubleArray35, (java.lang.Object[]) charArray69);
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray69);
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray71, 'a');
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray71, '#');
        int int77 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray71, '4');
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.contains(charArray71, '#');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{4,#,a,4,#}" + "'", str52, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{4,#,a,4,#}" + "'", str65, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4, #, 4, #]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "4a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "4a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[4, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 3 + "'", int77 == 3);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test09302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09302");
        java.util.Spliterator[][][][] spliteratorArray1 = new java.util.Spliterator[0][][][];
        @SuppressWarnings("unchecked")
        java.util.Spliterator<java.lang.String>[][][][] strSpliteratorArray2 = (java.util.Spliterator<java.lang.String>[][][][]) spliteratorArray1;
        java.util.Spliterator[][][][] spliteratorArray4 = new java.util.Spliterator[0][][][];
        @SuppressWarnings("unchecked")
        java.util.Spliterator<java.lang.String>[][][][] strSpliteratorArray5 = (java.util.Spliterator<java.lang.String>[][][][]) spliteratorArray4;
        java.util.Spliterator[][][][] spliteratorArray7 = new java.util.Spliterator[0][][][];
        @SuppressWarnings("unchecked")
        java.util.Spliterator<java.lang.String>[][][][] strSpliteratorArray8 = (java.util.Spliterator<java.lang.String>[][][][]) spliteratorArray7;
        java.util.Spliterator[][][][] spliteratorArray10 = new java.util.Spliterator[0][][][];
        @SuppressWarnings("unchecked")
        java.util.Spliterator<java.lang.String>[][][][] strSpliteratorArray11 = (java.util.Spliterator<java.lang.String>[][][][]) spliteratorArray10;
        java.util.Spliterator[][][][] spliteratorArray13 = new java.util.Spliterator[0][][][];
        @SuppressWarnings("unchecked")
        java.util.Spliterator<java.lang.String>[][][][] strSpliteratorArray14 = (java.util.Spliterator<java.lang.String>[][][][]) spliteratorArray13;
        java.util.Spliterator[][][][][] spliteratorArray16 = new java.util.Spliterator[5][][][][];
        @SuppressWarnings("unchecked")
        java.util.Spliterator<java.lang.String>[][][][][] strSpliteratorArray17 = (java.util.Spliterator<java.lang.String>[][][][][]) spliteratorArray16;
        strSpliteratorArray17[0] = strSpliteratorArray2;
        strSpliteratorArray17[1] = strSpliteratorArray5;
        strSpliteratorArray17[2] = strSpliteratorArray8;
        strSpliteratorArray17[3] = strSpliteratorArray11;
        strSpliteratorArray17[4] = strSpliteratorArray14;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray35);
        int[] intArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray36, intArray37);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray37, (int) (byte) 0);
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray37);
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray42, (int) (byte) 1);
        int[] intArray45 = new int[] {};
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray45, intArray46);
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.addAll(intArray42, intArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder28.append(intArray41, intArray45);
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray45);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.add(intArray45, 3);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray45);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray45, (int) (short) 1, 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray64);
        int[] intArray66 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray65, intArray66);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray66, (int) (byte) 0);
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray66);
        int[] intArray71 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray71, (int) (byte) 1);
        int[] intArray74 = new int[] {};
        int[] intArray75 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray74, intArray75);
        int[] intArray77 = org.apache.commons.lang3.ArrayUtils.addAll(intArray71, intArray74);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder57.append(intArray70, intArray74);
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray74);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray79, 2);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.contains(intArray79, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray79);
        int[] intArray86 = org.apache.commons.lang3.ArrayUtils.add(intArray79, (int) (byte) 10);
        java.lang.Integer[] intArray93 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray94 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray93);
        java.lang.Object[] objArray95 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) intArray93);
        int[] intArray96 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray93);
        int[] intArray97 = org.apache.commons.lang3.ArrayUtils.addAll(intArray79, intArray96);
        boolean boolean98 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray45, intArray79);
        java.util.Spliterator<java.lang.String>[][][][][] strSpliteratorArray99 = org.apache.commons.lang3.ArrayUtils.removeElement(strSpliteratorArray17, (java.lang.Object) intArray79);
        org.junit.Assert.assertNotNull(spliteratorArray1);
        org.junit.Assert.assertNotNull(strSpliteratorArray2);
        org.junit.Assert.assertNotNull(spliteratorArray4);
        org.junit.Assert.assertNotNull(strSpliteratorArray5);
        org.junit.Assert.assertNotNull(spliteratorArray7);
        org.junit.Assert.assertNotNull(strSpliteratorArray8);
        org.junit.Assert.assertNotNull(spliteratorArray10);
        org.junit.Assert.assertNotNull(strSpliteratorArray11);
        org.junit.Assert.assertNotNull(spliteratorArray13);
        org.junit.Assert.assertNotNull(strSpliteratorArray14);
        org.junit.Assert.assertNotNull(spliteratorArray16);
        org.junit.Assert.assertNotNull(strSpliteratorArray17);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[3]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(strSpliteratorArray99);
    }

    @Test
    public void test09303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09303");
        float[] floatArray4 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray7 = new float[] { (byte) -1, 1L };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, (float) 10L);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray4, floatArray7);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray4, (float) (byte) 0);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.add(floatArray12, (float) 9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(floatArray14, (float) (byte) 0);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[100.0, 10.0, -1.0, 97.0, 0.0, 9.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test09304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09304");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray27);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) 'a', 2, (double) 10.0f);
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        java.lang.Double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray56);
        java.lang.Double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray57);
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray58);
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray58, (double) 5);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0]");
    }

    @Test
    public void test09305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09305");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder47.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder47.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder55.appendSuper(false);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(equalsBuilder57);
    }

    @Test
    public void test09306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09306");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (int) (byte) 0, (short) 0);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray19, (short) (byte) 1, (int) (short) 0);
        java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        java.lang.Short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.clone(shortArray26);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray26, (int) (byte) 100, (int) (byte) -1);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.clone(shortArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray19, shortArray31);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.add(shortArray31, (short) (byte) 1);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray31);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[]");
    }

    @Test
    public void test09307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09307");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean28 = strList13.isEmpty();
        int int29 = strList13.size();
        java.lang.Object[] objArray30 = strList13.toArray();
        int int31 = strList13.size();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.stream.Stream<java.lang.String> strStream39 = strList37.parallelStream();
        java.lang.Boolean[] booleanArray43 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray43);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray44, (int) (short) 10, 3);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray47);
        boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray47);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray47, true, 0);
        boolean boolean54 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strList37, (java.lang.Object) booleanArray47, false);
        java.lang.String[] strArray56 = new java.lang.String[] { "{-1.0,100.0,100.0,10.0,35.0}" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        boolean boolean59 = strList37.containsAll((java.util.Collection<java.lang.String>) strList57);
        strList37.clear();
        boolean boolean61 = strList13.retainAll((java.util.Collection<java.lang.String>) strList37);
        java.util.Iterator<java.lang.String> strItor62 = strList13.iterator();
        short[] shortArray68 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray68, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray68);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray68, (short) (byte) 0);
        java.lang.Short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray68);
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.clone(shortArray68);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray68, (short) 100);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) strItor62, (java.lang.Object) int78);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[4, hi!, 4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[4, hi!, 4, hi!]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strItor62);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test09308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09308");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        long[] longArray29 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(longArray29, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray29);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray29);
        long[] longArray40 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray40);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, (long) (short) 100);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        long[] longArray52 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, (long) 0);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.addAll(longArray40, longArray52);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray59);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.addAll(longArray29, longArray59);
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.clone(longArray59);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[-1, -1, -1]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[-1, -1]");
    }

    @Test
    public void test09309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09309");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray0, 'a', (int) '4');
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.clone(charArray0);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, (int) (byte) 10, (int) (byte) 10);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, (int) '4', 100);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[]");
    }

    @Test
    public void test09310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09310");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray5);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray8);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.clone(byteArray8);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 1, -1, 10]");
    }

    @Test
    public void test09311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09311");
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray0 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray1 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray2 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray3 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray4 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray5 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray6 = new org.apache.commons.lang3.builder.EqualsBuilder[][] { equalsBuilderArray0, equalsBuilderArray1, equalsBuilderArray2, equalsBuilderArray3, equalsBuilderArray4, equalsBuilderArray5 };
        org.apache.commons.lang3.builder.EqualsBuilder[][][] equalsBuilderArray7 = new org.apache.commons.lang3.builder.EqualsBuilder[][][] { equalsBuilderArray6 };
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray8 = new org.apache.commons.lang3.builder.EqualsBuilder[][] {};
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray9 = new org.apache.commons.lang3.builder.EqualsBuilder[][] {};
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray10 = new org.apache.commons.lang3.builder.EqualsBuilder[][] {};
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray11 = new org.apache.commons.lang3.builder.EqualsBuilder[][] {};
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray12 = new org.apache.commons.lang3.builder.EqualsBuilder[][] {};
        org.apache.commons.lang3.builder.EqualsBuilder[][][] equalsBuilderArray13 = new org.apache.commons.lang3.builder.EqualsBuilder[][][] { equalsBuilderArray8, equalsBuilderArray9, equalsBuilderArray10, equalsBuilderArray11, equalsBuilderArray12 };
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray14 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray15 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray16 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray17 = new org.apache.commons.lang3.builder.EqualsBuilder[][] { equalsBuilderArray14, equalsBuilderArray15, equalsBuilderArray16 };
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray18 = org.apache.commons.lang3.ArrayUtils.toArray(equalsBuilderArray17);
        org.apache.commons.lang3.builder.EqualsBuilder[][][] equalsBuilderArray19 = org.apache.commons.lang3.ArrayUtils.add(equalsBuilderArray13, equalsBuilderArray17);
        org.apache.commons.lang3.builder.EqualsBuilder[][][] equalsBuilderArray20 = org.apache.commons.lang3.ArrayUtils.addAll(equalsBuilderArray7, equalsBuilderArray19);
        org.apache.commons.lang3.builder.EqualsBuilder[][][] equalsBuilderArray21 = org.apache.commons.lang3.ArrayUtils.clone(equalsBuilderArray20);
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray22 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray23 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray24 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray25 = new org.apache.commons.lang3.builder.EqualsBuilder[][] { equalsBuilderArray22, equalsBuilderArray23, equalsBuilderArray24 };
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray26 = org.apache.commons.lang3.ArrayUtils.toArray(equalsBuilderArray25);
        org.apache.commons.lang3.builder.Builder<java.lang.Boolean>[][][] booleanBuilderArray27 = org.apache.commons.lang3.ArrayUtils.add((org.apache.commons.lang3.builder.Builder<java.lang.Boolean>[][][]) equalsBuilderArray21, (org.apache.commons.lang3.builder.Builder<java.lang.Boolean>[][]) equalsBuilderArray25);
        org.junit.Assert.assertNotNull(equalsBuilderArray0);
        org.junit.Assert.assertNotNull(equalsBuilderArray1);
        org.junit.Assert.assertNotNull(equalsBuilderArray2);
        org.junit.Assert.assertNotNull(equalsBuilderArray3);
        org.junit.Assert.assertNotNull(equalsBuilderArray4);
        org.junit.Assert.assertNotNull(equalsBuilderArray5);
        org.junit.Assert.assertNotNull(equalsBuilderArray6);
        org.junit.Assert.assertNotNull(equalsBuilderArray7);
        org.junit.Assert.assertNotNull(equalsBuilderArray8);
        org.junit.Assert.assertNotNull(equalsBuilderArray9);
        org.junit.Assert.assertNotNull(equalsBuilderArray10);
        org.junit.Assert.assertNotNull(equalsBuilderArray11);
        org.junit.Assert.assertNotNull(equalsBuilderArray12);
        org.junit.Assert.assertNotNull(equalsBuilderArray13);
        org.junit.Assert.assertNotNull(equalsBuilderArray14);
        org.junit.Assert.assertNotNull(equalsBuilderArray15);
        org.junit.Assert.assertNotNull(equalsBuilderArray16);
        org.junit.Assert.assertNotNull(equalsBuilderArray17);
        org.junit.Assert.assertNotNull(equalsBuilderArray18);
        org.junit.Assert.assertNotNull(equalsBuilderArray19);
        org.junit.Assert.assertNotNull(equalsBuilderArray20);
        org.junit.Assert.assertNotNull(equalsBuilderArray21);
        org.junit.Assert.assertNotNull(equalsBuilderArray22);
        org.junit.Assert.assertNotNull(equalsBuilderArray23);
        org.junit.Assert.assertNotNull(equalsBuilderArray24);
        org.junit.Assert.assertNotNull(equalsBuilderArray25);
        org.junit.Assert.assertNotNull(equalsBuilderArray26);
        org.junit.Assert.assertNotNull(booleanBuilderArray27);
    }

    @Test
    public void test09312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09312");
        java.util.AbstractCollection[][][] abstractCollectionArray1 = new java.util.AbstractCollection[0][][];
        @SuppressWarnings("unchecked")
        java.util.AbstractCollection<java.lang.String>[][][] strCollectionArray2 = (java.util.AbstractCollection<java.lang.String>[][][]) abstractCollectionArray1;
        java.util.AbstractCollection<java.lang.String>[][][] strCollectionArray3 = org.apache.commons.lang3.ArrayUtils.clone(strCollectionArray2);
        java.util.AbstractCollection[][] abstractCollectionArray6 = new java.util.AbstractCollection[0][];
        @SuppressWarnings("unchecked")
        java.util.AbstractCollection<java.lang.String>[][] strCollectionArray7 = (java.util.AbstractCollection<java.lang.String>[][]) abstractCollectionArray6;
        java.util.AbstractCollection<java.lang.String>[][] strCollectionArray8 = org.apache.commons.lang3.ArrayUtils.toArray(strCollectionArray7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.AbstractCollection<java.lang.String>[][][] strCollectionArray9 = org.apache.commons.lang3.ArrayUtils.add(strCollectionArray3, (int) 'a', strCollectionArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(abstractCollectionArray1);
        org.junit.Assert.assertNotNull(strCollectionArray2);
        org.junit.Assert.assertNotNull(strCollectionArray3);
        org.junit.Assert.assertNotNull(abstractCollectionArray6);
        org.junit.Assert.assertNotNull(strCollectionArray7);
        org.junit.Assert.assertNotNull(strCollectionArray8);
    }

    @Test
    public void test09313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09313");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        java.lang.Long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toObject(longArray2);
        long[] longArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, (long) (byte) 10);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[10]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[]");
    }

    @Test
    public void test09314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09314");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (-1.0f), (double) '4');
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (int) (short) 0, (int) (byte) 1);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) 7, (double) 6);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray28, (double) 7);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (-1.0d), (int) (short) -1);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.add(doubleArray28, (double) 100.0f);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) 3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test09315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09315");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray10 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray14 = new char[] { '#', 'a', 'a' };
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray14);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray10, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray10);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.add(charArray0, '#');
        java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray23);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray25);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray25);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        double[] doubleArray40 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray32, doubleArray40);
        float[] floatArray46 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray49 = new float[] { (byte) -1, 1L };
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray49, (float) 10L);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray49);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray40, (java.lang.Object) boolean52);
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray40, (int) (short) 0, 1);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray56, (double) (byte) -1);
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray58, (int) (byte) 100, 1);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray58, 0, (int) (short) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray58);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) charArray25, (java.lang.Object) doubleArray58);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray23, charArray25);
        char[] charArray69 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray23, '4');
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray69);
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray70);
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray70, 'a');
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray73, 'a');
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.clone(charArray75);
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray76);
        int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray76, '#');
        char[] charArray81 = org.apache.commons.lang3.ArrayUtils.add(charArray76, ' ');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[ ]");
    }

    @Test
    public void test09316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09316");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray13);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.clone(floatArray13);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray18, (int) (byte) 1, 2);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray18, floatArray22);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray22, 0.0f, 4);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.add(floatArray22, (int) '#', 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test09317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09317");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray18);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.clone(byteArray18);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 0, -1, -1, 100, 0, 0]");
    }

    @Test
    public void test09318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09318");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.add(intArray17, 3);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray24);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray32);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray33, intArray34);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray34, (int) (byte) 0);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray34, (int) 'a');
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray34);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray34, 2, (int) '4');
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray34);
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray51);
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray52, intArray53);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray53, (int) (byte) 0);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray53);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.subarray(intArray53, 0, 0);
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray60);
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray68);
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray69, intArray70);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray70, (int) (byte) 0);
        int[] intArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray70);
        short[] shortArray80 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int83 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray80, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray80);
        short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray80, (short) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray80);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray70, (java.lang.Object) shortArray80);
        int[] intArray89 = org.apache.commons.lang3.ArrayUtils.addAll(intArray60, intArray70);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray44, intArray60);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray24, intArray44);
        int[] intArray92 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray24);
        int[] intArray94 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray24, (-1));
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[3]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[-1, 1, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[3]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[3]");
    }

    @Test
    public void test09319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09319");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(shortArray5, (short) 10);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.clone(shortArray5);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, 5, (short) (byte) -1);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.add(shortArray15, (short) 10);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray15);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.add(shortArray18, (short) 10);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[100, 0, 0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[100, 0, 0, 1, -1, -1, 10]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[100, 0, 0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[100, 0, 0, 1, -1, -1, 10]");
    }

    @Test
    public void test09320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09320");
        int[] intArray0 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder1 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray8);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray9, intArray10);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray10, (int) (byte) 0);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray10);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray15, (int) (byte) 1);
        int[] intArray18 = new int[] {};
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray18, intArray19);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.addAll(intArray15, intArray18);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder22 = equalsBuilder1.append(intArray14, intArray18);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray18);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray23, 2);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(intArray23, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray23);
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray35);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(intArray36, 1);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.addAll(intArray23, intArray36);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray36, 10, (int) (byte) 0);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray36, (int) (short) 0);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray36);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray36);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray0, intArray36);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test09321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09321");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        long[] longArray70 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.subarray(longArray70, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray70);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray70);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray70, (long) 5);
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.clone(longArray70);
        long[] longArray81 = org.apache.commons.lang3.ArrayUtils.subarray(longArray70, (-1), (int) (short) 10);
        long[] longArray83 = org.apache.commons.lang3.ArrayUtils.add(longArray70, 0L);
        long[] longArray84 = org.apache.commons.lang3.ArrayUtils.addAll(longArray49, longArray83);
        long[] longArray87 = org.apache.commons.lang3.ArrayUtils.add(longArray84, (int) (short) 0, (long) (short) 0);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.contains(longArray87, (long) 8);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[100, -1, 1, -1, 1, 10, 0]");
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[32, 1, -1, 0, 100, -1, 1, -1, 1, 10, 0]");
        org.junit.Assert.assertNotNull(longArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray87), "[0, 32, 1, -1, 0, 100, -1, 1, -1, 1, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test09322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09322");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray10, (byte) 100);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray10, (byte) 0);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray14, 0, (byte) -1);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray24, (byte) 1);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(byteArray26, (byte) 100);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(byteArray26, (byte) 1);
        java.lang.Byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray26);
        byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray31, (byte) 100);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.add(byteArray33, (byte) 10);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.clone(byteArray35);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray35);
        byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.remove(byteArray35, 3);
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray46, (byte) 1);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(byteArray48, (byte) 100);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains(byteArray48, (byte) 1);
        java.lang.Byte[] byteArray59 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray59, (byte) 1);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray61, (int) (byte) 0, (int) (byte) 1);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray48, byteArray64);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray48, (byte) 10);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.add(byteArray48, (byte) -1);
        byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray35, byteArray69);
        byte[] byteArray71 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray17, byteArray69);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray69);
        byte[] byteArray73 = new byte[] {};
        byte[] byteArray78 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray73, byteArray78);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray73, (byte) -1);
        byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray73, (byte) -1);
        byte[] byteArray85 = org.apache.commons.lang3.ArrayUtils.add(byteArray83, (byte) 100);
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray83, (byte) -1, 5);
        byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray69, byteArray83);
        byte[] byteArray92 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray69, 100, (int) 'a');
        byte[] byteArray94 = org.apache.commons.lang3.ArrayUtils.add(byteArray69, (byte) 10);
        boolean boolean96 = org.apache.commons.lang3.ArrayUtils.contains(byteArray94, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[10, 0, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[10, 0, -1, -1, 100, 0, 0, 0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-1, 0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[100]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[]");
        org.junit.Assert.assertNotNull(byteArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray94), "[0, 0, 100, -1, -1, 0, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test09323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09323");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        boolean boolean33 = equalsBuilder31.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder31.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((float) (byte) 100, (float) 1L);
        java.lang.Double[] doubleArray44 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray49 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray54 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[] doubleArray59 = new java.lang.Double[] { 1.0d, 100.0d, 0.0d, 1.0d };
        java.lang.Double[][] doubleArray60 = new java.lang.Double[][] { doubleArray44, doubleArray49, doubleArray54, doubleArray59 };
        java.lang.Double[][] doubleArray61 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray60);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray61);
        java.util.Map<java.lang.Object, java.lang.Object> objMap63 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) doubleArray61);
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray67);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray67, true);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray61, (java.lang.Object) booleanArray67);
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "class [Ljava.lang.Integer;", "{true,true}", "class [Ljava.lang.Integer;", "100", "{{},{}}", "{-1,1,0,0,100}" };
        java.lang.CharSequence[] charSequenceArray85 = new java.lang.CharSequence[] { "class [Ljava.lang.Integer;", "{true,true}", "class [Ljava.lang.Integer;", "100", "{{},{}}", "{-1,1,0,0,100}" };
        java.lang.CharSequence[][] charSequenceArray86 = new java.lang.CharSequence[][] { charSequenceArray78, charSequenceArray85 };
        java.lang.String[][] strArray87 = new java.lang.String[][] {};
        java.lang.String[][] strArray88 = org.apache.commons.lang3.ArrayUtils.clone(strArray87);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.CharSequence[][]) strArray87);
        java.lang.String[][] strArray90 = org.apache.commons.lang3.ArrayUtils.clone(strArray87);
        java.lang.CharSequence[][] charSequenceArray91 = org.apache.commons.lang3.ArrayUtils.addAll(charSequenceArray86, (java.lang.CharSequence[][]) strArray87);
        java.lang.CharSequence[][] charSequenceArray94 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.CharSequence[][]) strArray87, 4, (int) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder36.append((java.lang.Object[]) booleanArray67, (java.lang.Object[]) charSequenceArray94);
        boolean[] booleanArray96 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray67);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objMap63);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertNotNull(charSequenceArray85);
        org.junit.Assert.assertNotNull(charSequenceArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(charSequenceArray91);
        org.junit.Assert.assertNotNull(charSequenceArray94);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(booleanArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray96), "[false, true, true]");
    }

    @Test
    public void test09324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09324");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        equalsBuilder50.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder50.append((long) (short) -1, (long) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append((short) -1, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append((long) (short) 100, 0L);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
    }

    @Test
    public void test09325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09325");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray13);
        java.lang.Float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray18);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) floatArray19, (java.lang.Object[]) intArray22);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray19, 100.0f);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[1.0, -1.0]");
    }

    @Test
    public void test09326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09326");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        long[] longArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray2, (long) (byte) 10);
        long[] longArray9 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray9, 1L);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray9);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.addAll(longArray2, longArray9);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray9, (long) (byte) 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray9, (long) (byte) -1, (int) ' ');
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(longArray9, (long) (short) 1);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, 1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test09327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09327");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, true);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray8, 0, 5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, true, true]");
    }

    @Test
    public void test09328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09328");
        java.lang.String[] strArray4 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray13 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.remove(floatArray13, (int) (short) 1);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray7, floatArray16);
        boolean boolean18 = strList5.equals((java.lang.Object) floatArray17);
        int int19 = strList5.size();
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray20, (int) (byte) 1);
        boolean boolean23 = strList5.contains((java.lang.Object) int22);
        java.lang.Object[] objArray24 = strList5.toArray();
        boolean boolean25 = strList5.isEmpty();
        double[] doubleArray29 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray29, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray29);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray29, (double) (short) 1, (int) (short) 100);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 10, (double) (byte) 100);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray29, (double) (short) 0);
        java.lang.Double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray29);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray42, (double) 4);
        java.lang.Double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray42);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray42);
        boolean boolean47 = strList5.remove((java.lang.Object) doubleArray42);
        int int48 = strList5.size();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[{}, {}, 1, {4,#,a,4,#}]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 4 + "'", int48 == 4);
    }

    @Test
    public void test09329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09329");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray0, ' ', (int) (short) 0);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(charArray0, '4');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.add(charArray0, '#');
        java.lang.String str10 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray8, "{1.0,0.0,10.0,-1.0,1.0,-1.0,0.0,10.0,-1.0}");
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray8, '4', 9);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{#}" + "'", str10, "{#}");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test09330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09330");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray5);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16, true);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray18, true);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray18);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray5, booleanArray18);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, true, 0);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray5, false);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
    }

    @Test
    public void test09331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09331");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        boolean[] booleanArray69 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray69, (int) (byte) 0, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray69);
        java.lang.Boolean[] booleanArray77 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77);
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder28.append(booleanArray69, booleanArray79);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder28.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append((short) (byte) 100, (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder83.append((double) 8, (double) 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder89.append(100L, (long) 10);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, true, true]");
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test09332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09332");
        char[] charArray0 = null;
        char[] charArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray1);
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray1, '#');
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray1, ' ');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray7);
        java.lang.Character[] charArray9 = org.apache.commons.lang3.ArrayUtils.toObject(charArray7);
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray9, '#');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray9);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray0, charArray12);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[]");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test09333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09333");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray1, (long) (byte) 0);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray1, (long) (-1));
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray1, (long) (short) 10, (int) '#');
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray1, 0L, (int) ' ');
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test09334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09334");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray7);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.add(booleanArray8, true);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray10, (int) '4', (int) (byte) 100);
        boolean[] booleanArray17 = new boolean[] { true, true, true };
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray17, true);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray17);
        boolean[] booleanArray21 = null;
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray17, booleanArray21);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray13, booleanArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[true]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test09335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09335");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray12, '4');
        char[] charArray20 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray24 = new char[] { '#', 'a', 'a' };
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray24);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray20, ' ');
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray27, '4');
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(charArray29, '4');
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.add(charArray29, '#');
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray14, charArray33);
        java.lang.Character[] charArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray35);
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray35);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray37);
        char[] charArray44 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray48 = new char[] { '#', 'a', 'a' };
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.addAll(charArray44, charArray48);
        java.lang.String str50 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray44);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray37, charArray44);
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.subarray(charArray37, 4, (int) '#');
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray55);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray55, ' ', (int) (short) 0);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.contains(charArray55, '4');
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray55, 'a', (int) (byte) 0);
        char[] charArray65 = org.apache.commons.lang3.ArrayUtils.addAll(charArray37, charArray55);
        java.lang.String str66 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray55);
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.addAll(charArray14, charArray55);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray55, '#');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#a4##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#a4##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a, 4, #, #]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{4,#,a,4,#}" + "'", str50, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{}" + "'", str66, "{}");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test09336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09336");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) -1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) ' ');
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        java.lang.Object obj30 = new java.lang.Object();
        long[] longArray37 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.subarray(longArray37, 3, (int) (byte) 0);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray37);
        boolean[] booleanArray48 = new boolean[] { false, false, false, true, false, false };
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray48);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray48, true);
        java.lang.String[] strArray54 = new java.lang.String[] { "4", "1" };
        boolean boolean55 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean41, (java.lang.Object) true, strArray54);
        java.lang.String[] strArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray54);
        java.lang.String[] strArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray56);
        boolean boolean58 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray22, obj30, strArray56);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 5);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray60);
        int[] intArray63 = org.apache.commons.lang3.ArrayUtils.add(intArray60, 11);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 1, 0, 10, -1, 1, 11]");
    }

    @Test
    public void test09337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09337");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 1);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray24, (byte) 100);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray24, (byte) -1);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray24, (byte) 1);
        byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray24);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 100);
        java.lang.Byte[] byteArray43 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray43, (byte) 1);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(byteArray45, (byte) 100);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(byteArray45, (byte) 1);
        java.lang.Byte[] byteArray56 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray56, (byte) 1);
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray58, (int) (byte) 0, (int) (byte) 1);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray45, byteArray61);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray61, (byte) 100);
        java.lang.Byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray64);
        byte[] byteArray68 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray64, 0, (int) 'a');
        int int71 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray68, (byte) -1, (int) (byte) 0);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray68, (byte) 100);
        byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray24, byteArray68);
        java.lang.Byte[] byteArray80 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray80);
        java.lang.Byte[] byteArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray81);
        java.lang.Byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray82);
        java.lang.Byte[] byteArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray82);
        java.lang.Byte[] byteArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray84);
        boolean[] booleanArray86 = new boolean[] {};
        boolean[] booleanArray88 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray86, true);
        boolean[] booleanArray90 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray86, false);
        int int92 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray84, (java.lang.Object) false, (int) (byte) -1);
        byte[] byteArray93 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray84);
        byte[] byteArray96 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray93, (int) 'a', (int) (short) 10);
        boolean boolean97 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray24, byteArray96);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 100]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray86), "[]");
        org.junit.Assert.assertNotNull(booleanArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray88), "[]");
        org.junit.Assert.assertNotNull(booleanArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray90), "[]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray96), "[]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test09338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09338");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) 0);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray3);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3);
        short[] shortArray8 = null;
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray7, shortArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(shortArray7, (short) 10);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray7, (short) (byte) 1);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray7);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.clone(shortArray14);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray14, (short) 1, (int) '4');
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test09339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09339");
        boolean[] booleanArray0 = new boolean[] {};
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray0, false);
        int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray0, false);
        java.lang.Character[] charArray5 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '4');
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        java.lang.String[] strArray13 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.stream.Stream<java.lang.String> strStream16 = strList14.parallelStream();
        java.lang.String[] strArray19 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.util.stream.Stream<java.lang.String> strStream22 = strList20.parallelStream();
        boolean boolean23 = strList14.addAll((java.util.Collection<java.lang.String>) strList20);
        java.util.stream.Stream<java.lang.String> strStream24 = strList14.parallelStream();
        boolean boolean26 = strList14.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray31 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray40 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray40);
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.remove(floatArray40, (int) (short) 1);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray34, floatArray43);
        boolean boolean45 = strList32.equals((java.lang.Object) floatArray44);
        int int46 = strList32.size();
        int[] intArray47 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray47, (int) (byte) 1);
        boolean boolean50 = strList32.contains((java.lang.Object) int49);
        boolean boolean51 = strList14.addAll((java.util.Collection<java.lang.String>) strList32);
        boolean boolean52 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int4, (java.lang.Object) charArray5, (java.util.Collection<java.lang.String>) strList14);
        java.lang.String[] strArray55 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.stream.Stream<java.lang.String> strStream58 = strList56.parallelStream();
        java.lang.String[] strArray61 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.stream.Stream<java.lang.String> strStream64 = strList62.parallelStream();
        boolean boolean65 = strList56.addAll((java.util.Collection<java.lang.String>) strList62);
        java.util.stream.Stream<java.lang.String> strStream66 = strList56.parallelStream();
        boolean boolean67 = strList14.retainAll((java.util.Collection<java.lang.String>) strList56);
        char[] charArray73 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray77 = new char[] { '#', 'a', 'a' };
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.addAll(charArray73, charArray77);
        char[] charArray81 = org.apache.commons.lang3.ArrayUtils.subarray(charArray77, (int) 'a', (int) (short) 10);
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.add(charArray77, '4');
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray77);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.contains(charArray77, '#');
        java.lang.Class<?> wildcardClass87 = charArray77.getClass();
        boolean boolean88 = strList56.equals((java.lang.Object) wildcardClass87);
        java.util.stream.Stream<java.lang.String> strStream89 = strList56.parallelStream();
        boolean boolean90 = strList56.isEmpty();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strStream16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strStream22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strStream24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strStream58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strStream66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, a, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strStream89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test09340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09340");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10, (double) (byte) 100);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) 10, (int) (short) 1);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray3, (double) 0.0f);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray19);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test09341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09341");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        java.lang.Double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        double[] doubleArray55 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray55, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray55);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray55, (double) (short) 1, (int) (short) 100);
        int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray55, (double) 10, (double) (byte) 100);
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray55, (double) (short) 0);
        java.lang.Double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray55);
        double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray68, (double) 4);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray70, (double) 1.0f, (double) 100.0f);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray70, (int) (short) 0, (int) (short) 10);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray70);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray70, 0.0d, 0, 100.0d);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray83 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray70, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test09342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09342");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        int int15 = strList9.size();
        long[] longArray17 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(longArray17, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray17);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(longArray17, (long) (short) 100);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray17);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray17, (long) 3, (int) (byte) 100);
        boolean boolean31 = strList9.remove((java.lang.Object) longArray17);
        int int32 = strList9.size();
        java.util.stream.Stream<java.lang.String> strStream33 = strList9.stream();
        boolean boolean34 = strList9.isEmpty();
        int int35 = strList9.size();
        java.util.Iterator<java.lang.String> strItor36 = strList9.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator37 = strList9.spliterator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(strItor36);
        org.junit.Assert.assertNotNull(strSpliterator37);
    }

    @Test
    public void test09343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09343");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray8, (int) (byte) 0, (int) (byte) 1);
        java.lang.Byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray11);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray11);
        boolean[] booleanArray19 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) (byte) 0, 0);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray19, true);
        java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19);
        java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray25);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray25, false);
        java.lang.Boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray25);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray25);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray25, false);
        java.lang.Boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray25);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray13, (java.lang.Object[]) booleanArray25);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray25);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[true, false, true, true, true]");
    }

    @Test
    public void test09344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09344");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray10, 4, (int) '4');
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray10, (float) 4, (int) (short) 1);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test09345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09345");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) 100);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) 0, (double) 0L);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (int) (byte) 1, 10);
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36);
        double[] doubleArray41 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray41, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray41);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray41, (double) (short) 1, (int) (short) 100);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray41);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray41);
        java.lang.Double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray41);
        java.lang.Double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray51);
        java.lang.Double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray52);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray52);
        java.lang.String[] strArray57 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.stream.Stream<java.lang.String> strStream60 = strList58.parallelStream();
        java.lang.String[] strArray63 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.stream.Stream<java.lang.String> strStream66 = strList64.parallelStream();
        boolean boolean67 = strList58.addAll((java.util.Collection<java.lang.String>) strList64);
        java.lang.Object obj68 = null;
        boolean boolean69 = strList64.equals(obj68);
        int int70 = strList64.size();
        boolean boolean71 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray36, (java.lang.Object) doubleArray52, (java.util.Collection<java.lang.String>) strList64);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36, (double) 1L);
        java.lang.Double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strStream60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strStream66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
    }

    @Test
    public void test09346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09346");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray29);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, (int) (short) 10, 0.0d);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 5, (int) (short) 0);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, 1, 2);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, 0.0d, (double) (-1.0f));
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) (-1), (double) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.add(doubleArray29, 2, 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test09347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09347");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) 10);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.clone(byteArray28);
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray36, (byte) 1);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(byteArray38, (byte) 100);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(byteArray38, (byte) 1);
        java.lang.Byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray38);
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray43, (byte) 100);
        byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.add(byteArray45, (byte) 10);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.clone(byteArray47);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray47);
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.add(byteArray47, (byte) 100);
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray51, (byte) 0);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray51, (byte) 10, 5);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray29, byteArray51);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.add(byteArray51, (byte) 10);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray51);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray60);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[10, 0, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[10, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[10, 0, -1, -1, 100, 0, 0, 100, 10]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[10, 0, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test09348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09348");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a', (int) (short) 0);
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray8, (int) (byte) 10);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray16, 100);
        java.lang.Integer[] intArray19 = org.apache.commons.lang3.ArrayUtils.toObject(intArray16);
        java.lang.Object[] objArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) intArray19);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray19, 4);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray19);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray19, 9);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray19);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
    }

    @Test
    public void test09349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09349");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 2, (int) 'a');
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (short) 1, (double) (short) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0, (int) (byte) 0, (double) 4);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09350");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.clone(intArray5);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray6, 10);
        java.lang.Integer[] intArray9 = org.apache.commons.lang3.ArrayUtils.toObject(intArray8);
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray16);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(intArray18, (int) '4');
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray18, (int) 'a', (int) (short) 0);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(intArray18, (int) '4');
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray18);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray27);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray27, (int) (short) 10, (int) (short) 10);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray27);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray35 = org.apache.commons.lang3.ArrayUtils.add(intArray27, 3, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test09351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09351");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) 'a');
        int[] intArray15 = new int[] {};
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray15, intArray16);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray14, intArray16);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray16);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray23 = org.apache.commons.lang3.ArrayUtils.add(intArray16, 10, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test09352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09352");
        java.lang.Long[] longArray2 = new java.lang.Long[] { 1L, 0L };
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2);
        long[] longArray4 = org.apache.commons.lang3.ArrayUtils.clone(longArray3);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.clone(longArray3);
        long[] longArray10 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray10, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray3, longArray12);
        float[] floatArray21 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) 1);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, (float) 10);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.add(floatArray26, (float) (-1));
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray28, (float) 10);
        boolean boolean31 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean15, (java.lang.Object) 10);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[0, -1, 32]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test09353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09353");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray5, (int) (byte) 10, (int) (short) -1);
        java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(shortArray5, (short) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09354");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray10 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray14 = new char[] { '#', 'a', 'a' };
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray14);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray10, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray10);
        char[] charArray24 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray28 = new char[] { '#', 'a', 'a' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray24, charArray28);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.subarray(charArray28, (int) 'a', (int) (short) 10);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, '4');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray28);
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.clone(charArray35);
        java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray39);
        char[] charArray46 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray50 = new char[] { '#', 'a', 'a' };
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray46, charArray50);
        java.lang.String str52 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray46);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray39, charArray46);
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray39);
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.addAll(charArray36, charArray54);
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray54, '#');
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.subarray(charArray57, (int) 'a', (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray63 = org.apache.commons.lang3.ArrayUtils.add(charArray60, (int) (short) 10, 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{4,#,a,4,#}" + "'", str52, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[]");
    }

    @Test
    public void test09355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09355");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray12);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray12);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, false, (int) (byte) 0);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray12, true);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, false, true, true]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    }

    @Test
    public void test09356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09356");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        long[] longArray29 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(longArray29, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray29);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray29);
        long[] longArray40 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray40);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, (long) (short) 100);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        long[] longArray52 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, (long) 0);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.addAll(longArray40, longArray52);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray59);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.addAll(longArray29, longArray59);
        long[] longArray64 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray64);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(longArray64, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray64);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray64);
        long[] longArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray64);
        java.lang.Long[] longArray71 = org.apache.commons.lang3.ArrayUtils.toObject(longArray70);
        float[] floatArray77 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray77);
        int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray77, 0.0f);
        java.lang.Float[] floatArray81 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray77);
        long[] longArray83 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray83);
        int int85 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray81, (java.lang.Object) longArray83);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray70, longArray83);
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray83, 0L);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray59, longArray83);
        java.lang.String str91 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) longArray59, "{32,1,-1,0}");
        int int93 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray59, (long) 'a');
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[-1, -1, -1]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[-1]");
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray77), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[-1]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "{-1,-1}" + "'", str91, "{-1,-1}");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
    }

    @Test
    public void test09357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09357");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        long[] longArray11 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray11);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray9, (java.lang.Object) longArray11);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) floatArray9);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray26 = new char[] { '#', 'a', 'a' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray26);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray22, ' ');
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray39 = new char[] { '#', 'a', 'a' };
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.addAll(charArray35, charArray39);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray39, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder16.append((java.lang.Object) ' ', (java.lang.Object) charArray39);
        java.lang.Long[] longArray50 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray50);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray52);
        char[] charArray57 = new char[] { 'a', '#', ' ' };
        char[][] charArray58 = new char[][] { charArray57 };
        char[][] charArray59 = org.apache.commons.lang3.ArrayUtils.toArray(charArray58);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder44.append((java.lang.Object[]) longArray52, (java.lang.Object[]) charArray59);
        long[] longArray65 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray67 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray65, 1L);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray65, 0L);
        long[] longArray74 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray74, 1L);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray74, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder44.append(longArray65, longArray74);
        java.lang.Short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray80);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80);
        java.lang.Short[] shortArray83 = new java.lang.Short[] {};
        short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray83);
        short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray83, (short) 1);
        short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.clone(shortArray86);
        int int90 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray87, (short) (byte) -1, (int) (short) 100);
        short[] shortArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray87);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder44.append(shortArray82, shortArray87);
        short[] shortArray95 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray82, 5, 100);
        java.lang.Short[] shortArray96 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray95);
        java.lang.Short[] shortArray97 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray96);
        boolean boolean98 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) floatArray9, (java.lang.Object[]) shortArray96);
        float[] floatArray99 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 3 + "'", int69 == 3);
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 3 + "'", int78 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray84), "[]");
        org.junit.Assert.assertNotNull(shortArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(shortArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray91), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(shortArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray95), "[]");
        org.junit.Assert.assertNotNull(shortArray96);
        org.junit.Assert.assertNotNull(shortArray97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(floatArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray99), "[35.0, 10.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test09358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09358");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray0);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
    }

    @Test
    public void test09359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09359");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, true);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray11);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray11, false);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, 0, false);
        java.lang.Boolean[] booleanArray23 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray23);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray23, false);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray23);
        java.lang.Boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray23);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray23, false);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray14, booleanArray30);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, true, true, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, true, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true, true, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test09360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09360");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (-1), (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((byte) 1, (byte) 100);
        byte[] byteArray11 = new byte[] { (byte) 10 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray11);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray19);
        java.lang.Byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray20);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray20, (byte) 0);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray23, (byte) 1);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder3.append(byteArray11, byteArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append(' ', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder27.appendSuper(false);
        equalsBuilder27.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder32);
    }

    @Test
    public void test09361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09361");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) 10);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) -1);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) 0);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray8, (byte) 100);
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray34, (byte) 100);
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray36, (byte) 10);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(byteArray38, (byte) 0);
        java.lang.Byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray38);
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.add(byteArray38, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0, 0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0, 100, -1, -1, 0, 0]");
    }

    @Test
    public void test09362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09362");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(intArray17, (int) 'a');
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray17, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray28 = org.apache.commons.lang3.ArrayUtils.add(intArray17, (int) '#', 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test09363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09363");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, (int) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray0);
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.add(intArray0, (-1));
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray5, (int) (byte) 10);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray5, (int) (short) 1, (int) (byte) 0);
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.clone(intArray5);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray5, 7);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(intArray5, 8);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09364");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0, (long) '4');
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
    }

    @Test
    public void test09365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09365");
        float[] floatArray4 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray7 = new float[] { (byte) -1, 1L };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, (float) 10L);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray4, floatArray7);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray4, (float) '4');
        float[] floatArray18 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray18);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.clone(floatArray18);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray18);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.add(floatArray18, (float) (byte) 100);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.clone(floatArray24);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 100.0, 10.0, 35.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 100.0, 10.0, 35.0, 100.0]");
    }

    @Test
    public void test09366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09366");
        java.lang.Character[] charArray6 = new java.lang.Character[] { 'a', 'a', 'a', '#', '4', 'a' };
        java.lang.Character[] charArray13 = new java.lang.Character[] { 'a', 'a', 'a', '#', '4', 'a' };
        java.lang.Character[] charArray20 = new java.lang.Character[] { 'a', 'a', 'a', '#', '4', 'a' };
        java.lang.Character[][] charArray21 = new java.lang.Character[][] { charArray6, charArray13, charArray20 };
        java.lang.Character[][][] charArray22 = new java.lang.Character[][][] { charArray21 };
        java.lang.Character[] charArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray23, '4');
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray31);
        java.lang.Byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray32);
        boolean boolean35 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray25, (java.lang.Object) byteArray32, true);
        java.lang.Character[] charArray41 = new java.lang.Character[] { '#', '#', '#', ' ', '#' };
        java.lang.Character[][] charArray42 = new java.lang.Character[][] { charArray41 };
        java.lang.Character[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray32, (java.lang.Object[]) charArray43);
        java.lang.Character[][][] charArray45 = org.apache.commons.lang3.ArrayUtils.add(charArray22, charArray43);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray48);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) charArray22, (java.lang.Object[]) intArray48);
        java.lang.Integer[] intArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray48);
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray48, 9);
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray53);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray54);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test09367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09367");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray15 = new boolean[] { false, false, false, true, false, false };
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray15);
        boolean[] booleanArray23 = new boolean[] { false, false, false, true, false, false };
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray15, booleanArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray15, false);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray15, true);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray15);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray15, false);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
    }

    @Test
    public void test09368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09368");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) -1);
        java.lang.Byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray15);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray15, true);
        java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray15);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray11, (java.lang.Object[]) booleanArray15);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray11, (byte) 10);
        byte[] byteArray23 = null;
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray22, byteArray23);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray22);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.remove(byteArray22, 5);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray22, (byte) 100);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.clone(byteArray22);
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.remove(byteArray30, (int) (byte) 1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, -1, -1, 100, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, -1, 100, 0, 0]");
    }

    @Test
    public void test09369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09369");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) -1);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) 0);
        short[] shortArray15 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray19 = new java.lang.Short[] {};
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray19);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray19, (short) 1);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray15, shortArray22);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) 0, 0);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.add(shortArray15, (int) (byte) 0, (short) 0);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray29, (short) (byte) 1, (int) (short) 0);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray29, (short) (byte) -1, 0);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray29, (int) (byte) 100, (int) (byte) 100);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray38);
        java.lang.Short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray39);
        java.lang.Short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray40);
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray40);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertNotNull(shortArray42);
    }

    @Test
    public void test09370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09370");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray6, (int) (short) 1, 1);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray17, (int) '4', (int) '#');
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray17);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test09371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09371");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, 0, 1);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray5);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test09372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09372");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(2, 5);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder31.append('4', '4');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
    }

    @Test
    public void test09373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09373");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray8, (double) 2);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 10.0, -1.0]");
    }

    @Test
    public void test09374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09374");
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2);
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5, 100);
        java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) intArray5);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[1, 0]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[1, 0]");
    }

    @Test
    public void test09375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09375");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        java.lang.Long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray11);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray12);
        java.lang.Long[] longArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray12);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray14);
        java.lang.String str17 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) longArray15, "{#}");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{100,-1,1,-1,1,10}" + "'", str17, "{100,-1,1,-1,1,10}");
    }

    @Test
    public void test09376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09376");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray9, ' ', 2);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, 0, (int) (byte) 10);
        java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.toObject(charArray16);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray16);
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray21);
        char[] charArray28 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray32 = new char[] { '#', 'a', 'a' };
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.addAll(charArray28, charArray32);
        java.lang.String str34 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray28);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray21, charArray28);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray21);
        char[] charArray42 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray46 = new char[] { '#', 'a', 'a' };
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.addAll(charArray42, charArray46);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.subarray(charArray46, (int) 'a', (int) (short) 10);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.add(charArray46, '4');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray52);
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.subarray(charArray52, (int) (byte) 0, 10);
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray52);
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.addAll(charArray16, charArray21);
        java.lang.Character[] charArray59 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray59);
        char[] charArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray59);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray61);
        char[] charArray68 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray72 = new char[] { '#', 'a', 'a' };
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.addAll(charArray68, charArray72);
        java.lang.String str74 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray68);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray61, charArray68);
        char[] charArray81 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray85 = new char[] { '#', 'a', 'a' };
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.addAll(charArray81, charArray85);
        java.lang.String str87 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray81);
        char[] charArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray81);
        boolean boolean90 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray68, (java.lang.Object) charArray88, false);
        java.lang.Character[] charArray91 = org.apache.commons.lang3.ArrayUtils.toObject(charArray68);
        char[] charArray92 = org.apache.commons.lang3.ArrayUtils.clone(charArray68);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray21, charArray92);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a, a, #]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{4,#,a,4,#}" + "'", str34, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4, a, a, #]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "4aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "4aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[4, a, a, #]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4, a, a, #]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[a, a, #]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "{4,#,a,4,#}" + "'", str74, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{4,#,a,4,#}" + "'", str87, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test09377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09377");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        int int15 = strList9.size();
        float[] floatArray21 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) 1);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, (float) 10);
        boolean boolean27 = strList9.remove((java.lang.Object) floatArray21);
        boolean boolean29 = strList9.add("");
        long[] longArray31 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray31);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(longArray31, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray31);
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.clone(longArray31);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray31);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray31);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(longArray31, (long) (short) 100);
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.clone(longArray31);
        long[] longArray43 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(longArray43, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray43);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray43, (long) 0);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.addAll(longArray31, longArray43);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray31, 0L);
        boolean boolean54 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strList9, (java.lang.Object) longArray31, true);
        boolean boolean55 = strList9.isEmpty();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[-1]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test09378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09378");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray13);
        java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray14);
        java.lang.Double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray16);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray17, (double) 10L, 6, (double) 4);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test09379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09379");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        java.util.stream.Stream<java.lang.String> strStream15 = strList9.parallelStream();
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, '4');
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray16);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19, ' ');
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray19);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray22);
        boolean boolean24 = strList9.remove((java.lang.Object) charArray22);
        long[] longArray30 = new long[] { 0L, (short) -1, ' ', (byte) 10, 100L };
        long[] longArray36 = new long[] { 0L, (short) -1, ' ', (byte) 10, 100L };
        long[] longArray42 = new long[] { 0L, (short) -1, ' ', (byte) 10, 100L };
        long[] longArray48 = new long[] { 0L, (short) -1, ' ', (byte) 10, 100L };
        long[] longArray54 = new long[] { 0L, (short) -1, ' ', (byte) 10, 100L };
        long[][] longArray55 = new long[][] { longArray30, longArray36, longArray42, longArray48, longArray54 };
        long[] longArray61 = new long[] { 100L, (-1), (short) 0, 3, (short) 1 };
        long[] longArray67 = new long[] { 100L, (-1), (short) 0, 3, (short) 1 };
        long[] longArray73 = new long[] { 100L, (-1), (short) 0, 3, (short) 1 };
        long[][] longArray74 = new long[][] { longArray61, longArray67, longArray73 };
        long[][] longArray75 = org.apache.commons.lang3.ArrayUtils.addAll(longArray55, longArray74);
        long[] longArray78 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray78);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.contains(longArray78, 0L);
        long[] longArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray78);
        long[] longArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray82);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.contains(longArray83, (long) 4);
        long[][] longArray86 = org.apache.commons.lang3.ArrayUtils.add(longArray74, (int) (byte) 1, longArray83);
        long[][] longArray89 = org.apache.commons.lang3.ArrayUtils.subarray(longArray86, (int) (short) 100, (int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            long[][] longArray90 = strList9.toArray(longArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[0, -1, 32, 10, 100]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[0, -1, 32, 10, 100]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[0, -1, 32, 10, 100]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[0, -1, 32, 10, 100]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[0, -1, 32, 10, 100]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[100, -1, 0, 3, 1]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[100, -1, 0, 3, 1]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[100, -1, 0, 3, 1]");
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(longArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray82), "[-1]");
        org.junit.Assert.assertNotNull(longArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertNotNull(longArray89);
    }

    @Test
    public void test09380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09380");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a');
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (-1));
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray21);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray21);
        java.lang.Integer[] intArray24 = org.apache.commons.lang3.ArrayUtils.toObject(intArray23);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray24, 100);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.addAll(intArray8, intArray26);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) (byte) 0);
        java.lang.Integer[] intArray30 = org.apache.commons.lang3.ArrayUtils.toObject(intArray8);
        long[] longArray37 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.subarray(longArray37, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray37);
        long[] longArray43 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(longArray43, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray43);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.clone(longArray43);
        long[] longArray53 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray55 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray53, 1L);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray48, longArray55);
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.addAll(longArray37, longArray55);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray55, (long) 1, 5);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.subarray(longArray55, (int) (short) -1, (int) (byte) 1);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.clone(longArray55);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray8, (java.lang.Object) longArray64);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray67 = org.apache.commons.lang3.ArrayUtils.remove(longArray64, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[]");
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[-1]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[32]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test09381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09381");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray20);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray21);
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray22);
        java.lang.Float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray22);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(floatArray24);
    }

    @Test
    public void test09382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09382");
        char[] charArray0 = null;
        java.lang.Character[] charArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray1);
        char[] charArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray3);
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray5);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray5);
        double[] doubleArray12 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray12, (double) (byte) 100, 1.0d);
        double[] doubleArray20 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray12, doubleArray20);
        float[] floatArray26 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray29 = new float[] { (byte) -1, 1L };
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray29, (float) 10L);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray26, floatArray29);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray20, (java.lang.Object) boolean32);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, (int) (short) 0, 1);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray36, (double) (byte) -1);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray38, (int) (byte) 100, 1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray38, 0, (int) (short) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray38);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) charArray5, (java.lang.Object) doubleArray38);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray3, charArray5);
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray3, '4');
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray49);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray50);
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray50, 'a');
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray53, 'a');
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray0, charArray53);
        java.lang.Character[] charArray57 = org.apache.commons.lang3.ArrayUtils.toObject(charArray53);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray60 = org.apache.commons.lang3.ArrayUtils.add(charArray53, (int) '4', 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[]");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charArray57);
    }

    @Test
    public void test09383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09383");
        boolean[] booleanArray1 = new boolean[] { false };
        boolean[] booleanArray3 = new boolean[] { false };
        boolean[] booleanArray5 = new boolean[] { false };
        boolean[] booleanArray7 = new boolean[] { false };
        boolean[][] booleanArray8 = new boolean[][] { booleanArray1, booleanArray3, booleanArray5, booleanArray7 };
        boolean[] booleanArray10 = new boolean[] { false };
        boolean[] booleanArray12 = new boolean[] { false };
        boolean[] booleanArray14 = new boolean[] { false };
        boolean[] booleanArray16 = new boolean[] { false };
        boolean[][] booleanArray17 = new boolean[][] { booleanArray10, booleanArray12, booleanArray14, booleanArray16 };
        boolean[] booleanArray19 = new boolean[] { false };
        boolean[] booleanArray21 = new boolean[] { false };
        boolean[] booleanArray23 = new boolean[] { false };
        boolean[] booleanArray25 = new boolean[] { false };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray19, booleanArray21, booleanArray23, booleanArray25 };
        boolean[] booleanArray28 = new boolean[] { false };
        boolean[] booleanArray30 = new boolean[] { false };
        boolean[] booleanArray32 = new boolean[] { false };
        boolean[] booleanArray34 = new boolean[] { false };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray28, booleanArray30, booleanArray32, booleanArray34 };
        boolean[] booleanArray37 = new boolean[] { false };
        boolean[] booleanArray39 = new boolean[] { false };
        boolean[] booleanArray41 = new boolean[] { false };
        boolean[] booleanArray43 = new boolean[] { false };
        boolean[][] booleanArray44 = new boolean[][] { booleanArray37, booleanArray39, booleanArray41, booleanArray43 };
        boolean[] booleanArray46 = new boolean[] { false };
        boolean[] booleanArray48 = new boolean[] { false };
        boolean[] booleanArray50 = new boolean[] { false };
        boolean[] booleanArray52 = new boolean[] { false };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray46, booleanArray48, booleanArray50, booleanArray52 };
        boolean[][][] booleanArray54 = new boolean[][][] { booleanArray8, booleanArray17, booleanArray26, booleanArray35, booleanArray44, booleanArray53 };
        boolean[] booleanArray57 = new boolean[] { true, true };
        boolean[] booleanArray60 = new boolean[] { true, true };
        boolean[][] booleanArray61 = new boolean[][] { booleanArray57, booleanArray60 };
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray62, byteArray67);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray62, (byte) -1);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray62, (byte) -1);
        byte[] byteArray73 = org.apache.commons.lang3.ArrayUtils.clone(byteArray72);
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.add(byteArray72, (byte) 10);
        byte[] byteArray76 = new byte[] {};
        byte[] byteArray81 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray76, byteArray81);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray76, (byte) -1);
        byte[] byteArray86 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray76, (byte) -1);
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray76, (byte) 1);
        byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray72, byteArray76);
        boolean[][] booleanArray90 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray61, (java.lang.Object) byteArray76);
        boolean[][][] booleanArray91 = org.apache.commons.lang3.ArrayUtils.add(booleanArray54, booleanArray90);
        boolean[][][] booleanArray92 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray1), "[false]");
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[]");
        org.junit.Assert.assertNotNull(booleanArray90);
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertNotNull(booleanArray92);
    }

    @Test
    public void test09384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09384");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray9, ' ', 2);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, 0, (int) (byte) 10);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.add(charArray16, ' ');
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.toObject(charArray16);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.add(charArray16, ' ');
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray16, ' ', (int) (short) 0);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#aa ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#aa ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, a, a,  ]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#aa ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#aa ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a, a,  ]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test09385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09385");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray17, true);
        boolean[] booleanArray26 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray26, (int) (byte) 0, 0);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray17, booleanArray29);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray29, false, (int) (byte) 1);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray29);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, false);
        java.lang.Boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray6);
        java.lang.Boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray38);
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray49 = new char[] { '#', 'a', 'a' };
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.addAll(charArray45, charArray49);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray45, ' ');
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.remove(charArray52, 0);
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.remove(charArray54, 0);
        int int57 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray39, (java.lang.Object) charArray56);
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, 4, #]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, false, false, true, false, false]");
    }

    @Test
    public void test09386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09386");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, (int) (byte) -1, (int) '4');
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, 2, (int) (byte) 10);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray20);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.add(byteArray20, (byte) 0);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray23, (byte) 10);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(byteArray23, (byte) -1);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test09387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09387");
        int[] intArray4 = new int[] { 'a', (byte) 100, (byte) 100, 100 };
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray4);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray6, 8, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray6);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 100, 100, 97]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 100, 100, 97]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test09388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09388");
        byte[] byteArray0 = null;
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.add(byteArray7, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.clone(byteArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray10, (byte) 100);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(byteArray10, (byte) 0);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray10);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray10, (byte) 1);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray10);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray10);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09389");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) (byte) 100, 1.0d);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray38);
        float[] floatArray44 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray38, (java.lang.Object) boolean50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray38);
        long[] longArray59 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.subarray(longArray59, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray59);
        java.lang.Character[] charArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray65, '4');
        java.lang.Character[] charArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray65);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray68, ' ');
        java.lang.Object[] objArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray68);
        java.lang.String[] strArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray74 = org.apache.commons.lang3.ArrayUtils.add(strArray72, "{true,true}");
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(objArray71, (java.lang.Object[]) strArray72);
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray52, (java.lang.Object) longArray59, strArray72);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.add(doubleArray52, 0.0d);
        double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.add(doubleArray52, (-1.0d));
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray52, 1);
        int int86 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray52, (double) 7, (int) (short) 10, (double) '4');
        double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.add(doubleArray52, (double) '#');
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0, 35.0]");
    }

    @Test
    public void test09390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09390");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        java.lang.String str11 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray5);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.add(charArray5, '#');
        java.lang.Character[] charArray15 = org.apache.commons.lang3.ArrayUtils.toObject(charArray14);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.add(charArray14, '4');
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray17, '#');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{4,#,a,4,#}" + "'", str11, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #, #]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4##4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4##4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #, #, 4]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test09391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09391");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.add(byteArray18, 5, (byte) -1);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray21);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.remove(byteArray22, 7);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray24);
        java.lang.Byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray24);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(byteArray24, (byte) 0);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) -1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 100, -1, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, -1, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, -1, -1, -1, 100, 0, 0, -1]");
    }

    @Test
    public void test09392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09392");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        byte[] byteArray38 = new byte[] {};
        byte[] byteArray43 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray38, byteArray43);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) -1);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray38, (byte) -1);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray38);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray58, (byte) 1);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(byteArray60, (byte) 100);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(byteArray60, (byte) 1);
        java.lang.Byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray60);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray65, (byte) 100);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.add(byteArray67, (byte) 10);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder34.append(byteArray38, byteArray67);
        byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray38, (int) (byte) -1, (int) '4');
        java.lang.Byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray38);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray38);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(byteArray38, (byte) 100);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test09393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09393");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) 100L, 2, (double) (short) -1);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) 100.0f, (int) (short) 100);
        double[] doubleArray18 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, (double) (byte) 100, 1.0d);
        double[] doubleArray26 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray18, doubleArray26);
        float[] floatArray32 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray35 = new float[] { (byte) -1, 1L };
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray35, (float) 10L);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray32, floatArray35);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray26, (java.lang.Object) boolean38);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray26, (int) (short) 0, 1);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        double[] doubleArray47 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray47, (double) (byte) 100, 1.0d);
        double[] doubleArray55 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray47, doubleArray55);
        float[] floatArray61 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray64 = new float[] { (byte) -1, 1L };
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray64, (float) 10L);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray61, floatArray64);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray55, (java.lang.Object) boolean67);
        double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray55);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray55);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray7, doubleArray43);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray43, (int) (short) 0);
        double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.add(doubleArray43, (double) 10.0f);
        int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray75, 0.0d, (int) '4', (double) 0);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 0.0, 10.0, -1.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test09394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09394");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) 10);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) -1);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) 0);
        byte[] byteArray32 = new byte[] {};
        byte[] byteArray37 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray32, byteArray37);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray32, (byte) -1);
        byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray32, (byte) -1);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.add(byteArray42, (byte) 100);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray31, byteArray42);
        byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.add(byteArray31, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray47);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray47, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, 0, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 7 + "'", int50 == 7);
    }

    @Test
    public void test09395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09395");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray8);
        java.lang.Long[] longArray15 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray15);
        float[] floatArray22 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray22, 0.0f);
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        long[] longArray28 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray28);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray26, (java.lang.Object) longArray28);
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.addAll(longArray16, longArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray8, longArray16);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.subarray(longArray8, (int) (byte) 0, 4);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray8);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray38 = org.apache.commons.lang3.ArrayUtils.remove(longArray8, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[0, 1, 100, 100, 0, -1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test09396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09396");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray41);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) '4');
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.add(intArray43, (int) (short) 100);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray43);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray43, (int) (short) 1);
        int[] intArray53 = new int[] {};
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray53, intArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.append(intArray43, intArray54);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray54);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray57);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray70 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray71 = new java.lang.Byte[][] { byteArray64, byteArray70 };
        java.lang.Byte[][] byteArray74 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray71, (int) '#', 10);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray81);
        java.lang.Byte[][] byteArray83 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray71, (java.lang.Object) intArray81);
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray81, 1);
        int[] intArray87 = org.apache.commons.lang3.ArrayUtils.remove(intArray85, (int) (byte) 1);
        int[] intArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray87);
        int[] intArray89 = org.apache.commons.lang3.ArrayUtils.clone(intArray88);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray58, intArray88);
        int[] intArray93 = org.apache.commons.lang3.ArrayUtils.subarray(intArray88, (int) (byte) 1, 5);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.contains(intArray93, (int) (short) 10);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test09397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09397");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2);
        java.lang.Character[] charArray4 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray4);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray6);
        char[] charArray13 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray17 = new char[] { '#', 'a', 'a' };
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray13, charArray17);
        java.lang.String str19 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray13);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray6, charArray13);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, 4, (int) '#');
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray3, charArray23);
        char[] charArray30 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray34 = new char[] { '#', 'a', 'a' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray30, charArray34);
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray30, ' ');
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray30);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.addAll(charArray23, charArray30);
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray23);
        java.lang.Character[] charArray41 = org.apache.commons.lang3.ArrayUtils.toObject(charArray40);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray40);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{4,#,a,4,#}" + "'", str19, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test09398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09398");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        java.lang.Short[] shortArray39 = new java.lang.Short[] {};
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39, (short) 1);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.clone(shortArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray43);
        java.lang.Short[] shortArray45 = new java.lang.Short[] {};
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 1);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 0);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray50, (short) -1);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.add(shortArray52, (short) 1);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray43, shortArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder37.append(shortArray38, shortArray55);
        java.lang.Short[] shortArray57 = new java.lang.Short[] {};
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57, (short) 1);
        java.lang.Short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(shortArray60, (short) 10);
        java.lang.Short[] shortArray64 = new java.lang.Short[] {};
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64, (short) 1);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.clone(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.add(shortArray68, (short) -1);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray68);
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray68, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder56.append(shortArray60, shortArray73);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray60);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.add(shortArray60, (short) (byte) 100);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.clone(shortArray60);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray78);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray78);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.remove(shortArray78, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[100]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[]");
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
    }

    @Test
    public void test09399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09399");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        long[] longArray29 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(longArray29, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray29);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray29);
        long[] longArray40 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray40);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, (long) (short) 100);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        long[] longArray52 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, (long) 0);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.addAll(longArray40, longArray52);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray59);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.addAll(longArray29, longArray59);
        long[] longArray63 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray63);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(longArray63, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray63);
        long[] longArray68 = org.apache.commons.lang3.ArrayUtils.clone(longArray63);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray63);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray63);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.contains(longArray63, (long) (short) 100);
        long[] longArray74 = org.apache.commons.lang3.ArrayUtils.add(longArray63, (long) '#');
        long[] longArray76 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray76);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.contains(longArray76, 0L);
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray76);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray74, longArray80);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray29, longArray80);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray29, (long) (byte) 100);
        long[] longArray86 = org.apache.commons.lang3.ArrayUtils.clone(longArray29);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[-1, -1, -1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[-1, 35]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray86), "[-1]");
    }

    @Test
    public void test09400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09400");
        float[] floatArray0 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray14 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.remove(floatArray14, (int) (short) 1);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray8, floatArray17);
        boolean boolean19 = strList6.equals((java.lang.Object) floatArray18);
        float[] floatArray25 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray25);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray25, (float) 1);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray18, floatArray25);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray25);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.add(floatArray30, (int) '#', (float) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test09401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09401");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder31.append(false, true);
        java.lang.Byte[] byteArray44 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray44, (byte) 1);
        java.lang.Byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray44);
        java.lang.Object[] objArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) byteArray47);
        java.lang.Byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray47);
        java.lang.Byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray49);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray49, (byte) 1);
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray49);
        java.lang.Byte[] byteArray60 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray60, (byte) 1);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(byteArray62, (byte) 100);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(byteArray62, (byte) 1);
        java.lang.Byte[] byteArray73 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray73, (byte) 1);
        byte[] byteArray78 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray75, (int) (byte) 0, (int) (byte) 1);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray62, byteArray78);
        byte[] byteArray81 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray62, (byte) 10);
        byte[] byteArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray62);
        byte[] byteArray83 = org.apache.commons.lang3.ArrayUtils.clone(byteArray82);
        byte[] byteArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray83);
        byte[] byteArray86 = org.apache.commons.lang3.ArrayUtils.remove(byteArray84, (int) (short) 1);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.contains(byteArray84, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder37.append(byteArray53, byteArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder37.append((long) (byte) 1, (long) 1);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(equalsBuilder89);
        org.junit.Assert.assertNotNull(equalsBuilder92);
    }

    @Test
    public void test09402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09402");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) (byte) 100, 1.0d);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray38);
        float[] floatArray44 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray38, (java.lang.Object) boolean50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray38);
        double[] doubleArray56 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray56, (double) (byte) 100, 1.0d);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray56, 2, (int) 'a');
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray56, (double) '4');
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray52, doubleArray56);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray52, (double) 100.0f, (int) (short) 0);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray52, (double) 100);
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray52, 10.0d);
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray72, 10.0d, (double) 2);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[52.0]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0, -1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 0.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 5 + "'", int75 == 5);
    }

    @Test
    public void test09403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09403");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        boolean boolean33 = equalsBuilder31.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder31.append(true, true);
        long[] longArray38 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray38);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(longArray38, 0L);
        long[] longArray43 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray43);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray43);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray45, (long) 5, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder31.append(longArray38, longArray45);
        java.lang.Byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        float[] floatArray56 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray56);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray56, 0.0f);
        java.lang.Float[] floatArray60 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray56);
        java.lang.Object[] objArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray60);
        float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder49.append((java.lang.Object[]) byteArray50, (java.lang.Object[]) floatArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder49.append((long) (short) -1, (long) 9);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder66.append((double) 6, (double) 100L);
        boolean boolean70 = equalsBuilder66.isEquals();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[-1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test09404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09404");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 10);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5);
        short[] shortArray22 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray22, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray22);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray22, (short) (byte) 0);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray22);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray22);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray22);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray31);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[100, 0, 0, 1, -1, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test09405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09405");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) (-1L), (int) (short) 100, (double) 100.0f);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray32);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) 7, 10.0d);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray32, (double) ' ');
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.add(doubleArray42, (-1.0d));
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray44, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[32.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[32.0, -1.0]");
    }

    @Test
    public void test09406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09406");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray12 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray12, (int) (byte) 0, 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, true);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray12);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray6);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, false);
        boolean[] booleanArray28 = new boolean[] { false, false, false, true, false, false };
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray28);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray28, true);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray28, true);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray28);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray28, true);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray21, booleanArray28);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray21, true);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.add(booleanArray21, (int) (byte) -1, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true, false]");
    }

    @Test
    public void test09407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09407");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        java.lang.Character[] charArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray7);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray8);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test09408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09408");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append(0L, (long) 'a');
        boolean boolean8 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray9 = new org.apache.commons.lang3.builder.EqualsBuilder[] { equalsBuilder0 };
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(equalsBuilderArray9);
        double[] doubleArray14 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray14, (double) (byte) 100, 1.0d);
        double[] doubleArray22 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray14, doubleArray22);
        float[] floatArray28 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray31 = new float[] { (byte) -1, 1L };
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray31, (float) 10L);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray28, floatArray31);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray22, (java.lang.Object) boolean34);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray22);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray36, (double) (-1.0f));
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray36);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray36, (double) (short) 100, (int) (byte) 0);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, (double) 4);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) equalsBuilderArray9, (java.lang.Object) doubleArray44);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(equalsBuilderArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3 + "'", int38 == 3);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[4.0, -1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test09409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09409");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.add(doubleArray0, (int) (byte) 10, (double) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09410");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) -1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) ' ');
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray22);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) '4');
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (byte) 1);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(intArray34, (-1));
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.subarray(intArray34, (-1), 100);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray39, (int) (short) -1, 2);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray39);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1, -1, 10, 0, 1, -1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, -1, 10, 0, 1, -1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[1, -1, 10, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
    }

    @Test
    public void test09411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09411");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray3, (long) 5, 10);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.clone(longArray3);
        java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toObject(longArray7);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray7);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray7, 1L);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[-1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[-1]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test09412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09412");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        java.lang.Character[] charArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray2);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) 0);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray0, (java.lang.Object) (short) 0);
        long[] longArray8 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(longArray8, 0L);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray8);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray12, (long) (byte) 1, (int) (short) 1);
        java.lang.Long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toObject(longArray12);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) charArray0, (java.lang.Object) longArray12, (-1));
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, 'a');
        java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, '4');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
    }

    @Test
    public void test09413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09413");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d, (-1.0d), 100.0d, 100.0d, (-1.0d) };
        java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5);
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray7);
        double[] doubleArray12 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray12, (double) (byte) 100, 1.0d);
        double[] doubleArray20 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray12, doubleArray20);
        float[] floatArray26 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray29 = new float[] { (byte) -1, 1L };
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray29, (float) 10L);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray26, floatArray29);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray20, (java.lang.Object) boolean32);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, (int) (short) 0, 1);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray36, (double) (byte) -1);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray38, (int) (byte) 100, 1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray41, (int) (byte) -1, (int) (short) 100);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray44, (double) 'a', (int) (short) 100);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray44, (double) (byte) 100, (double) (-1.0f));
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray7, doubleArray44);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray7, (double) (short) 100);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray7, (double) (byte) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 100.0, 100.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test09414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09414");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        long[] longArray29 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(longArray29, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray29);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray29);
        long[] longArray40 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray40);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, (long) (short) 100);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        long[] longArray52 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, (long) 0);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.addAll(longArray40, longArray52);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray59);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.addAll(longArray29, longArray59);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        java.lang.Long[] longArray63 = org.apache.commons.lang3.ArrayUtils.toObject(longArray59);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray63);
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.add(longArray64, (long) (-1));
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[-1, -1, -1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[-1, -1, -1]");
    }

    @Test
    public void test09415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09415");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, true);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray11);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray11, false);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, 0, false);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray17, false, (int) ' ');
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, true, true, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, true, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
    }

    @Test
    public void test09416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09416");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { (-1.0f), 0.0f, 10.0f, (-1.0f), 100.0f };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5, (float) (short) 10);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray9, 5, (float) 1L);
        java.lang.String[] strArray17 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray26 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray26);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.remove(floatArray26, (int) (short) 1);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray20, floatArray29);
        boolean boolean31 = strList18.equals((java.lang.Object) floatArray30);
        float[] floatArray37 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray37);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray37, (float) 1);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray30, floatArray37);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray9, floatArray41);
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.clone(floatArray41);
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray41, (int) (short) -1, 6);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray41);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 0.0, 10.0, -1.0, 100.0, 1.0]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 0.0, 10.0, -1.0, 100.0, -1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test09417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09417");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.appendSuper(false);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray47 = new java.lang.Byte[][] { byteArray40, byteArray46 };
        java.lang.Byte[][] byteArray50 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray47, (int) '#', 10);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray57);
        java.lang.Byte[][] byteArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray47, (java.lang.Object) intArray57);
        java.lang.Integer[] intArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray57);
        java.lang.Short[] shortArray61 = null;
        java.lang.Short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray61);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder34.append((java.lang.Object[]) intArray57, (java.lang.Object[]) shortArray63);
        java.lang.Short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray63);
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray65);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertNotNull(shortArray66);
    }

    @Test
    public void test09418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09418");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray12);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray12);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray4, true);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray16, false);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test09419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09419");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray6);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray16, (java.lang.Object) intArray23);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray16, (byte) 10);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray28, (byte) 10);
        java.lang.String[] strArray34 = new java.lang.String[] { "{}", "1", "{}" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean9, (java.lang.Object) (byte) 10, (java.util.Collection<java.lang.String>) strList35);
        strList35.clear();
        java.lang.Object[] objArray39 = strList35.toArray();
        java.util.Iterator<java.lang.String> strItor40 = strList35.iterator();
        java.lang.CharSequence[][] charSequenceArray41 = new java.lang.CharSequence[][] {};
        java.lang.CharSequence[][] charSequenceArray42 = new java.lang.CharSequence[][] {};
        java.lang.CharSequence[][][] charSequenceArray43 = new java.lang.CharSequence[][][] { charSequenceArray41, charSequenceArray42 };
        java.lang.CharSequence[][][][] charSequenceArray44 = new java.lang.CharSequence[][][][] { charSequenceArray43 };
        java.lang.CharSequence[][][][] charSequenceArray45 = strList35.toArray(charSequenceArray44);
        java.lang.CharSequence[][][] charSequenceArray46 = null;
        java.lang.CharSequence[][][][] charSequenceArray47 = org.apache.commons.lang3.ArrayUtils.add(charSequenceArray44, charSequenceArray46);
        java.lang.Object[] objArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charSequenceArray46);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(strItor40);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
    }

    @Test
    public void test09420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09420");
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) -1);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray8, (byte) 10);
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) 0);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray18 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray13, byteArray18);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray13, (byte) -1);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray13, (byte) -1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(byteArray23, (byte) 100);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray23, (byte) 0);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.add(byteArray27, 0, (byte) -1);
        byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray27, (int) (byte) 1, 2);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray12, byteArray33);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray12, (byte) 0, (int) '4');
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100, -1, 10, -1, -1, 100, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test09421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09421");
        java.lang.Character[] charArray1 = new java.lang.Character[] { '4' };
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray1);
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray1);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4]");
        org.junit.Assert.assertNotNull(charArray3);
    }

    @Test
    public void test09422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09422");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.appendSuper(false);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray47 = new java.lang.Byte[][] { byteArray40, byteArray46 };
        java.lang.Byte[][] byteArray50 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray47, (int) '#', 10);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray57);
        java.lang.Byte[][] byteArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray47, (java.lang.Object) intArray57);
        java.lang.Integer[] intArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray57);
        java.lang.Short[] shortArray61 = null;
        java.lang.Short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray61);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder34.append((java.lang.Object[]) intArray57, (java.lang.Object[]) shortArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder34.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder67.append('#', '#');
        java.lang.Boolean boolean71 = equalsBuilder70.build();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertEquals("'" + boolean71 + "' != '" + false + "'", boolean71, false);
    }

    @Test
    public void test09423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09423");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.subarray(intArray8, 0, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray15);
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray21);
        int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray22, (int) (short) 100, 0);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray15, intArray22);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.clone(intArray22);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test09424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09424");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        java.lang.Double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray27, (double) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 0.0, 10.0, -1.0]");
    }

    @Test
    public void test09425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09425");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray13);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray13);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray6, (java.lang.Object) intArray13);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray17, (byte) -1, (int) '4');
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test09426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09426");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.add(shortArray66, (short) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray66);
        short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray66);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.add(shortArray66, (int) (byte) 100, (short) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[-1]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[]");
    }

    @Test
    public void test09427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09427");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray7, (int) (byte) -1, (int) (short) 10);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray7, 11);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray7, 8);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 1, 0, 10, -1, 1]");
    }

    @Test
    public void test09428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09428");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, (float) (short) 100);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray6, (float) 'a');
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray6, (int) (byte) 10, (int) (byte) 0);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray6);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray6, (float) 1L, 3);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test09429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09429");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray66, 5, 100);
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray79, (short) -1);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.clone(shortArray79);
        short[] shortArray85 = org.apache.commons.lang3.ArrayUtils.add(shortArray82, (int) (short) 0, (short) 100);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray82);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[]");
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[]");
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[100]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test09430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09430");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 2, (int) 'a');
        double[] doubleArray13 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray13, (double) (byte) 100, 1.0d);
        double[] doubleArray21 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray13, doubleArray21);
        float[] floatArray27 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray30 = new float[] { (byte) -1, 1L };
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray30, (float) 10L);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray27, floatArray30);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray21, (java.lang.Object) boolean33);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray21);
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray35);
        double[] doubleArray40 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray40, (double) (byte) 100, 1.0d);
        double[] doubleArray48 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray40, doubleArray48);
        float[] floatArray54 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray57 = new float[] { (byte) -1, 1L };
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray57, (float) 10L);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray54, floatArray57);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray48, (java.lang.Object) boolean60);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray48);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray3, doubleArray62);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 10, (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 11, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Length: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
    }

    @Test
    public void test09431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09431");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) (short) 10);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray8, (long) (-1));
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (-1L));
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray14, (long) 7);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[0, 1, 100, 100, 0, -1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[0, 1, 100, 100, 0, -1]");
    }

    @Test
    public void test09432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09432");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        float[] floatArray12 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray12);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, 0.0f);
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray12);
        long[] longArray18 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray18);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray16, (java.lang.Object) longArray18);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray18);
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.subarray(longArray21, (int) (short) 10, (int) 'a');
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.subarray(longArray21, 5, 4);
        long[] longArray30 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray30);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(longArray30, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray30);
        boolean boolean35 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray30);
        long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray30);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray36);
        long[] longArray39 = org.apache.commons.lang3.ArrayUtils.add(longArray36, (long) (byte) -1);
        long[] longArray41 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray41);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(longArray41, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray41);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.clone(longArray41);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray41);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray41, (long) '4');
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray41, (long) (byte) -1);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray39, longArray41);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray21, longArray39);
        long[] longArray60 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.subarray(longArray60, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray60);
        long[] longArray66 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray66);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.contains(longArray66, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray66);
        long[] longArray71 = org.apache.commons.lang3.ArrayUtils.clone(longArray66);
        long[] longArray76 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray76, 1L);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray71, longArray78);
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.addAll(longArray60, longArray78);
        int int83 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray78, (long) 1, 5);
        long[] longArray86 = org.apache.commons.lang3.ArrayUtils.subarray(longArray78, (int) (short) -1, (int) (byte) 1);
        long[] longArray88 = org.apache.commons.lang3.ArrayUtils.add(longArray86, (long) 10);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray39, longArray86);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[-1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[0, 1, 100, 100, 0, -1]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[-1]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray86), "[32]");
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[32, 10]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test09433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09433");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray8);
        java.lang.Long[] longArray15 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray15);
        float[] floatArray22 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray22, 0.0f);
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        long[] longArray28 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray28);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray26, (java.lang.Object) longArray28);
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.addAll(longArray16, longArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray8, longArray16);
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) '#');
        org.apache.commons.lang3.ArrayUtils.reverse(longArray34);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[0, 1, 100, 100, 0, -1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[35, -1]");
    }

    @Test
    public void test09434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09434");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) 10);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray27);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.clone(byteArray27);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray29, (byte) 10);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray29, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test09435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09435");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((int) (short) 0, (int) (byte) 100);
        java.lang.Boolean boolean54 = equalsBuilder50.build();
        short[] shortArray61 = new short[] { (short) 10, (short) 100, (byte) -1, (byte) 0, (short) 10, (byte) 100 };
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray61, (short) (byte) 0, (int) (short) -1);
        java.lang.Short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray61);
        short[] shortArray71 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray71, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray75 = new java.lang.Short[] {};
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray75);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray75, (short) 1);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray71, shortArray78);
        java.lang.Short[] shortArray80 = new java.lang.Short[] {};
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80);
        short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80, (short) 1);
        java.lang.Short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray83);
        short[] shortArray85 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray71, shortArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder50.append(shortArray61, shortArray85);
        short[] shortArray88 = org.apache.commons.lang3.ArrayUtils.add(shortArray61, (short) 1);
        int int90 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray61, (short) 0);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray61);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray94 = org.apache.commons.lang3.ArrayUtils.add(shortArray61, 9, (short) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 3 + "'", int64 == 3);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[]");
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[10, 100, -1, 0, 10, 100, 1]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 3 + "'", int90 == 3);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test09436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09436");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (-1.0f), (-1.0d));
        double[] doubleArray36 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray36, (double) (byte) 100, 1.0d);
        double[] doubleArray44 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray36, doubleArray44);
        float[] floatArray50 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray53 = new float[] { (byte) -1, 1L };
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray53, (float) 10L);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray50, floatArray53);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray44, (java.lang.Object) boolean56);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray44);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray58, (double) (-1.0f));
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray58);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray58, (double) (short) 100, (int) (byte) 0);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.add(doubleArray58, (double) 4);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray58);
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray67, (double) 100, (int) (byte) 1, (double) 6);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray67, (double) 8, 7);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray67, (double) (short) 1, (int) (byte) 10, (double) 0.0f);
        int int80 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray67, (double) 'a');
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 3 + "'", int60 == 3);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 0.0, 10.0, -1.0, 4.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 10.0, 0.0, 1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test09437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09437");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3, ' ');
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.toObject(charArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(charArray5, '4');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.add(charArray5, '4');
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray5, (int) (short) -1, 10);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
    }

    @Test
    public void test09438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09438");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(2, 5);
        equalsBuilder31.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder31.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder31.append(100.0d, (double) (short) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder31.append((long) (byte) -1, (long) (byte) -1);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
    }

    @Test
    public void test09439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09439");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray18 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.stream.Stream<java.lang.String> strStream21 = strList19.parallelStream();
        java.util.Iterator<java.lang.String> strItor22 = strList19.iterator();
        java.lang.String[] strArray27 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray36 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray36);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.remove(floatArray36, (int) (short) 1);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray30, floatArray39);
        boolean boolean41 = strList28.equals((java.lang.Object) floatArray40);
        int int42 = strList28.size();
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray43, (int) (byte) 1);
        boolean boolean46 = strList28.contains((java.lang.Object) int45);
        java.lang.Byte[] byteArray53 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray53, (byte) 1);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(byteArray55, (byte) 100);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(byteArray55, (byte) 1);
        java.lang.Byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray55);
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray60, (byte) 100);
        byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.add(byteArray62, (byte) 10);
        boolean boolean65 = strList28.contains((java.lang.Object) byteArray62);
        boolean boolean66 = strList19.addAll((java.util.Collection<java.lang.String>) strList28);
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.stream.Stream<java.lang.String> strStream74 = strList72.parallelStream();
        boolean boolean75 = strList19.removeAll((java.util.Collection<java.lang.String>) strList72);
        boolean boolean76 = strList3.contains((java.lang.Object) strList19);
        int int77 = strList19.size();
        java.lang.Object[] objArray78 = strList19.toArray();
        java.lang.Character[] charArray79 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray79, '4');
        java.lang.Character[] charArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray79);
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray82);
        java.lang.Character[] charArray84 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray84);
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray84);
        int int87 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) charArray82, (java.lang.Object) charArray86);
        char[] charArray88 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray82);
        char[] charArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray82, ' ');
        java.lang.Character[] charArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray82);
        java.lang.Character[] charArray92 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray82);
        char[] charArray94 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray82, '#');
        char[] charArray95 = org.apache.commons.lang3.ArrayUtils.clone(charArray94);
        boolean boolean96 = strList19.equals((java.lang.Object) charArray95);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(strItor22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strStream74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[1]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[]");
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[]");
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray95), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray95), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray95), "[]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test09440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09440");
        short[] shortArray4 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray10, (short) (byte) 100);
        java.lang.Short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray10);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, (int) (byte) 100, 1);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray16);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray16, 7, (int) (short) 100);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray20);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test09441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09441");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.Object[] objArray28 = strList13.toArray();
        java.util.stream.Stream<java.lang.String> strStream29 = strList13.stream();
        double[] doubleArray33 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray33, (double) (byte) 100, 1.0d);
        double[] doubleArray41 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray33, doubleArray41);
        float[] floatArray47 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray50 = new float[] { (byte) -1, 1L };
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray50, (float) 10L);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray47, floatArray50);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray41, (java.lang.Object) boolean53);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray41);
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray55);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray56, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray56);
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray56, (double) '#');
        java.lang.Double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray56);
        java.lang.Double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray62);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) strStream29, (java.lang.Object) doubleArray62);
        java.lang.Double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray62);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[4, hi!, 4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[4, hi!, 4, hi!]");
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
    }

    @Test
    public void test09442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09442");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.remove(intArray26, (int) (byte) 1);
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.toObject(intArray28);
        java.lang.Integer[] intArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray29);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray30, 0);
        java.lang.Integer[] intArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray30);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray33);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 10, -1, 1]");
    }

    @Test
    public void test09443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09443");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(shortArray5, (short) 10);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.clone(shortArray5);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, 5, (short) (byte) -1);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray15);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray15, (short) (byte) 0);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray15);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[100, 0, 0, 1, -1, -1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[100, 0, 0, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09444");
        org.apache.commons.lang3.ArrayUtils arrayUtils0 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray1 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils0 };
        org.apache.commons.lang3.ArrayUtils arrayUtils2 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray3 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray1, arrayUtils2);
        org.apache.commons.lang3.ArrayUtils arrayUtils4 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray5 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils4 };
        org.apache.commons.lang3.ArrayUtils arrayUtils6 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray7 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray5, arrayUtils6);
        org.apache.commons.lang3.ArrayUtils arrayUtils8 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray9 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils8 };
        org.apache.commons.lang3.ArrayUtils arrayUtils10 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray11 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray9, arrayUtils10);
        org.apache.commons.lang3.ArrayUtils arrayUtils12 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray13 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils12 };
        org.apache.commons.lang3.ArrayUtils arrayUtils14 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray15 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray13, arrayUtils14);
        org.apache.commons.lang3.ArrayUtils arrayUtils16 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray17 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils16 };
        org.apache.commons.lang3.ArrayUtils arrayUtils18 = new org.apache.commons.lang3.ArrayUtils();
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray19 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray17, arrayUtils18);
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray20 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils2, arrayUtils6, arrayUtils10, arrayUtils14, arrayUtils18 };
        org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray21 = org.apache.commons.lang3.ArrayUtils.clone(arrayUtilsArray20);
        java.util.stream.Stream[] streamArray23 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray24 = (java.util.stream.Stream<java.lang.String>[]) streamArray23;
        java.util.stream.Stream<java.lang.String>[] strStreamArray25 = org.apache.commons.lang3.ArrayUtils.clone((java.util.stream.Stream<java.lang.String>[]) streamArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) arrayUtilsArray20, (java.lang.Object[]) strStreamArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[]) strStreamArray25);
        org.junit.Assert.assertNotNull(arrayUtilsArray1);
        org.junit.Assert.assertNotNull(arrayUtilsArray3);
        org.junit.Assert.assertNotNull(arrayUtilsArray5);
        org.junit.Assert.assertNotNull(arrayUtilsArray7);
        org.junit.Assert.assertNotNull(arrayUtilsArray9);
        org.junit.Assert.assertNotNull(arrayUtilsArray11);
        org.junit.Assert.assertNotNull(arrayUtilsArray13);
        org.junit.Assert.assertNotNull(arrayUtilsArray15);
        org.junit.Assert.assertNotNull(arrayUtilsArray17);
        org.junit.Assert.assertNotNull(arrayUtilsArray19);
        org.junit.Assert.assertNotNull(arrayUtilsArray20);
        org.junit.Assert.assertNotNull(arrayUtilsArray21);
        org.junit.Assert.assertNotNull(streamArray23);
        org.junit.Assert.assertNotNull(strStreamArray24);
        org.junit.Assert.assertNotNull(strStreamArray25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test09445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09445");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.add(longArray1, (long) '#');
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray1);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray1);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray1, (long) (short) 1, (-1));
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray20 = org.apache.commons.lang3.ArrayUtils.add(longArray1, (int) (short) 10, (long) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1, 35]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test09446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09446");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder28.append(true, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder28.append((float) (byte) -1, 0.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder28.append((byte) -1, (byte) 100);
        equalsBuilder28.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
    }

    @Test
    public void test09447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09447");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10, (double) (byte) 100);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        java.lang.Double[] doubleArray21 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray21);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray22, (double) 100L, 2, (double) (short) -1);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray22, (double) 100.0f, (int) (short) 100);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray22);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray30, (double) 100L);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[52.0, 10.0, -1.0, 100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[52.0, 10.0, -1.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
    }

    @Test
    public void test09448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09448");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a', (int) (short) 0);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray17, (int) (byte) 100);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.add(intArray17, 5);
        java.lang.Integer[] intArray23 = org.apache.commons.lang3.ArrayUtils.toObject(intArray22);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray22, 0);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray32);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray33, intArray34);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray34, (int) (byte) 0);
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray34);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray34);
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray34, (int) (short) 1);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray22, intArray34);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[5]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[5]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test09449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09449");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (-1), (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((byte) 1, (byte) 100);
        byte[] byteArray11 = new byte[] { (byte) 10 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray11);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray19);
        java.lang.Byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray20);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray20, (byte) 0);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray23, (byte) 1);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder3.append(byteArray11, byteArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder27.append(' ', '#');
        java.lang.Float[] floatArray36 = new java.lang.Float[] { (-1.0f), 0.0f, 10.0f, (-1.0f), 100.0f };
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray36);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray37);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray38);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.clone(floatArray39);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray47 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray47);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.remove(floatArray47, (int) (short) 1);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray41, floatArray50);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray51, (float) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder30.append(floatArray39, floatArray53);
        java.lang.Boolean boolean55 = equalsBuilder30.build();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + false + "'", boolean55, false);
    }

    @Test
    public void test09450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09450");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        short[] shortArray27 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray31 = new java.lang.Short[] {};
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31, (short) 1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray27, shortArray34);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) 0, 0);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.add(shortArray27, (int) (byte) 0, (short) 0);
        java.lang.Short[] shortArray42 = null;
        java.lang.Short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray42);
        java.lang.Short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray43);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(shortArray41, shortArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder0.append(1, 6);
        java.lang.Boolean boolean51 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder0.append((long) (byte) -1, (long) 8);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
        org.junit.Assert.assertNotNull(equalsBuilder54);
    }

    @Test
    public void test09451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09451");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        float[] floatArray8 = new float[] { (short) -1, 10, (short) 1 };
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray8, (int) '4', (int) (byte) 100);
        float[] floatArray14 = new float[] { (byte) -1, 1L };
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, (float) 10L);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray14, (float) (short) 100);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray18, (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(floatArray8, floatArray18);
        boolean[] booleanArray25 = new boolean[] { true, true, true };
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray25, true);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray25, false);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray25);
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray36, false);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder21.append(booleanArray30, booleanArray40);
        double[] doubleArray45 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray45, (double) (byte) 100, 1.0d);
        double[] doubleArray53 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray45, doubleArray53);
        float[] floatArray59 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray62 = new float[] { (byte) -1, 1L };
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray62, (float) 10L);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray59, floatArray62);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray53, (java.lang.Object) boolean65);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray53);
        java.lang.Double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray67);
        double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray68, (double) 100);
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray68);
        java.lang.Byte[] byteArray77 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray83 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray84 = new java.lang.Byte[][] { byteArray77, byteArray83 };
        java.lang.Byte[][] byteArray87 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray84, (int) '#', 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder21.append((java.lang.Object) doubleArray68, (java.lang.Object) byteArray84);
        java.lang.Double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray68);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(doubleArray89);
    }

    @Test
    public void test09452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09452");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        float[] floatArray5 = null;
        float[] floatArray6 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray20 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.remove(floatArray20, (int) (short) 1);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray14, floatArray23);
        boolean boolean25 = strList12.equals((java.lang.Object) floatArray24);
        float[] floatArray31 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray31, (float) 1);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray24, floatArray31);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder0.append(floatArray5, floatArray6);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder37.append((byte) -1, (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append((int) '4', 6);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder40.append('#', '4');
        java.lang.String str48 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) '#', "#");
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "#" + "'", str48, "#");
    }

    @Test
    public void test09453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09453");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray2);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray4);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray4);
        double[] doubleArray11 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (byte) 100, 1.0d);
        double[] doubleArray19 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray11, doubleArray19);
        float[] floatArray25 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray28 = new float[] { (byte) -1, 1L };
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray28, (float) 10L);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray25, floatArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray19, (java.lang.Object) boolean31);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray19, (int) (short) 0, 1);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray35, (double) (byte) -1);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray37, (int) (byte) 100, 1);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray37, 0, (int) (short) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray37);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) charArray4, (java.lang.Object) doubleArray37);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray2, charArray4);
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray2, '4');
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray2, ' ', (int) (short) 1);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(charArray2, '#');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test09454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09454");
        float[] floatArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray0, (float) (short) 100, (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test09455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09455");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray4);
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray4, false);
        boolean[] booleanArray11 = new boolean[] { true, true, true };
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray11, true);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray11, false);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray4);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray4, false, (int) (byte) 100);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true, true, true, true, true]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
    }

    @Test
    public void test09456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09456");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray8, (double) (-1));
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray10, 0, 9);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) 1L, 5);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) (short) 100, 9);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test09457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09457");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder34.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((byte) 10, (byte) 1);
        long[] longArray41 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray41);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(longArray41, 0L);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray41);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray45, (long) (byte) 1, (int) (short) 1);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray45, (long) 3, (int) 'a');
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(longArray45, (long) 7);
        long[] longArray55 = org.apache.commons.lang3.ArrayUtils.remove(longArray45, (int) (byte) 0);
        java.lang.Long[] longArray58 = new java.lang.Long[] { 1L, 0L };
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray58);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray58, 0L);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray58, 100L);
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray63, (-1L), (int) (byte) 100);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray63);
        int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray63, (long) (byte) 100, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder39.append(longArray55, longArray63);
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.add(longArray55, (long) 6);
        int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray73, (long) 7, (int) (byte) 0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[1, 0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[6]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test09458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09458");
        short[] shortArray0 = null;
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray0, 8, 2);
        org.junit.Assert.assertNull(shortArray3);
    }

    @Test
    public void test09459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09459");
        java.lang.Short[] shortArray0 = null;
        java.lang.Short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0);
        java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) -1);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 0);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.add(shortArray6, (short) 10);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray8);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray8);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.add(shortArray8, (short) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[10]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[10]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[10, 1]");
    }

    @Test
    public void test09460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09460");
        java.util.AbstractCollection[][][] abstractCollectionArray1 = new java.util.AbstractCollection[0][][];
        @SuppressWarnings("unchecked")
        java.util.AbstractCollection<java.lang.String>[][][] strCollectionArray2 = (java.util.AbstractCollection<java.lang.String>[][][]) abstractCollectionArray1;
        java.util.AbstractCollection<java.lang.String>[][][] strCollectionArray3 = org.apache.commons.lang3.ArrayUtils.clone(strCollectionArray2);
        java.lang.Iterable<java.lang.String>[][][] strIterableArray6 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.Iterable<java.lang.String>[][][]) strCollectionArray3, 9, (-1));
        org.junit.Assert.assertNotNull(abstractCollectionArray1);
        org.junit.Assert.assertNotNull(strCollectionArray2);
        org.junit.Assert.assertNotNull(strCollectionArray3);
        org.junit.Assert.assertNotNull(strIterableArray6);
    }

    @Test
    public void test09461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09461");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray9, '4');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, '4');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray18);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09462");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray2);
        char[] charArray9 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray13 = new char[] { '#', 'a', 'a' };
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray13);
        java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray2, charArray9);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray26 = new char[] { '#', 'a', 'a' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray26);
        java.lang.String str28 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray22);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray22);
        boolean boolean31 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray9, (java.lang.Object) charArray29, false);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray29, '4');
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray29, '4', (int) ' ');
        java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.toObject(charArray29);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.add(charArray29, 'a');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{4,#,a,4,#}" + "'", str15, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{4,#,a,4,#}" + "'", str28, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #, a]");
    }

    @Test
    public void test09463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09463");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray12 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray12, (int) (byte) 0, 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, true);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray12);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray6);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, false);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, true);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, true);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray6, (int) (byte) 0, 4);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true, true, false]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true, true]");
    }

    @Test
    public void test09464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09464");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(2, 5);
        java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray35);
        java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray39);
        char[] charArray46 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray50 = new char[] { '#', 'a', 'a' };
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray46, charArray50);
        java.lang.String str52 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray46);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray39, charArray46);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray63 = new char[] { '#', 'a', 'a' };
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.addAll(charArray59, charArray63);
        java.lang.String str65 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray59);
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray59);
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray46, (java.lang.Object) charArray66, false);
        java.lang.Character[] charArray69 = org.apache.commons.lang3.ArrayUtils.toObject(charArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append((java.lang.Object[]) doubleArray35, (java.lang.Object[]) charArray69);
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray69);
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray69, '4');
        char[] charArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray73);
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.subarray(charArray74, 100, (int) 'a');
        int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray74, 'a');
        int int82 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray74, 'a', 100);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray74, ' ');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{4,#,a,4,#}" + "'", str52, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{4,#,a,4,#}" + "'", str65, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test09465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09465");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, (int) (byte) 1);
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray0, (int) '4');
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[]");
    }

    @Test
    public void test09466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09466");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class[] classArray4 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        java.lang.Class[][] classArray13 = new java.lang.Class[4][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray14 = (java.lang.Class<?>[][]) classArray13;
        wildcardClassArray14[0] = wildcardClassArray2;
        wildcardClassArray14[1] = classArray4;
        wildcardClassArray14[2] = classArray7;
        wildcardClassArray14[3] = classArray10;
        boolean[] booleanArray29 = new boolean[] { false, false, false, true, false, false };
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray29);
        boolean[] booleanArray37 = new boolean[] { false, false, false, true, false, false };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray37);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray29, booleanArray37);
        java.lang.Class<?>[][] wildcardClassArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(wildcardClassArray14, (java.lang.Object) boolean39);
        java.lang.Class[] classArray43 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray44 = (java.lang.Class<?>[]) classArray43;
        java.lang.Class<?>[][] wildcardClassArray45 = org.apache.commons.lang3.ArrayUtils.add(wildcardClassArray40, (int) (short) 0, wildcardClassArray44);
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray52);
        java.lang.Object[] objArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) intArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray40, (java.lang.Object[]) intArray52);
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray52);
        java.lang.Integer[] intArray57 = org.apache.commons.lang3.ArrayUtils.toObject(intArray56);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(wildcardClassArray5);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClassArray40);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(wildcardClassArray44);
        org.junit.Assert.assertNotNull(wildcardClassArray45);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray57);
    }

    @Test
    public void test09467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09467");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray6, (int) (short) 1);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray11);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray11, false, (int) 'a');
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test09468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09468");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder34.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((short) (byte) 0, (short) (byte) 10);
        equalsBuilder36.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder36.append((double) (-1L), (double) 3);
        java.lang.Boolean boolean44 = equalsBuilder36.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder36.append('#', ' ');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertEquals("'" + boolean44 + "' != '" + false + "'", boolean44, false);
        org.junit.Assert.assertNotNull(equalsBuilder47);
    }

    @Test
    public void test09469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09469");
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[][] intArray18 = new java.lang.Integer[][] { intArray2, intArray5, intArray8, intArray11, intArray14, intArray17 };
        java.lang.String[] strArray21 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.stream.Stream<java.lang.String> strStream24 = strList22.parallelStream();
        java.lang.String[] strArray27 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.stream.Stream<java.lang.String> strStream30 = strList28.parallelStream();
        boolean boolean31 = strList22.addAll((java.util.Collection<java.lang.String>) strList28);
        java.lang.Object obj32 = null;
        boolean boolean33 = strList28.equals(obj32);
        int int34 = strList28.size();
        java.lang.Integer[][] intArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray18, (java.lang.Object) strList28);
        java.util.Iterator<java.lang.String> strItor36 = strList28.iterator();
        boolean boolean38 = strList28.add("100");
        java.util.Collection<java.lang.String> strCollection39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = strList28.containsAll(strCollection39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strStream24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertNotNull(strItor36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test09470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09470");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        java.lang.Short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11, (short) 1);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11, (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray15);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[-1, 1, 0, 0, 100]");
    }

    @Test
    public void test09471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09471");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) (short) 10);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9, (long) (byte) -1);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.subarray(longArray11, 100, (int) (short) 0);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray11, (long) (byte) -1);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray16, (long) 8, 9);
        long[] longArray26 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.subarray(longArray26, 3, (int) (byte) 0);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray26);
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.subarray(longArray26, 5, (int) (short) 10);
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.addAll(longArray16, longArray33);
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.add(longArray33, 0, (long) (byte) 10);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[100]");
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[0, 1, 100, 100, 0, 100]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[10, 100]");
    }

    @Test
    public void test09472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09472");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) -1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) ' ');
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray22);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) '4');
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (byte) 1);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(intArray34, (-1));
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.subarray(intArray34, (-1), 100);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray39, (int) (short) -1, 2);
        java.lang.Integer[] intArray43 = org.apache.commons.lang3.ArrayUtils.toObject(intArray39);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray39, (int) (byte) 1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1, -1, 10, 0, 1, -1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, -1, 10, 0, 1, -1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[1, -1, 10, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1, -1, 10, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test09473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09473");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.subarray(intArray5, 0, (int) (byte) 1);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.remove(intArray5, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray5);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 2, -1, -1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 2, 1]");
    }

    @Test
    public void test09474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09474");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray5, (int) (byte) 10, (int) (short) -1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray16);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray16);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray16);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09475");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { (-1.0f), 0.0f, 10.0f, (-1.0f), 100.0f };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5, (float) (short) 10);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray9, 5, (float) 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray9);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray9, (float) (byte) 10, (int) '#');
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray9);
        java.lang.Float[] floatArray23 = new java.lang.Float[] { (-1.0f), 0.0f, 10.0f, (-1.0f), 100.0f };
        java.lang.Float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray23);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray24);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray25);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.add(floatArray26, (int) (byte) 0, 0.0f);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.add(floatArray26, 0.0f);
        float[] floatArray37 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray37);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray37);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray37, (int) (byte) 1, 0);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray42, 4, (int) '4');
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray45);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray45, (float) (short) 10, (int) '#');
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray45, (float) (byte) 1);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray26, floatArray51);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray9, floatArray26);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray9, 3, 8);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray9);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 0.0, 10.0, -1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[0.0, -1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 0.0, 10.0, -1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, -1.0, 10.0, 0.0, -1.0, -1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[0.0, -1.0]");
    }

    @Test
    public void test09476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09476");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append('4', 'a');
        float[] floatArray46 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray46);
        float[] floatArray53 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray56 = new float[] { (byte) -1, 1L };
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray56, (float) 10L);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray53, floatArray56);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray56);
        float[] floatArray66 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray67 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray66);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray56, floatArray66);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray75 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray75);
        float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.remove(floatArray75, (int) (short) 1);
        float[] floatArray79 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray69, floatArray78);
        float[] floatArray81 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray79, (float) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder82 = equalsBuilder34.append(floatArray66, floatArray81);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder34.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder84.append((long) (short) -1, 0L);
        boolean boolean88 = equalsBuilder84.isEquals();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[-1.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder82);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test09477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09477");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray7);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.add(booleanArray8, true);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray10, (int) '4', (int) (byte) 100);
        boolean[] booleanArray17 = new boolean[] { true, true, true };
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray17, true);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray17);
        boolean[] booleanArray21 = null;
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray17, booleanArray21);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray13, booleanArray22);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[true]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[true, true, true]");
    }

    @Test
    public void test09478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09478");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        java.util.stream.Stream<java.lang.String> strStream7 = strList5.parallelStream();
        boolean boolean9 = strList5.add("{-1,-1}");
        java.util.Iterator<java.lang.String> strItor10 = strList5.iterator();
        boolean[] booleanArray11 = new boolean[] {};
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray11, false);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray11, false);
        java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16, '4');
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray16);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray16);
        java.lang.String[] strArray24 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.stream.Stream<java.lang.String> strStream27 = strList25.parallelStream();
        java.lang.String[] strArray30 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.parallelStream();
        boolean boolean34 = strList25.addAll((java.util.Collection<java.lang.String>) strList31);
        java.util.stream.Stream<java.lang.String> strStream35 = strList25.parallelStream();
        boolean boolean37 = strList25.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray42 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray51 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray51);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.remove(floatArray51, (int) (short) 1);
        float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray45, floatArray54);
        boolean boolean56 = strList43.equals((java.lang.Object) floatArray55);
        int int57 = strList43.size();
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray58, (int) (byte) 1);
        boolean boolean61 = strList43.contains((java.lang.Object) int60);
        boolean boolean62 = strList25.addAll((java.util.Collection<java.lang.String>) strList43);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int15, (java.lang.Object) charArray16, (java.util.Collection<java.lang.String>) strList25);
        java.lang.String[] strArray66 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.stream.Stream<java.lang.String> strStream69 = strList67.parallelStream();
        java.lang.String[] strArray72 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.stream.Stream<java.lang.String> strStream75 = strList73.parallelStream();
        boolean boolean76 = strList67.addAll((java.util.Collection<java.lang.String>) strList73);
        java.util.stream.Stream<java.lang.String> strStream77 = strList67.parallelStream();
        boolean boolean78 = strList25.retainAll((java.util.Collection<java.lang.String>) strList67);
        java.util.stream.Stream<java.lang.String> strStream79 = strList25.parallelStream();
        boolean boolean80 = strList5.containsAll((java.util.Collection<java.lang.String>) strList25);
        java.util.stream.Stream<java.lang.String> strStream81 = strList25.stream();
        strList25.clear();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strStream7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strItor10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strStream27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 4 + "'", int57 == 4);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strStream69);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strStream75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strStream77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strStream81);
    }

    @Test
    public void test09479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09479");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        java.lang.Boolean[] booleanArray38 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38);
        boolean[] booleanArray47 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray47, (int) (byte) 0, 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray47, true);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray41, booleanArray47);
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray57);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray58);
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray58, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder34.append(booleanArray47, booleanArray58);
        float[] floatArray68 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray68);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray68);
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.clone(floatArray68);
        float[] floatArray77 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray77);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray77);
        float[] floatArray82 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray77, (int) (byte) 1, 0);
        float[] floatArray85 = new float[] { (byte) -1, 1L };
        int int87 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray85, (float) 10L);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray82, floatArray85);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray85);
        float[] floatArray90 = org.apache.commons.lang3.ArrayUtils.clone(floatArray85);
        float[] floatArray92 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray90, (float) 4);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder62.append(floatArray71, floatArray90);
        boolean boolean94 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray71);
        java.lang.Float[] floatArray95 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray71);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) floatArray95);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray77), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[]");
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray90), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray92), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(floatArray95);
    }

    @Test
    public void test09480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09480");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream6 = strList3.stream();
        int int7 = strList3.size();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        java.util.Iterator<java.lang.String> strItor16 = strList13.iterator();
        short[] shortArray22 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray22, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray22);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray22, (short) (byte) 0);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray28, (short) (byte) 10);
        boolean boolean31 = strList13.contains((java.lang.Object) shortArray28);
        boolean boolean32 = strList3.equals((java.lang.Object) shortArray28);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(shortArray28, (short) 10);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strStream6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(strItor16);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test09481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09481");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.add(shortArray4, (short) -1);
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray7);
        short[] shortArray14 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray14, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray14);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray14, (short) (byte) 0);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray20, (short) (byte) 10);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray20, (short) (byte) -1);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray20);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray25, (int) (short) 1, (int) (short) 100);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray25, (int) (byte) 10, 100);
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray8, (short) (byte) 10);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray8);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[100, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[]");
    }

    @Test
    public void test09482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09482");
        java.lang.Long[][] longArray0 = new java.lang.Long[][] {};
        java.lang.Long[][] longArray1 = new java.lang.Long[][] {};
        java.lang.Long[][] longArray2 = new java.lang.Long[][] {};
        java.lang.Long[][] longArray3 = new java.lang.Long[][] {};
        java.lang.Long[][] longArray4 = new java.lang.Long[][] {};
        java.lang.Long[][][] longArray5 = new java.lang.Long[][][] { longArray0, longArray1, longArray2, longArray3, longArray4 };
        java.lang.Long[][][] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray5);
        java.lang.Long[][][] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, (-1), 10);
        short[] shortArray15 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray19 = new java.lang.Short[] {};
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray19);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray19, (short) 1);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray15, shortArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray15);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray15);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray9, (java.lang.Object) shortArray25);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test09483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09483");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.String[] strArray30 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.parallelStream();
        java.lang.String[] strArray36 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.stream.Stream<java.lang.String> strStream39 = strList37.parallelStream();
        boolean boolean40 = strList31.addAll((java.util.Collection<java.lang.String>) strList37);
        java.util.stream.Stream<java.lang.String> strStream41 = strList31.parallelStream();
        boolean boolean43 = strList31.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray48 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray57 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray57);
        float[] floatArray60 = org.apache.commons.lang3.ArrayUtils.remove(floatArray57, (int) (short) 1);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray51, floatArray60);
        boolean boolean62 = strList49.equals((java.lang.Object) floatArray61);
        int int63 = strList49.size();
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray64, (int) (byte) 1);
        boolean boolean67 = strList49.contains((java.lang.Object) int66);
        boolean boolean68 = strList31.addAll((java.util.Collection<java.lang.String>) strList49);
        java.lang.String[] strArray73 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray82 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray82);
        float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.remove(floatArray82, (int) (short) 1);
        float[] floatArray86 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray76, floatArray85);
        boolean boolean87 = strList74.equals((java.lang.Object) floatArray86);
        int int88 = strList74.size();
        boolean boolean89 = strList31.removeAll((java.util.Collection<java.lang.String>) strList74);
        java.util.Iterator<java.lang.String> strItor90 = strList74.iterator();
        boolean boolean91 = strList13.retainAll((java.util.Collection<java.lang.String>) strList74);
        java.util.Iterator<java.lang.String> strItor92 = strList74.iterator();
        boolean boolean94 = strList74.add("hi!");
        boolean boolean95 = strList74.isEmpty();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 4 + "'", int63 == 4);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray86), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 4 + "'", int88 == 4);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strItor90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(strItor92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test09484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09484");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(10.0d, (double) 0L);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray41);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) '4');
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray49 = org.apache.commons.lang3.ArrayUtils.add(intArray43, (int) 'a');
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray50, (int) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray50);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.add(intArray50, (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder31.append((java.lang.Object) 'a', (java.lang.Object) intArray55);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.add(intArray55, 0);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray58);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray58);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray63 = org.apache.commons.lang3.ArrayUtils.add(intArray58, (-1), (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test09485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09485");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3, ' ');
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3);
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray7);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray7);
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray7, '#');
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray21 = new char[] { '#', 'a', 'a' };
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.addAll(charArray17, charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray17, ' ');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray17);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray7, 'a');
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray7);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.add(charArray7, '4');
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray6, 'a');
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray6, '4');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test09486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09486");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) 100L, 2, (double) (short) -1);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) 100.0f, (int) (short) 100);
        double[] doubleArray18 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, (double) (byte) 100, 1.0d);
        double[] doubleArray26 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray18, doubleArray26);
        float[] floatArray32 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray35 = new float[] { (byte) -1, 1L };
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray35, (float) 10L);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray32, floatArray35);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray26, (java.lang.Object) boolean38);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray26, (int) (short) 0, 1);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        double[] doubleArray47 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray47, (double) (byte) 100, 1.0d);
        double[] doubleArray55 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray47, doubleArray55);
        float[] floatArray61 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray64 = new float[] { (byte) -1, 1L };
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray64, (float) 10L);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray61, floatArray64);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray55, (java.lang.Object) boolean67);
        double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray55);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray55);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray7, doubleArray43);
        java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray72);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray73);
        int int78 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray73, (double) (short) 10, (int) (byte) 10, 0.0d);
        int int82 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray73, (double) (byte) 10, (int) 'a', 10.0d);
        java.lang.Class<?> wildcardClass83 = doubleArray73.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test09487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09487");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(10.0d, (double) 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append('#', '#');
        long[] longArray40 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean45 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray40);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray40);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.add(longArray46, (long) (byte) 0);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.remove(longArray48, (int) (short) 0);
        java.lang.Long[] longArray51 = org.apache.commons.lang3.ArrayUtils.toObject(longArray50);
        long[] longArray53 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray53);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(longArray53, 0L);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray53, (long) (byte) 0);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray53, (long) (byte) 0);
        java.lang.Long[] longArray61 = org.apache.commons.lang3.ArrayUtils.toObject(longArray53);
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.clone(longArray53);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.clone(longArray53);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder37.append(longArray50, longArray53);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[-1]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[-1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder64);
    }

    @Test
    public void test09488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09488");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        boolean boolean33 = equalsBuilder31.isEquals();
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray40, (byte) 1);
        java.lang.Byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray40);
        java.lang.Object[] objArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) byteArray43);
        java.lang.Byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray43);
        java.lang.Boolean[] booleanArray49 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray49);
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray49);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray49);
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray49, true);
        boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder31.append((java.lang.Object[]) byteArray43, (java.lang.Object[]) booleanArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.append((short) 10, (short) 10);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true, true]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
    }

    @Test
    public void test09489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09489");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray24, (byte) 100);
        java.lang.Byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray27);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray28);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray28, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0]");
    }

    @Test
    public void test09490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09490");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class[] classArray4 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        java.lang.Class[][] classArray13 = new java.lang.Class[4][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray14 = (java.lang.Class<?>[][]) classArray13;
        wildcardClassArray14[0] = wildcardClassArray2;
        wildcardClassArray14[1] = classArray4;
        wildcardClassArray14[2] = classArray7;
        wildcardClassArray14[3] = classArray10;
        boolean[] booleanArray29 = new boolean[] { false, false, false, true, false, false };
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray29);
        boolean[] booleanArray37 = new boolean[] { false, false, false, true, false, false };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray37);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray29, booleanArray37);
        java.lang.Class<?>[][] wildcardClassArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(wildcardClassArray14, (java.lang.Object) boolean39);
        java.lang.Class[] classArray43 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray44 = (java.lang.Class<?>[]) classArray43;
        java.lang.Class<?>[][] wildcardClassArray45 = org.apache.commons.lang3.ArrayUtils.add(wildcardClassArray40, (int) (short) 0, wildcardClassArray44);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.reflect.GenericDeclaration[]) wildcardClassArray44);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray57 = new char[] { '#', 'a', 'a' };
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.addAll(charArray53, charArray57);
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray53, ' ');
        char[] charArray66 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray70 = new char[] { '#', 'a', 'a' };
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.addAll(charArray66, charArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray70, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder47.append((java.lang.Object) ' ', (java.lang.Object) charArray70);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder47.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder47.append((double) '4', 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder81.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append((float) 'a', (float) '#');
        int int87 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) genericDeclarationArray46, (java.lang.Object) equalsBuilder86);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray90 = org.apache.commons.lang3.ArrayUtils.subarray(genericDeclarationArray46, (int) (short) 0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.AnnotatedElement[] annotatedElementArray92 = org.apache.commons.lang3.ArrayUtils.remove((java.lang.reflect.AnnotatedElement[]) genericDeclarationArray90, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(wildcardClassArray5);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClassArray40);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(wildcardClassArray44);
        org.junit.Assert.assertNotNull(wildcardClassArray45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(genericDeclarationArray90);
    }

    @Test
    public void test09491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09491");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray6);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(longArray6, 100L);
        java.lang.Long[] longArray14 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(longArray14);
    }

    @Test
    public void test09492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09492");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = new byte[] {};
        byte[] byteArray23 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray18, byteArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray18, (byte) -1);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray18, (byte) -1);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.add(byteArray28, (byte) 100);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray15, byteArray30);
        java.lang.Byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray30);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray30);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray30, (-1), 6);
        byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray30, (int) (short) 0, (int) 'a');
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100]");
    }

    @Test
    public void test09493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09493");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) 'a');
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.subarray(intArray8, (int) (short) 1, (int) (byte) -1);
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
    }

    @Test
    public void test09494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09494");
        float[] floatArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray0, 100.0f, (int) (short) 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test09495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09495");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray10, (float) (byte) 100, (int) '4');
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.clone(floatArray10);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(floatArray10, (float) 0);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09496");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, true);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, true);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray8, 3);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray26 = new char[] { '#', 'a', 'a' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray26);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray22, ' ');
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray39 = new char[] { '#', 'a', 'a' };
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.addAll(charArray35, charArray39);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray39, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder16.append((java.lang.Object) ' ', (java.lang.Object) charArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder16.append((int) (short) 1, 10);
        boolean boolean48 = equalsBuilder16.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder16.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((long) '4', (long) ' ');
        long[] longArray60 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.subarray(longArray60, 3, (int) (byte) 0);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray60);
        boolean[] booleanArray71 = new boolean[] { false, false, false, true, false, false };
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray71);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray71, true);
        java.lang.String[] strArray77 = new java.lang.String[] { "4", "1" };
        boolean boolean78 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean64, (java.lang.Object) true, strArray77);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) strArray77);
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 3, (java.lang.Object) equalsBuilder53, strArray77);
        java.lang.Boolean boolean81 = equalsBuilder53.build();
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, true, false]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + false + "'", boolean81, false);
    }

    @Test
    public void test09497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09497");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray12);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, 0.0d, (int) (byte) 100, (-1.0d));
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 100L);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray12);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
    }

    @Test
    public void test09498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09498");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, true);
        double[] doubleArray14 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray14, (double) (byte) 100, 1.0d);
        int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, 100.0d, (int) (short) 1, (double) 1L);
        boolean boolean22 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean10, (java.lang.Object) doubleArray14);
        java.lang.Double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray14);
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray14, (int) (short) 0);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray26, (double) '#', (double) (short) -1);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray26);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test09499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09499");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray13, (int) (short) -1);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, (int) ' ', 3);
        int[] intArray32 = new int[] { 100, 1, (byte) 0, 2, (short) -1 };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray13, intArray32);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray32);
        java.lang.Integer[] intArray35 = org.apache.commons.lang3.ArrayUtils.toObject(intArray34);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 0, 2, -1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 0, 2, -1]");
        org.junit.Assert.assertNotNull(intArray35);
    }

    @Test
    public void test09500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09500");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray12);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) floatArray6, (java.lang.Object) longArray13);
        java.lang.Character[] charArray15 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, '4');
        java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23);
        java.lang.Byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray24);
        boolean boolean27 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray17, (java.lang.Object) byteArray24, true);
        java.lang.Character[] charArray33 = new java.lang.Character[] { '#', '#', '#', ' ', '#' };
        java.lang.Character[][] charArray34 = new java.lang.Character[][] { charArray33 };
        java.lang.Character[][] charArray35 = org.apache.commons.lang3.ArrayUtils.toArray(charArray34);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray24, (java.lang.Object[]) charArray35);
        java.lang.Short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray24, (java.lang.Object[]) shortArray37);
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray24, (byte) 0);
        java.lang.Byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray40);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray6, (java.lang.Object) byteArray40);
        java.lang.Byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray40);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray40);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }
}

