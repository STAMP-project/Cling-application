import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest12 {

    public static boolean debug = false;

    @Test
    public void test06001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06001");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (byte) 0, (-1), (double) '4');
        boolean[] booleanArray42 = new boolean[] { false, false, false, true, false, false };
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray42);
        boolean[] booleanArray50 = new boolean[] { false, false, false, true, false, false };
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray50);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray42, booleanArray50);
        short[] shortArray57 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray57, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray57);
        boolean boolean62 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean52, (java.lang.Object) shortArray57);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray57, (int) (short) 10, (int) 'a');
        java.lang.String[] strArray68 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.stream.Stream<java.lang.String> strStream71 = strList69.parallelStream();
        java.lang.String[] strArray74 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.stream.Stream<java.lang.String> strStream77 = strList75.parallelStream();
        boolean boolean78 = strList69.addAll((java.util.Collection<java.lang.String>) strList75);
        java.util.stream.Stream<java.lang.String> strStream79 = strList69.parallelStream();
        boolean boolean80 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray27, (java.lang.Object) shortArray57, (java.util.Collection<java.lang.String>) strList69);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.add(shortArray57, (short) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strStream71);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strStream77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[-1, 0, 0, 1, 1]");
    }

    @Test
    public void test06002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06002");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.add(byteArray18, 5, (byte) -1);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray21, (byte) 0);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.clone(byteArray21);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray21);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.remove(byteArray26, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 6 + "'", int24 == 6);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, 100, -1, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, 100, -1, -1, -1, 0, 10]");
    }

    @Test
    public void test06003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06003");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        java.lang.Short[] shortArray39 = new java.lang.Short[] {};
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39, (short) 1);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.clone(shortArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray43);
        java.lang.Short[] shortArray45 = new java.lang.Short[] {};
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 1);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 0);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray50, (short) -1);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.add(shortArray52, (short) 1);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray43, shortArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder37.append(shortArray38, shortArray55);
        java.lang.Short[] shortArray57 = new java.lang.Short[] {};
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57, (short) 1);
        java.lang.Short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(shortArray60, (short) 10);
        java.lang.Short[] shortArray64 = new java.lang.Short[] {};
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64, (short) 1);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.clone(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.add(shortArray68, (short) -1);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray68);
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray68, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder56.append(shortArray60, shortArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder74.append((long) 4, (-1L));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder74.append((long) 5, (long) 6);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
    }

    @Test
    public void test06004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06004");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) 10);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) -1);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) 0);
        byte[] byteArray32 = new byte[] {};
        byte[] byteArray37 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray32, byteArray37);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray32, (byte) -1);
        byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray32, (byte) -1);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.add(byteArray42, (byte) 100);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray31, byteArray42);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.remove(byteArray31, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test06005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06005");
        java.lang.Short[] shortArray0 = null;
        java.lang.Short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0);
        java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) -1);
        java.lang.String str6 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray1, "hi!");
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{}" + "'", str6, "{}");
        org.junit.Assert.assertNotNull(shortArray7);
    }

    @Test
    public void test06006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06006");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, false);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray12, true);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray14, (int) ' ', (int) (byte) 0);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, 4, false);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray14, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, true, true, false, false, true]");
    }

    @Test
    public void test06007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06007");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        float[] floatArray5 = null;
        float[] floatArray6 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray20 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.remove(floatArray20, (int) (short) 1);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray14, floatArray23);
        boolean boolean25 = strList12.equals((java.lang.Object) floatArray24);
        float[] floatArray31 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray31, (float) 1);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray24, floatArray31);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder0.append(floatArray5, floatArray6);
        byte[] byteArray38 = new byte[] {};
        byte[] byteArray43 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray38, byteArray43);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) -1);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray38, (byte) -1);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray38);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray38, (int) (byte) -1, (int) '4');
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray54);
        java.lang.Boolean[] booleanArray62 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray62, true);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray62, false);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray62, true);
        boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray68, (int) (short) 100, 7);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder0.append((java.lang.Object) byteArray54, (java.lang.Object) 7);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.contains(byteArray54, (byte) 10);
        int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray54, (byte) 0);
        int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray54, (byte) 1, (int) (byte) 100);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray54);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test06008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06008");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) (short) 100);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray20);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray21, intArray22);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(intArray22, (int) '4');
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) 'a', (int) (short) 0);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray22, (int) '#', (int) (short) 0);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.subarray(intArray22, (int) (short) 0, (int) (short) 1);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray22);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        int[] intArray37 = org.apache.commons.lang3.ArrayUtils.clone(intArray8);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.add(intArray37, (int) (byte) -1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1]");
    }

    @Test
    public void test06009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06009");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray13);
        java.lang.Float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray18, (float) 10L);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray18);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) 10);
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray29);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray29, (int) (byte) 1, 0);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.add(floatArray34, (float) (short) 0);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray36, (float) (short) 100);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.clone(floatArray36);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray21, floatArray39);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.clone(floatArray39);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[0.0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[0.0]");
    }

    @Test
    public void test06010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06010");
        java.util.AbstractList<java.lang.String>[] strListArray0 = null;
        short[] shortArray6 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray6, (short) (byte) 0);
        java.lang.Short[] shortArray13 = new java.lang.Short[] {};
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray13);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray13, (short) 1);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray16, (short) 0);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray16);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray16);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray12, shortArray20);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.clone(shortArray12);
        java.util.AbstractList<java.lang.String>[] strListArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(strListArray0, (java.lang.Object) shortArray12);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray12);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[100, 0, 1, -1]");
        org.junit.Assert.assertNull(strListArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test06011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06011");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray41);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) '4');
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.add(intArray43, (int) (short) 100);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray43);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray43, (int) (short) 1);
        int[] intArray53 = new int[] {};
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray53, intArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.append(intArray43, intArray54);
        int[] intArray57 = null;
        int[] intArray59 = org.apache.commons.lang3.ArrayUtils.add(intArray57, (int) ' ');
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.add(intArray57, (-1));
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray43, intArray57);
        int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray43, 100, (int) (short) -1);
        int[] intArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray43);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray68 = org.apache.commons.lang3.ArrayUtils.remove(intArray66, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[32]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]");
    }

    @Test
    public void test06012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06012");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray10 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray14 = new char[] { '#', 'a', 'a' };
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray14);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray10, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray10);
        java.lang.Character[] charArray24 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray24);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray25, '4');
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray18, charArray27);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.add(charArray18, 0, '#');
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.add(charArray18, (int) (short) 0, '4');
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray18, 'a', 4);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ , #, 4, a, a]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "44#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "44#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, 4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test06013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06013");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray14, true);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray18, false);
        boolean[] booleanArray27 = new boolean[] { false, false, false, true, false, false };
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray27);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray18, booleanArray27);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray30);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray30, 5, 11);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, true, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false]");
    }

    @Test
    public void test06014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06014");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.add(charArray0, '4');
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.add(charArray0, '#');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray6);
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray10);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray12);
        double[] doubleArray19 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray19, (double) (byte) 100, 1.0d);
        double[] doubleArray27 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray19, doubleArray27);
        float[] floatArray33 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray36 = new float[] { (byte) -1, 1L };
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray36, (float) 10L);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray33, floatArray36);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray27, (java.lang.Object) boolean39);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray27, (int) (short) 0, 1);
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray43, (double) (byte) -1);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray45, (int) (byte) 100, 1);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray45, 0, (int) (short) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray45);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) charArray12, (java.lang.Object) doubleArray45);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray10, charArray12);
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray10, '4');
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray57);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray57);
        char[] charArray61 = org.apache.commons.lang3.ArrayUtils.add(charArray57, '4');
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.add(charArray57, '#');
        char[] charArray65 = org.apache.commons.lang3.ArrayUtils.add(charArray63, '#');
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.add(charArray65, ' ');
        char[] charArray69 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray65, '4');
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.addAll(charArray56, charArray69);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray6, charArray70);
        java.lang.Character[] charArray72 = org.apache.commons.lang3.ArrayUtils.toObject(charArray70);
        java.lang.Character[] charArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray72);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, #,  ]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, #]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertNotNull(charArray73);
    }

    @Test
    public void test06015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06015");
        short[] shortArray0 = null;
        java.lang.Short[] shortArray1 = new java.lang.Short[] {};
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray5, (short) (byte) -1, (int) (short) 100);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5);
        short[] shortArray10 = null;
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray10);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray5, (short) 0, 3);
        java.lang.Short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray15);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray15, (short) 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray5, shortArray18);
        java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        java.lang.Short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray21);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray0, shortArray22);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test06016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06016");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, true);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) booleanArray11);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11, true);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11, false);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true, false, true, true, true]");
    }

    @Test
    public void test06017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06017");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray10, (float) (byte) 100, (int) '4');
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.clone(floatArray10);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray14, (float) 11);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test06018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06018");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, 100.0d, (int) (short) 1, (double) 1L);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) 10, (int) (short) 10);
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray20);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray20);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) doubleArray3, (java.lang.Object) intArray20);
        java.lang.Long[] longArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray24, (long) '4');
        java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray24);
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray24, 10L);
        java.lang.Long[] longArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray24);
        java.lang.Short[] shortArray31 = new java.lang.Short[] {};
        short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31, (short) 1);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.clone(shortArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(shortArray34, (short) (byte) 10);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray24, (java.lang.Object) shortArray34, (-1));
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray20, (java.lang.Object) shortArray34);
        java.lang.Object[] objArray41 = null;
        java.lang.Float[][][] floatArray42 = new java.lang.Float[][][] {};
        java.lang.Float[][][] floatArray45 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray42, 100, 100);
        java.lang.Cloneable[] cloneableArray46 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Cloneable[]) floatArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(objArray41, (java.lang.Object[]) floatArray45);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray20, (java.lang.Object) boolean47);
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray20, (-1));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertNotNull(cloneableArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[1, -1, 10, 0, 1, -1]");
    }

    @Test
    public void test06019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06019");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray8, (double) (-1));
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[52.0, 10.0, -1.0]");
    }

    @Test
    public void test06020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06020");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) -1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) ' ');
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        java.lang.Object obj30 = new java.lang.Object();
        long[] longArray37 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.subarray(longArray37, 3, (int) (byte) 0);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray37);
        boolean[] booleanArray48 = new boolean[] { false, false, false, true, false, false };
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray48);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray48, true);
        java.lang.String[] strArray54 = new java.lang.String[] { "4", "1" };
        boolean boolean55 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean41, (java.lang.Object) true, strArray54);
        java.lang.String[] strArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray54);
        java.lang.String[] strArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray56);
        boolean boolean58 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray22, obj30, strArray56);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 4);
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 5);
        int[] intArray63 = org.apache.commons.lang3.ArrayUtils.clone(intArray62);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray62);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1, -1, 10, 0, 1, -1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 1, 0, 10, -1, 1]");
    }

    @Test
    public void test06021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06021");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray7);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.add(booleanArray8, true);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray10, (int) '4', (int) (byte) 100);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.add(booleanArray13, false);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray13);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray13, false, (int) (byte) 1);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[true]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test06022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06022");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray5);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray5, true);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test06023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06023");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray11);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray11, 1L);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray11, (long) (byte) 100);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[-1]");
    }

    @Test
    public void test06024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06024");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder0.append('a', '#');
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray36, byteArray41);
        byte[] byteArray49 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.add(byteArray49, (byte) -1);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.clone(byteArray51);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray52, (byte) 100);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(byteArray52, (byte) 0);
        byte[] byteArray57 = org.apache.commons.lang3.ArrayUtils.clone(byteArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder35.append(byteArray41, byteArray52);
        java.lang.Short[] shortArray59 = new java.lang.Short[] {};
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray59);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray59, (short) 1);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.clone(shortArray62);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray62, (short) 1);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.clone(shortArray65);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray65, (short) (byte) 1, 5);
        short[] shortArray74 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray74, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray74);
        short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray78, (short) (byte) 0);
        int int82 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray80, (short) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder35.append(shortArray65, shortArray80);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder83.append((byte) 0, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder89 = equalsBuilder86.append((int) (short) -1, 8);
        equalsBuilder89.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[]");
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(equalsBuilder89);
    }

    @Test
    public void test06025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06025");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray7);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray11 = org.apache.commons.lang3.ArrayUtils.add(longArray8, 9, (long) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[0, 1, 100, 100, 0]");
    }

    @Test
    public void test06026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06026");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray2);
        char[] charArray9 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray13 = new char[] { '#', 'a', 'a' };
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray13);
        java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray2, charArray9);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray26 = new char[] { '#', 'a', 'a' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray26);
        java.lang.String str28 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray22);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray22);
        boolean boolean31 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray9, (java.lang.Object) charArray29, false);
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.remove(charArray9, 0);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray33, '4', (int) (byte) 1);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{4,#,a,4,#}" + "'", str15, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{4,#,a,4,#}" + "'", str28, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
    }

    @Test
    public void test06027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06027");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, true, (int) (byte) -1);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.add(booleanArray5, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray5);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.add(booleanArray5, false);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true, true, false]");
    }

    @Test
    public void test06028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06028");
        byte[][][] byteArray0 = new byte[][][] {};
        byte[][][] byteArray1 = new byte[][][] {};
        byte[][][] byteArray2 = new byte[][][] {};
        byte[][][] byteArray3 = new byte[][][] {};
        byte[][][][] byteArray4 = new byte[][][][] { byteArray0, byteArray1, byteArray2, byteArray3 };
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray4);
        java.lang.Object[][] objArray6 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Object[][]) byteArray4);
        byte[][][] byteArray7 = null;
        byte[][][][] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray4, byteArray7);
        float[] floatArray14 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray14);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray14, (int) (byte) 1, 0);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.add(floatArray19, (float) (short) 0);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) (short) 100);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.clone(floatArray21);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray8, (java.lang.Object) floatArray24);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) byteArray8);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[0.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test06029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06029");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray1);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.add(longArray10, (int) (short) 1, (long) '#');
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray13, (long) 2, 10);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray13, (long) (byte) -1);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test06030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06030");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray29);
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray29);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray31, (double) 0L);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray40 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray40);
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.remove(floatArray40, (int) (short) 1);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray34, floatArray43);
        boolean boolean46 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 0L, (java.lang.Object) floatArray44, true);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test06031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06031");
        float[] floatArray0 = null;
        float[] floatArray6 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray6);
        float[] floatArray13 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray16 = new float[] { (byte) -1, 1L };
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray16, (float) 10L);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray13, floatArray16);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray6, floatArray16);
        float[] floatArray26 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray26);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray16, floatArray26);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray16);
        float[] floatArray35 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray35, 0.0f);
        java.lang.Float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        float[] floatArray45 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray45);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray45, (int) (byte) 1, 0);
        float[] floatArray53 = new float[] { (byte) -1, 1L };
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray53, (float) 10L);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray50, floatArray53);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray53);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray35, floatArray53);
        float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray16, floatArray58);
        float[] floatArray65 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray65);
        float[] floatArray71 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray74 = new float[] { (byte) -1, 1L };
        int int76 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray74, (float) 10L);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray71, floatArray74);
        java.lang.Float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray71);
        int int79 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray66, (java.lang.Object) floatArray78);
        float[] floatArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray66, (float) (short) 10);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray59, floatArray81);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray0, floatArray81);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 1.0, -1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray65), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray74), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test06032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06032");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray14);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray14);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray14);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray6, (java.lang.Object) booleanArray17);
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, (int) '#', (int) (short) -1);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray22, (long) (short) 10, (int) (short) 10);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray22, (long) 6);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test06033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06033");
        short[] shortArray4 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray10, (short) (byte) 100);
        java.lang.Short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray10);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, (int) (byte) 100, 1);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray10, (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Argument is not an array");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test06034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06034");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray13);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.clone(floatArray13);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.clone(floatArray13);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.clone(floatArray19);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray19, (float) (-1L), (int) (short) 10);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test06035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06035");
        boolean[] booleanArray5 = new boolean[] { false, true, false, false, false };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, false);
        java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray8, true);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray8);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray8, true);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, true, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, true, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06036");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { 100.0f, 1.0f, 1.0f };
        java.lang.Float[] floatArray7 = new java.lang.Float[] { 100.0f, 1.0f, 1.0f };
        java.lang.Float[] floatArray11 = new java.lang.Float[] { 100.0f, 1.0f, 1.0f };
        java.lang.Float[] floatArray15 = new java.lang.Float[] { 100.0f, 1.0f, 1.0f };
        java.lang.Float[] floatArray19 = new java.lang.Float[] { 100.0f, 1.0f, 1.0f };
        java.lang.Float[][] floatArray20 = new java.lang.Float[][] { floatArray3, floatArray7, floatArray11, floatArray15, floatArray19 };
        java.lang.Float[] floatArray21 = new java.lang.Float[] {};
        java.lang.Float[] floatArray22 = new java.lang.Float[] {};
        java.lang.Float[] floatArray23 = new java.lang.Float[] {};
        java.lang.Float[] floatArray24 = new java.lang.Float[] {};
        java.lang.Float[] floatArray25 = new java.lang.Float[] {};
        java.lang.Float[] floatArray26 = new java.lang.Float[] {};
        java.lang.Float[][] floatArray27 = new java.lang.Float[][] { floatArray21, floatArray22, floatArray23, floatArray24, floatArray25, floatArray26 };
        java.lang.Float[][] floatArray28 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray20, floatArray27);
        java.lang.String[] strArray31 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.stream.Stream<java.lang.String> strStream34 = strList32.parallelStream();
        java.lang.String[] strArray37 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.stream.Stream<java.lang.String> strStream40 = strList38.parallelStream();
        boolean boolean41 = strList32.addAll((java.util.Collection<java.lang.String>) strList38);
        java.lang.Object obj42 = null;
        boolean boolean43 = strList38.equals(obj42);
        java.util.Iterator<java.lang.String> strItor44 = strList38.iterator();
        boolean boolean46 = strList38.add("{-1,1,0,0,100}");
        java.lang.Object[] objArray47 = strList38.toArray();
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray28, (java.lang.Object) strList38, 6);
        java.util.Iterator<java.lang.String> strItor50 = strList38.iterator();
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strStream34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[4, hi!, {-1,1,0,0,100}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[4, hi!, {-1,1,0,0,100}]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strItor50);
    }

    @Test
    public void test06037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06037");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.clone(shortArray5);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 100, 1);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray5, 0, 5);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.remove(shortArray5, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
    }

    @Test
    public void test06038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06038");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, 100.0d, (int) (short) 1, (double) 1L);
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 7);
        java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 7.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 10.0, 52.0, 7.0]");
    }

    @Test
    public void test06039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06039");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.clone(charArray0);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.add(charArray0, (int) (byte) 0, '4');
        char[] charArray14 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray18 = new char[] { '#', 'a', 'a' };
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.addAll(charArray14, charArray18);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray14, ' ');
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray8, charArray22);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.remove(charArray22, (int) (byte) 1);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray25);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray25);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "44#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "44#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#4a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#4a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, 4, a, 4]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test06040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06040");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) (short) 10);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray11);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray11, (double) (short) 100);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray33);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray33, (int) (short) -1, (-1));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
    }

    @Test
    public void test06041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06041");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray20 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.remove(floatArray29, (int) (short) 1);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray23, floatArray32);
        boolean boolean34 = strList21.equals((java.lang.Object) floatArray33);
        int int35 = strList21.size();
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray36, (int) (byte) 1);
        boolean boolean39 = strList21.contains((java.lang.Object) int38);
        boolean boolean40 = strList3.addAll((java.util.Collection<java.lang.String>) strList21);
        java.lang.String[] strArray45 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray54 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray54);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.remove(floatArray54, (int) (short) 1);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray48, floatArray57);
        boolean boolean59 = strList46.equals((java.lang.Object) floatArray58);
        int int60 = strList46.size();
        boolean boolean61 = strList3.removeAll((java.util.Collection<java.lang.String>) strList46);
        java.lang.String[] strArray64 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.stream.Stream<java.lang.String> strStream67 = strList65.parallelStream();
        java.lang.String[] strArray70 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.stream.Stream<java.lang.String> strStream73 = strList71.parallelStream();
        boolean boolean74 = strList65.addAll((java.util.Collection<java.lang.String>) strList71);
        java.util.stream.Stream<java.lang.String> strStream75 = strList65.parallelStream();
        boolean boolean77 = strList65.add("{{#,#,#, ,#}}");
        strList65.clear();
        boolean boolean79 = strList3.retainAll((java.util.Collection<java.lang.String>) strList65);
        java.util.Iterator<java.lang.String> strItor80 = strList65.iterator();
        java.lang.Character[] charArray81 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray81, '4');
        java.lang.Character[] charArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray81);
        char[] charArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray84);
        char[] charArray87 = org.apache.commons.lang3.ArrayUtils.add(charArray85, ' ');
        char[] charArray88 = org.apache.commons.lang3.ArrayUtils.clone(charArray85);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) strItor80, (java.lang.Object) charArray85);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strStream67);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strStream73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strStream75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strItor80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[ ]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test06042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06042");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray24, (byte) 100);
        java.lang.Byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray27);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) byteArray28);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0]");
        org.junit.Assert.assertNotNull(byteArray28);
    }

    @Test
    public void test06043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06043");
        char[] charArray0 = null;
        char[] charArray3 = org.apache.commons.lang3.ArrayUtils.subarray(charArray0, (int) 'a', 0);
        org.junit.Assert.assertNull(charArray3);
    }

    @Test
    public void test06044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06044");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        float[] floatArray5 = null;
        float[] floatArray6 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray20 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.remove(floatArray20, (int) (short) 1);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray14, floatArray23);
        boolean boolean25 = strList12.equals((java.lang.Object) floatArray24);
        float[] floatArray31 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray31, (float) 1);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray24, floatArray31);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder0.append(floatArray5, floatArray6);
        long[] longArray44 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.subarray(longArray44, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray44);
        java.lang.Long[] longArray49 = org.apache.commons.lang3.ArrayUtils.toObject(longArray44);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray44);
        java.lang.Long[] longArray51 = org.apache.commons.lang3.ArrayUtils.toObject(longArray44);
        long[] longArray58 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.subarray(longArray58, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray58);
        long[] longArray64 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray64);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(longArray64, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray64);
        long[] longArray69 = org.apache.commons.lang3.ArrayUtils.clone(longArray64);
        long[] longArray74 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray74, 1L);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray69, longArray76);
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.addAll(longArray58, longArray76);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray76, (long) 1, 5);
        long[] longArray84 = org.apache.commons.lang3.ArrayUtils.subarray(longArray76, (int) (short) -1, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder0.append(longArray44, longArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder85.append((short) 0, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder88.append((float) 7, (float) 10L);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[-1]");
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[32]");
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test06045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06045");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '4');
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray25 = new char[] { '#', 'a', 'a' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray25);
        java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray21);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray28);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.clone(charArray9);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray9);
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.remove(charArray9, 1);
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray33);
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.add(charArray33, 1, '#');
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.add(charArray33, '#');
        java.lang.Character[] charArray40 = org.apache.commons.lang3.ArrayUtils.toObject(charArray33);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{4,#,a,4,#}" + "'", str27, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, #, a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, a, #]");
        org.junit.Assert.assertNotNull(charArray40);
    }

    @Test
    public void test06046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06046");
        java.lang.Object[] objArray0 = null;
        double[] doubleArray4 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, (double) (byte) 100, 1.0d);
        double[] doubleArray12 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray4, doubleArray12);
        float[] floatArray18 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray21 = new float[] { (byte) -1, 1L };
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) 10L);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray18, floatArray21);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray12, (java.lang.Object) boolean24);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray12, (int) (short) 0, 1);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) (short) 100, 0, 10.0d);
        double[] doubleArray36 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray36, (double) (byte) 100, 1.0d);
        double[] doubleArray44 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray36, doubleArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray44);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        java.lang.Double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray51);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray52);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(objArray0, (java.lang.Object[]) doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test06047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06047");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.add(floatArray8, (float) 0L);
        float[] floatArray16 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray16);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray16, (int) (byte) 1, 0);
        float[] floatArray24 = new float[] { (byte) -1, 1L };
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray24, (float) 10L);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray21, floatArray24);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray24);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.clone(floatArray24);
        float[] floatArray35 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray35, 0.0f);
        java.lang.Float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray35);
        long[] longArray41 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray41);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray39, (java.lang.Object) longArray41);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray39, (float) (-1L));
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray24, floatArray45);
        java.lang.Float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray45);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.remove(floatArray45, (int) (byte) 0);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray10, floatArray45);
        java.lang.Float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray45);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray51, (float) 10L);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0, 100.0, 100.0, 10.0, 35.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[-1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[-1.0, 100.0, 100.0, 10.0, 35.0, 0.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test06048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06048");
        java.lang.Object[] objArray0 = null;
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        java.lang.Byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7);
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(objArray0, (java.lang.Object) byteArray10);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10, (byte) 10);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) byteArray10);
        int int16 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray10);
        java.lang.Boolean[] booleanArray20 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20, true);
        java.lang.Boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray20);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray24);
        java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray24);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray10, (java.lang.Object) booleanArray24);
        java.lang.Boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray24);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(booleanArray28);
    }

    @Test
    public void test06049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06049");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray6);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray16, (java.lang.Object) intArray23);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray16, (byte) 10);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray28, (byte) 10);
        java.lang.String[] strArray34 = new java.lang.String[] { "{}", "1", "{}" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean9, (java.lang.Object) (byte) 10, (java.util.Collection<java.lang.String>) strList35);
        boolean boolean39 = strList35.add("{4,#,a,4,#}");
        java.lang.Float[] floatArray45 = new java.lang.Float[] { (-1.0f), 0.0f, 10.0f, (-1.0f), 100.0f };
        java.lang.Float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray45);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray45);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray45, (float) (short) 10);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.add(floatArray49, 5, (float) 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray49);
        boolean boolean54 = strList35.equals((java.lang.Object) floatArray49);
        java.lang.Short[] shortArray55 = new java.lang.Short[] {};
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray55);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray55, (short) 1);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray58, (short) 0);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray58);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray58);
        short[] shortArray63 = null;
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray62, shortArray63);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(shortArray62, (short) 10);
        java.lang.Short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray62);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        boolean boolean69 = strList35.equals((java.lang.Object) shortArray68);
        int int70 = strList35.size();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[100.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 0.0, 10.0, -1.0, 100.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 4 + "'", int70 == 4);
    }

    @Test
    public void test06050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06050");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.add(charArray0, '4');
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.add(charArray0, '#');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.add(charArray6, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.add(charArray6, '4');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray13 = org.apache.commons.lang3.ArrayUtils.add(charArray6, 2, '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4]");
    }

    @Test
    public void test06051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06051");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.String[] strArray30 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.parallelStream();
        java.lang.String[] strArray36 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.stream.Stream<java.lang.String> strStream39 = strList37.parallelStream();
        boolean boolean40 = strList31.addAll((java.util.Collection<java.lang.String>) strList37);
        java.util.stream.Stream<java.lang.String> strStream41 = strList31.parallelStream();
        boolean boolean43 = strList31.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray48 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray57 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray57);
        float[] floatArray60 = org.apache.commons.lang3.ArrayUtils.remove(floatArray57, (int) (short) 1);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray51, floatArray60);
        boolean boolean62 = strList49.equals((java.lang.Object) floatArray61);
        int int63 = strList49.size();
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray64, (int) (byte) 1);
        boolean boolean67 = strList49.contains((java.lang.Object) int66);
        boolean boolean68 = strList31.addAll((java.util.Collection<java.lang.String>) strList49);
        java.lang.String[] strArray73 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray82 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray82);
        float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.remove(floatArray82, (int) (short) 1);
        float[] floatArray86 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray76, floatArray85);
        boolean boolean87 = strList74.equals((java.lang.Object) floatArray86);
        int int88 = strList74.size();
        boolean boolean89 = strList31.removeAll((java.util.Collection<java.lang.String>) strList74);
        java.util.Iterator<java.lang.String> strItor90 = strList74.iterator();
        boolean boolean91 = strList13.retainAll((java.util.Collection<java.lang.String>) strList74);
        int int92 = strList13.size();
        int int93 = strList13.size();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 4 + "'", int63 == 4);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray86), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 4 + "'", int88 == 4);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strItor90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test06052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06052");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6);
        double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (double) 3);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray9, (double) 100.0f, (double) (-1.0f));
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test06053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06053");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        java.lang.Character[] charArray9 = org.apache.commons.lang3.ArrayUtils.toObject(charArray8);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray8, '#', (int) '#');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test06054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06054");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.remove(intArray26, 3);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray28);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray28, (int) (short) 10);
        java.lang.String str33 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) (short) 10, "{{},{}}");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, -1, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "10" + "'", str33, "10");
    }

    @Test
    public void test06055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06055");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10, (double) (byte) 100);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 0);
        java.lang.Double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 0, (int) (byte) -1);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test06056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06056");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray41);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray42, intArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(intArray43, (int) '4');
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.add(intArray43, (int) (short) 100);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray43);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray43);
        int[] intArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray43, (int) (short) 1);
        int[] intArray53 = new int[] {};
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray53, intArray54);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder34.append(intArray43, intArray54);
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray54);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray57);
        int[] intArray61 = org.apache.commons.lang3.ArrayUtils.subarray(intArray57, 5, (int) (byte) 1);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray61);
        int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray61, 5, 0);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray71, (int) (short) 100, 0);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray71);
        int[] intArray76 = org.apache.commons.lang3.ArrayUtils.addAll(intArray61, intArray71);
        int[] intArray79 = org.apache.commons.lang3.ArrayUtils.subarray(intArray71, 6, 9);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]");
    }

    @Test
    public void test06057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06057");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(shortArray5, (short) 10);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(shortArray5, (short) 0);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test06058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06058");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 10, 0);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (short) 0, 7);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) 100, (double) (byte) 10);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) 1.0f, (int) (byte) 1, (double) 1L);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '#', (double) 10.0f);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test06059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06059");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        java.lang.Long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        java.lang.Object[] objArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray3);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray3);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.subarray(longArray5, 7, (int) ' ');
        float[] floatArray14 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        java.lang.Long[] longArray21 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray21);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) floatArray15, (java.lang.Object) longArray22);
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.clone(longArray22);
        java.lang.Long[] longArray25 = org.apache.commons.lang3.ArrayUtils.toObject(longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray5, longArray26);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray26, (long) 2);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test06060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06060");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        float[] floatArray11 = new float[] { (byte) -1, 1L };
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray11, (float) 10L);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray6, (java.lang.Object) int13);
        boolean[] booleanArray20 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray20, (int) (byte) 0, 0);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray20, 4, (int) '4');
        java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray20);
        java.lang.Boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray27);
        float[] floatArray34 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, 0.0f);
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray38, (float) (byte) 100);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray40);
        long[] longArray48 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.subarray(longArray48, 3, (int) (byte) 0);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray48);
        boolean[] booleanArray59 = new boolean[] { false, false, false, true, false, false };
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray59);
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray59, true);
        java.lang.String[] strArray65 = new java.lang.String[] { "4", "1" };
        boolean boolean66 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean52, (java.lang.Object) true, strArray65);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) strArray65);
        java.lang.String[] strArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray65);
        boolean boolean69 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray27, (java.lang.Object) boolean41, strArray68);
        java.lang.Boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray27);
        boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray27);
        int int72 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray6, (java.lang.Object) booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[true, false, true, true, true]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test06061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06061");
        char[][][] charArray0 = null;
        java.lang.Long[] longArray6 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray6);
        java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray6);
        java.lang.Object[] objArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray8);
        char[][][] charArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, (java.lang.Object) longArray8);
        java.lang.Short[] shortArray11 = new java.lang.Short[] {};
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11, (short) 1);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.clone(shortArray14);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.add(shortArray15, (short) -1);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(shortArray17, (short) 0);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray8, (java.lang.Object) shortArray17);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNull(charArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test06062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06062");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.add(charArray0, '4');
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.add(charArray0, '#');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.add(charArray6, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.add(charArray6, '4');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray12, (int) (short) 0, '#');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, 4]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, #]");
    }

    @Test
    public void test06063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06063");
        java.lang.Float[][][][][] floatArray0 = null;
        boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test06064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06064");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray5, (int) (short) 100, 0);
        java.lang.Integer[] intArray9 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray9);
        java.lang.Integer[] intArray11 = org.apache.commons.lang3.ArrayUtils.toObject(intArray10);
        java.lang.Integer[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray11);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertNotNull(intArray12);
    }

    @Test
    public void test06065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06065");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5);
        long[] longArray10 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(longArray10, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.clone(longArray10);
        long[] longArray20 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray20, 1L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray15, longArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) floatArray5, (java.lang.Object) longArray15);
        float[] floatArray30 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray30);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray30, (float) 6);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray30);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.add(floatArray30, (float) 6);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 100.0, 100.0, 10.0, 35.0, 6.0]");
    }

    @Test
    public void test06066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06066");
        java.lang.Short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray0);
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray3, (short) (byte) 100);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray3);
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray7);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
    }

    @Test
    public void test06067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06067");
        int[] intArray0 = new int[] {};
        int[] intArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray0, intArray1);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray1, (int) '#', (int) (short) 100);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray1, 4, (int) (short) 100);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray16, intArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(intArray17, (int) '4');
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.add(intArray17, (int) (short) 100);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray17);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.subarray(intArray17, 1, (int) (byte) 1);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.addAll(intArray1, intArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray27);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
    }

    @Test
    public void test06068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06068");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.subarray(charArray23, (int) 'a', (int) (short) 10);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, '4');
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray39 = new char[] { '#', 'a', 'a' };
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.addAll(charArray35, charArray39);
        java.lang.String str41 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray35);
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray35);
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.addAll(charArray23, charArray42);
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.clone(charArray23);
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.remove(charArray23, (int) (short) 1);
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray23);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray23, 'a', 10);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray23);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(charArray51, '#');
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray51);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{4,#,a,4,#}" + "'", str41, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#aa#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#aa#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, a, a, #, a, a]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#aa#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#aa#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, a, a, #, a, a]");
    }

    @Test
    public void test06069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06069");
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray5, (int) (short) 100, 0);
        java.lang.Integer[] intArray9 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5);
        int[] intArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray9);
        java.lang.Integer[] intArray11 = org.apache.commons.lang3.ArrayUtils.toObject(intArray10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder12 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray19);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray20, intArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray21, (int) (byte) 0);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray21);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray26, (int) (byte) 1);
        int[] intArray29 = new int[] {};
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray29, intArray30);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.addAll(intArray26, intArray29);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder12.append(intArray25, intArray29);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(intArray29, (int) 'a');
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.addAll(intArray10, intArray29);
        int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray10, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray10);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 2, -1, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, -1, 2, 1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test06070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06070");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { (-1.0f), 0.0f, 10.0f, (-1.0f), 100.0f };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5, (float) 3);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray8);
        float[] floatArray12 = new float[] { (byte) -1, 1L };
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) 10L);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray12, (float) (short) 100);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.clone(floatArray12);
        java.lang.Float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray12);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray18);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray18);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(floatArray20, (float) (short) 10);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray8, floatArray20);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray8, (float) (byte) 10);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
    }

    @Test
    public void test06071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06071");
        java.lang.Byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        java.util.Map<java.lang.Object, java.lang.Object> objMap1 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) byteArray0);
        java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertNotNull(objMap1);
        org.junit.Assert.assertNotNull(byteArray2);
    }

    @Test
    public void test06072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06072");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a', (int) (short) 0);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, 0, (int) (short) 10);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray8, (int) '#');
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.clone(intArray21);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray24 = org.apache.commons.lang3.ArrayUtils.remove(intArray21, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
    }

    @Test
    public void test06073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06073");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray20 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.remove(floatArray29, (int) (short) 1);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray23, floatArray32);
        boolean boolean34 = strList21.equals((java.lang.Object) floatArray33);
        int int35 = strList21.size();
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray36, (int) (byte) 1);
        boolean boolean39 = strList21.contains((java.lang.Object) int38);
        boolean boolean40 = strList3.addAll((java.util.Collection<java.lang.String>) strList21);
        strList21.clear();
        java.lang.String[] strArray44 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.stream.Stream<java.lang.String> strStream47 = strList45.parallelStream();
        java.lang.String[] strArray50 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.stream.Stream<java.lang.String> strStream53 = strList51.parallelStream();
        boolean boolean54 = strList45.addAll((java.util.Collection<java.lang.String>) strList51);
        java.lang.Object obj55 = null;
        boolean boolean56 = strList51.equals(obj55);
        java.util.stream.Stream<java.lang.String> strStream57 = strList51.parallelStream();
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray64, (byte) 1);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray64);
        java.lang.Byte[] byteArray73 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray73);
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray81);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray81);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray74, (java.lang.Object) intArray81);
        byte[] byteArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray74, (byte) 10);
        int int88 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray86, (byte) 10);
        java.lang.String[] strArray92 = new java.lang.String[] { "{}", "1", "{}" };
        java.util.ArrayList<java.lang.String> strList93 = new java.util.ArrayList<java.lang.String>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList93, strArray92);
        boolean boolean95 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean67, (java.lang.Object) (byte) 10, (java.util.Collection<java.lang.String>) strList93);
        boolean boolean96 = strList51.retainAll((java.util.Collection<java.lang.String>) strList93);
        java.util.stream.Stream<java.lang.String> strStream97 = strList93.stream();
        boolean boolean98 = strList93.isEmpty();
        boolean boolean99 = strList21.containsAll((java.util.Collection<java.lang.String>) strList93);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strStream53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strStream57);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(strStream97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test06074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06074");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray10 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray19 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.remove(floatArray19, (int) (short) 1);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray13, floatArray22);
        boolean boolean24 = strList11.equals((java.lang.Object) floatArray23);
        int int25 = strList11.size();
        java.util.stream.Stream<java.lang.String> strStream26 = strList11.parallelStream();
        boolean boolean27 = strList3.addAll((java.util.Collection<java.lang.String>) strList11);
        strList11.clear();
        int int29 = strList11.size();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.stream.Stream<java.lang.String> strStream37 = strList35.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream38 = strList35.stream();
        java.util.Spliterator<java.lang.String> strSpliterator39 = strList35.spliterator();
        int int40 = strList35.size();
        boolean boolean41 = strList11.containsAll((java.util.Collection<java.lang.String>) strList35);
        java.lang.Float[] floatArray45 = new java.lang.Float[] { (-1.0f), 100.0f, (-1.0f) };
        java.lang.Float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray45);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray45, (float) (short) 1);
        boolean boolean49 = strList35.remove((java.lang.Object) floatArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray57);
        int[] intArray59 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray58, intArray59);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray59, (int) (byte) 0);
        int[] intArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray59);
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray64, (int) (byte) 1);
        int[] intArray67 = new int[] {};
        int[] intArray68 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray67, intArray68);
        int[] intArray70 = org.apache.commons.lang3.ArrayUtils.addAll(intArray64, intArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder50.append(intArray63, intArray67);
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray67);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray72, 2);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(intArray72, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray72);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray85 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray84);
        boolean boolean87 = org.apache.commons.lang3.ArrayUtils.contains(intArray85, 1);
        int[] intArray88 = org.apache.commons.lang3.ArrayUtils.addAll(intArray72, intArray85);
        int int91 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray85, 10, (int) (byte) 0);
        int int93 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray85, (int) (short) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray85);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray85);
        boolean boolean96 = strList35.remove((java.lang.Object) intArray85);
        int[] intArray99 = org.apache.commons.lang3.ArrayUtils.subarray(intArray85, (int) (short) 10, (int) (byte) 1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertNotNull(strSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 4 + "'", int40 == 4);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[-1.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 2 + "'", int93 == 2);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[]");
    }

    @Test
    public void test06075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06075");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray13, (java.lang.Object) (byte) -1, (int) (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray18);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray18);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray18, (byte) 10);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray28 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray23, byteArray28);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray28);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray31, (byte) 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray31, (byte) 0, (int) (byte) -1);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray18, byteArray31);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test06076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06076");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) 10);
        java.lang.Short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray10);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray13);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray14, (short) (byte) 0);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray14, (short) 100);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.clone(shortArray18);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[100, 0, 0, 1, -1, 0]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 0, 1, -1]");
    }

    @Test
    public void test06077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06077");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(floatArray5, (float) (short) 0);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray5);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06078");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray66, 5, 100);
        java.lang.Short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray79);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.contains(shortArray79, (short) 10);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray79);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test06079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06079");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray27);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray27);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) (short) -1);
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.add(doubleArray27, (double) '#');
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray56);
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray56, (double) 100L);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray59, (double) 10.0f, (int) (short) -1, (double) 100L);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 35.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 35.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test06080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06080");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3, ' ');
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.toObject(charArray5);
        float[] floatArray7 = new float[] {};
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray7);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray6, (java.lang.Object) floatArray7);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray7);
        java.lang.Float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray10);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray11);
    }

    @Test
    public void test06081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06081");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray0, 'a', (int) '4');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.add(charArray0, 0, ' ');
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray0, '4');
        char[] charArray16 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray20 = new char[] { '#', 'a', 'a' };
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.addAll(charArray16, charArray20);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray20, ' ', 2);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.subarray(charArray20, 0, (int) (byte) 10);
        java.lang.Character[] charArray28 = org.apache.commons.lang3.ArrayUtils.toObject(charArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray27);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray27);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray27);
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.remove(charArray31, (int) (short) 0);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ ]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, a, #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, a, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a, #]");
    }

    @Test
    public void test06082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06082");
        int[] intArray0 = null;
        int[] intArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray0);
        int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray1, (int) (byte) -1, (int) (short) -1);
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray1, (int) (byte) 100);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray1);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.clone(intArray1);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
    }

    @Test
    public void test06083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06083");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        java.lang.Double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        java.lang.Boolean[] booleanArray31 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray31);
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray32, (int) (short) 10, 3);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray35);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray35);
        java.lang.Boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray37);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray26, (java.lang.Object) booleanArray38);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) doubleArray26);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, 10.0, -1.0]");
    }

    @Test
    public void test06084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06084");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray10 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray14 = new char[] { '#', 'a', 'a' };
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray14);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray10, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray10);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.subarray(charArray0, 0, 0);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.subarray(charArray21, (int) '#', (int) (short) 100);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.subarray(charArray25, (int) '4', (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray31 = org.apache.commons.lang3.ArrayUtils.add(charArray25, (int) (short) 10, '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
    }

    @Test
    public void test06085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06085");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.add(byteArray10, (byte) 100);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray12);
        byte[] byteArray14 = new byte[] {};
        byte[] byteArray19 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray14, byteArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray14, (byte) -1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray14, (byte) -1);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.clone(byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray25, (byte) 0);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray12, byteArray27);
        java.lang.Byte[] byteArray34 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray34);
        java.lang.Byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray35);
        java.lang.Byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray36);
        java.lang.Byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray36);
        java.lang.Byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray38);
        java.lang.Byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray38);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray40);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray41, (int) 'a', 4);
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray27, byteArray41);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray41);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, 1, 100, 1, -1]");
    }

    @Test
    public void test06086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06086");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) 100);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) 0, (double) 0L);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (int) (byte) 1, 10);
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36);
        double[] doubleArray41 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray41, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray41);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray41, (double) (short) 1, (int) (short) 100);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray41);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray41);
        java.lang.Double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray41);
        java.lang.Double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray51);
        java.lang.Double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray52);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray52);
        java.lang.String[] strArray57 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.stream.Stream<java.lang.String> strStream60 = strList58.parallelStream();
        java.lang.String[] strArray63 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.stream.Stream<java.lang.String> strStream66 = strList64.parallelStream();
        boolean boolean67 = strList58.addAll((java.util.Collection<java.lang.String>) strList64);
        java.lang.Object obj68 = null;
        boolean boolean69 = strList64.equals(obj68);
        int int70 = strList64.size();
        boolean boolean71 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray36, (java.lang.Object) doubleArray52, (java.util.Collection<java.lang.String>) strList64);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36, (double) 1L);
        int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray73, (double) 6, 3);
        int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray73, (double) 5, (double) 4);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strStream60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strStream66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test06087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06087");
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) -1);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.clone(byteArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 100);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(byteArray9, (byte) 0);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.clone(byteArray9);
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.remove(byteArray14, (int) (byte) 1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 10, -1, -1, 100, -1]");
    }

    @Test
    public void test06088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06088");
        char[] charArray2 = new char[] { '4', '4' };
        char[] charArray5 = new char[] { '4', '4' };
        char[] charArray8 = new char[] { '4', '4' };
        char[][] charArray9 = new char[][] { charArray2, charArray5, charArray8 };
        char[] charArray12 = new char[] { '4', '4' };
        char[] charArray15 = new char[] { '4', '4' };
        char[] charArray18 = new char[] { '4', '4' };
        char[][] charArray19 = new char[][] { charArray12, charArray15, charArray18 };
        char[] charArray22 = new char[] { '4', '4' };
        char[] charArray25 = new char[] { '4', '4' };
        char[] charArray28 = new char[] { '4', '4' };
        char[][] charArray29 = new char[][] { charArray22, charArray25, charArray28 };
        char[] charArray32 = new char[] { '4', '4' };
        char[] charArray35 = new char[] { '4', '4' };
        char[] charArray38 = new char[] { '4', '4' };
        char[][] charArray39 = new char[][] { charArray32, charArray35, charArray38 };
        char[][][] charArray40 = new char[][][] { charArray9, charArray19, charArray29, charArray39 };
        char[] charArray44 = new char[] { 'a', '#', ' ' };
        char[][] charArray45 = new char[][] { charArray44 };
        char[][] charArray46 = org.apache.commons.lang3.ArrayUtils.toArray(charArray45);
        char[][][] charArray47 = org.apache.commons.lang3.ArrayUtils.add(charArray40, charArray45);
        long[] longArray50 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(longArray50, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray50);
        boolean boolean55 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray50);
        long[] longArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray50);
        java.lang.Long[] longArray57 = org.apache.commons.lang3.ArrayUtils.toObject(longArray56);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57, (long) 'a');
        char[][][] charArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray40, (java.lang.Object) longArray57);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) charArray60);
        char[] charArray65 = new char[] { 'a', '#', ' ' };
        char[][] charArray66 = new char[][] { charArray65 };
        char[][] charArray67 = org.apache.commons.lang3.ArrayUtils.toArray(charArray66);
        char[][] charArray70 = org.apache.commons.lang3.ArrayUtils.subarray(charArray67, (int) (byte) -1, 10);
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray77);
        java.lang.Object[] objArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) intArray77);
        char[][] charArray80 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray70, (java.lang.Object) intArray77);
        char[][][] charArray81 = org.apache.commons.lang3.ArrayUtils.add(charArray60, charArray70);
        java.util.Map<java.lang.Object, java.lang.Object> objMap82 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) charArray60);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, 4]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[-1]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[-1]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertNotNull(objMap82);
    }

    @Test
    public void test06089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06089");
        java.lang.String[][] strArray0 = new java.lang.String[][] {};
        java.lang.String[][] strArray1 = org.apache.commons.lang3.ArrayUtils.clone(strArray0);
        double[] doubleArray5 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray5, (double) (byte) 100, 1.0d);
        double[] doubleArray13 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray5, doubleArray13);
        float[] floatArray19 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray22 = new float[] { (byte) -1, 1L };
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray22, (float) 10L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray19, floatArray22);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray13, (java.lang.Object) boolean25);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray13, (int) (short) 0, 1);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray29, (double) (byte) -1);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, (int) (byte) 100, 1);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) (short) 10);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray31);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray38);
        double[] doubleArray43 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray43, (double) (byte) 100, 1.0d);
        double[] doubleArray51 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray43, doubleArray51);
        float[] floatArray57 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray60 = new float[] { (byte) -1, 1L };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray60, (float) 10L);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray57, floatArray60);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray51, (java.lang.Object) boolean63);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray51);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray65, (double) (-1.0f));
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray65);
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray65, (double) (short) 100, (int) (byte) 0);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.add(doubleArray65, (double) 4);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray38, doubleArray65);
        int int76 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray38, (double) '#');
        java.lang.String[][] strArray77 = org.apache.commons.lang3.ArrayUtils.removeElement(strArray1, (java.lang.Object) '#');
        java.lang.String[][] strArray80 = org.apache.commons.lang3.ArrayUtils.subarray(strArray77, 5, 3);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 3 + "'", int67 == 3);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 0.0, 10.0, -1.0, 4.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray80);
    }

    @Test
    public void test06090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06090");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray5, (long) (byte) 1, (int) (short) 1);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray5, (long) 3, (int) 'a');
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(longArray5, (long) 7);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.remove(longArray5, (int) (byte) 0);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.add(longArray15, 0, (long) '4');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray15);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[52]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test06091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06091");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10, (double) (byte) 100);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 0);
        java.lang.Double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray16, (double) 4);
        java.lang.Double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray16);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray16);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray28);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray29, intArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray30, (int) (byte) 0);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray30);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray35, (int) (byte) 1);
        int[] intArray38 = new int[] {};
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray38, intArray39);
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.addAll(intArray35, intArray38);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder21.append(intArray34, intArray38);
        java.lang.Short[] shortArray43 = new java.lang.Short[] {};
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray43, (short) 1);
        java.lang.Short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray46);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(shortArray46, (short) 10);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray46, (short) 0, (-1));
        java.lang.Boolean[] booleanArray56 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray56);
        boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray57, (int) (short) 10, 3);
        boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder21.append((java.lang.Object) int52, (java.lang.Object) booleanArray61);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder65 = equalsBuilder21.append(3, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder21.append(1.0f, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder68.append('#', '#');
        java.lang.Long[] longArray77 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray77);
        long[] longArray81 = org.apache.commons.lang3.ArrayUtils.add(longArray78, (int) (byte) 1, (long) (short) 10);
        long[] longArray88 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray91 = org.apache.commons.lang3.ArrayUtils.subarray(longArray88, 3, (int) (byte) 0);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray88);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder68.append(longArray81, longArray88);
        int int95 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray16, (java.lang.Object) longArray81, 11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[]");
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder65);
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray81), "[0, 10, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray88), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray91), "[]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test06092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06092");
        float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray6 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.remove(floatArray6, (int) (short) 1);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray9);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray0, (float) (byte) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray12, (float) (short) 100, (int) (byte) 0);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.remove(floatArray12, (int) (byte) 0);
        float[] floatArray23 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray23, 0.0f);
        java.lang.Float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray23);
        java.lang.Object[] objArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray27);
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray27);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray27, (float) (byte) 10);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray31, (float) 0L);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray17, floatArray31);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.clone(floatArray34);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray35);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(floatArray35, (float) (byte) 100);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[10.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test06093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06093");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) 10);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) -1);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) 0);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray8, (byte) 100);
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 9 };
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { 9 };
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 9 };
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { 9 };
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 9 };
        java.lang.Integer[][] intArray45 = new java.lang.Integer[][] { intArray36, intArray38, intArray40, intArray42, intArray44 };
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[][] intArray64 = new java.lang.Integer[][] { intArray48, intArray51, intArray54, intArray57, intArray60, intArray63 };
        java.lang.String[] strArray67 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.stream.Stream<java.lang.String> strStream70 = strList68.parallelStream();
        java.lang.String[] strArray73 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.stream.Stream<java.lang.String> strStream76 = strList74.parallelStream();
        boolean boolean77 = strList68.addAll((java.util.Collection<java.lang.String>) strList74);
        java.lang.Object obj78 = null;
        boolean boolean79 = strList74.equals(obj78);
        int int80 = strList74.size();
        java.lang.Integer[][] intArray81 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray64, (java.lang.Object) strList74);
        java.lang.Integer[][] intArray82 = org.apache.commons.lang3.ArrayUtils.addAll(intArray45, intArray64);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray34, (java.lang.Object[]) intArray64);
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) intArray64);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0, 0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strStream70);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strStream76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test06094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06094");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        java.lang.Double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray51);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray52, (double) (byte) 100);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test06095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06095");
        float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray6 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.remove(floatArray6, (int) (short) 1);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray9);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.add(floatArray0, (float) (byte) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray12, (float) (short) 100, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray12);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray12, (float) 3, 0);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[10.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test06096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06096");
        double[] doubleArray0 = new double[] {};
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray0, (int) '#', (int) (short) -1);
        int int4 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) doubleArray3);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (short) 100);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, 10.0d, (double) (byte) 100);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray6);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray6, (double) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test06097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06097");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray13);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.clone(floatArray13);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.clone(floatArray13);
        java.lang.Short[] shortArray20 = new java.lang.Short[] {};
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray20);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray20, (short) 1);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.clone(shortArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray24);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray24);
        java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray39 = new java.lang.Byte[][] { byteArray32, byteArray38 };
        java.lang.Byte[][] byteArray42 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray39, (int) '#', 10);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray49);
        java.lang.Byte[][] byteArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray39, (java.lang.Object) intArray49);
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray49, (int) (short) -1);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray49, (int) ' ');
        java.lang.Integer[] intArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray49);
        java.lang.Object obj57 = new java.lang.Object();
        long[] longArray64 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray67 = org.apache.commons.lang3.ArrayUtils.subarray(longArray64, 3, (int) (byte) 0);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray64);
        boolean[] booleanArray75 = new boolean[] { false, false, false, true, false, false };
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray75);
        int int78 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray75, true);
        java.lang.String[] strArray81 = new java.lang.String[] { "4", "1" };
        boolean boolean82 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean68, (java.lang.Object) true, strArray81);
        java.lang.String[] strArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray81);
        java.lang.String[] strArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray83);
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray49, obj57, strArray83);
        java.lang.String[] strArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray83);
        boolean boolean87 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) floatArray19, (java.lang.Object) shortArray24, strArray83);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray89 = org.apache.commons.lang3.ArrayUtils.remove(shortArray24, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 3 + "'", int78 == 3);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test06098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06098");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray12, (int) '4', (int) (short) 0);
        boolean[] booleanArray23 = new boolean[] { false, false, false, true, false, false };
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23);
        boolean[] booleanArray31 = new boolean[] { false, false, false, true, false, false };
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray31);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray23, booleanArray31);
        short[] shortArray38 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray38);
        boolean boolean43 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean33, (java.lang.Object) shortArray38);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray38);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 1);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.add(shortArray38, (short) (byte) 100);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray48, (short) 10);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3 + "'", int46 == 3);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[-1, 0, 0, 1, 100]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test06099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06099");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray7);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray7, (int) (byte) -1, (int) (short) 10);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray7, (int) (short) -1);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.remove(intArray7, 3);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.add(intArray7, (-1));
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 1, 0, 10, -1, 1, -1]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 1, 0, -1, 1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 1, 0, 10, -1, 1, -1]");
    }

    @Test
    public void test06100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06100");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) -1, (int) (short) 100);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray8);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.remove(shortArray8, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
    }

    @Test
    public void test06101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06101");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) (byte) 0);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.remove(shortArray11, 3);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray13);
        java.lang.Short[] shortArray15 = null;
        java.lang.Short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray15);
        java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray16);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray16, (short) (byte) -1);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray16, (short) (byte) 0);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.add(shortArray21, (short) 10);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(shortArray23, (short) 1);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.remove(shortArray23, (int) (short) 0);
        short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray13, shortArray23);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[100, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[10]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[100, 0, 1, 10]");
    }

    @Test
    public void test06102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06102");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) 0);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray3);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3);
        short[] shortArray8 = null;
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray7, shortArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(shortArray7, (short) 10);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray7, (short) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(shortArray13, (short) (byte) 10);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (int) (byte) 0, (short) 100);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray19);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[100]");
    }

    @Test
    public void test06103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06103");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3, true);
        java.lang.Boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray7);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, true, true]");
    }

    @Test
    public void test06104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06104");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.add(byteArray10, (byte) 100);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray10, (byte) -1, 5);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray10, (byte) 1);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray10, 100, (-1));
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(byteArray10, (byte) 100);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test06105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06105");
        double[] doubleArray0 = null;
        double[] doubleArray4 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, (double) (byte) 100, 1.0d);
        double[] doubleArray12 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray4, doubleArray12);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) 4, (int) '#', (double) 0L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray0, doubleArray13);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray13, (int) (short) 100, 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
    }

    @Test
    public void test06106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06106");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 1);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray24, (byte) 100);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray35 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray30, byteArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray30, (byte) -1);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray24, byteArray30);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray30);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test06107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06107");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) 10);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) -1);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) 0);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray8, (byte) 100);
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray34, (byte) 100);
        int int37 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray36);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray36);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(byteArray36, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0, 0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 6 + "'", int37 == 6);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test06108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06108");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (byte) 0);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.remove(longArray10, (int) (short) 0);
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toObject(longArray12);
        long[] longArray20 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.subarray(longArray20, 3, (int) (byte) 0);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray23, (long) (byte) 0);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray12, longArray23);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[0]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[0]");
    }

    @Test
    public void test06109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06109");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray3, 100.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) ' ', 8);
        double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray3);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 10.0, 52.0]");
    }

    @Test
    public void test06110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06110");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        boolean boolean64 = equalsBuilder63.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder63.append((byte) 1, (byte) 100);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(equalsBuilder67);
    }

    @Test
    public void test06111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06111");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10, (double) (byte) 100);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray3);
        double[] doubleArray16 = null;
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, 1.0d);
        double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 8, 9);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
    }

    @Test
    public void test06112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06112");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) -1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) ' ');
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 3);
        java.lang.Character[] charArray37 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray37);
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray38, '4');
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray38);
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.clone(charArray41);
        java.lang.Character[] charArray43 = org.apache.commons.lang3.ArrayUtils.toObject(charArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) intArray22, (java.lang.Object[]) charArray43);
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray43, '4');
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[ , #, 4, a, a]");
    }

    @Test
    public void test06113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06113");
        int[] intArray0 = null;
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.subarray(intArray0, 11, (-1));
        org.junit.Assert.assertNull(intArray3);
    }

    @Test
    public void test06114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06114");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) -1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) ' ');
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (byte) -1);
        java.lang.Integer[] intArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray31);
    }

    @Test
    public void test06115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06115");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray28 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray28);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.remove(floatArray28, (int) (short) 1);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray22, floatArray31);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.add(floatArray22, (float) (byte) 10);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray34, (float) (short) 100, (int) (byte) 0);
        float[] floatArray43 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray43);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray43, (int) (byte) 1, 0);
        float[] floatArray51 = new float[] { (byte) -1, 1L };
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray51, (float) 10L);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray48, floatArray51);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray51);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.clone(floatArray51);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder0.append(floatArray34, floatArray56);
        java.lang.Character[] charArray58 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray58);
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray58);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray60);
        char[] charArray67 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray71 = new char[] { '#', 'a', 'a' };
        char[] charArray72 = org.apache.commons.lang3.ArrayUtils.addAll(charArray67, charArray71);
        java.lang.String str73 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray67);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray60, charArray67);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray60);
        java.lang.Character[] charArray76 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray76);
        char[] charArray79 = org.apache.commons.lang3.ArrayUtils.add(charArray77, 'a');
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray77);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder0.append(charArray60, charArray80);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder81.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder87 = equalsBuilder81.append((byte) 10, (byte) 1);
        java.lang.Boolean boolean88 = equalsBuilder87.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder87.append((short) (byte) 100, (short) 100);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[10.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "{4,#,a,4,#}" + "'", str73, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertNotNull(equalsBuilder84);
        org.junit.Assert.assertNotNull(equalsBuilder87);
        org.junit.Assert.assertEquals("'" + boolean88 + "' != '" + false + "'", boolean88, false);
        org.junit.Assert.assertNotNull(equalsBuilder91);
    }

    @Test
    public void test06116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06116");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 10, 0, 1.0d);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) (-1.0f), (int) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray29);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (-1.0d), (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray29, 11, (double) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test06117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06117");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (short) -1);
        java.lang.Double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        java.lang.Double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        java.lang.Double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray33);
        double[] doubleArray38 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray38, (double) (byte) 100, 1.0d);
        double[] doubleArray46 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray38, doubleArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray47);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray47, 0.0d, (int) (byte) 100, (-1.0d));
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray47, (double) 100L);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray47);
        double[] doubleArray59 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray59, (double) (byte) 100, 1.0d);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray59, 2, (int) 'a');
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray47, doubleArray59);
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) (byte) 100, 1.0d);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray66, 1.0d, (double) 0);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) 1.0f);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray34, (java.lang.Object) int74);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[52.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0, -1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test06118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06118");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        java.lang.Character[] charArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        java.lang.String str5 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray0);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray16 = new char[] { '#', 'a', 'a' };
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.addAll(charArray12, charArray16);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray16, ' ', 2);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.subarray(charArray16, 0, (int) (byte) 10);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.add(charArray23, ' ');
        java.lang.Character[] charArray26 = org.apache.commons.lang3.ArrayUtils.toObject(charArray23);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray0, (java.lang.Object) charArray26);
        java.util.Map<java.lang.Object, java.lang.Object> objMap28 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) charArray0);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a,  ]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objMap28);
    }

    @Test
    public void test06119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06119");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray10 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray14 = new char[] { '#', 'a', 'a' };
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray14);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray10, ' ');
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray10);
        char[] charArray24 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray28 = new char[] { '#', 'a', 'a' };
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray24, charArray28);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.subarray(charArray28, (int) 'a', (int) (short) 10);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, '4');
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray28);
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.clone(charArray35);
        java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray39);
        char[] charArray46 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray50 = new char[] { '#', 'a', 'a' };
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray46, charArray50);
        java.lang.String str52 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray46);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray39, charArray46);
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray39);
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.addAll(charArray36, charArray54);
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray54, '#');
        java.lang.Character[] charArray58 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray58);
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray58);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray60);
        char[] charArray67 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray71 = new char[] { '#', 'a', 'a' };
        char[] charArray72 = org.apache.commons.lang3.ArrayUtils.addAll(charArray67, charArray71);
        java.lang.String str73 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray67);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray60, charArray67);
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray60);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray75);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray57, charArray75);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{4,#,a,4,#}" + "'", str52, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "{4,#,a,4,#}" + "'", str73, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test06120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06120");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray17 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.lang.String[] strArray22 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.stream.Stream<java.lang.String> strStream25 = strList23.parallelStream();
        java.lang.String[] strArray28 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.stream.Stream<java.lang.String> strStream31 = strList29.parallelStream();
        boolean boolean32 = strList23.addAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.Object obj33 = null;
        boolean boolean34 = strList29.equals(obj33);
        int int35 = strList29.size();
        boolean boolean36 = strList18.removeAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.String[] strArray39 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.stream.Stream<java.lang.String> strStream42 = strList40.parallelStream();
        boolean boolean43 = strList29.addAll((java.util.Collection<java.lang.String>) strList40);
        java.lang.String[] strArray46 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.stream.Stream<java.lang.String> strStream49 = strList47.parallelStream();
        java.lang.String[] strArray52 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.stream.Stream<java.lang.String> strStream55 = strList53.parallelStream();
        boolean boolean56 = strList47.addAll((java.util.Collection<java.lang.String>) strList53);
        java.lang.Object obj57 = null;
        boolean boolean58 = strList53.equals(obj57);
        java.lang.Iterable[] iterableArray60 = new java.lang.Iterable[3];
        @SuppressWarnings("unchecked")
        java.lang.Iterable<java.lang.String>[] strIterableArray61 = (java.lang.Iterable<java.lang.String>[]) iterableArray60;
        strIterableArray61[0] = strList3;
        strIterableArray61[1] = strList40;
        strIterableArray61[2] = strList53;
        java.lang.String[] strArray70 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.stream.Stream<java.lang.String> strStream73 = strList71.parallelStream();
        java.lang.String[] strArray76 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.stream.Stream<java.lang.String> strStream79 = strList77.parallelStream();
        boolean boolean80 = strList71.addAll((java.util.Collection<java.lang.String>) strList77);
        java.lang.Iterable<java.lang.String>[] strIterableArray81 = org.apache.commons.lang3.ArrayUtils.add(strIterableArray61, (java.lang.Iterable<java.lang.String>) strList77);
        java.util.stream.Stream<java.lang.String> strStream82 = strList77.stream();
        java.util.stream.Stream<java.lang.String> strStream83 = strList77.parallelStream();
        boolean boolean85 = strList77.add("{100.0,-1.0,100.0,100.0,-1.0}");
        int int86 = strList77.size();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strStream49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(iterableArray60);
        org.junit.Assert.assertNotNull(strIterableArray61);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strStream73);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strIterableArray81);
        org.junit.Assert.assertNotNull(strStream82);
        org.junit.Assert.assertNotNull(strStream83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 3 + "'", int86 == 3);
    }

    @Test
    public void test06121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06121");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray8);
        byte[] byteArray14 = new byte[] {};
        byte[] byteArray19 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray14, byteArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray14, (byte) -1);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray23, (byte) 100, 2);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray23);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray8, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
    }

    @Test
    public void test06122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06122");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.add(charArray13, (int) (short) 0, '4');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray16);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray18, '4', 0);
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.toObject(charArray18);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray22, ' ');
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.add(charArray24, '4');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, 4]");
    }

    @Test
    public void test06123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06123");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray32, (int) (byte) -1, (int) (short) 100);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray35, (double) 'a', (int) (short) 100);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray35);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray35, 0.0d, 2);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, 10.0d, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test06124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06124");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.add(charArray12, ' ');
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray14, ' ');
        long[] longArray18 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray18);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(longArray18, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray18);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray18);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray18);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(longArray18, (long) (short) 100);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.clone(longArray18);
        long[] longArray30 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray30);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(longArray30, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray30);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(longArray30, (long) 0);
        long[] longArray37 = org.apache.commons.lang3.ArrayUtils.addAll(longArray18, longArray30);
        long[] longArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray37, (long) 100);
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray49 = new char[] { '#', 'a', 'a' };
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.addAll(charArray45, charArray49);
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.subarray(charArray49, (int) 'a', (int) (short) 10);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray49, '4');
        char[] charArray61 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray65 = new char[] { '#', 'a', 'a' };
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.addAll(charArray61, charArray65);
        java.lang.String str67 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray61);
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray61);
        char[] charArray69 = org.apache.commons.lang3.ArrayUtils.addAll(charArray49, charArray68);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.clone(charArray49);
        char[] charArray72 = org.apache.commons.lang3.ArrayUtils.remove(charArray49, (int) (short) 1);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray37, (java.lang.Object) charArray72);
        int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray72, '#', (int) (short) 10);
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.addAll(charArray14, charArray72);
        java.lang.Character[] charArray78 = org.apache.commons.lang3.ArrayUtils.toObject(charArray14);
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray78, ' ');
        char[] charArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray78, '#');
        int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray82, '4', (int) (byte) 100);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1]");
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[-1, -1]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "{4,#,a,4,#}" + "'", str67, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, a]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "4#a4# #a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "4#a4# #a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[4, #, a, 4, #,  , #, a]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "4#a4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "4#a4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[4, #, a, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "4#a4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "4#a4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[4, #, a, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test06125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06125");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.util.Iterator<java.lang.String> strItor21 = strList13.iterator();
        java.lang.String[] strArray24 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.stream.Stream<java.lang.String> strStream27 = strList25.parallelStream();
        boolean boolean28 = strList13.containsAll((java.util.Collection<java.lang.String>) strList25);
        int int29 = strList13.size();
        java.lang.String[] strArray32 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.stream.Stream<java.lang.String> strStream35 = strList33.parallelStream();
        java.lang.String[] strArray38 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.stream.Stream<java.lang.String> strStream41 = strList39.parallelStream();
        boolean boolean42 = strList33.addAll((java.util.Collection<java.lang.String>) strList39);
        java.util.stream.Stream<java.lang.String> strStream43 = strList33.parallelStream();
        boolean boolean45 = strList33.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray50 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray59 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray60 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray59);
        float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.remove(floatArray59, (int) (short) 1);
        float[] floatArray63 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray53, floatArray62);
        boolean boolean64 = strList51.equals((java.lang.Object) floatArray63);
        int int65 = strList51.size();
        int[] intArray66 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray66, (int) (byte) 1);
        boolean boolean69 = strList51.contains((java.lang.Object) int68);
        boolean boolean70 = strList33.addAll((java.util.Collection<java.lang.String>) strList51);
        strList51.clear();
        boolean boolean72 = strList13.retainAll((java.util.Collection<java.lang.String>) strList51);
        strList13.clear();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strItor21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strStream27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[]");
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 4 + "'", int65 == 4);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test06126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06126");
        float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray6 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray6);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.remove(floatArray6, (int) (short) 1);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray9);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray10, (float) (short) 100);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.clone(floatArray12);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.clone(floatArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray14);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06127");
        java.lang.Long[] longArray2 = new java.lang.Long[] { 1L, 0L };
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2, 0L);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2, 100L);
        java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2, 10L);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2, (long) 10);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[1, 0]");
    }

    @Test
    public void test06128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06128");
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2);
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray6 = org.apache.commons.lang3.ArrayUtils.clone(intArray4);
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray13);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray14, intArray15);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(intArray15, (int) '4');
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.add(intArray15, (int) (short) 100);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray15);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray15);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray15, (int) (short) 1);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray15, (int) (byte) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray15);
        java.lang.Integer[] intArray28 = org.apache.commons.lang3.ArrayUtils.toObject(intArray15);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.addAll(intArray4, intArray15);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray4);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[1, 0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test06129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06129");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13, true);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray15, true);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray15);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray15, true);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray15, 3);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder23 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray29 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray33 = new char[] { '#', 'a', 'a' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray33);
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray29, ' ');
        char[] charArray42 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray46 = new char[] { '#', 'a', 'a' };
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.addAll(charArray42, charArray46);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray46, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder23.append((java.lang.Object) ' ', (java.lang.Object) charArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder23.append((int) (short) 1, 10);
        boolean boolean55 = equalsBuilder23.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder23.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder57.append((long) '4', (long) ' ');
        long[] longArray67 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray70 = org.apache.commons.lang3.ArrayUtils.subarray(longArray67, 3, (int) (byte) 0);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray67);
        boolean[] booleanArray78 = new boolean[] { false, false, false, true, false, false };
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray78);
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray78, true);
        java.lang.String[] strArray84 = new java.lang.String[] { "4", "1" };
        boolean boolean85 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean71, (java.lang.Object) true, strArray84);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) strArray84);
        boolean boolean87 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) 3, (java.lang.Object) equalsBuilder60, strArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder60.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder90.append((int) '#', (int) ' ');
        int int95 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) charArray0, (java.lang.Object) ' ', (int) (byte) 0);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, true, false]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 3 + "'", int81 == 3);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test06130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06130");
        java.lang.Short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray0);
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray3, (short) (byte) 100);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray3);
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder8 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray16, intArray17);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray17, (int) (byte) 0);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) (byte) 1);
        int[] intArray25 = new int[] {};
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray25, intArray26);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.addAll(intArray22, intArray25);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder8.append(intArray21, intArray25);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder32 = equalsBuilder8.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder32.append(true, false);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray7, (java.lang.Object) equalsBuilder35, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder35.append((long) 5, (long) (short) 0);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertNotNull(equalsBuilder32);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder40);
    }

    @Test
    public void test06131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06131");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        boolean boolean33 = equalsBuilder31.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder31.append(true, true);
        long[] longArray38 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray38);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(longArray38, 0L);
        long[] longArray43 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray43);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray43);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray45, (long) 5, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder31.append(longArray38, longArray45);
        java.lang.Byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        float[] floatArray56 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray56);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray56, 0.0f);
        java.lang.Float[] floatArray60 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray56);
        java.lang.Object[] objArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray60);
        float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder49.append((java.lang.Object[]) byteArray50, (java.lang.Object[]) floatArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder63.append((byte) -1, (byte) 10);
        java.lang.Long[] longArray72 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray72);
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.add(longArray73, (int) (byte) 1, (long) (short) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray73);
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.clone(longArray73);
        long[] longArray79 = org.apache.commons.lang3.ArrayUtils.clone(longArray78);
        int int82 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray79, (long) (byte) 1, (int) (short) 10);
        java.lang.Long[] longArray88 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray88);
        long[] longArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray88, (long) (short) 10);
        int int94 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray91, (long) (byte) 1, 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder66.append(longArray79, longArray91);
        java.lang.Boolean boolean96 = equalsBuilder95.build();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[-1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(equalsBuilder66);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[0, 100, 100, 1, 0]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[0, 10, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[0, 100, 100, 1, 0]");
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[0, 100, 100, 1, 0]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 3 + "'", int82 == 3);
        org.junit.Assert.assertNotNull(longArray88);
        org.junit.Assert.assertNotNull(longArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray89), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray91), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertEquals("'" + boolean96 + "' != '" + false + "'", boolean96, false);
    }

    @Test
    public void test06132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06132");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray8);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray8, (int) (short) 1);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray15);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test06133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06133");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray10, (byte) 100);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray10, (byte) 100, (int) (byte) 10);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray10, (byte) 10);
        java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray24, (byte) 1);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(byteArray26, (byte) 100);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.contains(byteArray26, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray26);
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray10, byteArray26);
        java.lang.String[] strArray35 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.stream.Stream<java.lang.String> strStream38 = strList36.parallelStream();
        java.lang.String[] strArray43 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray52 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray52);
        float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.remove(floatArray52, (int) (short) 1);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray46, floatArray55);
        boolean boolean57 = strList44.equals((java.lang.Object) floatArray56);
        int int58 = strList44.size();
        java.util.stream.Stream<java.lang.String> strStream59 = strList44.parallelStream();
        boolean boolean60 = strList36.addAll((java.util.Collection<java.lang.String>) strList44);
        java.util.Spliterator<java.lang.String> strSpliterator61 = strList36.spliterator();
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) byteArray10, (java.lang.Object) strSpliterator61);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
        org.junit.Assert.assertNotNull(strStream59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strSpliterator61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test06134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06134");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray4, (int) (short) 10, 3);
        long[] longArray9 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(longArray9, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.clone(longArray9);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray9);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(longArray9, (long) (short) 100);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.add(longArray9, (long) '#');
        boolean boolean22 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray7, (java.lang.Object) longArray20, true);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray7);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray23, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray23);
        java.lang.Boolean[] booleanArray30 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray30);
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) booleanArray32);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray23, booleanArray32);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.add(booleanArray23, true);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray36);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray36);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) boolean38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Argument is not an array");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[true]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test06135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06135");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        float[] floatArray5 = null;
        float[] floatArray6 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray20 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.remove(floatArray20, (int) (short) 1);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray14, floatArray23);
        boolean boolean25 = strList12.equals((java.lang.Object) floatArray24);
        float[] floatArray31 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray31, (float) 1);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray24, floatArray31);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder0.append(floatArray5, floatArray6);
        long[] longArray44 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.subarray(longArray44, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray44);
        java.lang.Long[] longArray49 = org.apache.commons.lang3.ArrayUtils.toObject(longArray44);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray44);
        java.lang.Long[] longArray51 = org.apache.commons.lang3.ArrayUtils.toObject(longArray44);
        long[] longArray58 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.subarray(longArray58, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray58);
        long[] longArray64 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray64);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(longArray64, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray64);
        long[] longArray69 = org.apache.commons.lang3.ArrayUtils.clone(longArray64);
        long[] longArray74 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray74, 1L);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray69, longArray76);
        long[] longArray78 = org.apache.commons.lang3.ArrayUtils.addAll(longArray58, longArray76);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray76, (long) 1, 5);
        long[] longArray84 = org.apache.commons.lang3.ArrayUtils.subarray(longArray76, (int) (short) -1, (int) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder0.append(longArray44, longArray84);
        int int87 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray44, (long) 6);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[-1]");
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(longArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[32]");
        org.junit.Assert.assertNotNull(equalsBuilder85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test06136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06136");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3, true);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray6);
        java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray6, "10");
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{true,true,false}" + "'", str9, "{true,true,false}");
    }

    @Test
    public void test06137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06137");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.add(charArray4, ' ');
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray6, '#');
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(charArray6, 'a');
        java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray13);
        char[] charArray20 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray24 = new char[] { '#', 'a', 'a' };
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray24);
        java.lang.String str26 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray20);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray13, charArray20);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray13);
        java.lang.Character[] charArray29 = org.apache.commons.lang3.ArrayUtils.toObject(charArray13);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray29);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray29, '4');
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray29, '4');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[ ]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{4,#,a,4,#}" + "'", str26, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ ]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[]");
    }

    @Test
    public void test06138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06138");
        short[] shortArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray0, (short) (byte) 10, (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test06139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06139");
        java.lang.Short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) (byte) 1);
        java.lang.Short[] shortArray6 = new java.lang.Short[] {};
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6, (short) 1);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray9, (short) 0);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray9);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        short[] shortArray14 = null;
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray13, shortArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(shortArray13, (short) 10);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray13, (short) (byte) 1);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13);
        short[] shortArray21 = null;
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray13, shortArray21);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray0, (java.lang.Object) shortArray22);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray24);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]");
    }

    @Test
    public void test06140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06140");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray17, true);
        boolean[] booleanArray26 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray26, (int) (byte) 0, 0);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray17, booleanArray29);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray29, false, (int) (byte) 1);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray29);
        java.lang.Boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray29);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray29);
        java.lang.Boolean[] booleanArray40 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray40);
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray41, (int) (short) 10, 3);
        long[] longArray46 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray46);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray46, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray46);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.clone(longArray46);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray46);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray46);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(longArray46, (long) (short) 100);
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.add(longArray46, (long) '#');
        boolean boolean59 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray44, (java.lang.Object) longArray57, true);
        boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray44);
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray60, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray60);
        java.lang.Boolean[] booleanArray67 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray67);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray67);
        int int70 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) booleanArray69);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray60, booleanArray69);
        boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.add(booleanArray60, true);
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray60, true);
        boolean boolean77 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray29, (java.lang.Object) true, true);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[-1, 35]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 3 + "'", int70 == 3);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[true]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test06141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06141");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) -1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) ' ');
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        java.lang.Object obj30 = new java.lang.Object();
        long[] longArray37 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.subarray(longArray37, 3, (int) (byte) 0);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray37);
        boolean[] booleanArray48 = new boolean[] { false, false, false, true, false, false };
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray48);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray48, true);
        java.lang.String[] strArray54 = new java.lang.String[] { "4", "1" };
        boolean boolean55 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean41, (java.lang.Object) true, strArray54);
        java.lang.String[] strArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray54);
        java.lang.String[] strArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray56);
        boolean boolean58 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) intArray22, obj30, strArray56);
        java.lang.Object obj59 = null;
        int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray22, obj59, 0);
        boolean[] booleanArray67 = new boolean[] { false, true, false, false, false };
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray67, false);
        java.lang.Boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray67);
        java.lang.Byte[] byteArray76 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray76);
        java.lang.Byte[] byteArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray77);
        java.lang.Byte[] byteArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray78);
        java.lang.Byte[] byteArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray78);
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray70, (java.lang.Object) byteArray78);
        java.lang.Boolean[] booleanArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray70);
        int int84 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray22, (java.lang.Object) booleanArray82, (int) '#');
        java.lang.Boolean[] booleanArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray82);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(booleanArray85);
    }

    @Test
    public void test06142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06142");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.appendSuper(false);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray47 = new java.lang.Byte[][] { byteArray40, byteArray46 };
        java.lang.Byte[][] byteArray50 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray47, (int) '#', 10);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray57);
        java.lang.Byte[][] byteArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray47, (java.lang.Object) intArray57);
        java.lang.Integer[] intArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray57);
        java.lang.Short[] shortArray61 = null;
        java.lang.Short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray61);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder34.append((java.lang.Object[]) intArray57, (java.lang.Object[]) shortArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        long[] longArray77 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray80 = org.apache.commons.lang3.ArrayUtils.subarray(longArray77, 3, (int) (byte) 0);
        java.lang.Long[] longArray86 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray86);
        long[] longArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray86, (long) (short) 10);
        long[] longArray90 = org.apache.commons.lang3.ArrayUtils.clone(longArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder91 = equalsBuilder64.append(longArray80, longArray89);
        long[] longArray92 = org.apache.commons.lang3.ArrayUtils.clone(longArray80);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(longArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[]");
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertNotNull(longArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray87), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray89), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray90), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(equalsBuilder91);
        org.junit.Assert.assertNotNull(longArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray92), "[]");
    }

    @Test
    public void test06143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06143");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray27);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) 'a', 2, (double) 10.0f);
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        java.lang.Double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray56);
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray57, (double) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0]");
    }

    @Test
    public void test06144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06144");
        java.util.stream.Stream[] streamArray1 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray2 = (java.util.stream.Stream<java.lang.String>[]) streamArray1;
        java.util.stream.Stream[][] streamArray4 = new java.util.stream.Stream[1][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray5 = (java.util.stream.Stream<java.lang.String>[][]) streamArray4;
        strStreamArray5[0] = strStreamArray2;
        java.util.stream.Stream[] streamArray9 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray10 = (java.util.stream.Stream<java.lang.String>[]) streamArray9;
        java.util.stream.Stream[][] streamArray12 = new java.util.stream.Stream[1][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray13 = (java.util.stream.Stream<java.lang.String>[][]) streamArray12;
        strStreamArray13[0] = strStreamArray10;
        java.util.stream.Stream[] streamArray17 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray18 = (java.util.stream.Stream<java.lang.String>[]) streamArray17;
        java.util.stream.Stream[][] streamArray20 = new java.util.stream.Stream[1][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray21 = (java.util.stream.Stream<java.lang.String>[][]) streamArray20;
        strStreamArray21[0] = strStreamArray18;
        java.util.stream.Stream[] streamArray25 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray26 = (java.util.stream.Stream<java.lang.String>[]) streamArray25;
        java.util.stream.Stream[][] streamArray28 = new java.util.stream.Stream[1][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray29 = (java.util.stream.Stream<java.lang.String>[][]) streamArray28;
        strStreamArray29[0] = strStreamArray26;
        java.util.stream.Stream[] streamArray33 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray34 = (java.util.stream.Stream<java.lang.String>[]) streamArray33;
        java.util.stream.Stream[][] streamArray36 = new java.util.stream.Stream[1][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray37 = (java.util.stream.Stream<java.lang.String>[][]) streamArray36;
        strStreamArray37[0] = strStreamArray34;
        java.util.stream.Stream[][][] streamArray41 = new java.util.stream.Stream[5][][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][][] strStreamArray42 = (java.util.stream.Stream<java.lang.String>[][][]) streamArray41;
        strStreamArray42[0] = strStreamArray5;
        strStreamArray42[1] = strStreamArray13;
        strStreamArray42[2] = strStreamArray21;
        strStreamArray42[3] = strStreamArray29;
        strStreamArray42[4] = strStreamArray37;
        java.util.stream.Stream<java.lang.String>[][][] strStreamArray53 = org.apache.commons.lang3.ArrayUtils.clone(strStreamArray42);
        java.util.stream.Stream<java.lang.String>[][][] strStreamArray54 = org.apache.commons.lang3.ArrayUtils.clone(strStreamArray42);
        java.util.stream.Stream[][] streamArray57 = new java.util.stream.Stream[0][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[][] strStreamArray58 = (java.util.stream.Stream<java.lang.String>[][]) streamArray57;
        java.util.stream.Stream<java.lang.String>[][] strStreamArray59 = org.apache.commons.lang3.ArrayUtils.clone(strStreamArray58);
        java.util.stream.Stream<java.lang.String>[][] strStreamArray60 = org.apache.commons.lang3.ArrayUtils.clone(strStreamArray58);
        java.util.stream.Stream<java.lang.String>[][] strStreamArray61 = org.apache.commons.lang3.ArrayUtils.toArray(strStreamArray58);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[][]) strStreamArray61);
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[][][] strBaseStreamArray63 = org.apache.commons.lang3.ArrayUtils.add((java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[][][]) strStreamArray42, 10, (java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[][]) strStreamArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(streamArray1);
        org.junit.Assert.assertNotNull(strStreamArray2);
        org.junit.Assert.assertNotNull(streamArray4);
        org.junit.Assert.assertNotNull(strStreamArray5);
        org.junit.Assert.assertNotNull(streamArray9);
        org.junit.Assert.assertNotNull(strStreamArray10);
        org.junit.Assert.assertNotNull(streamArray12);
        org.junit.Assert.assertNotNull(strStreamArray13);
        org.junit.Assert.assertNotNull(streamArray17);
        org.junit.Assert.assertNotNull(strStreamArray18);
        org.junit.Assert.assertNotNull(streamArray20);
        org.junit.Assert.assertNotNull(strStreamArray21);
        org.junit.Assert.assertNotNull(streamArray25);
        org.junit.Assert.assertNotNull(strStreamArray26);
        org.junit.Assert.assertNotNull(streamArray28);
        org.junit.Assert.assertNotNull(strStreamArray29);
        org.junit.Assert.assertNotNull(streamArray33);
        org.junit.Assert.assertNotNull(strStreamArray34);
        org.junit.Assert.assertNotNull(streamArray36);
        org.junit.Assert.assertNotNull(strStreamArray37);
        org.junit.Assert.assertNotNull(streamArray41);
        org.junit.Assert.assertNotNull(strStreamArray42);
        org.junit.Assert.assertNotNull(strStreamArray53);
        org.junit.Assert.assertNotNull(strStreamArray54);
        org.junit.Assert.assertNotNull(streamArray57);
        org.junit.Assert.assertNotNull(strStreamArray58);
        org.junit.Assert.assertNotNull(strStreamArray59);
        org.junit.Assert.assertNotNull(strStreamArray60);
        org.junit.Assert.assertNotNull(strStreamArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test06145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06145");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray7);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
    }

    @Test
    public void test06146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06146");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray17, true);
        boolean[] booleanArray26 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray26, (int) (byte) 0, 0);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray17, booleanArray29);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray29, false, (int) (byte) 1);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray29);
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray41, true);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray43, true);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray43);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray46);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray47, true, (int) '4');
        boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray47);
        boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray51);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray51, true, 6);
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray61);
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray61, false);
        boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray61);
        java.lang.Boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray61);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray61, false);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.add(booleanArray68, true);
        boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray70, (int) ' ', (int) (byte) 0);
        boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.add(booleanArray70, 4, false);
        java.lang.Boolean[] booleanArray82 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray82);
        boolean[] booleanArray84 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray83);
        boolean[] booleanArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray83, false);
        java.lang.Boolean[] booleanArray87 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray83);
        boolean[] booleanArray88 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray83);
        boolean[] booleanArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray83, false);
        boolean[] booleanArray91 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray70, booleanArray90);
        boolean[] booleanArray94 = org.apache.commons.lang3.ArrayUtils.add(booleanArray90, (int) (short) 1, true);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray51, booleanArray94);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, true, false, false, false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, false, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, false, true, true, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray84), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray86), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray87);
        org.junit.Assert.assertNotNull(booleanArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray88), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray90), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[false, false, true, true, false, true, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray94), "[false, true, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test06147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06147");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.add(charArray13, (int) (short) 0, '4');
        java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, '4');
        java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray17);
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray21);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray16, charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray16);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray24);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4]");
    }

    @Test
    public void test06148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06148");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        java.lang.Object[] objArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray9);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9, (float) 100L);
        java.lang.Object obj14 = null;
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray9, obj14);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9, (float) 100);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test06149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06149");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        float[] floatArray15 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray15);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray15);
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray15, (int) (byte) 1, 0);
        float[] floatArray23 = new float[] { (byte) -1, 1L };
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray23, (float) 10L);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray20, floatArray23);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray23);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray5, floatArray23);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (short) -1, (int) (short) 10);
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray32);
    }

    @Test
    public void test06150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06150");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, ' ');
        java.lang.Character[] charArray7 = org.apache.commons.lang3.ArrayUtils.toObject(charArray0);
        java.lang.Boolean[] booleanArray11 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        java.lang.Boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray7, (java.lang.Object) booleanArray15);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06151");
        java.lang.Integer[][][] intArray0 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray1 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][] intArray2 = new java.lang.Integer[][][] {};
        java.lang.Integer[][][][] intArray3 = new java.lang.Integer[][][][] { intArray0, intArray1, intArray2 };
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 100 };
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { 100 };
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { 100 };
        java.lang.Integer[][] intArray11 = new java.lang.Integer[][] { intArray6, intArray8, intArray10 };
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { 100 };
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100 };
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100 };
        java.lang.Integer[][] intArray18 = new java.lang.Integer[][] { intArray13, intArray15, intArray17 };
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 100 };
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 100 };
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { 100 };
        java.lang.Integer[][] intArray25 = new java.lang.Integer[][] { intArray20, intArray22, intArray24 };
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { 100 };
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { 100 };
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { 100 };
        java.lang.Integer[][] intArray32 = new java.lang.Integer[][] { intArray27, intArray29, intArray31 };
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { 100 };
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 100 };
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { 100 };
        java.lang.Integer[][] intArray39 = new java.lang.Integer[][] { intArray34, intArray36, intArray38 };
        java.lang.Integer[][][] intArray40 = new java.lang.Integer[][][] { intArray11, intArray18, intArray25, intArray32, intArray39 };
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[][] intArray59 = new java.lang.Integer[][] { intArray43, intArray46, intArray49, intArray52, intArray55, intArray58 };
        java.lang.String[] strArray62 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.stream.Stream<java.lang.String> strStream65 = strList63.parallelStream();
        java.lang.String[] strArray68 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.stream.Stream<java.lang.String> strStream71 = strList69.parallelStream();
        boolean boolean72 = strList63.addAll((java.util.Collection<java.lang.String>) strList69);
        java.lang.Object obj73 = null;
        boolean boolean74 = strList69.equals(obj73);
        int int75 = strList69.size();
        java.lang.Integer[][] intArray76 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray59, (java.lang.Object) strList69);
        java.lang.Integer[][][] intArray77 = org.apache.commons.lang3.ArrayUtils.add(intArray40, intArray76);
        java.lang.Integer[][][][] intArray78 = org.apache.commons.lang3.ArrayUtils.add(intArray3, (int) (short) 0, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[][][][] objArray80 = org.apache.commons.lang3.ArrayUtils.remove((java.lang.Object[][][][]) intArray78, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strStream65);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strStream71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertNotNull(intArray78);
    }

    @Test
    public void test06152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06152");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        long[] longArray28 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray28);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(longArray28, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray28);
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.clone(longArray28);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray28);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray28);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(longArray28, (long) (short) 100);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray28);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray28, (long) 3, (int) (byte) 100);
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.addAll(longArray24, longArray28);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(longArray28, (long) 10);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.add(longArray28, (long) (short) 0);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray46, (long) '4', 10);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray52 = org.apache.commons.lang3.ArrayUtils.add(longArray46, 7, 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, -1, 0, -1]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[-1, 0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test06153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06153");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray13);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray13);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray6, (java.lang.Object) intArray13);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 10);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray18, (byte) 10);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray18, (byte) -1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray18, (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.remove(byteArray18, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 1, 100, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, 1, 100, 1]");
    }

    @Test
    public void test06154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06154");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(0.0d, (double) 10);
        long[] longArray34 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(longArray34, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray34);
        boolean boolean39 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray34);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        java.lang.Long[] longArray41 = org.apache.commons.lang3.ArrayUtils.toObject(longArray40);
        long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray41, (long) 'a');
        java.lang.Long[] longArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray44);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray44);
        java.lang.Long[] longArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray44);
        java.lang.Object[] objArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray47);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray47);
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.subarray(longArray49, 7, (int) ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder28.append(longArray43, longArray49);
        java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray57);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray57);
        boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray57);
        java.lang.Boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray57);
        boolean boolean63 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder53, (java.lang.Object) booleanArray57, false);
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray57);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray64, false);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[-1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[]");
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test06155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06155");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a');
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (-1));
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.clone(intArray18);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray20, (int) '4', (int) (byte) -1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test06156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06156");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.subarray(intArray8, (int) (byte) 100, (int) 'a');
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray21);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray22, intArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(intArray23, (int) '4');
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray23, (int) 'a', (int) (short) 0);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray23, (int) '#', (int) (short) 0);
        int[] intArray35 = org.apache.commons.lang3.ArrayUtils.subarray(intArray23, (int) (short) 0, (int) (short) 1);
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray36, 100);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray36, (int) (byte) 10);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.subarray(intArray36, (int) (short) 10, 10);
        java.lang.Class<?> wildcardClass44 = intArray36.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test06157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06157");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray13, floatArray20);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.remove(floatArray20, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test06158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06158");
        java.lang.Short[] shortArray0 = null;
        java.lang.Short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0);
        java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) -1);
        java.lang.String str6 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray1, "hi!");
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray13);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray14, intArray15);
        int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray1, (java.lang.Object) intArray14, 3);
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray14);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray19, 11);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{}" + "'", str6, "{}");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test06159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06159");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray31 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray31, (double) (byte) 100, 1.0d);
        double[] doubleArray39 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray31, doubleArray39);
        float[] floatArray45 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray48 = new float[] { (byte) -1, 1L };
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray48, (float) 10L);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray45, floatArray48);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray39, (java.lang.Object) boolean51);
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray39, (int) (short) 0, 1);
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray56);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray55, doubleArray56);
        double[] doubleArray62 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray62, (double) (byte) 100, 1.0d);
        double[] doubleArray70 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray62, doubleArray70);
        float[] floatArray76 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray79 = new float[] { (byte) -1, 1L };
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray79, (float) 10L);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray76, floatArray79);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray70, (java.lang.Object) boolean82);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray70, (int) (short) 0, 1);
        double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray86, (double) (byte) -1);
        double[] doubleArray91 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray88, (int) (byte) 100, 1);
        double[] doubleArray92 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray56, doubleArray91);
        java.lang.Double[] doubleArray93 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray92);
        boolean boolean94 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray11, doubleArray92);
        boolean boolean97 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray92, (double) 3, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test06160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06160");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        boolean boolean33 = equalsBuilder31.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder31.append(true, true);
        double[] doubleArray40 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray40, (double) (byte) 100, 1.0d);
        double[] doubleArray48 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray40, doubleArray48);
        float[] floatArray54 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray57 = new float[] { (byte) -1, 1L };
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray57, (float) 10L);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray54, floatArray57);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray48, (java.lang.Object) boolean60);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray48, (int) (short) 0, 1);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray48);
        java.lang.Double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray65);
        java.lang.Double[] doubleArray73 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder36.append((java.lang.Object[]) doubleArray66, (java.lang.Object[]) doubleArray73);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray66);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray76);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test06161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06161");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (-1), (float) '4');
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray16 = new char[] { '#', 'a', 'a' };
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.addAll(charArray12, charArray16);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.subarray(charArray16, (int) 'a', (int) (short) 10);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.add(charArray20, (int) (short) 0, '4');
        java.lang.Character[] charArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray24, '4');
        java.lang.Character[] charArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray24);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray28);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray23, charArray28);
        char[] charArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray23);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.clone(charArray31);
        java.lang.Character[] charArray33 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33);
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray33);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray35);
        char[] charArray42 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray46 = new char[] { '#', 'a', 'a' };
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.addAll(charArray42, charArray46);
        java.lang.String str48 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray42);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray35, charArray42);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.subarray(charArray35, 4, (int) '#');
        int int53 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) charArray35);
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray35);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder55 = equalsBuilder3.append(charArray32, charArray54);
        java.lang.Character[] charArray56 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray56, '4');
        java.lang.Character[] charArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray56);
        java.lang.Character[] charArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray56);
        char[] charArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray60);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray61, 'a', (int) 'a');
        char[] charArray65 = org.apache.commons.lang3.ArrayUtils.addAll(charArray54, charArray61);
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray54);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{4,#,a,4,#}" + "'", str48, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[]");
    }

    @Test
    public void test06162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06162");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray3, (long) 5, 10);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.clone(longArray3);
        java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toObject(longArray7);
        java.lang.Object[] objArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray8);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray8, (long) (short) 1);
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray8);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[-1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[-1]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertNotNull(longArray12);
    }

    @Test
    public void test06163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06163");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) -1);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray5, (short) 0);
        short[] shortArray15 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray19 = new java.lang.Short[] {};
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray19);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray19, (short) 1);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray15, shortArray22);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) 0, 0);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.add(shortArray15, (int) (byte) 0, (short) 0);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray29, (short) (byte) 1, (int) (short) 0);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray29, (short) (byte) -1, 0);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray29, (int) (byte) 100, (int) (byte) 100);
        short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray38);
        java.lang.Short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray38);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.clone(shortArray38);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray38);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[]");
    }

    @Test
    public void test06164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06164");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) (byte) 100, 1.0d);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray38);
        float[] floatArray44 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray38, (java.lang.Object) boolean50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray38);
        long[] longArray59 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.subarray(longArray59, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray59);
        java.lang.Character[] charArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray65, '4');
        java.lang.Character[] charArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray65);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray68, ' ');
        java.lang.Object[] objArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray68);
        java.lang.String[] strArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray74 = org.apache.commons.lang3.ArrayUtils.add(strArray72, "{true,true}");
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(objArray71, (java.lang.Object[]) strArray72);
        boolean boolean76 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray52, (java.lang.Object) longArray59, strArray72);
        java.lang.String[] strArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray72);
        java.lang.String[] strArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray72);
        java.lang.String[] strArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray72);
        java.lang.Object[] objArray80 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) strArray79);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) strArray79);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
    }

    @Test
    public void test06165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06165");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        float[] floatArray5 = null;
        float[] floatArray6 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray20 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.remove(floatArray20, (int) (short) 1);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray14, floatArray23);
        boolean boolean25 = strList12.equals((java.lang.Object) floatArray24);
        float[] floatArray31 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray31, (float) 1);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray24, floatArray31);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder0.append(floatArray5, floatArray6);
        byte[] byteArray38 = new byte[] {};
        byte[] byteArray43 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray38, byteArray43);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) -1);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray38, (byte) -1);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray38);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray38, (int) (byte) -1, (int) '4');
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray54);
        java.lang.Boolean[] booleanArray62 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray62, true);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray62, false);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray62, true);
        boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray68, (int) (short) 100, 7);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder0.append((java.lang.Object) byteArray54, (java.lang.Object) 7);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder0.append((long) (short) 0, (long) 9);
        java.lang.Character[] charArray76 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray76);
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray76);
        char[] charArray84 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray88 = new char[] { '#', 'a', 'a' };
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.addAll(charArray84, charArray88);
        java.lang.String str90 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray84);
        char[] charArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder75.append(charArray78, charArray84);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder95 = equalsBuilder75.append('a', ' ');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder98 = equalsBuilder95.append((double) 100L, (double) 1);
        equalsBuilder95.reset();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "{4,#,a,4,#}" + "'", str90, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertNotNull(equalsBuilder95);
        org.junit.Assert.assertNotNull(equalsBuilder98);
    }

    @Test
    public void test06166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06166");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder0.append('a', '#');
        java.lang.Boolean boolean36 = equalsBuilder0.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((int) (byte) 1, 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder41.append((byte) 100, (byte) 0);
        java.lang.Long[] longArray50 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray50);
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray50, (long) (short) 10);
        java.lang.Long[] longArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray50);
        java.lang.Long[] longArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray54);
        double[] doubleArray59 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray59, (double) (byte) 100, 1.0d);
        double[] doubleArray67 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray59, doubleArray67);
        float[] floatArray73 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray76 = new float[] { (byte) -1, 1L };
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray76, (float) 10L);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray73, floatArray76);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray67, (java.lang.Object) boolean79);
        double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray67);
        java.lang.Double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray81);
        double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray82, (double) (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder85 = equalsBuilder44.append((java.lang.Object[]) longArray55, (java.lang.Object[]) doubleArray82);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder85);
    }

    @Test
    public void test06167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06167");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray9, ' ', 2);
        char[] charArray16 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, 0, (int) (byte) 10);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.add(charArray16, ' ');
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.toObject(charArray16);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.subarray(charArray16, (int) (byte) -1, (int) (short) -1);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray16, '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder25 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray31 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray35 = new char[] { '#', 'a', 'a' };
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.addAll(charArray31, charArray35);
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray31, ' ');
        char[] charArray44 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray48 = new char[] { '#', 'a', 'a' };
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.addAll(charArray44, charArray48);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray48, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder25.append((java.lang.Object) ' ', (java.lang.Object) charArray48);
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.add(charArray48, '#');
        char[] charArray61 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray65 = new char[] { '#', 'a', 'a' };
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.addAll(charArray61, charArray65);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray65, ' ', 2);
        char[] charArray72 = org.apache.commons.lang3.ArrayUtils.subarray(charArray65, 0, (int) (byte) 10);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray55, charArray72);
        boolean boolean74 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray72);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray24, charArray72);
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray24);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray78 = org.apache.commons.lang3.ArrayUtils.remove(charArray24, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#aa ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#aa ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, a, a,  ]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, a]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a, a, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[a, a]");
    }

    @Test
    public void test06168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06168");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray1);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06169");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.add(byteArray17, 8, (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Length: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0, 10]");
    }

    @Test
    public void test06170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06170");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray8, 1);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray16 = org.apache.commons.lang3.ArrayUtils.add(intArray8, 5, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1]");
    }

    @Test
    public void test06171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06171");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray0, 'a', (int) '4');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.add(charArray0, 0, ' ');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.add(charArray0, 'a');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray12 = org.apache.commons.lang3.ArrayUtils.remove(charArray10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ ]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]");
    }

    @Test
    public void test06172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06172");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.add(charArray12, ' ');
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray15);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.clone(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray12, charArray17);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray19);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray19);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray19, '#');
        char[] charArray29 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray33 = new char[] { '#', 'a', 'a' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray33);
        char[] charArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray29, ' ');
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray29);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray47 = new char[] { '#', 'a', 'a' };
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.addAll(charArray43, charArray47);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.subarray(charArray47, (int) 'a', (int) (short) 10);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray47, '4');
        char[] charArray54 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray47);
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.clone(charArray54);
        java.lang.Character[] charArray56 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray56);
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray56);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray58);
        char[] charArray65 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray69 = new char[] { '#', 'a', 'a' };
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.addAll(charArray65, charArray69);
        java.lang.String str71 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray65);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray58, charArray65);
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray58);
        char[] charArray74 = org.apache.commons.lang3.ArrayUtils.addAll(charArray55, charArray73);
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray73, '#');
        char[] charArray79 = org.apache.commons.lang3.ArrayUtils.subarray(charArray76, (int) 'a', (int) (byte) 100);
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray12, charArray79);
        java.lang.Character[] charArray81 = org.apache.commons.lang3.ArrayUtils.toObject(charArray79);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{4,#,a,4,#}" + "'", str71, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(charArray81);
    }

    @Test
    public void test06173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06173");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, 100.0d, (int) (short) 1, (double) 1L);
        int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 11, 100, (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test06174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06174");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray14, true);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray14, false, (int) '4');
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, false, false]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test06175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06175");
        float[] floatArray4 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray7 = new float[] { (byte) -1, 1L };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, (float) 10L);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray4, floatArray7);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray7, 1.0f, 0);
        float[] floatArray19 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray19);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray19, (int) (byte) 1, 0);
        float[] floatArray27 = new float[] { (byte) -1, 1L };
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray27, (float) 10L);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray24, floatArray27);
        java.lang.Float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray27);
        float[] floatArray34 = new float[] { (byte) -1, 1L };
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, (float) 10L);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray34);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray27, floatArray34);
        float[] floatArray41 = new float[] { (byte) -1, 1L };
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray41, (float) 10L);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray41, (float) (short) 100);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray45, (float) 'a');
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray27, floatArray45);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray7, floatArray27);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, (float) 1, 5);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray7, 0.0f);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray7, (-1.0f), (int) (byte) -1);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test06176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06176");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder0.append('a', '#');
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray36, byteArray41);
        byte[] byteArray49 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.add(byteArray49, (byte) -1);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.clone(byteArray51);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray52, (byte) 100);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(byteArray52, (byte) 0);
        byte[] byteArray57 = org.apache.commons.lang3.ArrayUtils.clone(byteArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder35.append(byteArray41, byteArray52);
        float[] floatArray64 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray64);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray64);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray64, (int) (byte) 1, 0);
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.add(floatArray69, (float) (short) 0);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray71, (float) (short) 100);
        float[] floatArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray71, (float) (short) 100);
        float[] floatArray81 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray82 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray81);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray81, 0.0f);
        java.lang.Float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray81);
        java.lang.Object[] objArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray85);
        float[] floatArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray85);
        float[] floatArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray85, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder35.append(floatArray75, floatArray89);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder93 = equalsBuilder35.append((long) (short) 100, (long) (byte) -1);
        equalsBuilder93.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder97 = equalsBuilder93.append(' ', 'a');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[0.0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[0.0]");
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray89), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(equalsBuilder93);
        org.junit.Assert.assertNotNull(equalsBuilder97);
    }

    @Test
    public void test06177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06177");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray12, true);
        boolean[] booleanArray20 = new boolean[] { false, true, false, false, false };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray20, false);
        java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray20);
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray20);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray12, booleanArray24);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray32 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray36 = new char[] { '#', 'a', 'a' };
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.addAll(charArray32, charArray36);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray32, ' ');
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray49 = new char[] { '#', 'a', 'a' };
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.addAll(charArray45, charArray49);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray49, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder26.append((java.lang.Object) ' ', (java.lang.Object) charArray49);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder26.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder26.append((double) '4', 0.0d);
        java.lang.Boolean[] booleanArray64 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray64);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray64);
        boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray64);
        boolean[] booleanArray73 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray73, (int) (byte) 0, 0);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray73, true);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray67, booleanArray73);
        java.lang.Boolean[] booleanArray83 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray84 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray83);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray84);
        int int87 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray84, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder88 = equalsBuilder60.append(booleanArray73, booleanArray84);
        boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray73);
        boolean[] booleanArray91 = org.apache.commons.lang3.ArrayUtils.add(booleanArray73, true);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray73);
        boolean[] booleanArray94 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray73, true);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray25, booleanArray73);
        boolean boolean97 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray73, true);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true, false, false, false]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, false, true, false, false, false, true, false, false, false]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray84), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(equalsBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[true, false, true, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray94), "[true, true, false, true]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test06178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06178");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder31.append(false, true);
        short[] shortArray43 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray43, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray43);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray43, (short) (byte) 0);
        java.lang.Short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray43);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray50);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.clone(shortArray51);
        java.lang.String[] strArray55 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.stream.Stream<java.lang.String> strStream58 = strList56.parallelStream();
        java.lang.String[] strArray61 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.stream.Stream<java.lang.String> strStream64 = strList62.parallelStream();
        boolean boolean65 = strList56.addAll((java.util.Collection<java.lang.String>) strList62);
        java.lang.Object obj66 = null;
        boolean boolean67 = strList62.equals(obj66);
        java.lang.Object[] objArray68 = strList62.toArray();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder69 = equalsBuilder31.append((java.lang.Object) shortArray52, (java.lang.Object) strList62);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.contains(shortArray52, (short) (byte) 100);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray72, (short) 100, (int) (short) 0);
        int int77 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray72, (short) (byte) 10);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray52, shortArray72);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strStream58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[4, hi!]");
        org.junit.Assert.assertNotNull(equalsBuilder69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test06179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06179");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray10 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray11, false);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray11, false);
        boolean[] booleanArray21 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray21, (int) (byte) 0, 0);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray21, 4, (int) '4');
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray15, booleanArray27);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray27);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray4, (int) (short) 0);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray4, false);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[true]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[true, true]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test06180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06180");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray12, (int) '4', (int) (short) 0);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.add(shortArray12, (short) 0);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray18, (short) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test06181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06181");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray2);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray2, 100, (int) (short) 10);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[]");
    }

    @Test
    public void test06182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06182");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        long[] longArray13 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray13);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, (long) 0);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.addAll(longArray1, longArray13);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray1, 0L);
        long[] longArray25 = org.apache.commons.lang3.ArrayUtils.subarray(longArray1, (int) (byte) 0, 2);
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.add(longArray25, 10L);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1]");
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[-1, 10]");
    }

    @Test
    public void test06183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06183");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) (-1L), (int) (short) 100, (double) 100.0f);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray32);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray37, (double) (short) -1, 2, (double) (byte) 0);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray37, (double) (-1L), (int) (short) 1);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray37, (double) 2, 0, 0.0d);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
    }

    @Test
    public void test06184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06184");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        equalsBuilder50.reset();
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray52);
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray52);
        java.lang.Long[] longArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray52);
        java.lang.Object[] objArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray55);
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray55);
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.subarray(longArray57, 7, (int) ' ');
        long[] longArray63 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray63);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(longArray63, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray63);
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray63);
        long[] longArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray63);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray69);
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.add(longArray69, (long) (byte) -1);
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.clone(longArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder50.append(longArray60, longArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder50.append('a', '4');
        int[] intArray78 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray78, (int) '4', 2);
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray85 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray84);
        int[] intArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray84);
        java.lang.Integer[] intArray87 = org.apache.commons.lang3.ArrayUtils.toObject(intArray86);
        java.lang.Integer[] intArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray87);
        int[] intArray90 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray88, 100);
        int int92 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray90, (int) (byte) 1);
        int[] intArray93 = org.apache.commons.lang3.ArrayUtils.addAll(intArray78, intArray90);
        java.util.Collection<java.lang.String> strCollection94 = null;
        boolean boolean95 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) '4', (java.lang.Object) intArray93, strCollection94);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[]");
        org.junit.Assert.assertNotNull(longArray55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[-1, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[1, 0]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[1, 0]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test06185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06185");
        double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY;
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray0, 0.0d, (double) 1.0f);
        double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray0);
        double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4);
        double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray4, (double) '4', (double) '4');
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test06186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06186");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) -1, (int) (short) 100);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4);
        short[] shortArray9 = null;
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray10, (short) -1);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray10, (short) 100, (int) (short) 1);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(shortArray10, (short) (byte) 1);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, 4, (int) (short) 10);
        short[] shortArray27 = new short[] { (short) 10, (short) 100, (byte) -1, (byte) 0, (short) 10, (byte) 100 };
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray27, (short) (byte) 0, (int) (short) -1);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray27, (short) (byte) 1);
        java.lang.Short[] shortArray33 = new java.lang.Short[] {};
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33, (short) 1);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33, (short) 0);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray38, (short) -1);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray38, (short) 0);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray27, shortArray42);
        java.lang.Short[] shortArray44 = new java.lang.Short[] {};
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray44);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray44, (short) 1);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray47, (short) 0);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray47);
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray47, (short) (byte) 10, (int) (short) -1);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray47, (short) (byte) 0, (int) (byte) 0);
        short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray47);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray42, shortArray57);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray42, (short) (byte) 0);
        short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray42);
        java.lang.Short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray42);
        java.lang.Object[] objArray63 = null;
        java.lang.Class<?>[] wildcardClassArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        java.lang.reflect.AnnotatedElement[] annotatedElementArray65 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.reflect.AnnotatedElement[]) wildcardClassArray64);
        java.lang.reflect.Type[] typeArray66 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.reflect.Type[]) wildcardClassArray64);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(objArray63, (java.lang.Object) wildcardClassArray64, (int) 'a');
        short[] shortArray73 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int76 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray73, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray73);
        java.lang.Class<?>[] wildcardClassArray78 = org.apache.commons.lang3.ArrayUtils.removeElement(wildcardClassArray64, (java.lang.Object) shortArray73);
        java.lang.String str80 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray73, "hi!");
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray73);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray42, shortArray73);
        short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray20, shortArray73);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[]");
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[]");
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertNotNull(wildcardClassArray64);
        org.junit.Assert.assertNotNull(annotatedElementArray65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[1, 0, 0, -1]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "{-1,0,0,1}" + "'", str80, "{-1,0,0,1}");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[1, 0, 0, -1]");
    }

    @Test
    public void test06187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06187");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2);
        java.lang.Character[] charArray4 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray4);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray4);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray6);
        char[] charArray13 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray17 = new char[] { '#', 'a', 'a' };
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.addAll(charArray13, charArray17);
        java.lang.String str19 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray13);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray6, charArray13);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, 4, (int) '#');
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray3, charArray23);
        char[] charArray30 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray34 = new char[] { '#', 'a', 'a' };
        char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray30, charArray34);
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray30, ' ');
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray30);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.addAll(charArray23, charArray30);
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray23);
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray40, 'a');
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(charArray40, ' ');
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray40, 'a', (int) (short) 0);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{4,#,a,4,#}" + "'", str19, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test06188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06188");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray6, (int) (short) 1, 1);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray17, (int) '4', (int) '#');
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.add(booleanArray20, true);
        boolean[] booleanArray29 = new boolean[] { false, false, false, true, false, false };
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray29);
        boolean[] booleanArray37 = new boolean[] { false, false, false, true, false, false };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray37);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray29, booleanArray37);
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray29, false);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray29, false);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray29, (int) (byte) 100, 100);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray20, booleanArray29);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray20);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray20);
        java.lang.Object obj50 = null;
        boolean boolean52 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) booleanArray20, obj50, false);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test06189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06189");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = new byte[] {};
        byte[] byteArray23 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray18, byteArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray18, (byte) -1);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray18, (byte) -1);
        byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.add(byteArray28, (byte) 100);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray15, byteArray30);
        java.lang.Byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray30);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray30);
        byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray30, (-1), 6);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray36);
        java.lang.String str38 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) byteArray36);
        java.lang.String str39 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) byteArray36);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{100}" + "'", str38, "{100}");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{100}" + "'", str39, "{100}");
    }

    @Test
    public void test06190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06190");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(2, 5);
        java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray35);
        java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray37);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray39);
        char[] charArray46 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray50 = new char[] { '#', 'a', 'a' };
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.addAll(charArray46, charArray50);
        java.lang.String str52 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray46);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray39, charArray46);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray63 = new char[] { '#', 'a', 'a' };
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.addAll(charArray59, charArray63);
        java.lang.String str65 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray59);
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray59);
        boolean boolean68 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray46, (java.lang.Object) charArray66, false);
        java.lang.Character[] charArray69 = org.apache.commons.lang3.ArrayUtils.toObject(charArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append((java.lang.Object[]) doubleArray35, (java.lang.Object[]) charArray69);
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray69);
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray71, 'a');
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray71, '#');
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.add(charArray75, '#');
        char[] charArray83 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray87 = new char[] { '#', 'a', 'a' };
        char[] charArray88 = org.apache.commons.lang3.ArrayUtils.addAll(charArray83, charArray87);
        int int91 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray87, ' ', 1);
        int int94 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray87, '4', 2);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray75, charArray87);
        char[] charArray98 = org.apache.commons.lang3.ArrayUtils.subarray(charArray87, (int) (byte) -1, (int) (byte) 0);
        char[] charArray99 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray98);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{4,#,a,4,#}" + "'", str52, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{4,#,a,4,#}" + "'", str65, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4, #, 4, #]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "4a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "4a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[4, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "4a4##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "4a4##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[4, a, 4, #, #]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(charArray98);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray98), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray98), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray98), "[]");
        org.junit.Assert.assertNotNull(charArray99);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray99), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray99), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray99), "[]");
    }

    @Test
    public void test06191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06191");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(shortArray25, (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) 0, (-1));
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray36, (int) (short) 10, 3);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((java.lang.Object) int31, (java.lang.Object) booleanArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder0.append(3, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(1.0f, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append('#', '#');
        java.lang.Long[] longArray56 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray56);
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.add(longArray57, (int) (byte) 1, (long) (short) 10);
        long[] longArray67 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray70 = org.apache.commons.lang3.ArrayUtils.subarray(longArray67, 3, (int) (byte) 0);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder47.append(longArray60, longArray67);
        long[] longArray74 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray74);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.contains(longArray74, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray74);
        long[] longArray79 = org.apache.commons.lang3.ArrayUtils.clone(longArray74);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray74);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray74);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.contains(longArray74, (long) (short) 100);
        long[] longArray84 = org.apache.commons.lang3.ArrayUtils.clone(longArray74);
        long[] longArray86 = org.apache.commons.lang3.ArrayUtils.add(longArray74, (long) (short) -1);
        boolean boolean87 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) equalsBuilder47, (java.lang.Object) (short) -1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[0, 10, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(longArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[-1]");
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray86), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test06192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06192");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, false);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray6, 6, (int) (byte) -1);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, false);
        java.lang.Boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, true, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray28);
    }

    @Test
    public void test06193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06193");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray4, false);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray4, false);
        java.lang.String str10 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray8, "{}");
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray8);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray12, false);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{true,true}" + "'", str10, "{true,true}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, true]");
    }

    @Test
    public void test06194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06194");
        boolean[] booleanArray1 = new boolean[] { true };
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, false);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray1, booleanArray6);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray12, true, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray1), "[true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, true, false, true]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test06195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06195");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.subarray(intArray8, (int) (byte) 100, (int) 'a');
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder16 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray24, intArray25);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray25, (int) (byte) 0);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray25);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray30, (int) (byte) 1);
        int[] intArray33 = new int[] {};
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray33, intArray34);
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.addAll(intArray30, intArray33);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder16.append(intArray29, intArray33);
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray33);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray38, 2);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(intArray38, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray38);
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(intArray51, 1);
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.addAll(intArray38, intArray51);
        int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray51, 10, (int) (byte) 0);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray51, (int) (short) 0);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray51);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray63 = org.apache.commons.lang3.ArrayUtils.add(intArray51, (int) (byte) 100, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test06196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06196");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) -1, (int) (short) 100);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray8);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        byte[] byteArray11 = new byte[] {};
        byte[] byteArray16 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray11, byteArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray11, (byte) -1);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray11, (byte) -1);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.clone(byteArray21);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.add(byteArray21, (byte) 10);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray30 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray25, byteArray30);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray25, (byte) -1);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray25, (byte) -1);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray25, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray25);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray25, (int) (byte) -1, (int) '4');
        byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray21, byteArray41);
        byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.clone(byteArray42);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray9, (java.lang.Object) byteArray43);
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        java.lang.Object[] objArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) shortArray9);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) (byte) 100);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray49, (short) 1, (int) '#');
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test06197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06197");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d, (-1.0d), 100.0d, 100.0d, (-1.0d) };
        java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5);
        double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (double) 100L);
        double[] doubleArray12 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray12, (double) (byte) 100, 1.0d);
        double[] doubleArray20 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray12, doubleArray20);
        float[] floatArray26 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray29 = new float[] { (byte) -1, 1L };
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray29, (float) 10L);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray26, floatArray29);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray20, (java.lang.Object) boolean32);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20);
        java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray34);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray35, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray35);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray35, (double) '#');
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray40, (double) '#');
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray40, (double) 5, (int) (byte) -1, 100.0d);
        double[] doubleArray50 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray50, (double) (byte) 100, 1.0d);
        double[] doubleArray58 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray50, doubleArray58);
        float[] floatArray64 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray67 = new float[] { (byte) -1, 1L };
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray67, (float) 10L);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray64, floatArray67);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray58, (java.lang.Object) boolean70);
        double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray58, (int) (short) 0, 1);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray74, (double) (-1.0f));
        double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray74);
        double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray40, doubleArray74);
        double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray8, doubleArray74);
        int int83 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray74, (double) (short) -1, (int) (byte) 10, (double) 'a');
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 10.0, 0.0, 1.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray67), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 10.0, 0.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, -1.0, 100.0, 100.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
    }

    @Test
    public void test06198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06198");
        short[] shortArray6 = new short[] { (short) 10, (short) 100, (byte) -1, (byte) 0, (short) 10, (byte) 100 };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) (byte) 0, (int) (short) -1);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) (byte) 1);
        java.lang.Short[] shortArray12 = new java.lang.Short[] {};
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) 1);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray17, (short) -1);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray17, (short) 0);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray21);
        java.lang.Short[] shortArray23 = new java.lang.Short[] {};
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23, (short) 1);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray26, (short) 0);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray26);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray26, (short) (byte) 10, (int) (short) -1);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray26, (short) (byte) 0, (int) (byte) 0);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray26);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray36);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray21, (short) (byte) 0);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray21);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray21, (short) (byte) 10, 7);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test06199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06199");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, 2);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) 'a', 100);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.add(intArray22, (int) (short) 1);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray22);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray34 = org.apache.commons.lang3.ArrayUtils.add(intArray22, (int) (byte) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test06200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06200");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d, (-1.0d), 100.0d, 100.0d, (-1.0d) };
        java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5);
        double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray5);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5);
        java.lang.Object[] objArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100.0, -1.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100.0, -1.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test06201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06201");
        java.lang.Character[][][][][] charArray0 = new java.lang.Character[][][][][] {};
        java.lang.Character[][][][][] charArray1 = new java.lang.Character[][][][][] {};
        java.lang.Character[][][][][] charArray2 = new java.lang.Character[][][][][] {};
        java.lang.Character[][][][][] charArray3 = new java.lang.Character[][][][][] {};
        java.lang.Character[][][][][] charArray4 = new java.lang.Character[][][][][] {};
        java.lang.Character[][][][][] charArray5 = new java.lang.Character[][][][][] {};
        java.lang.Character[][][][][][] charArray6 = new java.lang.Character[][][][][][] { charArray0, charArray1, charArray2, charArray3, charArray4, charArray5 };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray6);
        java.lang.Character[][][][][][] charArray8 = org.apache.commons.lang3.ArrayUtils.toArray(charArray6);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charArray8);
    }

    @Test
    public void test06202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06202");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false]");
    }

    @Test
    public void test06203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06203");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray8);
        java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray9);
        java.lang.Long[] longArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray10);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray12);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test06204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06204");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        boolean boolean35 = equalsBuilder34.isEquals();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray42);
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray43, intArray44);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains(intArray44, (int) '4');
        int[] intArray49 = org.apache.commons.lang3.ArrayUtils.add(intArray44, (int) (short) 100);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray44);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray44);
        int[] intArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray44, (int) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray61);
        int[] intArray63 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray62, intArray63);
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray63, (int) (byte) 0);
        int[] intArray67 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray63);
        int[] intArray68 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray68, (int) (byte) 1);
        int[] intArray71 = new int[] {};
        int[] intArray72 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray71, intArray72);
        int[] intArray74 = org.apache.commons.lang3.ArrayUtils.addAll(intArray68, intArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder75 = equalsBuilder54.append(intArray67, intArray71);
        int[] intArray77 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray67, (int) (short) -1);
        int int80 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray77, (int) '#', (-1));
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder81 = equalsBuilder34.append(intArray44, intArray77);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray44);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray44, (-1));
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder75);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test06205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06205");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        int int15 = strList9.size();
        float[] floatArray21 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) 1);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, (float) 10);
        boolean boolean27 = strList9.remove((java.lang.Object) floatArray21);
        java.lang.String[] strArray30 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.parallelStream();
        java.util.Iterator<java.lang.String> strItor34 = strList31.iterator();
        boolean boolean35 = strList9.containsAll((java.util.Collection<java.lang.String>) strList31);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "{}", "{4,#,a,4,#}", "4" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.stream.Stream<java.lang.String> strStream43 = strList41.parallelStream();
        boolean boolean44 = strList9.removeAll((java.util.Collection<java.lang.String>) strList41);
        java.lang.Object[] objArray45 = strList9.toArray();
        java.util.stream.Stream<java.lang.String> strStream46 = strList9.parallelStream();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray53);
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray54, intArray55);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray55, (int) (byte) 0);
        int[] intArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray55);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray59);
        java.lang.Integer[] intArray61 = org.apache.commons.lang3.ArrayUtils.toObject(intArray59);
        boolean boolean62 = strList9.remove((java.lang.Object) intArray61);
        boolean boolean64 = strList9.add("");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test06206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06206");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(2, 5);
        equalsBuilder31.reset();
        java.lang.Boolean boolean36 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder31.append(' ', 'a');
        long[] longArray46 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.subarray(longArray46, 3, (int) (byte) 0);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray49);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains(longArray50, (long) (short) 10);
        java.lang.Long[] longArray58 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray58);
        java.lang.Long[] longArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray58);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray60);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray60, (-1L));
        java.lang.Character[] charArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        java.lang.Character[] charArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray64);
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray66);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray66, (short) 0);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray64, (java.lang.Object) (short) 0);
        long[] longArray72 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray72);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.contains(longArray72, 0L);
        long[] longArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray72);
        int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray76, (long) (byte) 1, (int) (short) 1);
        java.lang.Long[] longArray80 = org.apache.commons.lang3.ArrayUtils.toObject(longArray76);
        int int82 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) charArray64, (java.lang.Object) longArray76, (-1));
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray63, longArray76);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder84 = equalsBuilder39.append(longArray50, longArray63);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + true + "'", boolean36, true);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(longArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[-1]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(longArray80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(equalsBuilder84);
    }

    @Test
    public void test06207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06207");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (int) (byte) 0, (short) 0);
        short[] shortArray25 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray25, (short) (byte) 0);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray31, (short) (byte) 10);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray19, shortArray31);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray34, (short) -1);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[-1, 1, 0, 100, -1, 1, 0, 0, 100, 0]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1, 0, 100, -1, 1, 0, 0, 100, 0]");
    }

    @Test
    public void test06208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06208");
        double[] doubleArray0 = null;
        double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray0);
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray1);
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray1);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test06209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06209");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray5);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16, true);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray18, true);
        boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray18);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray5, booleanArray18);
        java.lang.Boolean[] booleanArray26 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray26);
        boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray26);
        int int29 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) booleanArray28);
        java.lang.Boolean[] booleanArray33 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray34, true);
        boolean[] booleanArray43 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray43, (int) (byte) 0, 0);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray34, booleanArray46);
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray47);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray28, booleanArray47);
        boolean[] booleanArray51 = new boolean[] { true };
        java.lang.Boolean[] booleanArray55 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray55);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray56, false);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray56);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray56, true);
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray51, booleanArray56);
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray28, booleanArray62);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray63, true, 4);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray5, booleanArray63);
        java.lang.Boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray63);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[true, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true, true, true, false, true, true]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 3 + "'", int66 == 3);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(booleanArray68);
    }

    @Test
    public void test06210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06210");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray10, (float) (byte) 1);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray10);
        float[] floatArray19 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray19, 0.0f);
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray19);
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray29);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray29, (int) (byte) 1, 0);
        float[] floatArray37 = new float[] { (byte) -1, 1L };
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray37, (float) 10L);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray34, floatArray37);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray37);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray19, floatArray37);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray19);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray19);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray10, floatArray19);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray19);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray19);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test06211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06211");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray11);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray11, (long) (-1), (int) '4');
        long[] longArray16 = null;
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray16);
        java.lang.Long[] longArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray18);
        java.lang.Long[] longArray21 = org.apache.commons.lang3.ArrayUtils.toObject(longArray20);
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.subarray(longArray20, (int) '4', (int) (short) 0);
        long[] longArray26 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray26);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(longArray26, 0L);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray26);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray30, (long) (byte) 1, (int) (short) 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray30, (long) 3, (int) 'a');
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(longArray30, (long) 7);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.remove(longArray30, (int) (byte) 0);
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.addAll(longArray20, longArray40);
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray41);
        long[] longArray44 = org.apache.commons.lang3.ArrayUtils.add(longArray11, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray11);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[]");
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[-1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[-1]");
        org.junit.Assert.assertNotNull(longArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[-1, 0]");
    }

    @Test
    public void test06212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06212");
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) -1);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray15, (byte) 1);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(byteArray17, (byte) 100);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(byteArray17, (byte) 1);
        java.lang.Byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray17);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray22, (byte) 100);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 10);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray8, byteArray24);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.remove(byteArray24, 5);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.remove(byteArray29, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100, -1, 10, -1, -1, 100, -1, 0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1]");
    }

    @Test
    public void test06213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06213");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        long[] longArray29 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(longArray29, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray29);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray29);
        long[] longArray40 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray40);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, (long) (short) 100);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        long[] longArray52 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, (long) 0);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.addAll(longArray40, longArray52);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray59);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.addAll(longArray29, longArray59);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        java.lang.Long[] longArray63 = org.apache.commons.lang3.ArrayUtils.toObject(longArray59);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray63);
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray63, (long) 0);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[-1, -1, -1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[-1, -1]");
    }

    @Test
    public void test06214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06214");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray27);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) 'a', 2, (double) 10.0f);
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray56);
        java.lang.Double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray57);
        double[] doubleArray62 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray62, (double) (byte) 100, 1.0d);
        double[] doubleArray70 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray62, doubleArray70);
        float[] floatArray76 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray79 = new float[] { (byte) -1, 1L };
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray79, (float) 10L);
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray76, floatArray79);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray70, (java.lang.Object) boolean82);
        double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray70);
        java.lang.Double[] doubleArray85 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray84);
        double[] doubleArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray85, (double) 100);
        int int89 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray87, (double) 9);
        double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray57, doubleArray87);
        int int93 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray57, (double) 0, 0.0d);
        double[] doubleArray95 = org.apache.commons.lang3.ArrayUtils.add(doubleArray57, (double) 1L);
        int int98 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray57, (double) 9, 10.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray79), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test06215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06215");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.add(charArray23, '#');
        char[] charArray36 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray40 = new char[] { '#', 'a', 'a' };
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.addAll(charArray36, charArray40);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray40, ' ', 2);
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.subarray(charArray40, 0, (int) (byte) 10);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray30, charArray47);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.add(charArray30, '4');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray30);
        java.lang.Character[] charArray52 = org.apache.commons.lang3.ArrayUtils.toObject(charArray30);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray55 = org.apache.commons.lang3.ArrayUtils.add(charArray30, (int) (byte) 10, 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a, a, #]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#aa#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#aa#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a, a, #, 4]");
        org.junit.Assert.assertNotNull(charArray52);
    }

    @Test
    public void test06216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06216");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray10, (float) (byte) 1);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray10);
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        char[] charArray33 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray37 = new char[] { '#', 'a', 'a' };
        char[] charArray38 = org.apache.commons.lang3.ArrayUtils.addAll(charArray33, charArray37);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray23, charArray38);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) floatArray13, (java.lang.Object) charArray38);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray13, 0.0f);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray42, (int) (short) -1, (int) (byte) 0);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray45, 5, (int) (byte) 100);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.clone(floatArray48);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray49);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[]");
    }

    @Test
    public void test06217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06217");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append(2, 5);
        equalsBuilder31.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder31.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder31.append(100.0d, (double) (short) -1);
        java.lang.Boolean boolean41 = equalsBuilder31.build();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder31.append((long) (short) -1, 0L);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNotNull(equalsBuilder44);
    }

    @Test
    public void test06218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06218");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        float[] floatArray25 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray25);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray15, floatArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray15);
        float[] floatArray34 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, 0.0f);
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        float[] floatArray44 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray44);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray44, (int) (byte) 1, 0);
        float[] floatArray52 = new float[] { (byte) -1, 1L };
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray52, (float) 10L);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray49, floatArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray52);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray34, floatArray52);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray15, floatArray57);
        float[] floatArray64 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray64);
        float[] floatArray70 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray73 = new float[] { (byte) -1, 1L };
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray73, (float) 10L);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray70, floatArray73);
        java.lang.Float[] floatArray77 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray70);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray65, (java.lang.Object) floatArray77);
        float[] floatArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray65, (float) (short) 10);
        boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray58, floatArray80);
        float[] floatArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray58);
        int int85 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray58, (float) 'a', 4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 1.0, -1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[-1.0, 1.0, -1.0, 100.0, 100.0, 10.0, 35.0, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test06219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06219");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) (short) 100, (double) 'a');
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray11);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) (byte) 100, (int) (short) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray11);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) 100.0f, (int) (byte) 10);
        double[] doubleArray43 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray43, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray43);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray43, (double) (short) 1, (int) (short) 100);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray43, (double) (byte) 10, 0);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray43, (double) (short) 0, 7);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray43, 1);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray11, doubleArray43);
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray43, (double) (-1), 10.0d);
        java.lang.String str63 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) (-1));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[52.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "-1" + "'", str63, "-1");
    }

    @Test
    public void test06220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06220");
        boolean[] booleanArray3 = new boolean[] { true, true, true };
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, true);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray3);
        boolean[] booleanArray7 = null;
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray7);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray8, false, (int) 'a');
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test06221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06221");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a');
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, 2, (int) '4');
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray8, (int) (byte) 10);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray8, 2, 9);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test06222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06222");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray8);
        byte[] byteArray14 = new byte[] {};
        byte[] byteArray19 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray14, byteArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray14, (byte) -1);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray23, (byte) 100, 2);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray23);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray8, (byte) 100, (int) (short) 100);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
    }

    @Test
    public void test06223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06223");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder40.append(false, false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder40.append((float) 0, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder46.append((double) 5, (double) 1L);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
    }

    @Test
    public void test06224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06224");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        float[] floatArray5 = null;
        float[] floatArray6 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray20 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.remove(floatArray20, (int) (short) 1);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray14, floatArray23);
        boolean boolean25 = strList12.equals((java.lang.Object) floatArray24);
        float[] floatArray31 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray31, (float) 1);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray24, floatArray31);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray6, floatArray31);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder0.append(floatArray5, floatArray6);
        byte[] byteArray38 = new byte[] {};
        byte[] byteArray43 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray38, byteArray43);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) -1);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray38, (byte) -1);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray38);
        byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray38, (int) (byte) -1, (int) '4');
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray54);
        java.lang.Boolean[] booleanArray62 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray62, true);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray62, false);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray62, true);
        boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray68, (int) (short) 100, 7);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder72 = equalsBuilder0.append((java.lang.Object) byteArray54, (java.lang.Object) 7);
        byte[] byteArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray54);
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray73, (byte) 1);
        byte[] byteArray76 = org.apache.commons.lang3.ArrayUtils.clone(byteArray75);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder72);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[]");
    }

    @Test
    public void test06225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06225");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (byte) -1);
        int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 6);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray11, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test06226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06226");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6);
        java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray17, true);
        boolean[] booleanArray26 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray26, (int) (byte) 0, 0);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray17, booleanArray29);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray29, false, (int) (byte) 1);
        boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray29);
        java.lang.Boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray29);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray29);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray36, true, (int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray36, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }

    @Test
    public void test06227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06227");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, true, (int) (byte) -1);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.add(booleanArray5, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray10, false);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test06228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06228");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 10, 0);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (short) 0, 7);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, 0.0d, (double) 0);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10L, (double) 4);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test06229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06229");
        float[] floatArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.add(floatArray0, (-1), (float) 9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06230");
        long[] longArray4 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray4, 1L);
        long[] longArray8 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(longArray8, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray8);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray8);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray8);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(longArray8, (long) (short) 100);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        long[] longArray20 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray20);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(longArray20, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray20);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(longArray20, (long) 0);
        long[] longArray27 = org.apache.commons.lang3.ArrayUtils.addAll(longArray8, longArray20);
        long[] longArray29 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(longArray29, 0L);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray27, longArray29);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray4, longArray29);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.clone(longArray4);
        long[] longArray37 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray37);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(longArray37, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray37);
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.clone(longArray37);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray37);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray37);
        java.lang.Long[] longArray45 = org.apache.commons.lang3.ArrayUtils.toObject(longArray37);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray45);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray46, (long) 0, 4);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray46, (long) (short) 0);
        long[] longArray52 = org.apache.commons.lang3.ArrayUtils.addAll(longArray35, longArray51);
        java.lang.Long[] longArray58 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray58);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray58, (long) (short) 10);
        long[] longArray62 = org.apache.commons.lang3.ArrayUtils.clone(longArray61);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray62, (long) (short) 0);
        long[] longArray65 = org.apache.commons.lang3.ArrayUtils.addAll(longArray52, longArray64);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray65, (long) 'a', 5);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[-1]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(longArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[-1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[-1]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[32, 1, -1, 0, -1, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test06231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06231");
        boolean[] booleanArray3 = new boolean[] { true, true, true };
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, true);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray3, false);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray3);
        boolean[] booleanArray15 = new boolean[] { false, false, false, true, false, false };
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray15);
        boolean[] booleanArray23 = new boolean[] { false, false, false, true, false, false };
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray15, booleanArray23);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray23, true);
        java.lang.Boolean[] booleanArray31 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray32, false);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray32);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray27, booleanArray32);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray8, booleanArray36);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray8, 1);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray8);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false, false, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false, false, false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[true, true, true]");
    }

    @Test
    public void test06232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06232");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray17);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.add(byteArray17, (byte) 100);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray21, (byte) 0);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray21, (byte) 10, 5);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray21);
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray21, (byte) 10);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(byteArray21, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 0, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test06233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06233");
        short[] shortArray6 = new short[] { (short) 10, (short) 100, (byte) -1, (byte) 0, (short) 10, (byte) 100 };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) (byte) 0, (int) (short) -1);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) (byte) 1);
        java.lang.Short[] shortArray12 = new java.lang.Short[] {};
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) 1);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray17, (short) -1);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray17, (short) 0);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray21);
        java.lang.Short[] shortArray23 = new java.lang.Short[] {};
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23, (short) 1);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray26, (short) 0);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray26);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray26, (short) (byte) 10, (int) (short) -1);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray26, (short) (byte) 0, (int) (byte) 0);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray26);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray21, shortArray36);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.clone(shortArray37);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray37);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
    }

    @Test
    public void test06234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06234");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (int) (byte) 0, (short) 0);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray19, (short) (byte) 1, (int) (short) 0);
        java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19);
        java.lang.Short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray24);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.clone(shortArray26);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray26, (int) (byte) 100, (int) (byte) -1);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.clone(shortArray30);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray19, shortArray31);
        java.lang.Short[] shortArray33 = new java.lang.Short[] {};
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33, (short) 1);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33, (short) 0);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray38, (short) -1);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray38, (short) 0);
        short[] shortArray48 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray48, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray52 = new java.lang.Short[] {};
        short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray52, (short) 1);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray48, shortArray55);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray48, (short) 0, 0);
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.add(shortArray48, (int) (byte) 0, (short) 0);
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray62, (short) (byte) 1, (int) (short) 0);
        int int68 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray62, (short) (byte) -1, 0);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray62, (int) (byte) 100, (int) (byte) 100);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray42, shortArray71);
        java.lang.Short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray71);
        short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray19, shortArray71);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray74);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.contains(shortArray74, (short) 1);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 4 + "'", int65 == 4);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray74), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test06235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06235");
        short[] shortArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray0, (short) (byte) 100, 9);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test06236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06236");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray66, 5, 100);
        java.lang.Short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray79);
        java.lang.Character[] charArray81 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray81, '4');
        java.lang.Character[] charArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray81);
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray84, ' ');
        java.lang.Object[] objArray87 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray84);
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray80, (java.lang.Object) charArray84);
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray84);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray89);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test06237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06237");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, false);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5);
        java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, false);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true, true, false, false]");
    }

    @Test
    public void test06238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06238");
        java.lang.String[] strArray4 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray13 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.remove(floatArray13, (int) (short) 1);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray7, floatArray16);
        boolean boolean18 = strList5.equals((java.lang.Object) floatArray17);
        int int19 = strList5.size();
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray20, (int) (byte) 1);
        boolean boolean23 = strList5.contains((java.lang.Object) int22);
        java.lang.Byte[] byteArray30 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray30, (byte) 1);
        boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(byteArray32, (byte) 100);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(byteArray32, (byte) 1);
        java.lang.Byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray32);
        byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray37, (byte) 100);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.add(byteArray39, (byte) 10);
        boolean boolean42 = strList5.contains((java.lang.Object) byteArray39);
        boolean boolean44 = strList5.add("4");
        java.lang.String[] strArray47 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.stream.Stream<java.lang.String> strStream50 = strList48.parallelStream();
        java.lang.String[] strArray53 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.stream.Stream<java.lang.String> strStream56 = strList54.parallelStream();
        boolean boolean57 = strList48.addAll((java.util.Collection<java.lang.String>) strList54);
        java.lang.Object obj58 = null;
        boolean boolean59 = strList54.equals(obj58);
        int int60 = strList54.size();
        java.lang.Object[] objArray61 = strList54.toArray();
        boolean boolean62 = strList5.containsAll((java.util.Collection<java.lang.String>) strList54);
        boolean boolean64 = strList54.add("hi!");
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strStream50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strStream56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[4, hi!]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test06239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06239");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray9, '4');
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray9, '4');
        java.lang.Character[] charArray18 = org.apache.commons.lang3.ArrayUtils.toObject(charArray9);
        java.lang.Character[] charArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19, '4');
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) charArray18, (java.lang.Object[]) charArray19);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19, 'a');
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray19);
        java.lang.String str26 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray19);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#aa4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a, a, 4]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{}" + "'", str26, "{}");
    }

    @Test
    public void test06240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06240");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray3, (long) 5, 10);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.clone(longArray3);
        java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toObject(longArray7);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.clone(longArray7);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray12 = org.apache.commons.lang3.ArrayUtils.add(longArray7, 6, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[-1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[-1]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]");
    }

    @Test
    public void test06241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06241");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        boolean boolean35 = equalsBuilder34.isEquals();
        long[] longArray37 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray37);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(longArray37, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray37);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray37, (long) 0);
        long[] longArray50 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.subarray(longArray50, 3, (int) (byte) 0);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray50);
        long[] longArray57 = org.apache.commons.lang3.ArrayUtils.subarray(longArray50, 5, (int) (short) 10);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.add(longArray57, 100L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder34.append(longArray37, longArray59);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder34.append((long) (byte) 10, (long) 6);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(longArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[100]");
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[100, 100]");
        org.junit.Assert.assertNotNull(equalsBuilder60);
        org.junit.Assert.assertNotNull(equalsBuilder63);
    }

    @Test
    public void test06242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06242");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        int int15 = strList9.size();
        long[] longArray17 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(longArray17, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray17);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(longArray17, (long) (short) 100);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray17);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray17, (long) 3, (int) (byte) 100);
        boolean boolean31 = strList9.remove((java.lang.Object) longArray17);
        int int32 = strList9.size();
        java.util.stream.Stream<java.lang.String> strStream33 = strList9.stream();
        float[] floatArray39 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray39);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray39, 0.0f);
        java.lang.Float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray39);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray43, (float) (byte) 100);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray45);
        boolean boolean47 = strList9.equals((java.lang.Object) floatArray45);
        java.util.stream.Stream<java.lang.String> strStream48 = strList9.stream();
        java.lang.Long[] longArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray49);
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray49);
        java.lang.Long[] longArray57 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57);
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57, (long) (short) 10);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.clone(longArray60);
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray49, (java.lang.Object) longArray60, (int) (byte) 100);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray49);
        java.lang.Long[] longArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray49);
        java.lang.Object[] objArray66 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray65);
        boolean boolean67 = strList9.equals((java.lang.Object) objArray66);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strStream48);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[]");
        org.junit.Assert.assertNotNull(longArray65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test06243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06243");
        short[] shortArray6 = new short[] { (byte) 1, (byte) 10, (short) 100, (byte) 10, (byte) 100, (short) 10 };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) 1, 5);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) 0);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray6, 1, 2);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(shortArray14, (short) (byte) -1);
        short[] shortArray22 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray22, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray22);
        java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray26);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray27, (short) 10);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.add(shortArray29, (short) 100);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray14, shortArray31);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray31);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.remove(shortArray31, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[1, 10, 100, 10, 100, 10]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[10]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[100, 0, 0, 1, -1, 100]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test06244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06244");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.String str14 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) byteArray8, "{10,0,-1,-1,100,0,0}");
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray8, (byte) -1);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{0,0,100,-1,-1,0}" + "'", str14, "{0,0,100,-1,-1,0}");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
    }

    @Test
    public void test06245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06245");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        int int6 = strList3.size();
        java.lang.String[] strArray9 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.stream.Stream<java.lang.String> strStream12 = strList10.parallelStream();
        java.lang.String[] strArray15 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.stream.Stream<java.lang.String> strStream18 = strList16.parallelStream();
        boolean boolean19 = strList10.addAll((java.util.Collection<java.lang.String>) strList16);
        java.lang.Object obj20 = null;
        boolean boolean21 = strList16.equals(obj20);
        java.lang.Object[] objArray22 = strList16.toArray();
        java.util.AbstractCollection[] abstractCollectionArray24 = new java.util.AbstractCollection[2];
        @SuppressWarnings("unchecked")
        java.util.AbstractCollection<java.lang.String>[] strCollectionArray25 = (java.util.AbstractCollection<java.lang.String>[]) abstractCollectionArray24;
        strCollectionArray25[0] = strList3;
        strCollectionArray25[1] = strList16;
        java.util.AbstractCollection<java.lang.String>[] strCollectionArray32 = org.apache.commons.lang3.ArrayUtils.subarray(strCollectionArray25, (-1), (int) '#');
        java.lang.Iterable<java.lang.String>[] strIterableArray33 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Iterable<java.lang.String>[]) strCollectionArray25);
        java.lang.Iterable<java.lang.String>[] strIterableArray34 = org.apache.commons.lang3.ArrayUtils.toArray(strIterableArray33);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strStream12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[4, hi!]");
        org.junit.Assert.assertNotNull(abstractCollectionArray24);
        org.junit.Assert.assertNotNull(strCollectionArray25);
        org.junit.Assert.assertNotNull(strCollectionArray32);
        org.junit.Assert.assertNotNull(strIterableArray33);
        org.junit.Assert.assertNotNull(strIterableArray34);
    }

    @Test
    public void test06246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06246");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder13 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray20);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray21, intArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray22, (int) (byte) 0);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray27, (int) (byte) 1);
        int[] intArray30 = new int[] {};
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray30, intArray31);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.addAll(intArray27, intArray30);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder13.append(intArray26, intArray30);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(intArray30, (int) 'a');
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray12, intArray30);
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.clone(intArray30);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray38, (int) (short) 1);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(intArray38, (int) (short) 100);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test06247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06247");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) -1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) ' ');
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) '4');
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray31, 6);
        java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray46 = new java.lang.Byte[][] { byteArray39, byteArray45 };
        java.lang.Byte[][] byteArray49 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray46, (int) '#', 10);
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray56);
        java.lang.Byte[][] byteArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray46, (java.lang.Object) intArray56);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray56, (int) (short) -1);
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray56, (int) ' ');
        java.lang.Integer[] intArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray56);
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray63);
        int[] intArray65 = org.apache.commons.lang3.ArrayUtils.addAll(intArray31, intArray64);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray64);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray64, (int) (short) 0);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 1, 0, 10, -1, 1, -1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
    }

    @Test
    public void test06248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06248");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(shortArray25, (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) 0, (-1));
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray36, (int) (short) 10, 3);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((java.lang.Object) int31, (java.lang.Object) booleanArray40);
        long[] longArray43 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray43);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray43);
        java.lang.Long[] longArray46 = org.apache.commons.lang3.ArrayUtils.toObject(longArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray45);
        long[] longArray49 = org.apache.commons.lang3.ArrayUtils.add(longArray45, (long) (short) 100);
        int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray45, (long) 0);
        java.lang.Long[] longArray57 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray57);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.add(longArray58, (int) (byte) 1, (long) (short) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray58);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.clone(longArray58);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.addAll(longArray45, longArray63);
        long[] longArray66 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray66);
        long[] longArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray66);
        java.lang.Long[] longArray69 = org.apache.commons.lang3.ArrayUtils.toObject(longArray68);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray68);
        long[] longArray72 = org.apache.commons.lang3.ArrayUtils.add(longArray68, (long) (short) 100);
        long[] longArray73 = org.apache.commons.lang3.ArrayUtils.clone(longArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder0.append(longArray64, longArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder74.append((byte) 0, (byte) 0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[-1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[0, 100, 100, 1, 0]");
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[0, 10, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[0, 100, 100, 1, 0]");
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[-1, 0, 100, 100, 1, 0]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[-1]");
        org.junit.Assert.assertNotNull(longArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[-1]");
        org.junit.Assert.assertNotNull(longArray69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(longArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[-1, 100]");
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[-1]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
    }

    @Test
    public void test06249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06249");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, false);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, false, (-1));
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, false, 0);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test06250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06250");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) (short) 10);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 2, (int) ' ', (double) 0L);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test06251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06251");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 1);
        java.lang.Byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray24);
        float[] floatArray34 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray34);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray34, (int) (byte) 1, 0);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(floatArray34, (float) 'a');
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray28, (java.lang.Object) boolean41);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray52 = new char[] { '#', 'a', 'a' };
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.addAll(charArray48, charArray52);
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray52, 'a', (int) (byte) 0);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray52, 'a', (int) (byte) 1);
        int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray28, (java.lang.Object) int59);
        byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray28);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0]");
    }

    @Test
    public void test06252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06252");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray27);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray51, (double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test06253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06253");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray20);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray20);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test06254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06254");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((int) (short) 0, (int) (byte) 100);
        java.lang.Boolean boolean54 = equalsBuilder50.build();
        short[] shortArray61 = new short[] { (short) 10, (short) 100, (byte) -1, (byte) 0, (short) 10, (byte) 100 };
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray61, (short) (byte) 0, (int) (short) -1);
        java.lang.Short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray61);
        short[] shortArray71 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray71, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray75 = new java.lang.Short[] {};
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray75);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray75, (short) 1);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray71, shortArray78);
        java.lang.Short[] shortArray80 = new java.lang.Short[] {};
        short[] shortArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80);
        short[] shortArray83 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80, (short) 1);
        java.lang.Short[] shortArray84 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray83);
        short[] shortArray85 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray71, shortArray83);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder86 = equalsBuilder50.append(shortArray61, shortArray85);
        short[] shortArray88 = org.apache.commons.lang3.ArrayUtils.add(shortArray61, (short) 1);
        short[] shortArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray88);
        short[] shortArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray88);
        int int93 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray90, (short) 1, 0);
        boolean boolean95 = org.apache.commons.lang3.ArrayUtils.contains(shortArray90, (short) (byte) 0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[10, 100, -1, 0, 10, 100]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 3 + "'", int64 == 3);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[]");
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[]");
        org.junit.Assert.assertNotNull(shortArray84);
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder86);
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[10, 100, -1, 0, 10, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray89), "[10, 100, -1, 0, 10, 100, 1]");
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray90), "[10, 100, -1, 0, 10, 100, 1]");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test06255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06255");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray13, floatArray20);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray20, 0.0f, (-1));
        float[] floatArray33 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray33);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray34, 100.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray36);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray20, floatArray36);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray36, 100.0f, 100);
        float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray48 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray48);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.remove(floatArray48, (int) (short) 1);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray42, floatArray51);
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray52, (float) (short) 100);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.add(floatArray52, (float) 2);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray36, floatArray52);
        float[] floatArray63 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray64 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray63);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray63);
        float[] floatArray68 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray63, (int) (byte) 1, 0);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray63);
        float[] floatArray70 = org.apache.commons.lang3.ArrayUtils.clone(floatArray63);
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray36, floatArray70);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0, 35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 100.0, 10.0, 35.0, 2.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[35.0, 10.0, 100.0, 100.0, -1.0, -1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[35.0, 10.0, 100.0, 100.0, -1.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test06256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06256");
        java.lang.Float[] floatArray3 = new java.lang.Float[] { (-1.0f), 100.0f, (-1.0f) };
        java.lang.Float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3, (float) (short) 1);
        java.lang.Character[] charArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray7, '4');
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray3, (java.lang.Object) charArray7);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3, (float) '#');
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray13);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 100.0, -1.0]");
    }

    @Test
    public void test06257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06257");
        long[] longArray0 = null;
        long[] longArray7 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.subarray(longArray7, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray7);
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toObject(longArray7);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray7);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.add(longArray7, 0, (long) 9);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray0, longArray16);
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[9, 100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06258");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.add(charArray0, '4');
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.add(charArray0, '#');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.add(charArray6, '#');
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.add(charArray8, ' ');
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray10, '#');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray10);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " ##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " ##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , #, #]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#,  ]");
    }

    @Test
    public void test06259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06259");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) (short) 10);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.remove(longArray8, 2);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray13 = org.apache.commons.lang3.ArrayUtils.add(longArray10, 11, (long) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[0, 1, 100, 0]");
    }

    @Test
    public void test06260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06260");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray12);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, 0.0d, (int) (byte) 100, (-1.0d));
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) 100L);
        double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12);
        double[] doubleArray24 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray24, (double) (byte) 100, 1.0d);
        double[] doubleArray32 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray24, doubleArray32);
        float[] floatArray38 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray41 = new float[] { (byte) -1, 1L };
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray41, (float) 10L);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray38, floatArray41);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray32, (java.lang.Object) boolean44);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray32);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray46, (double) 10, (int) (byte) 1);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray46);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray12, doubleArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray12, (double) 0.0f);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray12);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray12, 5, 7);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -1.0]");
    }

    @Test
    public void test06261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06261");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) (short) -1, 7, (double) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test06262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06262");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        java.lang.Short[] shortArray39 = new java.lang.Short[] {};
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39, (short) 1);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.clone(shortArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray43);
        java.lang.Short[] shortArray45 = new java.lang.Short[] {};
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 1);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 0);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray50, (short) -1);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.add(shortArray52, (short) 1);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray43, shortArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder37.append(shortArray38, shortArray55);
        java.lang.Short[] shortArray57 = new java.lang.Short[] {};
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57, (short) 1);
        java.lang.Short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(shortArray60, (short) 10);
        java.lang.Short[] shortArray64 = new java.lang.Short[] {};
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64, (short) 1);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.clone(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.add(shortArray68, (short) -1);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray68);
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray68, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder56.append(shortArray60, shortArray73);
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray60, (short) 0);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray60, (short) 0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
    }

    @Test
    public void test06263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06263");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray10);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray10);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray10);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray10, (float) 6);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray21);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test06264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06264");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 1);
        java.lang.Byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray24);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray24, (byte) -1, (int) (short) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test06265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06265");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder28.append(true, false);
        long[] longArray52 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray52, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray54);
        long[] longArray57 = new long[] { (byte) 100 };
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder28.append(longArray54, longArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder58.append((short) (byte) 1, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder58.appendSuper(false);
        java.lang.Boolean boolean64 = equalsBuilder63.build();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[100]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertEquals("'" + boolean64 + "' != '" + false + "'", boolean64, false);
    }

    @Test
    public void test06266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06266");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray17 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.lang.String[] strArray22 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.stream.Stream<java.lang.String> strStream25 = strList23.parallelStream();
        java.lang.String[] strArray28 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.stream.Stream<java.lang.String> strStream31 = strList29.parallelStream();
        boolean boolean32 = strList23.addAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.Object obj33 = null;
        boolean boolean34 = strList29.equals(obj33);
        int int35 = strList29.size();
        boolean boolean36 = strList18.removeAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.String[] strArray39 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.stream.Stream<java.lang.String> strStream42 = strList40.parallelStream();
        boolean boolean43 = strList29.addAll((java.util.Collection<java.lang.String>) strList40);
        java.lang.String[] strArray46 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.stream.Stream<java.lang.String> strStream49 = strList47.parallelStream();
        java.lang.String[] strArray52 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.stream.Stream<java.lang.String> strStream55 = strList53.parallelStream();
        boolean boolean56 = strList47.addAll((java.util.Collection<java.lang.String>) strList53);
        java.lang.Object obj57 = null;
        boolean boolean58 = strList53.equals(obj57);
        java.lang.Iterable[] iterableArray60 = new java.lang.Iterable[3];
        @SuppressWarnings("unchecked")
        java.lang.Iterable<java.lang.String>[] strIterableArray61 = (java.lang.Iterable<java.lang.String>[]) iterableArray60;
        strIterableArray61[0] = strList3;
        strIterableArray61[1] = strList40;
        strIterableArray61[2] = strList53;
        java.lang.String[] strArray70 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.stream.Stream<java.lang.String> strStream73 = strList71.parallelStream();
        java.lang.String[] strArray76 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.stream.Stream<java.lang.String> strStream79 = strList77.parallelStream();
        boolean boolean80 = strList71.addAll((java.util.Collection<java.lang.String>) strList77);
        java.lang.Iterable<java.lang.String>[] strIterableArray81 = org.apache.commons.lang3.ArrayUtils.add(strIterableArray61, (java.lang.Iterable<java.lang.String>) strList77);
        java.util.stream.Stream<java.lang.String> strStream82 = strList77.parallelStream();
        java.lang.Object[] objArray83 = strList77.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator84 = strList77.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator85 = strList77.spliterator();
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray86 = new org.apache.commons.lang3.builder.EqualsBuilder[][] {};
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray87 = new org.apache.commons.lang3.builder.EqualsBuilder[][] {};
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray88 = new org.apache.commons.lang3.builder.EqualsBuilder[][] {};
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray89 = new org.apache.commons.lang3.builder.EqualsBuilder[][] {};
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray90 = new org.apache.commons.lang3.builder.EqualsBuilder[][] {};
        org.apache.commons.lang3.builder.EqualsBuilder[][][] equalsBuilderArray91 = new org.apache.commons.lang3.builder.EqualsBuilder[][][] { equalsBuilderArray86, equalsBuilderArray87, equalsBuilderArray88, equalsBuilderArray89, equalsBuilderArray90 };
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray92 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray93 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray94 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray95 = new org.apache.commons.lang3.builder.EqualsBuilder[][] { equalsBuilderArray92, equalsBuilderArray93, equalsBuilderArray94 };
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray96 = org.apache.commons.lang3.ArrayUtils.toArray(equalsBuilderArray95);
        org.apache.commons.lang3.builder.EqualsBuilder[][][] equalsBuilderArray97 = org.apache.commons.lang3.ArrayUtils.add(equalsBuilderArray91, equalsBuilderArray95);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.builder.Builder<java.lang.Boolean>[][][] booleanBuilderArray98 = strList77.toArray((org.apache.commons.lang3.builder.Builder<java.lang.Boolean>[][][]) equalsBuilderArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strStream49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(iterableArray60);
        org.junit.Assert.assertNotNull(strIterableArray61);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strStream73);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strIterableArray81);
        org.junit.Assert.assertNotNull(strStream82);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[4, hi!]");
        org.junit.Assert.assertNotNull(strSpliterator84);
        org.junit.Assert.assertNotNull(strSpliterator85);
        org.junit.Assert.assertNotNull(equalsBuilderArray86);
        org.junit.Assert.assertNotNull(equalsBuilderArray87);
        org.junit.Assert.assertNotNull(equalsBuilderArray88);
        org.junit.Assert.assertNotNull(equalsBuilderArray89);
        org.junit.Assert.assertNotNull(equalsBuilderArray90);
        org.junit.Assert.assertNotNull(equalsBuilderArray91);
        org.junit.Assert.assertNotNull(equalsBuilderArray92);
        org.junit.Assert.assertNotNull(equalsBuilderArray93);
        org.junit.Assert.assertNotNull(equalsBuilderArray94);
        org.junit.Assert.assertNotNull(equalsBuilderArray95);
        org.junit.Assert.assertNotNull(equalsBuilderArray96);
        org.junit.Assert.assertNotNull(equalsBuilderArray97);
    }

    @Test
    public void test06267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06267");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        java.lang.Long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray6);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray6);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray6, (long) (byte) 10);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
    }

    @Test
    public void test06268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06268");
        java.lang.Long[] longArray2 = new java.lang.Long[] { 1L, 0L };
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2, 0L);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2, 100L);
        java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray8);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray8, (long) (short) 100);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray11, (long) 8, 3);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[1, 0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test06269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06269");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, 100.0d, (int) (short) 1, (double) 1L);
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) 7);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) 100.0f, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 7.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test06270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06270");
        java.lang.String[] strArray4 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray13 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.remove(floatArray13, (int) (short) 1);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray7, floatArray16);
        boolean boolean18 = strList5.equals((java.lang.Object) floatArray17);
        float[] floatArray24 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray24);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray24, (float) 1);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray17, floatArray24);
        float[] floatArray34 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, (float) 1);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray24, floatArray34);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray34, (float) 7, 0);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 100.0, 100.0, 10.0, 35.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test06271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06271");
        long[] longArray4 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray4, 1L);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(longArray6, (long) (byte) -1);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray6);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[32, -1, 0]");
    }

    @Test
    public void test06272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06272");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray5, (float) 10);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray5, 5, (float) 7);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray11, (float) 100L);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.remove(floatArray11, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 100.0, 100.0, 10.0, 35.0, 7.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 10.0, 35.0, 7.0]");
    }

    @Test
    public void test06273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06273");
        short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        short[] shortArray6 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray10 = new java.lang.Short[] {};
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) 1);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray6, shortArray13);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) 0, 0);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.add(shortArray6, (int) (byte) 0, (short) 0);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray20);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray20);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.add(shortArray22, (short) 0);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray0, shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.remove(shortArray24, (int) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[0, 100, 0, 0, 1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[100, 0, 0, 1, -1, 0]");
    }

    @Test
    public void test06274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06274");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) (-1L), (int) (short) 100, (double) 100.0f);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray32);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray37, (int) 'a', 3);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray37, (double) 1);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray42);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray43, (double) 6, (double) 8);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test06275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06275");
        float[][][][] floatArray0 = new float[][][][] {};
        float[][][][][] floatArray1 = new float[][][][][] { floatArray0 };
        double[] doubleArray5 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray5, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray5);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray5, (double) (short) 1, (int) (short) 100);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray5, (double) 10, (double) (byte) 100);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray5, (double) (short) 0);
        java.lang.Double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray5);
        java.lang.Object obj19 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.stream.Stream<java.lang.String> strStream29 = strList27.parallelStream();
        java.lang.String[] strArray32 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.stream.Stream<java.lang.String> strStream35 = strList33.parallelStream();
        boolean boolean36 = strList27.addAll((java.util.Collection<java.lang.String>) strList33);
        java.lang.Object obj37 = null;
        boolean boolean38 = strList33.equals(obj37);
        int int39 = strList33.size();
        boolean boolean40 = strList22.removeAll((java.util.Collection<java.lang.String>) strList33);
        java.lang.String[] strArray43 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.stream.Stream<java.lang.String> strStream46 = strList44.parallelStream();
        boolean boolean47 = strList33.addAll((java.util.Collection<java.lang.String>) strList44);
        java.lang.String[] strArray49 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.stream.Stream<java.lang.String> strStream57 = strList55.parallelStream();
        java.lang.String[] strArray60 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.stream.Stream<java.lang.String> strStream63 = strList61.parallelStream();
        boolean boolean64 = strList55.addAll((java.util.Collection<java.lang.String>) strList61);
        java.lang.Object obj65 = null;
        boolean boolean66 = strList61.equals(obj65);
        int int67 = strList61.size();
        boolean boolean68 = strList50.removeAll((java.util.Collection<java.lang.String>) strList61);
        java.util.Iterator<java.lang.String> strItor69 = strList61.iterator();
        boolean boolean70 = strList33.retainAll((java.util.Collection<java.lang.String>) strList61);
        java.util.Spliterator<java.lang.String> strSpliterator71 = strList33.spliterator();
        boolean boolean72 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray5, obj19, (java.util.Collection<java.lang.String>) strList33);
        strList33.clear();
        java.util.Spliterator<java.lang.String> strSpliterator74 = strList33.spliterator();
        float[][] floatArray75 = new float[][] {};
        float[][] floatArray76 = new float[][] {};
        float[][][] floatArray77 = new float[][][] { floatArray75, floatArray76 };
        float[][] floatArray78 = new float[][] {};
        float[][] floatArray79 = new float[][] {};
        float[][][] floatArray80 = new float[][][] { floatArray78, floatArray79 };
        float[][] floatArray81 = new float[][] {};
        float[][] floatArray82 = new float[][] {};
        float[][][] floatArray83 = new float[][][] { floatArray81, floatArray82 };
        float[][] floatArray84 = new float[][] {};
        float[][] floatArray85 = new float[][] {};
        float[][][] floatArray86 = new float[][][] { floatArray84, floatArray85 };
        float[][] floatArray87 = new float[][] {};
        float[][] floatArray88 = new float[][] {};
        float[][][] floatArray89 = new float[][][] { floatArray87, floatArray88 };
        float[][][][] floatArray90 = new float[][][][] { floatArray77, floatArray80, floatArray83, floatArray86, floatArray89 };
        float[][][][] floatArray91 = strList33.toArray(floatArray90);
        float[][][][][] floatArray92 = org.apache.commons.lang3.ArrayUtils.add(floatArray1, floatArray91);
        float[][][][] floatArray95 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray91, 9, (int) (short) 10);
        org.junit.Assert.assertNotNull(floatArray0);
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strStream29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strStream57);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strSpliterator71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strSpliterator74);
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertNotNull(floatArray84);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertNotNull(floatArray90);
        org.junit.Assert.assertNotNull(floatArray91);
        org.junit.Assert.assertNotNull(floatArray92);
        org.junit.Assert.assertNotNull(floatArray95);
    }

    @Test
    public void test06276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06276");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) 100);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) 9);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray28, 100, (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test06277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06277");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) (byte) 100, 1.0d);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray38);
        float[] floatArray44 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray38, (java.lang.Object) boolean50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray38);
        double[] doubleArray56 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray56, (double) (byte) 100, 1.0d);
        double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray56, 2, (int) 'a');
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray56, (double) '4');
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray52, doubleArray56);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray52, (double) 100.0f, (int) (short) 0);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray52, (double) 100);
        double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray52, 10.0d);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray72);
        int int74 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) doubleArray73);
        int int78 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray73, (double) 1, (int) (byte) -1, (double) (-1));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[52.0]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0, -1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 0.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 0.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 7 + "'", int74 == 7);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
    }

    @Test
    public void test06278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06278");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean[] booleanArray38 = new boolean[] { false, false, false, true, false, false };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38);
        boolean[] booleanArray46 = new boolean[] { false, false, false, true, false, false };
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray38, booleanArray46);
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray53, false);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray53, false);
        boolean[] booleanArray63 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, (int) (byte) 0, 0);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, 4, (int) '4');
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray57, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder0.append(booleanArray46, booleanArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder0.append((long) 4, (long) (-1));
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray75);
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.clone(charArray75);
        char[] charArray83 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray87 = new char[] { '#', 'a', 'a' };
        char[] charArray88 = org.apache.commons.lang3.ArrayUtils.addAll(charArray83, charArray87);
        char[] charArray90 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray83, ' ');
        char[] charArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray90);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder92 = equalsBuilder74.append(charArray77, charArray91);
        boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray77);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray96 = org.apache.commons.lang3.ArrayUtils.add(charArray77, 10, '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(equalsBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test06279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06279");
        long[] longArray0 = null;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.toObject(longArray0);
        org.junit.Assert.assertNull(longArray1);
    }

    @Test
    public void test06280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06280");
        byte[] byteArray0 = null;
        byte[] byteArray1 = new byte[] {};
        byte[] byteArray6 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray1, (byte) -1);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray1, (byte) -1);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray1, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray1);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray1, (int) (byte) -1, (int) '4');
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray1, 2, (int) (byte) 10);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray21);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.add(byteArray21, (byte) 0);
        byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray24);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0]");
    }

    @Test
    public void test06281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06281");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 10);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray16, (short) (byte) 1);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray18, (short) 0);
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray18, (short) -1, 8);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[100, 0, 0, -1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[100, 0, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test06282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06282");
        java.lang.Double[] doubleArray0 = null;
        double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray0, 0.0d);
        org.junit.Assert.assertNull(doubleArray2);
    }

    @Test
    public void test06283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06283");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { (-1.0f), 0.0f, 10.0f, (-1.0f), 100.0f };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray6);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray7);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray7, (int) ' ', (int) (short) 100);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray11, 10, (int) (byte) 100);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray11, (float) (byte) 1);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(floatArray17);
    }

    @Test
    public void test06284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06284");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray13, (float) (-1L));
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray13);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.add(floatArray13, (float) 0);
        float[] floatArray27 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray30 = new float[] { (byte) -1, 1L };
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray30, (float) 10L);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray27, floatArray30);
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray27, (float) '4');
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray35);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray36, (float) (byte) 100);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray36, (float) (byte) 10);
        float[] floatArray45 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray48 = new float[] { (byte) -1, 1L };
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray48, (float) 10L);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray45, floatArray48);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray45, (float) '4');
        float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray53);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.add(floatArray53, (float) 1L);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.clone(floatArray53);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray36, floatArray53);
        float[] floatArray59 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray13, floatArray36);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray13, (float) '4');
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[100.0, 10.0, -1.0, 97.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[100.0, 10.0, -1.0, 97.0, 100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 1.0, 100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 1.0]");
    }

    @Test
    public void test06285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06285");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray26);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) '#');
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 0.0d);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 0.0d);
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray35);
        java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 10.0, 0.0, 1.0]");
    }

    @Test
    public void test06286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06286");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Byte[] byteArray8 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray9);
        boolean boolean12 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray2, (java.lang.Object) byteArray9, true);
        java.lang.Character[] charArray18 = new java.lang.Character[] { '#', '#', '#', ' ', '#' };
        java.lang.Character[][] charArray19 = new java.lang.Character[][] { charArray18 };
        java.lang.Character[][] charArray20 = org.apache.commons.lang3.ArrayUtils.toArray(charArray19);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray9, (java.lang.Object[]) charArray20);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9);
        java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray29, (byte) 1);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(byteArray31, (byte) 100);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(byteArray31, (byte) 1);
        java.lang.Byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray31);
        byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray36, (byte) 100);
        byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.add(byteArray38, (byte) 10);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.clone(byteArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray40);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.remove(byteArray40, 3);
        java.lang.Byte[] byteArray51 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray51, (byte) 1);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(byteArray53, (byte) 100);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(byteArray53, (byte) 1);
        java.lang.Byte[] byteArray64 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray64, (byte) 1);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray66, (int) (byte) 0, (int) (byte) 1);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray53, byteArray69);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray53, (byte) 10);
        byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.add(byteArray53, (byte) -1);
        byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray40, byteArray74);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray22, byteArray74);
        int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray22, (byte) 10, (int) (byte) 1);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[10, 0, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 0, -1, -1, 100, 0, 0, 0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test06287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06287");
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) -1);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.clone(byteArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 100);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(byteArray9, (byte) 0);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.clone(byteArray9);
        java.lang.Byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray14);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray14, 0, (int) ' ');
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray18);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06288");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder7 = equalsBuilder0.append(0L, (long) 'a');
        short[] shortArray13 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray13, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray13);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray13, (short) (byte) 0);
        java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray13);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray13, (short) (byte) 0, (int) 'a');
        short[] shortArray29 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray29, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray33 = new java.lang.Short[] {};
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33);
        short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray33, (short) 1);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray29, shortArray36);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray36, (int) '4', (int) (short) 0);
        boolean[] booleanArray47 = new boolean[] { false, false, false, true, false, false };
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray47);
        boolean[] booleanArray55 = new boolean[] { false, false, false, true, false, false };
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray55);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray47, booleanArray55);
        short[] shortArray62 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray62, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray62);
        boolean boolean67 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean57, (java.lang.Object) shortArray62);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray40, shortArray62);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray68, (int) 'a', (int) (short) 100);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.clone(shortArray68);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder0.append(shortArray13, shortArray68);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 10);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(equalsBuilder7);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]");
        org.junit.Assert.assertNotNull(shortArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(equalsBuilder73);
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[100, 0, 0, 1, -1, 10]");
    }

    @Test
    public void test06289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06289");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 0);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(shortArray5, (short) (byte) 0);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray5, (short) 10);
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, 4, (short) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.add(shortArray23, 11, (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[100, 0, 0, 1, 0, -1]");
    }

    @Test
    public void test06290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06290");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        boolean boolean4 = equalsBuilder0.isEquals();
        float[] floatArray8 = new float[] { (short) -1, 10, (short) 1 };
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray8, (int) '4', (int) (byte) 100);
        float[] floatArray14 = new float[] { (byte) -1, 1L };
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, (float) 10L);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray14, (float) (short) 100);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray18, (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(floatArray8, floatArray18);
        boolean[] booleanArray25 = new boolean[] { true, true, true };
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray25, true);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray25, false);
        boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray25);
        java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray36, false);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray36);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder21.append(booleanArray30, booleanArray40);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray30, false);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[true, true, true]");
    }

    @Test
    public void test06291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06291");
        java.lang.Object[][] objArray0 = null;
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray13 = new java.lang.Byte[][] { byteArray6, byteArray12 };
        java.lang.Byte[][] byteArray16 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray13, (int) '#', 10);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23);
        java.lang.Byte[][] byteArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray13, (java.lang.Object) intArray23);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23, (int) (short) -1);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23, (int) ' ');
        java.lang.Integer[] intArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray23);
        int[] intArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23, (int) '4');
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23, 10);
        java.lang.Object[][] objArray35 = org.apache.commons.lang3.ArrayUtils.add(objArray0, (java.lang.Object[]) intArray23);
        int[] intArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23, (int) (short) -1);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray37, 1);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray39, (int) (short) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
    }

    @Test
    public void test06292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06292");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a', (int) (short) 0);
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray8, (int) (byte) 10);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray16, 100);
        java.lang.Integer[] intArray19 = org.apache.commons.lang3.ArrayUtils.toObject(intArray16);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray19);
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray19, (int) ' ');
        java.lang.Integer[] intArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray19);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23, (int) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder29 = equalsBuilder26.append((byte) -1, (byte) 0);
        boolean boolean30 = equalsBuilder26.isEquals();
        float[] floatArray34 = new float[] { (short) -1, 10, (short) 1 };
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray34, (int) '4', (int) (byte) 100);
        float[] floatArray40 = new float[] { (byte) -1, 1L };
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray40, (float) 10L);
        float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray40, (float) (short) 100);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray44, (float) 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder26.append(floatArray34, floatArray44);
        int int49 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray23, (java.lang.Object) equalsBuilder47, (int) 'a');
        java.lang.Object obj50 = null;
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray23, obj50, 2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test06293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06293");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray0, 'a', (int) '4');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.add(charArray0, 0, ' ');
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray0, '4');
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.clone(charArray0);
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.subarray(charArray11, 2, 4);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.subarray(charArray11, 100, 0);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(charArray17, ' ');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ ]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06294");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.clone(shortArray6);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray6, (int) (short) 0, (int) (byte) 1);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
    }

    @Test
    public void test06295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06295");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray10, true);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray10, false);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray10, false);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, true, false]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, true, true, false, false]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test06296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06296");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, 0.0f);
        java.lang.Float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        java.lang.Object[] objArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray9);
        java.lang.Float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray9);
        java.lang.Float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray9);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray9, (float) (byte) 100);
        int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray14, (float) 100L, 5);
        // The following exception was thrown during execution in test generation
        try {
            float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.add(floatArray14, 100, (float) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test06297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06297");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        float[] floatArray11 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray14 = new float[] { (byte) -1, 1L };
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, (float) 10L);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray11, floatArray14);
        java.lang.Float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray6, (java.lang.Object) floatArray18);
        short[] shortArray25 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray25, (short) (byte) 0);
        java.lang.Short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.clone(shortArray25);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray18, (java.lang.Object) shortArray33, 9);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray18, (float) (byte) 100);
        float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray18, (float) (short) 100);
        float[] floatArray45 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray45);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray45, (int) (byte) 1, 0);
        float[] floatArray53 = new float[] { (byte) -1, 1L };
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray53, (float) 10L);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray50, floatArray53);
        java.lang.Float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray53);
        float[] floatArray60 = new float[] { (byte) -1, 1L };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray60, (float) 10L);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray60);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray53, floatArray60);
        int int67 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray60, 0.0f, (-1));
        float[] floatArray73 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray74 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray73);
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray74, 100.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray76);
        float[] floatArray78 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray60, floatArray76);
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray76, 100.0f, 100);
        float[] floatArray82 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray88 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray89 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray88);
        float[] floatArray91 = org.apache.commons.lang3.ArrayUtils.remove(floatArray88, (int) (short) 1);
        float[] floatArray92 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray82, floatArray91);
        float[] floatArray94 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray92, (float) (short) 100);
        float[] floatArray96 = org.apache.commons.lang3.ArrayUtils.add(floatArray92, (float) 2);
        float[] floatArray97 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray76, floatArray92);
        boolean boolean98 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray39, floatArray76);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray78), "[-1.0, 1.0, 35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 3 + "'", int81 == 3);
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[]");
        org.junit.Assert.assertNotNull(floatArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray88), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertNotNull(floatArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray91), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray92), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray94), "[-1.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray96), "[-1.0, 100.0, 10.0, 35.0, 2.0]");
        org.junit.Assert.assertNotNull(floatArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray97), "[35.0, 10.0, 100.0, 100.0, -1.0, -1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test06298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06298");
        java.lang.Short[] shortArray0 = null;
        java.lang.Short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0);
        java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) -1);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray1, (short) (byte) 0);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.add(shortArray6, (short) 10);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray8);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray8);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray8, (short) 0);
        short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, (int) (byte) 0, 7);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[10]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[10]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[10]");
    }

    @Test
    public void test06299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06299");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray1);
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray12);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray12);
        float[] floatArray20 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray20);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray20);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray20, (int) (byte) 1, 0);
        float[] floatArray28 = new float[] { (byte) -1, 1L };
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray28, (float) 10L);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray25, floatArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray28);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.clone(floatArray28);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray14, (java.lang.Object) floatArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray1, longArray14);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray1, (long) (byte) -1, (-1));
        long[] longArray40 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray40);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, (long) (short) 100);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray50);
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray50, (long) (-1), (int) '4');
        long[] longArray55 = null;
        long[] longArray56 = org.apache.commons.lang3.ArrayUtils.addAll(longArray50, longArray55);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray1, longArray50);
        long[] longArray59 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(longArray59, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        long[] longArray64 = org.apache.commons.lang3.ArrayUtils.clone(longArray59);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray59);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray59);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(longArray59, (long) (short) 100);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray59);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.contains(longArray59, (long) ' ');
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray1, longArray59);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray75 = org.apache.commons.lang3.ArrayUtils.add(longArray59, (int) (byte) 100, 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test06300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06300");
        java.lang.String[] strArray4 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray13 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.remove(floatArray13, (int) (short) 1);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray7, floatArray16);
        boolean boolean18 = strList5.equals((java.lang.Object) floatArray17);
        int int19 = strList5.size();
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray20, (int) (byte) 1);
        boolean boolean23 = strList5.contains((java.lang.Object) int22);
        char[] charArray29 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray33 = new char[] { '#', 'a', 'a' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray33);
        java.lang.String str35 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray29);
        char[] charArray41 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray45 = new char[] { '#', 'a', 'a' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.addAll(charArray41, charArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray29, charArray45);
        boolean boolean48 = strList5.equals((java.lang.Object) charArray45);
        strList5.clear();
        int int50 = strList5.size();
        java.lang.Float[] floatArray51 = new java.lang.Float[] {};
        java.lang.Float[] floatArray52 = new java.lang.Float[] {};
        java.lang.Float[][] floatArray53 = new java.lang.Float[][] { floatArray51, floatArray52 };
        java.lang.Float[][] floatArray54 = org.apache.commons.lang3.ArrayUtils.toArray(floatArray53);
        boolean boolean55 = strList5.remove((java.lang.Object) floatArray54);
        java.util.Spliterator<java.lang.String> strSpliterator56 = strList5.spliterator();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{4,#,a,4,#}" + "'", str35, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strSpliterator56);
    }

    @Test
    public void test06301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06301");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        equalsBuilder50.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder54 = equalsBuilder50.append((long) (short) -1, (long) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder57 = equalsBuilder54.append((short) -1, (short) (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder60 = equalsBuilder54.append(false, false);
        equalsBuilder54.reset();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder54);
        org.junit.Assert.assertNotNull(equalsBuilder57);
        org.junit.Assert.assertNotNull(equalsBuilder60);
    }

    @Test
    public void test06302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06302");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray8, 10, (int) ' ');
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, 2, (byte) 100);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, 100, 100, -1, -1, 0]");
    }

    @Test
    public void test06303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06303");
        java.lang.Short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray0);
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.add(shortArray3, 6, (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
    }

    @Test
    public void test06304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06304");
        float[] floatArray3 = new float[] { (short) -1, 10, (short) 1 };
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray3, (int) '4', (int) (byte) 100);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.add(floatArray3, (float) (short) 0);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray8);
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 10.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test06305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06305");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray26);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) '#');
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 0.0d);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (byte) 10);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 1.0d);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray37, 0.0d);
        double[] doubleArray43 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray43, (double) (byte) 100, 1.0d);
        double[] doubleArray51 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray43, doubleArray51);
        float[] floatArray57 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray60 = new float[] { (byte) -1, 1L };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray60, (float) 10L);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray57, floatArray60);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray51, (java.lang.Object) boolean63);
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray51, (int) (short) 0, 1);
        int int71 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray67, (double) (short) 100, 0, 10.0d);
        double[] doubleArray75 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray75, (double) (byte) 100, 1.0d);
        double[] doubleArray83 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray75, doubleArray83);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray67, doubleArray83);
        int int89 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray67, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray67);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray67);
        double[] doubleArray92 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray67);
        int int95 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray67, (double) 100L, (double) 100);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1.0, 10.0, 0.0, 1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test06306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06306");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        java.lang.Short[] shortArray39 = new java.lang.Short[] {};
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39, (short) 1);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.clone(shortArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray43);
        java.lang.Short[] shortArray45 = new java.lang.Short[] {};
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 1);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 0);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray50, (short) -1);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.add(shortArray52, (short) 1);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray43, shortArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder37.append(shortArray38, shortArray55);
        equalsBuilder56.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder56.appendSuper(true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder62 = equalsBuilder56.append('a', '4');
        equalsBuilder62.reset();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder66 = equalsBuilder62.append((double) 0.0f, (double) (-1));
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(equalsBuilder62);
        org.junit.Assert.assertNotNull(equalsBuilder66);
    }

    @Test
    public void test06307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06307");
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray0 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray1 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray2 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray3 = new org.apache.commons.lang3.builder.EqualsBuilder[][] { equalsBuilderArray0, equalsBuilderArray1, equalsBuilderArray2 };
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray4 = org.apache.commons.lang3.ArrayUtils.toArray(equalsBuilderArray3);
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray5 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray6 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[] equalsBuilderArray7 = new org.apache.commons.lang3.builder.EqualsBuilder[] {};
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray8 = new org.apache.commons.lang3.builder.EqualsBuilder[][] { equalsBuilderArray5, equalsBuilderArray6, equalsBuilderArray7 };
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray9 = org.apache.commons.lang3.ArrayUtils.toArray(equalsBuilderArray8);
        org.apache.commons.lang3.builder.EqualsBuilder[][] equalsBuilderArray10 = org.apache.commons.lang3.ArrayUtils.addAll(equalsBuilderArray4, equalsBuilderArray9);
        java.lang.Object obj11 = null;
        org.apache.commons.lang3.builder.Builder<java.lang.Boolean>[][] booleanBuilderArray12 = org.apache.commons.lang3.ArrayUtils.removeElement((org.apache.commons.lang3.builder.Builder<java.lang.Boolean>[][]) equalsBuilderArray10, obj11);
        org.junit.Assert.assertNotNull(equalsBuilderArray0);
        org.junit.Assert.assertNotNull(equalsBuilderArray1);
        org.junit.Assert.assertNotNull(equalsBuilderArray2);
        org.junit.Assert.assertNotNull(equalsBuilderArray3);
        org.junit.Assert.assertNotNull(equalsBuilderArray4);
        org.junit.Assert.assertNotNull(equalsBuilderArray5);
        org.junit.Assert.assertNotNull(equalsBuilderArray6);
        org.junit.Assert.assertNotNull(equalsBuilderArray7);
        org.junit.Assert.assertNotNull(equalsBuilderArray8);
        org.junit.Assert.assertNotNull(equalsBuilderArray9);
        org.junit.Assert.assertNotNull(equalsBuilderArray10);
        org.junit.Assert.assertNotNull(booleanBuilderArray12);
    }

    @Test
    public void test06308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06308");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray66, 5, 100);
        java.lang.Short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray79);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80, (short) 0);
        int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray82, (short) 100, 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray82);
        short[] shortArray88 = org.apache.commons.lang3.ArrayUtils.add(shortArray82, (short) 0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray88), "[0]");
    }

    @Test
    public void test06309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06309");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY;
        java.lang.Short[] shortArray39 = new java.lang.Short[] {};
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39, (short) 1);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.clone(shortArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray43);
        java.lang.Short[] shortArray45 = new java.lang.Short[] {};
        short[] shortArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45);
        short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 1);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray45, (short) 0);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray50, (short) -1);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.add(shortArray52, (short) 1);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray43, shortArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder37.append(shortArray38, shortArray55);
        java.lang.Short[] shortArray57 = new java.lang.Short[] {};
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57);
        short[] shortArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray57, (short) 1);
        java.lang.Short[] shortArray61 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray60);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(shortArray60, (short) 10);
        java.lang.Short[] shortArray64 = new java.lang.Short[] {};
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64, (short) 1);
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.clone(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.add(shortArray68, (short) -1);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray68);
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray68, (short) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder74 = equalsBuilder56.append(shortArray60, shortArray73);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder56.append((byte) 0, (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder80 = equalsBuilder56.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder80.append((short) 100, (short) 0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]");
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]");
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder56);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[]");
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]");
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder74);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(equalsBuilder80);
        org.junit.Assert.assertNotNull(equalsBuilder83);
    }

    @Test
    public void test06310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06310");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.add(longArray6, (long) (short) 10);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[0, 1, 100, 100, 0, 10]");
    }

    @Test
    public void test06311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06311");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray20 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.remove(floatArray29, (int) (short) 1);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray23, floatArray32);
        boolean boolean34 = strList21.equals((java.lang.Object) floatArray33);
        int int35 = strList21.size();
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray36, (int) (byte) 1);
        boolean boolean39 = strList21.contains((java.lang.Object) int38);
        boolean boolean40 = strList3.addAll((java.util.Collection<java.lang.String>) strList21);
        strList21.clear();
        int int42 = strList21.size();
        java.lang.String[] strArray45 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.stream.Stream<java.lang.String> strStream48 = strList46.parallelStream();
        java.lang.String[] strArray51 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.stream.Stream<java.lang.String> strStream54 = strList52.parallelStream();
        boolean boolean55 = strList46.addAll((java.util.Collection<java.lang.String>) strList52);
        java.lang.Object obj56 = null;
        boolean boolean57 = strList52.equals(obj56);
        java.util.Iterator<java.lang.String> strItor58 = strList52.iterator();
        boolean boolean60 = strList52.add("{-1,1,0,0,100}");
        boolean boolean61 = strList21.retainAll((java.util.Collection<java.lang.String>) strList52);
        java.lang.Object[] objArray62 = strList52.toArray();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strStream48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[4, hi!, {-1,1,0,0,100}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[4, hi!, {-1,1,0,0,100}]");
    }

    @Test
    public void test06312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06312");
        char[] charArray6 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[] charArray13 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[] charArray20 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[] charArray27 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[] charArray34 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[][] charArray35 = new char[][] { charArray6, charArray13, charArray20, charArray27, charArray34 };
        char[] charArray42 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray46 = new char[] { '#', 'a', 'a' };
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.addAll(charArray42, charArray46);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.subarray(charArray46, (int) 'a', (int) (short) 10);
        char[][] charArray51 = org.apache.commons.lang3.ArrayUtils.add(charArray35, (int) (short) 1, charArray50);
        java.lang.Character[] charArray52 = org.apache.commons.lang3.ArrayUtils.toObject(charArray50);
        char[] charArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray52);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray53, '4', 6);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test06313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06313");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(floatArray2, (float) (byte) 1);
        float[] floatArray11 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray14 = new float[] { (byte) -1, 1L };
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, (float) 10L);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray11, floatArray14);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.add(floatArray11, (float) (byte) 0);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.remove(floatArray19, (int) (byte) 1);
        float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.clone(floatArray19);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray22);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[100.0, 10.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[100.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[100.0, 10.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test06314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06314");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray1);
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray12);
        long[] longArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray12);
        float[] floatArray20 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray20);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray20);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray20, (int) (byte) 1, 0);
        float[] floatArray28 = new float[] { (byte) -1, 1L };
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray28, (float) 10L);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray25, floatArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray28);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.clone(floatArray28);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) longArray14, (java.lang.Object) floatArray33);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray1, longArray14);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray1, (long) (byte) -1, (-1));
        long[] longArray40 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray40);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, (long) (short) 100);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray50);
        int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray50, (long) (-1), (int) '4');
        long[] longArray55 = null;
        long[] longArray56 = org.apache.commons.lang3.ArrayUtils.addAll(longArray50, longArray55);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray1, longArray50);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray59 = org.apache.commons.lang3.ArrayUtils.remove(longArray1, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(longArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test06315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06315");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray10, (byte) 100);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray10, (byte) 0);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) -1);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray26 = new char[] { '#', 'a', 'a' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray26);
        java.lang.String str28 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray22);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray22);
        java.lang.String[] strArray32 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.stream.Stream<java.lang.String> strStream35 = strList33.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream36 = strList33.stream();
        boolean boolean37 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int16, (java.lang.Object) charArray22, (java.util.Collection<java.lang.String>) strList33);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray22);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.subarray(charArray22, 10, 1);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray41);
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.add(charArray41, ' ');
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.add(charArray44, 'a');
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.subarray(charArray46, (int) (short) 1, 9);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{4,#,a,4,#}" + "'", str28, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strStream35);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ ]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), " a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), " a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[ , a]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a]");
    }

    @Test
    public void test06316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06316");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3);
        java.lang.Character[] charArray5 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) charArray3, (java.lang.Object) charArray7);
        char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3);
        char[] charArray10 = null;
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray11, ' ');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
    }

    @Test
    public void test06317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06317");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (-1), (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((byte) 1, (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder10 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray17);
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray18, intArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray19, (int) (byte) 0);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray19);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray24, (int) (byte) 1);
        int[] intArray27 = new int[] {};
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray27, intArray28);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.addAll(intArray24, intArray27);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder10.append(intArray23, intArray27);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray23, (int) (short) -1);
        int[] intArray34 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray34, (int) '4', 2);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.add(intArray34, (int) '#');
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.addAll(intArray33, intArray34);
        java.lang.Short[] shortArray41 = null;
        java.lang.Short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray41);
        java.lang.Short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) (byte) -1);
        java.lang.String str47 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray42, "hi!");
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray54);
        int[] intArray56 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray55, intArray56);
        int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray42, (java.lang.Object) intArray55, 3);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray55);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder9.append(intArray40, intArray55);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray67 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray62, byteArray67);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray62, (byte) -1);
        byte[] byteArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray62, (byte) -1);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray62, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray62);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray62, (byte) 0);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray62);
        byte[] byteArray81 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray62, (int) '4', 3);
        java.lang.Object obj82 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder83 = equalsBuilder9.append((java.lang.Object) byteArray62, obj82);
        byte[] byteArray85 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray62, (byte) 10);
        byte[] byteArray88 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray85, 8, (int) (byte) 100);
        java.lang.String str89 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) (byte) 100);
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{}" + "'", str47, "{}");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, -1, 10, 0, 1, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[]");
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "100" + "'", str89, "100");
    }

    @Test
    public void test06318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06318");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (byte) -1);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) 4, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Argument is not an array");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test06319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06319");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray26);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) '#');
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { 10, 1 };
        java.lang.Integer[][] intArray50 = new java.lang.Integer[][] { intArray34, intArray37, intArray40, intArray43, intArray46, intArray49 };
        java.lang.String[] strArray53 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.stream.Stream<java.lang.String> strStream56 = strList54.parallelStream();
        java.lang.String[] strArray59 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.stream.Stream<java.lang.String> strStream62 = strList60.parallelStream();
        boolean boolean63 = strList54.addAll((java.util.Collection<java.lang.String>) strList60);
        java.lang.Object obj64 = null;
        boolean boolean65 = strList60.equals(obj64);
        int int66 = strList60.size();
        java.lang.Integer[][] intArray67 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray50, (java.lang.Object) strList60);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) doubleArray26, (java.lang.Object[]) intArray50);
        java.lang.Double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strStream56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
    }

    @Test
    public void test06320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06320");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 10, 0);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray3);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '#', (int) 'a', (double) 2);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test06321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06321");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.add(shortArray4, (short) -1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray4);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
    }

    @Test
    public void test06322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06322");
        boolean[] booleanArray3 = new boolean[] { true, true, true };
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, true);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray3, false);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray3);
        boolean[] booleanArray15 = new boolean[] { false, false, false, true, false, false };
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray15);
        boolean[] booleanArray23 = new boolean[] { false, false, false, true, false, false };
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray15, booleanArray23);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray23, true);
        java.lang.Boolean[] booleanArray31 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray32, false);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray32);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray27, booleanArray32);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray36);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray8, booleanArray36);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray36, false);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false, false, false]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, false, false, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false, false, false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test06323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06323");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) 1, (int) '#', (double) 0.0f);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray32, (int) (short) 0, (int) '#');
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray39, (double) 9);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray41, (double) 4, (double) 4);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray41, 0.0d, (double) 100L);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray41, (double) 5, (int) 'a', (double) (short) -1);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.add(doubleArray41, 0, (double) (short) -1);
        double[] doubleArray58 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray58, (double) (byte) 100, 1.0d);
        double[] doubleArray66 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray58, doubleArray66);
        float[] floatArray72 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray75 = new float[] { (byte) -1, 1L };
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray75, (float) 10L);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray72, floatArray75);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray66, (java.lang.Object) boolean78);
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray66, (int) (short) 0, 1);
        double[] doubleArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray66);
        int int86 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) 1.0f, (-1));
        java.lang.Double[] doubleArray87 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY;
        java.lang.Double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray87);
        double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray88);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) (-1), (java.lang.Object) doubleArray88);
        double[] doubleArray92 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray88, (double) 10);
        double[] doubleArray93 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray92);
        double[] doubleArray94 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray54, doubleArray92);
        int int95 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-1.0]");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
    }

    @Test
    public void test06324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06324");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) '4');
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.add(intArray28, (int) (short) 10);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray37);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray38, intArray39);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray39, (int) (byte) 0);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray39, (int) 'a');
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray39);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray28, intArray39);
        int[] intArray47 = null;
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray28, intArray47);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray28, (int) (short) 1, 0);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray28);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 1, 0, 10, -1, 1, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test06325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06325");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) 0);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray3);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.add(shortArray7, (short) (byte) -1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray9, (short) 0);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray9);
        short[] shortArray19 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray19, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray23 = new java.lang.Short[] {};
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23);
        short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23, (short) 1);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray19, shortArray26);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray26, (int) '4', (int) (short) 0);
        boolean[] booleanArray37 = new boolean[] { false, false, false, true, false, false };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray37);
        boolean[] booleanArray45 = new boolean[] { false, false, false, true, false, false };
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray37, booleanArray45);
        short[] shortArray52 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray52, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray52);
        boolean boolean57 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean47, (java.lang.Object) shortArray52);
        short[] shortArray58 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray30, shortArray52);
        short[] shortArray64 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray64, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray64);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(shortArray64, (short) 10);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray64);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray52, shortArray71);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray9, shortArray71);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.remove(shortArray9, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(shortArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[-1, 0, 0, 1, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test06326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06326");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.add(shortArray4, (short) -1);
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray7);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray7);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray7);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
    }

    @Test
    public void test06327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06327");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 4, (int) '4');
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        java.lang.Class<?> wildcardClass14 = booleanArray13.getClass();
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test06328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06328");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, (int) (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray0);
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray10);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray11, intArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(intArray12, (int) '4');
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.add(intArray12, 1);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.addAll(intArray0, intArray12);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[1]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
    }

    @Test
    public void test06329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06329");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder40 = equalsBuilder34.append('4', 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder34.append((long) (short) -1, (long) (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder46 = equalsBuilder43.append((double) 0.0f, (double) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder43.append((double) (byte) -1, (double) 1.0f);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder52 = equalsBuilder49.append((long) (short) 1, (long) 'a');
        java.lang.Boolean boolean53 = equalsBuilder52.build();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(equalsBuilder40);
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(equalsBuilder46);
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(equalsBuilder52);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
    }

    @Test
    public void test06330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06330");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray6);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 5, (int) (short) 10);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.add(longArray13, 100L);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray15);
        long[] longArray17 = null;
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray16, longArray17);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[100]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[100, 100]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[100, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06331");
        char[] charArray6 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[] charArray13 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[] charArray20 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[] charArray27 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[] charArray34 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[][] charArray35 = new char[][] { charArray6, charArray13, charArray20, charArray27, charArray34 };
        char[] charArray42 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray46 = new char[] { '#', 'a', 'a' };
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.addAll(charArray42, charArray46);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.subarray(charArray46, (int) 'a', (int) (short) 10);
        char[][] charArray51 = org.apache.commons.lang3.ArrayUtils.add(charArray35, (int) (short) 1, charArray50);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray52);
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray52, '#');
        char[] charArray62 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray66 = new char[] { '#', 'a', 'a' };
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.addAll(charArray62, charArray66);
        char[] charArray69 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray62, ' ');
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.addAll(charArray52, charArray62);
        char[] charArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray70, 'a');
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.addAll(charArray50, charArray70);
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray50, 'a');
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.add(charArray50, '4');
        char[] charArray78 = null;
        char[] charArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray78);
        char[] charArray85 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray89 = new char[] { '#', 'a', 'a' };
        char[] charArray90 = org.apache.commons.lang3.ArrayUtils.addAll(charArray85, charArray89);
        int int93 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray89, 'a', (int) (byte) 0);
        int int95 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray89, '4');
        boolean boolean96 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray79, charArray89);
        int int98 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray79, '4');
        boolean boolean99 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray50, charArray79);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[4, #, 4, #]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[4]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test06332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06332");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) 10);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) -1);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray8, (byte) 100, 9);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray8, (byte) 0);
        int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray8, (byte) 1);
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray8, (byte) 100);
        java.lang.Character[] charArray44 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray44);
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray44, ' ');
        java.lang.Character[] charArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray44);
        java.lang.Character[] charArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray48);
        java.lang.Character[] charArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray48);
        boolean boolean51 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray8, (java.lang.Object) charArray50);
        java.lang.Character[] charArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray50);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0, -1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charArray52);
    }

    @Test
    public void test06333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06333");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        int int15 = strList9.size();
        float[] floatArray21 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray21);
        int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) 1);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray21, (float) 10);
        boolean boolean27 = strList9.remove((java.lang.Object) floatArray21);
        java.lang.String[] strArray30 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.stream.Stream<java.lang.String> strStream33 = strList31.parallelStream();
        java.lang.String[] strArray36 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.stream.Stream<java.lang.String> strStream39 = strList37.parallelStream();
        boolean boolean40 = strList31.addAll((java.util.Collection<java.lang.String>) strList37);
        java.util.stream.Stream<java.lang.String> strStream41 = strList31.parallelStream();
        boolean boolean43 = strList31.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray48 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray57 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray57);
        float[] floatArray60 = org.apache.commons.lang3.ArrayUtils.remove(floatArray57, (int) (short) 1);
        float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray51, floatArray60);
        boolean boolean62 = strList49.equals((java.lang.Object) floatArray61);
        int int63 = strList49.size();
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray64, (int) (byte) 1);
        boolean boolean67 = strList49.contains((java.lang.Object) int66);
        boolean boolean68 = strList31.addAll((java.util.Collection<java.lang.String>) strList49);
        java.lang.String[] strArray73 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray82 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray82);
        float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.remove(floatArray82, (int) (short) 1);
        float[] floatArray86 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray76, floatArray85);
        boolean boolean87 = strList74.equals((java.lang.Object) floatArray86);
        int int88 = strList74.size();
        boolean boolean89 = strList31.removeAll((java.util.Collection<java.lang.String>) strList74);
        boolean boolean90 = strList9.contains((java.lang.Object) strList74);
        boolean boolean91 = strList74.isEmpty();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 100.0, 10.0, 35.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 4 + "'", int63 == 4);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray76), "[]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray82), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray83);
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray85), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray86), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 4 + "'", int88 == 4);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test06334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06334");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5);
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 0);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 100);
        java.lang.Character[] charArray12 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray12, '4');
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray20);
        java.lang.Byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray21);
        boolean boolean24 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray14, (java.lang.Object) byteArray21, true);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray21, (byte) -1);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray26);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray9, byteArray27);
        java.lang.Byte[] byteArray35 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray35, (byte) 1);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(byteArray37, (byte) 100);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(byteArray37, (byte) 1);
        java.lang.Byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray37);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray42, (byte) 100);
        byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.add(byteArray44, (byte) 10);
        byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.clone(byteArray46);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray46);
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.remove(byteArray46, 3);
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray9, byteArray46);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray51, (byte) 1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 0, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, 1, 100, 1, -1, 10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }

    @Test
    public void test06335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06335");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, 0, (int) (short) 10);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray29);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray36, (double) 10L, (int) (byte) 100);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray36, (double) (byte) 100, 6);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test06336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06336");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray8, (byte) -1);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray10);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray10, (byte) 100);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray10);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[0, 0, -1, 0]");
    }

    @Test
    public void test06337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06337");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.add(longArray6, (int) (byte) 1, (long) (short) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(longArray6, (-1L));
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 100, 100, 1, 0]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[0, 10, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[0, 100, 100, 1, 0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06338");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) (byte) 100, 1.0d);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray38);
        float[] floatArray44 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray38, (java.lang.Object) boolean50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray38);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray38, (double) (byte) 0, (double) '4');
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray38, (double) 10.0f, (double) 9);
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray38);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 0.0, 10.0, -1.0]");
    }

    @Test
    public void test06339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06339");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, (float) (short) 100);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.clone(floatArray2);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, 0.0f);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray2);
        float[] floatArray16 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray16);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray16);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray16, (int) (byte) 1, 0);
        float[] floatArray24 = new float[] { (byte) -1, 1L };
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray24, (float) 10L);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray21, floatArray24);
        java.lang.Float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray24);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray28, (float) 10);
        java.lang.Float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray28);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray31, (float) 1L);
        int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray33, (float) 'a');
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.remove(floatArray33, 0);
        java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray37);
        float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray38, (float) (short) -1);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray2, floatArray40);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test06340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06340");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) -1, (int) (short) 100);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray8);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        java.lang.Short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray10);
        byte[] byteArray12 = new byte[] {};
        byte[] byteArray17 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray12, byteArray17);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray12, (byte) -1);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (byte) -1);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(byteArray22, (byte) 100);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray22, (byte) 0);
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray26, (byte) -1);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray38 = new char[] { '#', 'a', 'a' };
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.addAll(charArray34, charArray38);
        java.lang.String str40 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray34);
        char[] charArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray34);
        java.lang.String[] strArray44 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.stream.Stream<java.lang.String> strStream47 = strList45.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream48 = strList45.stream();
        boolean boolean49 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) int28, (java.lang.Object) charArray34, (java.util.Collection<java.lang.String>) strList45);
        char[] charArray55 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray59 = new char[] { '#', 'a', 'a' };
        char[] charArray60 = org.apache.commons.lang3.ArrayUtils.addAll(charArray55, charArray59);
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray55, ' ');
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.add(charArray62, ' ');
        char[] charArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray64, ' ');
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.addAll(charArray34, charArray64);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) shortArray10, (java.lang.Object) charArray34);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) (byte) 1);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) (byte) 0);
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray72, (short) 100, 3);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{4,#,a,4,#}" + "'", str40, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertNotNull(strStream48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4#a4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4#a4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, #, a, 4, #,  ]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4#a4#4#a4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4#a4#4#a4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4, #, a, 4, #, 4, #, a, 4, #,  ]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test06341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06341");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) '4');
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.add(intArray28, (int) (short) 10);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray37);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray38, intArray39);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray39, (int) (byte) 0);
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray39, (int) 'a');
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray39);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray28, intArray39);
        int[] intArray47 = null;
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray28, intArray47);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray28);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, -1, 10, 0, 1, -1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 1, 0, 10, -1, 1, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test06342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06342");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        java.lang.Long[] longArray12 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray12);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) floatArray6, (java.lang.Object) longArray13);
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray6);
        java.lang.Character[] charArray21 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, ' ');
        java.lang.Character[] charArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, ' ');
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.clone(charArray28);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray15, (java.lang.Object) charArray29, (int) (short) 100);
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray15);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , #, 4, a, a]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(floatArray32);
    }

    @Test
    public void test06343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06343");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray13, floatArray20);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray20, 0.0f, (-1));
        float[] floatArray33 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray33);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray34, 100.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray36);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray20, floatArray36);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray36, 7, 4);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray36, (float) (byte) 1);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray36, (float) (short) 100, (int) ' ');
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray36, (float) 0);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0, 35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3 + "'", int46 == 3);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[35.0, 10.0, 100.0, 100.0, -1.0]");
    }

    @Test
    public void test06344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06344");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray13);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.clone(floatArray13);
        float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.clone(floatArray18);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[1.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[1.0, -1.0]");
    }

    @Test
    public void test06345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06345");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        long[] longArray29 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(longArray29, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray29);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray29);
        long[] longArray40 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray40);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray40);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray40, (long) (short) 100);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.clone(longArray40);
        long[] longArray52 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray52);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, (long) 0);
        long[] longArray59 = org.apache.commons.lang3.ArrayUtils.addAll(longArray40, longArray52);
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray59);
        long[] longArray61 = org.apache.commons.lang3.ArrayUtils.addAll(longArray29, longArray59);
        long[] longArray63 = org.apache.commons.lang3.ArrayUtils.add(longArray29, (long) 10);
        int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray63, (long) (-1), (int) (short) 100);
        java.lang.Long[] longArray67 = org.apache.commons.lang3.ArrayUtils.toObject(longArray63);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[-1]");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(longArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[-1, -1]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(longArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[-1, -1, -1]");
        org.junit.Assert.assertNotNull(longArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[-1, 10]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(longArray67);
    }

    @Test
    public void test06346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06346");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray8);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray10);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray12, true);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test06347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06347");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3, true);
        java.lang.Boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray7);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false, (-1));
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray8, (int) 'a', (-1));
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, false);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray16);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false]");
    }

    @Test
    public void test06348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06348");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray0, 'a', (int) '4');
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.add(charArray0, 0, ' ');
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray0, '4');
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.clone(charArray0);
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.subarray(charArray11, 2, 4);
        java.lang.Character[] charArray15 = org.apache.commons.lang3.ArrayUtils.toObject(charArray11);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray11, 'a', 2);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ ]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test06349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06349");
        java.lang.Double[] doubleArray2 = new java.lang.Double[] { (-1.0d), (-1.0d) };
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray2);
        double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray2);
        double[] doubleArray8 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray8, (double) (byte) 100, 1.0d);
        double[] doubleArray16 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray8, doubleArray16);
        float[] floatArray22 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray25 = new float[] { (byte) -1, 1L };
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray25, (float) 10L);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray22, floatArray25);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray16, (java.lang.Object) boolean28);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray16, (int) (short) 0, 1);
        double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray32, (double) (byte) -1);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray34, (int) (byte) 100, 1);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray34, (double) 10, 0, 1.0d);
        int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray34, (double) (-1.0f), (int) (short) 1);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray34, 0, 0);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray34, (double) (short) 10);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray4, doubleArray34);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, -1.0, 1.0]");
    }

    @Test
    public void test06350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06350");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, ' ');
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6);
        java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.toObject(charArray6);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15);
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray16, intArray17);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray17, (int) (byte) 0);
        int[] intArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray21);
        java.lang.Integer[] intArray23 = org.apache.commons.lang3.ArrayUtils.toObject(intArray21);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) charArray8, (java.lang.Object) intArray23, (int) (short) 100);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23, 7);
        java.util.Map<java.lang.Object, java.lang.Object> objMap28 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) intArray23);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23);
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(objMap28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
    }

    @Test
    public void test06351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06351");
        java.lang.Long[] longArray2 = new java.lang.Long[] { 1L, 0L };
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2, 0L);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2, (long) (short) 0);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(longArray7, (long) 7);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray12 = org.apache.commons.lang3.ArrayUtils.add(longArray7, 5, (long) 11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Length: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[1, 0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06352");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray6, 10L, 3);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test06353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06353");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray8);
        java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toObject(longArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray8);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray8);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06354");
        java.lang.String[] strArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.CharSequence[] charSequenceArray3 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.CharSequence[]) strArray0, (-1), 10);
        java.lang.Long[] longArray4 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4);
        java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4);
        java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray7);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray7, (long) ' ');
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray7, (long) 3);
        java.lang.Long[] longArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray7);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray13, (long) 'a');
        boolean boolean16 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charSequenceArray3, (java.lang.Object) longArray15);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(charSequenceArray3);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06355");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray2);
        char[] charArray9 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray13 = new char[] { '#', 'a', 'a' };
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray13);
        java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray2, charArray9);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray18 = org.apache.commons.lang3.ArrayUtils.remove(charArray2, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{4,#,a,4,#}" + "'", str15, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06356");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray13, floatArray20);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray20, 0.0f, (-1));
        float[] floatArray33 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray33);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray34, 100.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray36);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray20, floatArray36);
        float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray36, (int) (byte) -1, (int) ' ');
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray41);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray41, 10, (int) '#');
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray41);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray41, 1.0f, (int) (byte) 1);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.remove(floatArray41, (int) (short) 0);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0, 35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[100.0, 100.0, 10.0, 35.0]");
    }

    @Test
    public void test06357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06357");
        java.lang.Character[] charArray5 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5);
        char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray6, '#');
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) charArray6);
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray6, 'a');
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "aa4# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "aa4# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, a, 4, #,  ]");
    }

    @Test
    public void test06358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06358");
        boolean[] booleanArray5 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (byte) 0, 0);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, true);
        java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11, false);
        java.lang.Boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11, false);
        boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[true, false, true, true, true]");
    }

    @Test
    public void test06359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06359");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, (float) (short) 100);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray6, (float) 'a');
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(floatArray6, (float) 10L);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray6, (float) 100, (int) '4');
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test06360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06360");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean[] booleanArray38 = new boolean[] { false, false, false, true, false, false };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38);
        boolean[] booleanArray46 = new boolean[] { false, false, false, true, false, false };
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray38, booleanArray46);
        java.lang.Boolean[] booleanArray52 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray53, false);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray53, false);
        boolean[] booleanArray63 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, (int) (byte) 0, 0);
        boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray63, 4, (int) '4');
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray57, booleanArray69);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder0.append(booleanArray46, booleanArray57);
        java.lang.Boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray46);
        java.lang.Boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray72);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[true]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(booleanArray73);
    }

    @Test
    public void test06361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06361");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        java.lang.Character[] charArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        java.lang.String str5 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray0);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray16 = new char[] { '#', 'a', 'a' };
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.addAll(charArray12, charArray16);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray16, ' ', 2);
        char[] charArray23 = org.apache.commons.lang3.ArrayUtils.subarray(charArray16, 0, (int) (byte) 10);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.add(charArray23, ' ');
        java.lang.Character[] charArray26 = org.apache.commons.lang3.ArrayUtils.toObject(charArray23);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray0, (java.lang.Object) charArray26);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray26);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray28, ' ', (int) (byte) 100);
        java.lang.Character[] charArray32 = org.apache.commons.lang3.ArrayUtils.toObject(charArray28);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a,  ]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(charArray32);
    }

    @Test
    public void test06362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06362");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray1, (long) '4');
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray1, (long) (byte) -1);
        long[] longArray14 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray14);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(longArray14, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray14);
        boolean boolean19 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray14);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray14);
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray14);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.clone(longArray14);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray22);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.add(longArray22, (long) (short) 10);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray1, longArray26);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray31 = org.apache.commons.lang3.ArrayUtils.add(longArray1, (int) (byte) 10, 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[-1, 10]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test06363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06363");
        char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, '#');
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray0, ' ');
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray6);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray6, 'a');
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test06364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06364");
        java.lang.Object[] objArray0 = null;
        java.lang.Object obj1 = null;
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(objArray0, obj1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test06365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06365");
        int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, (int) (byte) 1);
        int[] intArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray0);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray3);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder5 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray12);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray13, intArray14);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 0);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray14);
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray19, (int) (byte) 1);
        int[] intArray22 = new int[] {};
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray22, intArray23);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.addAll(intArray19, intArray22);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder26 = equalsBuilder5.append(intArray18, intArray22);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(intArray22, (int) 'a');
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.subarray(intArray22, 10, (int) (short) 100);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray31);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray3, intArray31);
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test06366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06366");
        boolean[] booleanArray0 = new boolean[] {};
        int int2 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray0, false);
        boolean[] booleanArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray0);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, true);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test06367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06367");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream14 = strList3.parallelStream();
        java.lang.String[] strArray17 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.stream.Stream<java.lang.String> strStream20 = strList18.parallelStream();
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList18.addAll((java.util.Collection<java.lang.String>) strList24);
        boolean boolean28 = strList3.containsAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray34);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35, false);
        boolean boolean39 = strList3.remove((java.lang.Object) booleanArray35);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        java.lang.Long[] longArray46 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray46);
        long[] longArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray46);
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray46, (long) (-1));
        java.lang.String str51 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) longArray46);
        java.lang.Long[] longArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray46);
        java.lang.Object[] objArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray46);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray35, (java.lang.Object[]) longArray46);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertNotNull(strStream14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertNotNull(longArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{0,1,100,100,0}" + "'", str51, "{0,1,100,100,0}");
        org.junit.Assert.assertNotNull(longArray52);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test06368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06368");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray9, '4');
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray25 = new char[] { '#', 'a', 'a' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray25);
        java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray21);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray28);
        boolean[] booleanArray36 = new boolean[] { false, false, false, true, false, false };
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray36);
        boolean[] booleanArray44 = new boolean[] { false, false, false, true, false, false };
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray44);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray36, booleanArray44);
        java.lang.String[] strArray47 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray49 = org.apache.commons.lang3.ArrayUtils.add(strArray47, "{true,true}");
        boolean boolean50 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray29, (java.lang.Object) boolean46, strArray49);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray29);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.clone(charArray51);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{4,#,a,4,#}" + "'", str27, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, a, a, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#aa4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, a, a, 4, #, a, 4, #]");
    }

    @Test
    public void test06369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06369");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray8);
        java.lang.Long[] longArray15 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray15);
        float[] floatArray22 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray22, 0.0f);
        java.lang.Float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        long[] longArray28 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray28);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray26, (java.lang.Object) longArray28);
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.addAll(longArray16, longArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray8, longArray16);
        long[] longArray34 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) '#');
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray8);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[0, 1, 100, 100, 0, -1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[-1, 35]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test06370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06370");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        short[] shortArray18 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray18, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray18);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray18, (short) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray18);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray8, (java.lang.Object) shortArray18);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray18, (short) 0);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.clone(shortArray18);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(shortArray29, (short) 10);
        short[] shortArray32 = null;
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray29, shortArray32);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.add(shortArray33, (int) '#', (short) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[-1, 1, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[-1, 1, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[-1, 1, 0, 0, 100]");
    }

    @Test
    public void test06371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06371");
        java.lang.String[] strArray4 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray13 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.remove(floatArray13, (int) (short) 1);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray7, floatArray16);
        boolean boolean18 = strList5.equals((java.lang.Object) floatArray17);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray17);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray17, (-1.0f));
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray17, (float) 6);
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray29);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray29, (int) (byte) 1, 0);
        float[] floatArray37 = new float[] { (byte) -1, 1L };
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray37, (float) 10L);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray34, floatArray37);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray37);
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray37);
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.clone(floatArray17);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.add(floatArray43, (float) 100);
        float[] floatArray51 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray51);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray51);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray51, (int) (byte) 1, 0);
        float[] floatArray59 = new float[] { (byte) -1, 1L };
        int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray59, (float) 10L);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray56, floatArray59);
        java.lang.Float[] floatArray63 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray59);
        float[] floatArray66 = new float[] { (byte) -1, 1L };
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray66, (float) 10L);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray66);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray59, floatArray66);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray66);
        float[] floatArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray66, (float) (byte) 100);
        float[] floatArray74 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray43, floatArray73);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 100.0, 10.0, 35.0, 100.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[]");
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray59), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray74), "[-1.0, 100.0, 10.0, 35.0, -1.0, 1.0]");
    }

    @Test
    public void test06372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06372");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray2);
        char[] charArray9 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray13 = new char[] { '#', 'a', 'a' };
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray13);
        java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray9);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray2, charArray9);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray26 = new char[] { '#', 'a', 'a' };
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.addAll(charArray22, charArray26);
        java.lang.String str28 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray22);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray22);
        boolean boolean31 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) charArray9, (java.lang.Object) charArray29, false);
        char[] charArray37 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray41 = new char[] { '#', 'a', 'a' };
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.addAll(charArray37, charArray41);
        java.lang.String str43 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray37);
        char[] charArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray37);
        char[] charArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray37);
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray45, 'a');
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray9, charArray45);
        java.lang.Character[] charArray49 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray49);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray49);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray51);
        char[] charArray58 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray62 = new char[] { '#', 'a', 'a' };
        char[] charArray63 = org.apache.commons.lang3.ArrayUtils.addAll(charArray58, charArray62);
        java.lang.String str64 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray58);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray51, charArray58);
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.subarray(charArray51, 4, (int) '#');
        char[] charArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray68);
        char[] charArray75 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray79 = new char[] { '#', 'a', 'a' };
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.addAll(charArray75, charArray79);
        char[] charArray82 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray75, ' ');
        char[] charArray84 = org.apache.commons.lang3.ArrayUtils.remove(charArray82, 0);
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.remove(charArray84, 0);
        char[] charArray89 = org.apache.commons.lang3.ArrayUtils.add(charArray86, (int) (short) 1, '4');
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray69, charArray89);
        char[] charArray91 = org.apache.commons.lang3.ArrayUtils.addAll(charArray9, charArray89);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray93 = org.apache.commons.lang3.ArrayUtils.remove(charArray9, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{4,#,a,4,#}" + "'", str15, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{4,#,a,4,#}" + "'", str28, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{4,#,a,4,#}" + "'", str43, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[4, #, a, 4, #]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{4,#,a,4,#}" + "'", str64, "{4,#,a,4,#}");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[#, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a, 4, #]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "a44#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "a44#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[a, 4, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "4#a4#a44#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "4#a4#a44#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[4, #, a, 4, #, a, 4, 4, #]");
    }

    @Test
    public void test06373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06373");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray2);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray2, (long) (short) -1);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.add(longArray2, (long) 0);
        java.lang.Long[] longArray18 = new java.lang.Long[] { 1L, 0L };
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray19);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray19, (long) 10);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray15, longArray19);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.subarray(longArray23, 1, (int) (short) 0);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[1, 0, 10]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 0, 1, 0]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[]");
    }

    @Test
    public void test06374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06374");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.appendSuper(false);
        equalsBuilder0.reset();
        short[] shortArray41 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray41, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray41);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray41, (short) (byte) 0);
        java.lang.Short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray41);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray41, (int) (byte) 100, (int) (short) 100);
        short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray41);
        short[] shortArray59 = new short[] { (byte) 1, (byte) 10, (short) 100, (byte) 10, (byte) 100, (short) 10 };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) 1, 5);
        int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) 0);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, 1, 2);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder68 = equalsBuilder0.append(shortArray52, shortArray59);
        java.lang.Character[] charArray69 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray69, '4');
        java.lang.Character[] charArray72 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray69);
        char[] charArray74 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray72, ' ');
        java.lang.Character[] charArray75 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray75);
        char[] charArray78 = org.apache.commons.lang3.ArrayUtils.add(charArray76, 'a');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder79 = equalsBuilder0.append(charArray74, charArray76);
        java.lang.Boolean boolean80 = equalsBuilder79.build();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]");
        org.junit.Assert.assertNotNull(shortArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[1, 10, 100, 10, 100, 10]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[10]");
        org.junit.Assert.assertNotNull(equalsBuilder68);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[a]");
        org.junit.Assert.assertNotNull(equalsBuilder79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + false + "'", boolean80, false);
    }

    @Test
    public void test06375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06375");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) 100);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) 9);
        java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(doubleArray31);
    }

    @Test
    public void test06376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06376");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        java.lang.Long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toObject(longArray6);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray6, (long) (-1));
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray6, (long) 1);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray6);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray16, (long) 5);
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[100, -1, 1, -1, 1, 10]");
    }

    @Test
    public void test06377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06377");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) (-1.0f));
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray25);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) (short) 100, (int) (byte) 0);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, (double) 4);
        int int34 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) doubleArray33);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray33, (double) (short) 10, (double) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 0.0, 10.0, -1.0, 4.0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test06378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06378");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder0.append('a', '#');
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray36, byteArray41);
        byte[] byteArray49 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.add(byteArray49, (byte) -1);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.clone(byteArray51);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray52, (byte) 100);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(byteArray52, (byte) 0);
        byte[] byteArray57 = org.apache.commons.lang3.ArrayUtils.clone(byteArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder35.append(byteArray41, byteArray52);
        float[] floatArray64 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray64);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray64);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray64, (int) (byte) 1, 0);
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.add(floatArray69, (float) (short) 0);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray71, (float) (short) 100);
        float[] floatArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray71, (float) (short) 100);
        float[] floatArray81 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray82 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray81);
        int int84 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray81, 0.0f);
        java.lang.Float[] floatArray85 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray81);
        java.lang.Object[] objArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray85);
        float[] floatArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray85);
        float[] floatArray89 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray85, (float) (byte) 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder35.append(floatArray75, floatArray89);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray75);
        float[] floatArray93 = org.apache.commons.lang3.ArrayUtils.remove(floatArray75, (int) (byte) 0);
        float[] floatArray96 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray93, 9, (int) (short) 1);
        float[] floatArray99 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray93, (int) (short) 0, 6);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[]");
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[0.0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[0.0]");
        org.junit.Assert.assertNotNull(floatArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray81), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(floatArray85);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray87), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray89), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(floatArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray93), "[]");
        org.junit.Assert.assertNotNull(floatArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray96), "[]");
        org.junit.Assert.assertNotNull(floatArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray99), "[]");
    }

    @Test
    public void test06379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06379");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, (float) (short) 100);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray6, (float) 'a');
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray6);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray6, (float) 4);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray11);
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray11);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[-1.0, 1.0, 4.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 1.0, 4.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0, 4.0]");
    }

    @Test
    public void test06380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06380");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray8, 10, (int) ' ');
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(byteArray12, (byte) 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test06381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06381");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        float[] floatArray13 = new float[] { (byte) -1, 1L };
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 10L);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13);
        java.lang.Float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray13, floatArray20);
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray20, 0.0f, (-1));
        float[] floatArray33 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray33);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray34, 100.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray36);
        float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray20, floatArray36);
        int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray38, (float) 'a');
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[-1.0, 1.0, 35.0, 10.0, 100.0, 100.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test06382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06382");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) (-1.0f));
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) ' ');
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test06383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06383");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        short[] shortArray18 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray18, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray18);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray18, (short) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray18);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray8, (java.lang.Object) shortArray18);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray18, (short) 0);
        short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.add(shortArray18, (short) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.add(shortArray30, (int) (byte) 100, (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[-1, 1, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[-1, 1, 0, 0, 100, 10]");
    }

    @Test
    public void test06384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06384");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        short[] shortArray38 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray38, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray42 = new java.lang.Short[] {};
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray42, (short) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray38, shortArray45);
        short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray45, (int) '4', (int) (short) 0);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray45, (short) 100, (int) (byte) -1);
        java.lang.Short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray45);
        short[] shortArray59 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray59, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray59, (short) (byte) 0);
        java.lang.Short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray69 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray59, (int) (byte) 100, (int) (short) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder31.append(shortArray45, shortArray59);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.add(shortArray59, (short) 0);
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray59, (short) 0, (int) '#');
        java.lang.Short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray59);
        short[] shortArray78 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray59, (short) (byte) 10);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(shortArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[100, 0, 0, 1, -1, 0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray78), "[100, 0, 0, 1, -1]");
    }

    @Test
    public void test06385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06385");
        java.lang.Character[] charArray5 = new java.lang.Character[] { '#', '#', '#', ' ', '#' };
        java.lang.Character[][] charArray6 = new java.lang.Character[][] { charArray5 };
        java.lang.Character[][] charArray7 = org.apache.commons.lang3.ArrayUtils.toArray(charArray6);
        java.lang.Character[] charArray14 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray14);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray14, ' ');
        java.lang.Character[] charArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray14);
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray14, ' ');
        java.lang.Character[][] charArray21 = org.apache.commons.lang3.ArrayUtils.add(charArray7, 0, charArray14);
        java.lang.Character[] charArray27 = new java.lang.Character[] { '#', '#', '#', ' ', '#' };
        java.lang.Character[][] charArray28 = new java.lang.Character[][] { charArray27 };
        java.lang.Character[][] charArray29 = org.apache.commons.lang3.ArrayUtils.toArray(charArray28);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray37);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray38, intArray39);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray39, (int) (byte) 0);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray39);
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray44, (int) (byte) 1);
        int[] intArray47 = new int[] {};
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray47, intArray48);
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.addAll(intArray44, intArray47);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder51 = equalsBuilder30.append(intArray43, intArray47);
        short[] shortArray57 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray57, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray61 = new java.lang.Short[] {};
        short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray61, (short) 1);
        boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray57, shortArray64);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray57, (short) 0, 0);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.add(shortArray57, (int) (byte) 0, (short) 0);
        java.lang.Short[] shortArray72 = null;
        java.lang.Short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray72);
        java.lang.Short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray73);
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray73, (short) (byte) -1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder30.append(shortArray71, shortArray76);
        java.lang.Boolean boolean78 = equalsBuilder30.build();
        int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray29, (java.lang.Object) boolean78);
        java.lang.Character[][] charArray80 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Character[][] charArray82 = org.apache.commons.lang3.ArrayUtils.remove(charArray7, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , #, 4, a, a]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder51);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray57), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertNotNull(shortArray74);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertEquals("'" + boolean78 + "' != '" + false + "'", boolean78, false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(charArray80);
    }

    @Test
    public void test06386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06386");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10, (short) (byte) 100);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10);
        java.lang.Short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray10);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray14);
    }

    @Test
    public void test06387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06387");
        float[] floatArray4 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray7 = new float[] { (byte) -1, 1L };
        int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, (float) 10L);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray4, floatArray7);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray4, (float) '4');
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray12);
        float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.add(floatArray12, (float) 1L);
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray12);
        float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray12, (float) (short) 1);
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, (float) '#', 0);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.add(floatArray12, (float) (-1L));
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray29);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray29, (int) (byte) 1, 0);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, (float) (byte) 1);
        java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray34);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray47 = new char[] { '#', 'a', 'a' };
        char[] charArray48 = org.apache.commons.lang3.ArrayUtils.addAll(charArray43, charArray47);
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray47, ' ', 1);
        char[] charArray57 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray61 = new char[] { '#', 'a', 'a' };
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.addAll(charArray57, charArray61);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray47, charArray62);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) floatArray37, (java.lang.Object) charArray62);
        float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray37, 0.0f);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray66, (int) (short) -1, (int) (byte) 0);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray69);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[100.0, 10.0, -1.0, 97.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[100.0, 10.0, -1.0, 97.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[]");
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test06388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06388");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        long[] longArray29 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(longArray29, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray29);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray29);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray29);
        long[] longArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        java.lang.Long[] longArray40 = org.apache.commons.lang3.ArrayUtils.toObject(longArray39);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray39);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[-1]");
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test06389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06389");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder0.append('a', '#');
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray41 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray36, byteArray41);
        byte[] byteArray49 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.add(byteArray49, (byte) -1);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.clone(byteArray51);
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray52, (byte) 100);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(byteArray52, (byte) 0);
        byte[] byteArray57 = org.apache.commons.lang3.ArrayUtils.clone(byteArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder58 = equalsBuilder35.append(byteArray41, byteArray52);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder61 = equalsBuilder35.append(100L, (long) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder61.append((double) (byte) 1, (double) 0L);
        boolean[] booleanArray65 = null;
        boolean[] booleanArray66 = null;
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder61.append(booleanArray65, booleanArray66);
        java.lang.Boolean boolean68 = equalsBuilder61.build();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder58);
        org.junit.Assert.assertNotNull(equalsBuilder61);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertEquals("'" + boolean68 + "' != '" + false + "'", boolean68, false);
    }

    @Test
    public void test06390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06390");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false);
        java.lang.String[] strArray11 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.lang.String[] strArray16 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.stream.Stream<java.lang.String> strStream19 = strList17.parallelStream();
        java.lang.String[] strArray22 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.stream.Stream<java.lang.String> strStream25 = strList23.parallelStream();
        boolean boolean26 = strList17.addAll((java.util.Collection<java.lang.String>) strList23);
        java.lang.Object obj27 = null;
        boolean boolean28 = strList23.equals(obj27);
        int int29 = strList23.size();
        boolean boolean30 = strList12.removeAll((java.util.Collection<java.lang.String>) strList23);
        java.lang.Object obj31 = null;
        java.lang.String[] strArray32 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.String[] strArray34 = org.apache.commons.lang3.ArrayUtils.add(strArray32, "{true,true}");
        java.lang.String[] strArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray34);
        boolean boolean36 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) strList12, obj31, strArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) strArray34, obj37);
        int int39 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray6, (java.lang.Object) strArray34);
        java.lang.Object[] objArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) strArray34);
        java.lang.String[] strArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray34);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strStream19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[{true,true}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[{true,true}]");
        org.junit.Assert.assertNotNull(strArray41);
    }

    @Test
    public void test06391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06391");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder3 = equalsBuilder0.append((byte) -1, (byte) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder6 = equalsBuilder3.append((float) (-1), (float) '4');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder9 = equalsBuilder3.append((byte) 1, (byte) 100);
        byte[] byteArray11 = new byte[] { (byte) 10 };
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray11);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray19);
        java.lang.Byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray20);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray20, (byte) 0);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray23, (byte) 1);
        byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder27 = equalsBuilder3.append(byteArray11, byteArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder30 = equalsBuilder3.append(0, 6);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder33 = equalsBuilder3.append((byte) 10, (byte) 0);
        boolean boolean34 = equalsBuilder33.isEquals();
        org.junit.Assert.assertNotNull(equalsBuilder3);
        org.junit.Assert.assertNotNull(equalsBuilder6);
        org.junit.Assert.assertNotNull(equalsBuilder9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder27);
        org.junit.Assert.assertNotNull(equalsBuilder30);
        org.junit.Assert.assertNotNull(equalsBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test06392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06392");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((double) 0.0f, 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder37 = equalsBuilder34.append((long) 4, (long) (short) 1);
        byte[] byteArray38 = new byte[] {};
        byte[] byteArray43 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray38, byteArray43);
        int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) -1);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray38, (byte) -1);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray38, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray38);
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray58, (byte) 1);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains(byteArray60, (byte) 100);
        boolean boolean64 = org.apache.commons.lang3.ArrayUtils.contains(byteArray60, (byte) 1);
        java.lang.Byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray60);
        byte[] byteArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray65, (byte) 100);
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.add(byteArray67, (byte) 10);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray67);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder71 = equalsBuilder34.append(byteArray38, byteArray67);
        byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray38, (int) (byte) -1, (int) '4');
        java.lang.Byte[] byteArray75 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray38);
        java.lang.Byte[] byteArray76 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray38);
        java.lang.Byte[] byteArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray76);
        byte[] byteArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray77, (byte) 1);
        java.lang.Byte[] byteArray86 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray88 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray86, (byte) 1);
        boolean boolean90 = org.apache.commons.lang3.ArrayUtils.contains(byteArray88, (byte) 100);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.contains(byteArray88, (byte) 1);
        java.lang.Byte[] byteArray93 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray88);
        byte[] byteArray95 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray88, (byte) 10);
        byte[] byteArray96 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray79, byteArray95);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(equalsBuilder71);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertNotNull(byteArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray95), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray96), "[0, 0, 100, -1, -1, 0]");
    }

    @Test
    public void test06393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06393");
        double[] doubleArray0 = null;
        boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray0, 10.0d, (double) (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test06394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06394");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) 0, 0);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray5, (int) (byte) 0, (short) 0);
        short[] shortArray25 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray25, (short) (byte) 0);
        int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray31, (short) (byte) 10);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray19, shortArray31);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray19, (short) -1);
        short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.add(shortArray19, (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.add(shortArray38, (int) (short) -1, (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[0, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[0, 100, 0, 0, 1, -1, 100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
        org.junit.Assert.assertNotNull(shortArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[0, 100, 0, 0, 1, -1, -1]");
    }

    @Test
    public void test06395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06395");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray27, (double) (byte) -1);
        double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, (int) (byte) 100, 1);
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray29);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, (int) (short) 10, 0.0d);
        int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 5, (int) (short) 0);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, 1, 2);
        double[] doubleArray47 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray47, (double) (byte) 100, 1.0d);
        double[] doubleArray55 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray47, doubleArray55);
        float[] floatArray61 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray64 = new float[] { (byte) -1, 1L };
        int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray64, (float) 10L);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray61, floatArray64);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray55, (java.lang.Object) boolean67);
        double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray55, (int) (short) 0, 1);
        double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray71, (double) (byte) -1);
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray73, (int) (byte) 100, 1);
        int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray76, (double) (-1L), (int) (short) 100, (double) 100.0f);
        double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray76);
        double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray81, (int) 'a', 3);
        boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray84);
        double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray84);
        double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.add(doubleArray86, (double) '4');
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray61), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[52.0]");
    }

    @Test
    public void test06396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06396");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) -1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) ' ');
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 3);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray43 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray44 = new java.lang.Byte[][] { byteArray37, byteArray43 };
        java.lang.Byte[][] byteArray47 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray44, (int) '#', 10);
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray54);
        java.lang.Byte[][] byteArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray44, (java.lang.Object) intArray54);
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray54, (int) (short) -1);
        int[] intArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray54, (int) ' ');
        java.lang.Integer[] intArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray54);
        int[] intArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray61);
        int[] intArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray62, (int) (byte) 10);
        int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray64, (int) (short) 100, 2);
        int[] intArray68 = org.apache.commons.lang3.ArrayUtils.addAll(intArray31, intArray64);
        int[] intArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray31);
        java.lang.Byte[] byteArray75 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray81 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray82 = new java.lang.Byte[][] { byteArray75, byteArray81 };
        java.lang.Byte[][] byteArray85 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray82, (int) '#', 10);
        java.lang.Integer[] intArray92 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray93 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray92);
        java.lang.Byte[][] byteArray94 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray82, (java.lang.Object) intArray92);
        int[] intArray96 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray92, 1);
        boolean boolean98 = org.apache.commons.lang3.ArrayUtils.contains(intArray96, (int) (byte) 0);
        boolean boolean99 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray69, intArray96);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 1, 0, -1, 1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 1, 0, 10, -1, 1, -1, 1, 0, -1, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray94);
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test06397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06397");
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { false, false, true, true, false };
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6);
        java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray8);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray8);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, true, true, false]");
    }

    @Test
    public void test06398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06398");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.String[] strArray29 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.lang.String[] strArray34 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.stream.Stream<java.lang.String> strStream37 = strList35.parallelStream();
        java.lang.String[] strArray40 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.stream.Stream<java.lang.String> strStream43 = strList41.parallelStream();
        boolean boolean44 = strList35.addAll((java.util.Collection<java.lang.String>) strList41);
        java.lang.Object obj45 = null;
        boolean boolean46 = strList41.equals(obj45);
        int int47 = strList41.size();
        boolean boolean48 = strList30.removeAll((java.util.Collection<java.lang.String>) strList41);
        java.util.Iterator<java.lang.String> strItor49 = strList41.iterator();
        boolean boolean50 = strList13.retainAll((java.util.Collection<java.lang.String>) strList41);
        java.lang.Byte[] byteArray57 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray57, (byte) 1);
        java.lang.Byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray57);
        java.lang.Object[] objArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) byteArray60);
        boolean boolean62 = strList41.contains((java.lang.Object) objArray61);
        short[] shortArray68 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray68, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray72 = new java.lang.Short[] {};
        short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray72);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray72, (short) 1);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray68, shortArray75);
        int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray68, (short) 10);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray68);
        short[] shortArray85 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int88 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray85, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray89 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray85);
        short[] shortArray91 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray85, (short) (byte) 0);
        short[] shortArray92 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray68, shortArray85);
        short[] shortArray93 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray85);
        boolean boolean94 = strList41.remove((java.lang.Object) shortArray85);
        short[] shortArray95 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray85);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[]");
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertNotNull(shortArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray91), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray92), "[100, 0, 0, 1, -1, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray93), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(shortArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray95), "[100, 0, 0, 1, -1]");
    }

    @Test
    public void test06399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06399");
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) -1);
        byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.clone(byteArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 100);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(byteArray9, (byte) 0);
        byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.clone(byteArray9);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray9);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100, -1, -1, 10, -1, 100]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100, -1, 10, -1, -1, 100, -1]");
    }

    @Test
    public void test06400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06400");
        short[] shortArray4 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 0);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 0);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 10);
        double[] doubleArray18 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, (double) (byte) 100, 1.0d);
        double[] doubleArray26 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray18, doubleArray26);
        float[] floatArray32 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray35 = new float[] { (byte) -1, 1L };
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray35, (float) 10L);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray32, floatArray35);
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray26, (java.lang.Object) boolean38);
        double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray26);
        java.lang.Double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray40);
        double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray41, (double) (-1));
        double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray41, (double) 1.0f);
        int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray8, (java.lang.Object) doubleArray41, 100);
        double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray41);
        java.lang.Double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray41);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[-1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
    }

    @Test
    public void test06401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06401");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) 'a', (int) (short) 0);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, 0, (int) (short) 10);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.subarray(intArray8, (int) (byte) 10, 8);
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray23, 5, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test06402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06402");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder35 = equalsBuilder0.append('a', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder38 = equalsBuilder0.append((int) (byte) 1, (int) (short) -1);
        java.lang.Boolean boolean39 = equalsBuilder0.build();
        equalsBuilder0.reset();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder35);
        org.junit.Assert.assertNotNull(equalsBuilder38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
    }

    @Test
    public void test06403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06403");
        java.lang.Short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray0);
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.clone(shortArray2);
        short[] shortArray8 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray8, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray8);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray12, (short) (byte) 0);
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray14, (short) (byte) 100);
        java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray14);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray14, (int) (byte) 100, 1);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray3, shortArray20);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray21);
        short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.add(shortArray21, (short) (byte) 10);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[10]");
    }

    @Test
    public void test06404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06404");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, 100.0d, (int) 'a', 0.0d);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3);
        double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray17);
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray17, (int) (byte) 10, 10);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray17, (double) 100.0f, 5, (double) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test06405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06405");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) (byte) 100, 1.0d);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray38);
        float[] floatArray44 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray38, (java.lang.Object) boolean50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray38);
        double[] doubleArray56 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray56, (double) (byte) 100, 1.0d);
        double[] doubleArray64 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray56, doubleArray64);
        float[] floatArray70 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray73 = new float[] { (byte) -1, 1L };
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray73, (float) 10L);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray70, floatArray73);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray64, (java.lang.Object) boolean76);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray25, doubleArray64);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray25);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, 1.0d);
        double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray25);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray82, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 3 + "'", int81 == 3);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 10.0, 0.0, 1.0]");
    }

    @Test
    public void test06406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06406");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(longArray8, (long) 0);
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toObject(longArray8);
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray12);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1]");
    }

    @Test
    public void test06407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06407");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.clone(byteArray10);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray11, (byte) 0);
        byte[] byteArray20 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) -1, (byte) -1, (byte) 100 };
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.add(byteArray20, (byte) -1);
        byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.clone(byteArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray23, (byte) 100);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(byteArray23, (byte) 0);
        byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.clone(byteArray23);
        int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray28, (byte) -1);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray37, (byte) 1);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(byteArray39, (byte) 100);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(byteArray39, (byte) 1);
        java.lang.Byte[] byteArray50 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray50, (byte) 1);
        byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray52, (int) (byte) 0, (int) (byte) 1);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray39, byteArray55);
        byte[] byteArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray39, (byte) 10);
        byte[] byteArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray39);
        byte[] byteArray60 = org.apache.commons.lang3.ArrayUtils.clone(byteArray59);
        java.lang.Byte[] byteArray67 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray69 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray67, (byte) 1);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.contains(byteArray69, (byte) 100);
        boolean boolean73 = org.apache.commons.lang3.ArrayUtils.contains(byteArray69, (byte) 1);
        java.lang.Byte[] byteArray74 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray69);
        byte[] byteArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray74, (byte) 100);
        byte[] byteArray78 = org.apache.commons.lang3.ArrayUtils.add(byteArray76, (byte) 10);
        byte[] byteArray79 = org.apache.commons.lang3.ArrayUtils.clone(byteArray78);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray78);
        byte[] byteArray82 = org.apache.commons.lang3.ArrayUtils.add(byteArray78, (byte) 100);
        byte[] byteArray84 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray82, (byte) 0);
        int int87 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray82, (byte) 10, 5);
        boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray60, byteArray82);
        byte[] byteArray89 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray28, byteArray60);
        byte[] byteArray90 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray11, byteArray89);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray11);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100, -1, 10, -1, -1, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100, -1, 10, -1, -1, 100, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[10, 0, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[10, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[100, -1, 10, -1, -1, 100, -1, 0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[100, -1, 10, -1, -1, 100, -1, 0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test06408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06408");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray15, (byte) 10);
        byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.clone(byteArray17);
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.add(byteArray18, 5, (byte) -1);
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray21);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.remove(byteArray22, 7);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray24);
        java.lang.Byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray24);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(byteArray24, (byte) 0);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray24);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 100, -1, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, -1, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test06409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06409");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, 'a');
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(charArray5, ' ');
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray5, '4', (int) ' ');
        char[] charArray20 = org.apache.commons.lang3.ArrayUtils.clone(charArray5);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray23 = org.apache.commons.lang3.ArrayUtils.add(charArray5, (int) 'a', '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, 4, #]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, #, a, 4, #]");
    }

    @Test
    public void test06410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06410");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(intArray8, (int) '4');
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.add(intArray8, (int) 'a');
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray8);
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.subarray(intArray8, (int) (short) 1, (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray20 = org.apache.commons.lang3.ArrayUtils.remove(intArray8, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
    }

    @Test
    public void test06411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06411");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray27);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) 'a', 2, (double) 10.0f);
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        java.lang.Double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray56);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray57);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray57, (double) 10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
    }

    @Test
    public void test06412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06412");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        int[] intArray15 = org.apache.commons.lang3.ArrayUtils.subarray(intArray8, 0, 0);
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray15);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray23);
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray24, intArray25);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray25, (int) (byte) 0);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray25);
        short[] shortArray35 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray35, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray35);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray35, (short) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray35);
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) intArray25, (java.lang.Object) shortArray35);
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.addAll(intArray15, intArray25);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray25);
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.subarray(intArray25, (int) '#', (int) '#');
        int[] intArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray48, 1);
        org.apache.commons.lang3.ArrayUtils.reverse(intArray48);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[-1, 1, 0, 0, 100]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[100, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
    }

    @Test
    public void test06413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06413");
        char[][][][] charArray0 = null;
        char[][][][] charArray1 = org.apache.commons.lang3.ArrayUtils.clone(charArray0);
        org.junit.Assert.assertNull(charArray1);
    }

    @Test
    public void test06414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06414");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, false);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray6, true);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray23, true);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test06415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06415");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray5, true, (int) (byte) -1);
        boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.add(booleanArray5, true);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray10, false);
        boolean[] booleanArray19 = new boolean[] { false, false, false, true, false, false };
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray19);
        boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray19, (int) (short) 1);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray19);
        boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray23, 2, 0);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray12, booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06416");
        int[] intArray0 = null;
        int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray0, 100, (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test06417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06417");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray8, (double) (-1));
        double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray10, 0, 9);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray10);
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray10, 10, (int) '4');
        double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
    }

    @Test
    public void test06418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06418");
        java.lang.Long[] longArray2 = new java.lang.Long[] { 1L, 0L };
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2);
        long[] longArray4 = org.apache.commons.lang3.ArrayUtils.clone(longArray3);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.clone(longArray3);
        long[] longArray12 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.subarray(longArray12, 3, (int) (byte) 0);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray15);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.addAll(longArray5, longArray16);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.subarray(longArray5, (-1), (int) (byte) 0);
        java.lang.Long[] longArray21 = org.apache.commons.lang3.ArrayUtils.toObject(longArray5);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[10, 1, -1, 1, -1, 100]");
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[1, 0]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[]");
        org.junit.Assert.assertNotNull(longArray21);
    }

    @Test
    public void test06419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06419");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray10, (float) (byte) 1);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray10);
        float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray13);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) floatArray13);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray13, (float) '4');
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[]");
    }

    @Test
    public void test06420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06420");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, (float) (short) 100);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.clone(floatArray2);
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 0, 10.0f);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray11);
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray11, (float) 3);
        boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(floatArray11, 0.0f);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[10.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06421");
        double[] doubleArray0 = null;
        boolean boolean2 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray0, (double) 4);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test06422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06422");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray26);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) '#');
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 0.0d);
        java.lang.Object obj34 = null;
        boolean boolean36 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray33, obj34, false);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray33, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test06423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06423");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toObject(longArray1);
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray10, (long) 0, 4);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray10, (long) (short) 0);
        java.lang.Long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toObject(longArray10);
        java.lang.Long[] longArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray16);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[-1]");
    }

    @Test
    public void test06424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06424");
        long[] longArray6 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray12 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(longArray12, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray12);
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.clone(longArray12);
        long[] longArray22 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray22, 1L);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray24);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray24);
        long[] longArray28 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray28);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(longArray28, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray28);
        long[] longArray33 = org.apache.commons.lang3.ArrayUtils.clone(longArray28);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray28);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray28);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(longArray28, (long) (short) 100);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray28);
        int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray28, (long) 3, (int) (byte) 100);
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.addAll(longArray24, longArray28);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(longArray28, (long) 10);
        long[] longArray46 = org.apache.commons.lang3.ArrayUtils.add(longArray28, (long) (short) 0);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray46, (long) '4', 10);
        int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray46, (long) 8, (int) (short) 1);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray46);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray46);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10, 32, -1, 0]");
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[32, -1, 0, -1]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[-1, 0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test06425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06425");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        long[] longArray11 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray11, 1L);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray13);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder15 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray25 = new char[] { '#', 'a', 'a' };
        char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray21, charArray25);
        char[] charArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray21, ' ');
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray38 = new char[] { '#', 'a', 'a' };
        char[] charArray39 = org.apache.commons.lang3.ArrayUtils.addAll(charArray34, charArray38);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray38, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder43 = equalsBuilder15.append((java.lang.Object) ' ', (java.lang.Object) charArray38);
        java.lang.Long[] longArray49 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray49);
        java.lang.Long[] longArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray49);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray51);
        char[] charArray56 = new char[] { 'a', '#', ' ' };
        char[][] charArray57 = new char[][] { charArray56 };
        char[][] charArray58 = org.apache.commons.lang3.ArrayUtils.toArray(charArray57);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder59 = equalsBuilder43.append((java.lang.Object[]) longArray51, (java.lang.Object[]) charArray58);
        long[] longArray64 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray64, 1L);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray64, 0L);
        long[] longArray73 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray73, 1L);
        int int77 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray73, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder78 = equalsBuilder43.append(longArray64, longArray73);
        long[] longArray79 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray64);
        java.lang.Long[] longArray85 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray85);
        long[] longArray87 = org.apache.commons.lang3.ArrayUtils.addAll(longArray79, longArray86);
        int int90 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray79, (long) (short) 1, 3);
        long[] longArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray79);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray94 = org.apache.commons.lang3.ArrayUtils.add(longArray91, 10, (long) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder43);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertNotNull(longArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertNotNull(equalsBuilder59);
        org.junit.Assert.assertNotNull(longArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 3 + "'", int68 == 3);
        org.junit.Assert.assertNotNull(longArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray73), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 3 + "'", int77 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder78);
        org.junit.Assert.assertNotNull(longArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[-1, 32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray85);
        org.junit.Assert.assertNotNull(longArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray86), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray87), "[-1, 32, 1, -1, 0, 0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(longArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray91), "[-1, 32, 1, -1, 0]");
    }

    @Test
    public void test06426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06426");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, (float) (short) 100);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.clone(floatArray2);
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray2, 0, 10.0f);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray11);
        float[] floatArray18 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray18);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray18, (int) (byte) 1, 0);
        float[] floatArray26 = new float[] { (byte) -1, 1L };
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray26, (float) 10L);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray23, floatArray26);
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray26);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray26, (float) (-1L));
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray26);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray26, 1, (int) (short) 1);
        float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray11, floatArray26);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[1.0, -1.0, 10.0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[]");
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[1.0, -1.0, 10.0, -1.0, 1.0]");
    }

    @Test
    public void test06427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06427");
        java.lang.Short[] shortArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray0);
        short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0);
        short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray3, (short) (byte) 100);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray3, (short) 0);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray7);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(shortArray7, (short) 1);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]");
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test06428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06428");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray2);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray2);
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.remove(floatArray2, (int) (byte) 0);
        float[] floatArray14 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, 0.0f);
        java.lang.Float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14);
        long[] longArray20 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray20);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray18, (java.lang.Object) longArray20);
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray18, (float) (-1L));
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray24, (float) (byte) 1, (int) (short) 10);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray24);
        java.lang.Float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[1.0, -1.0, -1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray29);
    }

    @Test
    public void test06429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06429");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray4, false);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray4, false);
        boolean[] booleanArray14 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray14, (int) (byte) 0, 0);
        boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray14, 4, (int) '4');
        boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray8, booleanArray20);
        int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray20, false);
        boolean[] booleanArray30 = new boolean[] { false, false, false, true, false, false };
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray30);
        boolean[] booleanArray38 = new boolean[] { false, false, false, true, false, false };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38);
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray30, booleanArray38);
        boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray20, booleanArray38);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray41, true);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray43, (int) (short) 1, (int) ' ');
        boolean[] booleanArray53 = new boolean[] { false, false, false, true, false, false };
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray53);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray53, true);
        boolean boolean58 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray53, true);
        boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray53);
        boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray59);
        java.lang.Boolean[] booleanArray64 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray64);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray65);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray65, true);
        boolean[] booleanArray74 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray77 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray74, (int) (byte) 0, 0);
        boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray65, booleanArray77);
        int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray77, false, (int) (byte) 1);
        boolean[] booleanArray82 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray59, booleanArray77);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray46, booleanArray77);
        boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[true]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[true, false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 3 + "'", int56 == 3);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, false, false, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray82), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test06430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06430");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Double[] doubleArray28 = new java.lang.Double[] { 100.0d, 10.0d, (-1.0d), 10.0d, 0.0d, (-1.0d) };
        double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray28);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) 100L, 2, (double) (short) -1);
        double[] doubleArray37 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray37, (double) (byte) 100, 1.0d);
        double[] doubleArray45 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(doubleArray29, doubleArray45);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append((int) (short) 1, (int) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder50.append((int) (short) 0, (int) (byte) 100);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder50.append((double) 8, (double) 100);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 10.0, -1.0, 10.0, 0.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
    }

    @Test
    public void test06431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06431");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) -1, (int) (short) 100);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4);
        short[] shortArray9 = null;
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.add(shortArray10, (short) 100);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray10, (short) 0);
        short[] shortArray20 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray20, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray24 = new java.lang.Short[] {};
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24);
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24, (short) 1);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray20, shortArray27);
        short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray27, (int) '4', (int) (short) 0);
        boolean[] booleanArray38 = new boolean[] { false, false, false, true, false, false };
        boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38);
        boolean[] booleanArray46 = new boolean[] { false, false, false, true, false, false };
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray46);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray38, booleanArray46);
        short[] shortArray53 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray53, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray57 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray53);
        boolean boolean58 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean48, (java.lang.Object) shortArray53);
        short[] shortArray59 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray31, shortArray53);
        org.apache.commons.lang3.ArrayUtils.reverse(shortArray31);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray31, (short) 100);
        short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.clone(shortArray31);
        short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray10, shortArray31);
        java.lang.Short[] shortArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray65);
        short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray65);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray31, shortArray67);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[100]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(shortArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(shortArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray59), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[]");
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[]");
        org.junit.Assert.assertNotNull(shortArray65);
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test06432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06432");
        long[] longArray4 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray4, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        long[] longArray10 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(longArray10, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray10);
        boolean boolean15 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray10);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray10);
        java.lang.Long[] longArray17 = org.apache.commons.lang3.ArrayUtils.toObject(longArray16);
        long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17, (long) 'a');
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray19);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray6, (long) 5);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, -1, 32]");
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[-1]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[0, -1, 32]");
    }

    @Test
    public void test06433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06433");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) 0, 1, (double) ' ');
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray25, (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test06434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06434");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray5);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray5);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1]");
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test06435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06435");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, (int) (byte) -1, (int) '4');
        byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, 2, (int) (byte) 10);
        byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0);
        java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray27, (byte) 1);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(byteArray29, (byte) 100);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(byteArray29, (byte) 1);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray40, (byte) 1);
        byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray42, (int) (byte) 0, (int) (byte) 1);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray29, byteArray45);
        byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray29, (byte) 10);
        byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray29);
        byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.clone(byteArray49);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray20, byteArray50);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(byteArray20, (byte) -1);
        java.lang.Byte[] byteArray60 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray60, (byte) 1);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray62, (int) (byte) 0, (int) (byte) 1);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray65);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray65);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray20, byteArray65);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test06436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06436");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder28.append(false, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder31.append((byte) 1, (byte) 100);
        int[] intArray35 = null;
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), (-1), 2, 1 };
        int[] intArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray40);
        int[] intArray42 = org.apache.commons.lang3.ArrayUtils.clone(intArray41);
        int[] intArray44 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray42, 10);
        int[] intArray46 = org.apache.commons.lang3.ArrayUtils.add(intArray42, (-1));
        int[] intArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray46);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder48 = equalsBuilder31.append(intArray35, intArray46);
        java.lang.Class<?> wildcardClass49 = intArray46.getClass();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, -1, 2, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, -1, 2, 1, -1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, -1, 2, 1, -1]");
        org.junit.Assert.assertNotNull(equalsBuilder48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test06437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06437");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) -1, (int) (short) 100);
        short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4);
        short[] shortArray9 = null;
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray9);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) 0, 3);
        java.lang.Short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray14);
        short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14, (short) 0);
        short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray17);
        int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray17, (short) 100);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test06438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06438");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean[] booleanArray12 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray12, (int) (byte) 0, 0);
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, true);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray12);
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray12);
        long[] longArray26 = new long[] { 10, 1L, (byte) -1, (byte) 1, (short) -1, (short) 100 };
        long[] longArray29 = org.apache.commons.lang3.ArrayUtils.subarray(longArray26, 3, (int) (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray26);
        java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray34);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray34);
        boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray34);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray26, (java.lang.Object) booleanArray37);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray37, true);
        int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray40, true, (int) (byte) 1);
        boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray12, booleanArray40);
        boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray40, 0, (int) '#');
        boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, true, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[100, -1, 1, -1, 1, 10]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[true, true, true, false, true, false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
    }

    @Test
    public void test06439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06439");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) 0);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray3);
        short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3);
        short[] shortArray8 = null;
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray7, shortArray8);
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(shortArray7, (short) 10);
        short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray7, (short) (byte) 1);
        short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray7);
        short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray7, (short) (byte) 10);
        short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray16, 6, 7);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shortArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]");
        org.junit.Assert.assertNotNull(shortArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]");
    }

    @Test
    public void test06440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06440");
        float[] floatArray2 = new float[] { (byte) -1, 1L };
        int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) 10L);
        float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, (float) (short) 100);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.clone(floatArray2);
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray2, 0.0f);
        java.lang.String[] strArray14 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray23 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray23);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.remove(floatArray23, (int) (short) 1);
        float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray17, floatArray26);
        boolean boolean28 = strList15.equals((java.lang.Object) floatArray27);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray27);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray27, (-1.0f));
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray27, (float) 6);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray33);
        java.lang.Character[] charArray35 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray35, '4');
        java.lang.Character[] charArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray35);
        char[] charArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray38, ' ');
        java.lang.Character[] charArray41 = org.apache.commons.lang3.ArrayUtils.toObject(charArray40);
        float[] floatArray42 = new float[] {};
        java.lang.Float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray41, (java.lang.Object) floatArray42);
        float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.add(floatArray42, (float) 100);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.contains(floatArray46, (float) 0);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray34, floatArray46);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray46);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 1.0]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 1.0, -1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test06441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06441");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.append((double) '4', 0.0d);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder34.appendSuper(false);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder39 = equalsBuilder36.append((float) 'a', (float) '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder42 = equalsBuilder39.append('4', '#');
        float[] floatArray48 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray48);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray48);
        float[] floatArray55 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray58 = new float[] { (byte) -1, 1L };
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray58, (float) 10L);
        boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray55, floatArray58);
        boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray48, floatArray58);
        java.lang.Float[] floatArray63 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray48);
        java.lang.Float[] floatArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray63);
        java.lang.Float[] floatArray65 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray63);
        float[] floatArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray63);
        float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.add(floatArray66, (int) (short) 1, (float) 5);
        float[] floatArray75 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray75);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray75);
        float[] floatArray80 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray75, (int) (byte) 1, 0);
        int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray80, (float) (byte) 100, (int) '4');
        float[] floatArray84 = org.apache.commons.lang3.ArrayUtils.clone(floatArray80);
        int int87 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray84, (float) (short) 1, 100);
        int int89 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray84, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder90 = equalsBuilder42.append(floatArray69, floatArray84);
        float[] floatArray92 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray84, 1.0f);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(equalsBuilder39);
        org.junit.Assert.assertNotNull(equalsBuilder42);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray66), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray69), "[-1.0, 5.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray75), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray80), "[]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(floatArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray84), "[]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder90);
        org.junit.Assert.assertNotNull(floatArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray92), "[]");
    }

    @Test
    public void test06442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06442");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3);
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray4, false);
        java.lang.Boolean[] booleanArray10 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray11, false);
        boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray11, false);
        boolean[] booleanArray21 = new boolean[] { true, false, true, true, true };
        boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray21, (int) (byte) 0, 0);
        boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray21, 4, (int) '4');
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray15, booleanArray27);
        boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray27);
        boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray4, false);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[true, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[true, false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[true]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[true, true]");
    }

    @Test
    public void test06443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06443");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) 100);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        double[] doubleArray40 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray32, doubleArray40);
        float[] floatArray46 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray49 = new float[] { (byte) -1, 1L };
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray49, (float) 10L);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray49);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray40, (java.lang.Object) boolean52);
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray40, (int) (short) 0, 1);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray56, (double) (byte) -1);
        double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray58, (int) (byte) 100, 1);
        double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray58, 0, (int) (short) 10);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray58);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray58, (double) ' ', 100.0d);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray58);
        boolean boolean72 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) 10, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test06444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06444");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        int int15 = strList9.size();
        long[] longArray17 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(longArray17, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray17);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(longArray17, (long) (short) 100);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray17);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray17, (long) 3, (int) (byte) 100);
        boolean boolean31 = strList9.remove((java.lang.Object) longArray17);
        int int32 = strList9.size();
        java.util.stream.Stream<java.lang.String> strStream33 = strList9.stream();
        float[] floatArray39 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray39);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray39, 0.0f);
        java.lang.Float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray39);
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray43, (float) (byte) 100);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray45);
        boolean boolean47 = strList9.equals((java.lang.Object) floatArray45);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray45, (float) (byte) 10, 2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3 + "'", int50 == 3);
    }

    @Test
    public void test06445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06445");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray25, (-1.0d), (double) 0.0f);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) 0L);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray25);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        float[] floatArray49 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray52 = new float[] { (byte) -1, 1L };
        int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray52, (float) 10L);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray49, floatArray52);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray43, (java.lang.Object) boolean55);
        double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray43, (int) (short) 0, 1);
        int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray59, (double) (short) 100, 0, 10.0d);
        double[] doubleArray67 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray67, (double) (byte) 100, 1.0d);
        double[] doubleArray75 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray67, doubleArray75);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray59, doubleArray75);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray59, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray59);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray59);
        double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray59);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray59, (double) (short) -1);
        double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.add(doubleArray59, (double) '#');
        double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray88);
        double[] doubleArray91 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray88, (double) 100L);
        int int95 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray91, (double) 10.0f, (int) (short) -1, (double) 100L);
        boolean boolean96 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray91);
        int int99 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray91, (double) 100L, (double) 0.0f);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 35.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 35.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[1.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test06446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06446");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray30 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray30, (double) (byte) 100, 1.0d);
        double[] doubleArray38 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray38);
        float[] floatArray44 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray47 = new float[] { (byte) -1, 1L };
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray47, (float) 10L);
        boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray44, floatArray47);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray38, (java.lang.Object) boolean50);
        double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray38);
        double[] doubleArray56 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean59 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray56, (double) (byte) 100, 1.0d);
        double[] doubleArray64 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray56, doubleArray64);
        float[] floatArray70 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray73 = new float[] { (byte) -1, 1L };
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray73, (float) 10L);
        boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray70, floatArray73);
        boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray64, (java.lang.Object) boolean76);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray25, doubleArray64);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 0.0, 10.0, -1.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray70), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray73), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test06447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06447");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8);
        int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray13, (java.lang.Object) (byte) -1, (int) (byte) 10);
        byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13);
        java.lang.Short[][][] shortArray18 = new java.lang.Short[][][] {};
        java.lang.Short[][][] shortArray19 = new java.lang.Short[][][] {};
        java.lang.Short[][][] shortArray20 = new java.lang.Short[][][] {};
        java.lang.Short[][][] shortArray21 = new java.lang.Short[][][] {};
        java.lang.Short[][][] shortArray22 = new java.lang.Short[][][] {};
        java.lang.Short[][][] shortArray23 = new java.lang.Short[][][] {};
        java.lang.Short[][][][] shortArray24 = new java.lang.Short[][][][] { shortArray18, shortArray19, shortArray20, shortArray21, shortArray22, shortArray23 };
        java.lang.Short[][][][] shortArray25 = org.apache.commons.lang3.ArrayUtils.clone(shortArray24);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray13, (java.lang.Object[]) shortArray24);
        java.lang.Short[][][] shortArray27 = new java.lang.Short[][][] {};
        java.lang.Short[][][] shortArray28 = new java.lang.Short[][][] {};
        java.lang.Short[][][] shortArray29 = new java.lang.Short[][][] {};
        java.lang.Short[][][] shortArray30 = new java.lang.Short[][][] {};
        java.lang.Short[][][] shortArray31 = new java.lang.Short[][][] {};
        java.lang.Short[][][] shortArray32 = new java.lang.Short[][][] {};
        java.lang.Short[][][][] shortArray33 = new java.lang.Short[][][][] { shortArray27, shortArray28, shortArray29, shortArray30, shortArray31, shortArray32 };
        java.lang.Short[][][][] shortArray34 = org.apache.commons.lang3.ArrayUtils.clone(shortArray33);
        java.lang.Short[][][][] shortArray35 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray24, shortArray34);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertNotNull(shortArray28);
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray32);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
    }

    @Test
    public void test06448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06448");
        long[] longArray2 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray2, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray2);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray2);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray8);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.add(longArray8, (long) (byte) -1);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        long[] longArray14 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray14);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray14);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray16, (long) 5, 10);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.clone(longArray16);
        java.lang.Long[] longArray21 = org.apache.commons.lang3.ArrayUtils.toObject(longArray20);
        java.lang.Object[] objArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray21);
        java.lang.Long[] longArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray21);
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray21);
        long[] longArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray21, (long) 7);
        long[] longArray29 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(longArray29, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray29);
        boolean boolean34 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) (byte) -1, (java.lang.Object) longArray29);
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.toObject(longArray35);
        float[] floatArray42 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray42);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray42, 0.0f);
        java.lang.Float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray42);
        long[] longArray48 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray48);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray46, (java.lang.Object) longArray48);
        boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray35, longArray48);
        int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray21, (java.lang.Object) longArray48);
        long[] longArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray48);
        long[] longArray54 = org.apache.commons.lang3.ArrayUtils.addAll(longArray12, longArray53);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1, -1]");
        org.junit.Assert.assertNotNull(longArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1]");
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[-1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1]");
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[-1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[-1]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[-1]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[-1]");
        org.junit.Assert.assertNotNull(longArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertNotNull(longArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[-1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(longArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[-1]");
        org.junit.Assert.assertNotNull(longArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[-1, -1, -1]");
    }

    @Test
    public void test06449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06449");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, ' ');
        char[] charArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, 'a');
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray15);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray15);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray15, '#');
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray29 = new char[] { '#', 'a', 'a' };
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray29);
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray25, ' ');
        char[] charArray33 = org.apache.commons.lang3.ArrayUtils.addAll(charArray15, charArray25);
        java.lang.Character[] charArray39 = new java.lang.Character[] { ' ', '#', '4', 'a', 'a' };
        java.lang.Character[] charArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray39);
        char[] charArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray40, '4');
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray33, charArray42);
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.add(charArray33, 0, '#');
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray47);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray47);
        char[] charArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray47, '#');
        char[] charArray57 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray61 = new char[] { '#', 'a', 'a' };
        char[] charArray62 = org.apache.commons.lang3.ArrayUtils.addAll(charArray57, charArray61);
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray57, ' ');
        char[] charArray65 = org.apache.commons.lang3.ArrayUtils.addAll(charArray47, charArray57);
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.subarray(charArray47, 0, 0);
        char[] charArray69 = org.apache.commons.lang3.ArrayUtils.addAll(charArray46, charArray47);
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.addAll(charArray14, charArray69);
        java.lang.Character[] charArray71 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray71, '4');
        java.lang.Character[] charArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray71);
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray74, ' ');
        java.lang.Character[] charArray77 = org.apache.commons.lang3.ArrayUtils.toObject(charArray76);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.contains(charArray76, '4');
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.clone(charArray76);
        char[] charArray81 = org.apache.commons.lang3.ArrayUtils.addAll(charArray14, charArray80);
        int int83 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray14, '#');
        char[] charArray84 = org.apache.commons.lang3.ArrayUtils.clone(charArray14);
        char[] charArray86 = org.apache.commons.lang3.ArrayUtils.remove(charArray14, 1);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, #, 4, #]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), " #4aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), " #4aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[ , #, 4, a, a]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4#4##4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4#4##4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4, #, 4, #, #, 4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4, #, 4, #]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[4, #, 4, #]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "44#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "44#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[4, 4, #]");
    }

    @Test
    public void test06450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06450");
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 1, 0 };
        java.lang.Integer[] intArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2);
        int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2);
        java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4);
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5, 100);
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 10.0d, 1.0d };
        double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray10);
        double[] doubleArray15 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray15, (double) (byte) 100, 1.0d);
        double[] doubleArray23 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray15, doubleArray23);
        float[] floatArray29 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray32 = new float[] { (byte) -1, 1L };
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray32, (float) 10L);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray29, floatArray32);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray23, (java.lang.Object) boolean35);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray23, (int) (short) 0, 1);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray39, (double) (byte) -1);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray41, (int) (byte) 100, 1);
        double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray44, (int) (byte) -1, (int) (short) 100);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray11, doubleArray44);
        int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray5, (java.lang.Object) doubleArray44, 100);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray44, (double) 4, 1.0d);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[1, 0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test06451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06451");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3);
        char[] charArray6 = org.apache.commons.lang3.ArrayUtils.add(charArray4, ' ');
        int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray4, '4');
        java.lang.String[] strArray13 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray22 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray22);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.remove(floatArray22, (int) (short) 1);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray16, floatArray25);
        boolean boolean27 = strList14.equals((java.lang.Object) floatArray26);
        int int28 = strList14.size();
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray29, (int) (byte) 1);
        boolean boolean32 = strList14.contains((java.lang.Object) int31);
        char[] charArray38 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray42 = new char[] { '#', 'a', 'a' };
        char[] charArray43 = org.apache.commons.lang3.ArrayUtils.addAll(charArray38, charArray42);
        java.lang.String str44 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray38);
        char[] charArray50 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray54 = new char[] { '#', 'a', 'a' };
        char[] charArray55 = org.apache.commons.lang3.ArrayUtils.addAll(charArray50, charArray54);
        boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray38, charArray54);
        boolean boolean57 = strList14.equals((java.lang.Object) charArray54);
        char[] charArray58 = org.apache.commons.lang3.ArrayUtils.clone(charArray54);
        java.lang.Character[] charArray59 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray61 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray59, '4');
        java.lang.Character[] charArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray59);
        char[] charArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray62, ' ');
        java.lang.Character[] charArray65 = org.apache.commons.lang3.ArrayUtils.toObject(charArray64);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(charArray64, '4');
        char[] charArray68 = org.apache.commons.lang3.ArrayUtils.addAll(charArray58, charArray64);
        java.lang.Character[] charArray69 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray71 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray69, '4');
        java.lang.Character[] charArray72 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray69);
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray69);
        char[] charArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray73, '#');
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray75);
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.addAll(charArray68, charArray75);
        int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray77, ' ');
        boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray4, charArray77);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), " ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), " ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[ ]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]");
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{4,#,a,4,#}" + "'", str44, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, a, a]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test06452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06452");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, 0);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(floatArray5, (float) 'a');
        float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray13, (float) (byte) -1);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test06453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06453");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(shortArray25, (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) 0, (-1));
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray36, (int) (short) 10, 3);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((java.lang.Object) int31, (java.lang.Object) booleanArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder0.append(3, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(1.0f, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append('#', '#');
        java.util.stream.Stream[] streamArray52 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.String>[] strStreamArray53 = (java.util.stream.Stream<java.lang.String>[]) streamArray52;
        java.util.stream.Stream<java.lang.String>[] strStreamArray54 = org.apache.commons.lang3.ArrayUtils.clone((java.util.stream.Stream<java.lang.String>[]) streamArray52);
        java.util.stream.Stream<java.lang.String>[] strStreamArray55 = org.apache.commons.lang3.ArrayUtils.toArray((java.util.stream.Stream<java.lang.String>[]) streamArray52);
        java.lang.String[] strArray58 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.stream.Stream<java.lang.String> strStream61 = strList59.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream62 = strList59.stream();
        java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[] strBaseStreamArray63 = org.apache.commons.lang3.ArrayUtils.add((java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>[]) strStreamArray55, (java.util.stream.BaseStream<java.lang.String, java.util.stream.Stream<java.lang.String>>) strStream62);
        boolean[] booleanArray67 = new boolean[] { true, true, true };
        int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray67, true);
        boolean[] booleanArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray67, false);
        boolean[] booleanArray72 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray67);
        int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray72, false, 1);
        java.lang.Boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray72);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder77 = equalsBuilder47.append((java.lang.Object[]) strStreamArray55, (java.lang.Object[]) booleanArray76);
        java.lang.Boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray76);
        boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray76);
        boolean[] booleanArray82 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray79, (int) (short) -1, 5);
        boolean[] booleanArray83 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray82);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(streamArray52);
        org.junit.Assert.assertNotNull(strStreamArray53);
        org.junit.Assert.assertNotNull(strStreamArray54);
        org.junit.Assert.assertNotNull(strStreamArray55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strStream61);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertNotNull(strBaseStreamArray63);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertNotNull(equalsBuilder77);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray82), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray83), "[true, true, true]");
    }

    @Test
    public void test06454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06454");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        float[] floatArray12 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray12);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray12, 0.0f);
        java.lang.Float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray12);
        long[] longArray18 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray18);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray16, (java.lang.Object) longArray18);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.addAll(longArray6, longArray18);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray21);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray21);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[-1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[0, 1, 100, 100, 0, -1]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test06455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06455");
        java.lang.Short[] shortArray0 = new java.lang.Short[] {};
        short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 1);
        short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3);
        int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray4, (short) (byte) -1, (int) (short) 100);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray4, (short) -1);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 0);
        java.lang.Short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4);
        short[] shortArray18 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray18, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray18, shortArray25);
        int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray18, (short) 10);
        short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray18);
        short[] shortArray35 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray35, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray35);
        short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray35, (short) (byte) 0);
        short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray18, shortArray35);
        short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray35);
        short[] shortArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray35);
        short[] shortArray45 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray35);
        short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray35, (short) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]");
        org.junit.Assert.assertNotNull(shortArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]");
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(shortArray39);
        org.junit.Assert.assertNotNull(shortArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[100, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[100, 0, 0, 1, -1, 100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[100, 0, 1, -1]");
    }

    @Test
    public void test06456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06456");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 100);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray8, (byte) 1);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray19, (byte) 1);
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 0, (int) (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray8, byteArray24);
        byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 1);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 0);
        int int30 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray29);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
    }

    @Test
    public void test06457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06457");
        java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray8, true);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8);
        boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray11);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray13, false);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false, true, true, false]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test06458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06458");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        java.lang.Short[] shortArray22 = new java.lang.Short[] {};
        short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22, (short) 1);
        java.lang.Short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray25);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(shortArray25, (short) 10);
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray25, (short) 0, (-1));
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35);
        boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray36, (int) (short) 10, 3);
        boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder41 = equalsBuilder0.append((java.lang.Object) int31, (java.lang.Object) booleanArray40);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder0.append(3, (int) (short) 0);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder47 = equalsBuilder0.append(1.0f, (float) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder50 = equalsBuilder47.append('#', '#');
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder53 = equalsBuilder47.append((long) 3, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder56 = equalsBuilder47.append((long) (short) 100, (long) '4');
        equalsBuilder47.reset();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertNotNull(shortArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder41);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(equalsBuilder47);
        org.junit.Assert.assertNotNull(equalsBuilder50);
        org.junit.Assert.assertNotNull(equalsBuilder53);
        org.junit.Assert.assertNotNull(equalsBuilder56);
    }

    @Test
    public void test06459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06459");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        double[] doubleArray32 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray32, (double) (byte) 100, 1.0d);
        double[] doubleArray40 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray32, doubleArray40);
        float[] floatArray46 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray49 = new float[] { (byte) -1, 1L };
        int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray49, (float) 10L);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray46, floatArray49);
        boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray40, (java.lang.Object) boolean52);
        double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray40);
        boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray28, doubleArray40);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray40, (double) (byte) 0, (double) 2);
        double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.add(doubleArray40, (double) (byte) 100);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray60, (double) (short) 1);
        java.lang.Double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray60);
        double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray63, 1.0d);
        double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 3 + "'", int58 == 3);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 0.0, 10.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 0.0, 10.0, -1.0, 100.0]");
    }

    @Test
    public void test06460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06460");
        java.lang.CharSequence[][] charSequenceArray0 = null;
        java.lang.CharSequence[][] charSequenceArray1 = org.apache.commons.lang3.ArrayUtils.clone(charSequenceArray0);
        org.junit.Assert.assertNull(charSequenceArray1);
    }

    @Test
    public void test06461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06461");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7);
        int[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray9);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray9, (int) (byte) 0);
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray9);
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray14, (int) (byte) 1);
        int[] intArray17 = new int[] {};
        int[] intArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.addAll(intArray14, intArray17);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder21 = equalsBuilder0.append(intArray13, intArray17);
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray13, (int) (short) -1);
        int[] intArray24 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray24, (int) '4', 2);
        int[] intArray29 = org.apache.commons.lang3.ArrayUtils.add(intArray24, (int) '#');
        int[] intArray30 = org.apache.commons.lang3.ArrayUtils.addAll(intArray23, intArray24);
        int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray23, 9);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray23);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder21);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test06462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06462");
        java.lang.Long[] longArray5 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5);
        long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) (short) 10);
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray8, (long) (short) 10);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray8);
        float[] floatArray18 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray18);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray18);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.clone(floatArray18);
        long[] longArray23 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray23);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(longArray23, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray23);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.clone(longArray23);
        long[] longArray33 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray33, 1L);
        boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray28, longArray35);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) floatArray18, (java.lang.Object) longArray28);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray8, (java.lang.Object) longArray28);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray8);
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray8, 0L);
        java.lang.Long[] longArray42 = org.apache.commons.lang3.ArrayUtils.toObject(longArray41);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[0, 100, 100, 1, 0]");
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1]");
        org.junit.Assert.assertNotNull(longArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[100, 100, 1, 0]");
        org.junit.Assert.assertNotNull(longArray42);
    }

    @Test
    public void test06463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06463");
        byte[] byteArray0 = null;
        byte[] byteArray3 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, (int) (byte) 1, 8);
        org.junit.Assert.assertNull(byteArray3);
    }

    @Test
    public void test06464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06464");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray43);
        boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray27);
        int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 8, 2, 0.0d);
        int int53 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) 100L, (double) 8);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test06465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06465");
        long[] longArray4 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray4, 1L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray6);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray6);
        java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray9);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray9);
        java.lang.Long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toObject(longArray11);
        long[] longArray15 = org.apache.commons.lang3.ArrayUtils.subarray(longArray11, (int) '4', (int) (short) 0);
        long[] longArray17 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(longArray17, 0L);
        long[] longArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray17);
        int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray21, (long) (byte) 1, (int) (short) 1);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray21, (long) 3, (int) 'a');
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(longArray21, (long) 7);
        long[] longArray31 = org.apache.commons.lang3.ArrayUtils.remove(longArray21, (int) (byte) 0);
        long[] longArray32 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray31);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray6, longArray11);
        int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray6, 100L);
        long[] longArray38 = org.apache.commons.lang3.ArrayUtils.subarray(longArray6, (int) (byte) 1, 8);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, -1, 32]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertNotNull(longArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]");
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[-1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(longArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[]");
        org.junit.Assert.assertNotNull(longArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[-1, 32]");
    }

    @Test
    public void test06466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06466");
        java.lang.Byte[] byteArray6 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6, (byte) 1);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray8, 10, (int) ' ');
        byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray8);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test06467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06467");
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6);
        int[] intArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray7, intArray8);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, (int) (byte) 0);
        int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray12);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray12);
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray16 = org.apache.commons.lang3.ArrayUtils.remove(intArray12, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test06468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06468");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray3, (long) 5, 10);
        long[] longArray7 = org.apache.commons.lang3.ArrayUtils.clone(longArray3);
        java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toObject(longArray7);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray7, (long) (short) -1, 0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[-1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(longArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[-1]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test06469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06469");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        int int15 = strList9.size();
        long[] longArray17 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(longArray17, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.clone(longArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray17);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray17);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(longArray17, (long) (short) 100);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray17);
        int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray17, (long) 3, (int) (byte) 100);
        boolean boolean31 = strList9.remove((java.lang.Object) longArray17);
        boolean boolean32 = strList9.isEmpty();
        java.lang.Object[] objArray33 = strList9.toArray();
        java.util.stream.Stream<java.lang.String> strStream34 = strList9.parallelStream();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[4, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[4, hi!]");
        org.junit.Assert.assertNotNull(strStream34);
    }

    @Test
    public void test06470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06470");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray20 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.remove(floatArray29, (int) (short) 1);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray23, floatArray32);
        boolean boolean34 = strList21.equals((java.lang.Object) floatArray33);
        int int35 = strList21.size();
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray36, (int) (byte) 1);
        boolean boolean39 = strList21.contains((java.lang.Object) int38);
        boolean boolean40 = strList3.addAll((java.util.Collection<java.lang.String>) strList21);
        java.lang.String[] strArray45 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray54 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray54);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.remove(floatArray54, (int) (short) 1);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray48, floatArray57);
        boolean boolean59 = strList46.equals((java.lang.Object) floatArray58);
        int int60 = strList46.size();
        boolean boolean61 = strList3.removeAll((java.util.Collection<java.lang.String>) strList46);
        java.util.Iterator<java.lang.String> strItor62 = strList46.iterator();
        java.util.Iterator<java.lang.String> strItor63 = strList46.iterator();
        java.util.RandomAccess[] randomAccessArray64 = new java.util.RandomAccess[] { strList46 };
        java.util.RandomAccess[] randomAccessArray65 = org.apache.commons.lang3.ArrayUtils.clone(randomAccessArray64);
        java.lang.String[][] strArray66 = new java.lang.String[][] {};
        java.lang.String[][] strArray67 = org.apache.commons.lang3.ArrayUtils.clone(strArray66);
        boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.CharSequence[][]) strArray66);
        java.lang.Object[] objArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) strArray66);
        int int70 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) randomAccessArray65, (java.lang.Object) objArray69);
        java.util.RandomAccess[] randomAccessArray71 = org.apache.commons.lang3.ArrayUtils.clone(randomAccessArray65);
        java.lang.Class<?> wildcardClass72 = randomAccessArray71.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strItor62);
        org.junit.Assert.assertNotNull(strItor63);
        org.junit.Assert.assertNotNull(randomAccessArray64);
        org.junit.Assert.assertNotNull(randomAccessArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(randomAccessArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test06471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06471");
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray12 = new java.lang.Byte[][] { byteArray5, byteArray11 };
        java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '#', 10);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22);
        java.lang.Byte[][] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (java.lang.Object) intArray22);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) (short) -1);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, (int) ' ');
        java.lang.Integer[] intArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray22);
        int[] intArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray22, 3);
        int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray31, (int) (byte) -1, 3);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
    }

    @Test
    public void test06472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06472");
        java.lang.Object obj0 = null;
        java.lang.Object obj1 = null;
        java.lang.String[] strArray2 = org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY;
        java.lang.CharSequence[] charSequenceArray5 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.CharSequence[]) strArray2, (-1), 10);
        java.lang.String[] strArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray2);
        boolean boolean7 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(obj0, obj1, strArray6);
        java.lang.String[] strArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray6);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test06473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06473");
        float[] floatArray0 = null;
        float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray0, 3, 5);
        org.junit.Assert.assertNull(floatArray3);
    }

    @Test
    public void test06474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06474");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray27);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) 'a', 2, (double) 10.0f);
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        java.lang.Double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray56);
        java.lang.Byte[] byteArray63 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray69 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray70 = new java.lang.Byte[][] { byteArray63, byteArray69 };
        java.lang.Byte[][] byteArray73 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray70, (int) '#', 10);
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray80);
        java.lang.Byte[][] byteArray82 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray70, (java.lang.Object) intArray80);
        int[] intArray84 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray80, 1);
        int[] intArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray80, (int) '4');
        boolean boolean88 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) doubleArray57, (java.lang.Object) intArray86, true);
        java.lang.Double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
    }

    @Test
    public void test06475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06475");
        short[] shortArray5 = new short[] { (short) 100, (byte) 0, (short) 0, (byte) 1, (short) -1 };
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray5, (short) (byte) 10, (int) (short) 1);
        java.lang.Short[] shortArray9 = new java.lang.Short[] {};
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9);
        short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 1);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray5, shortArray12);
        boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(shortArray5, (short) (byte) 100);
        java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5);
        java.lang.Short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray18);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray18, (short) (byte) -1);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, 0, 0, 1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]");
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[100, 0, 0, 1, -1]");
    }

    @Test
    public void test06476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06476");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) 10, 0);
        double[] doubleArray17 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray17, (double) (byte) 100, 1.0d);
        double[] doubleArray25 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray17, doubleArray25);
        float[] floatArray31 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray34 = new float[] { (byte) -1, 1L };
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray34, (float) 10L);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray31, floatArray34);
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray25, (java.lang.Object) boolean37);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray25, (int) (short) 0, 1);
        double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25);
        double[] doubleArray46 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray46, (double) (byte) 100, 1.0d);
        double[] doubleArray54 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray46, doubleArray54);
        float[] floatArray60 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray63 = new float[] { (byte) -1, 1L };
        int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray63, (float) 10L);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray60, floatArray63);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray54, (java.lang.Object) boolean66);
        double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray54);
        boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray42, doubleArray54);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray3, doubleArray54);
        boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray54);
        int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray54, (double) 100);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray60), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray63), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test06477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06477");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (short) 0, 1);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 100, 0, 10.0d);
        double[] doubleArray35 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray35, (double) (byte) 100, 1.0d);
        double[] doubleArray43 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray35, doubleArray43);
        boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray43);
        int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10L, (int) ' ', (double) 0.0f);
        java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray27);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) 'a', 2, (double) 10.0f);
        java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray27);
        double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray56);
        java.lang.Double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray57);
        java.lang.Double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
    }

    @Test
    public void test06478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06478");
        java.lang.String[] strArray1 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String[] strArray6 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.stream.Stream<java.lang.String> strStream9 = strList7.parallelStream();
        java.lang.String[] strArray12 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.stream.Stream<java.lang.String> strStream15 = strList13.parallelStream();
        boolean boolean16 = strList7.addAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strList13.equals(obj17);
        int int19 = strList13.size();
        boolean boolean20 = strList2.removeAll((java.util.Collection<java.lang.String>) strList13);
        java.lang.String[] strArray23 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.stream.Stream<java.lang.String> strStream26 = strList24.parallelStream();
        boolean boolean27 = strList13.addAll((java.util.Collection<java.lang.String>) strList24);
        java.lang.Byte[] byteArray33 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray33);
        int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray33, (java.lang.Object) (byte) 1, (int) (byte) -1);
        java.lang.Boolean[] booleanArray44 = new java.lang.Boolean[] { false, false, false, true, true, false };
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray44, true);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray33, (java.lang.Object) true);
        boolean boolean48 = strList13.equals((java.lang.Object) byteArray33);
        java.lang.Byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray33);
        java.lang.Boolean[] booleanArray53 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray53);
        boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray54, (int) (short) 10, 3);
        java.lang.Boolean[] booleanArray61 = new java.lang.Boolean[] { false, true, true };
        boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray61);
        boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray62);
        boolean[] booleanArray64 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray54, booleanArray62);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray54, true);
        java.lang.Boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray54);
        int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray49, (java.lang.Object) booleanArray54, 100);
        boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray54);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strStream9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false, true, true, false]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true, true]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true, true, false, true, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test06479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06479");
        java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0, '4');
        java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3, ' ');
        java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.toObject(charArray5);
        float[] floatArray7 = new float[] {};
        java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray7);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray6, (java.lang.Object) floatArray7);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.add(floatArray7, (float) 100);
        float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.clone(floatArray11);
        org.apache.commons.lang3.ArrayUtils.reverse(floatArray11);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]");
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]");
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[100.0]");
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0]");
    }

    @Test
    public void test06480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06480");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray26);
        double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) '#');
        double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 0.0d);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (byte) 10);
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, 1.0d);
        double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray37, 0.0d);
        int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray39, 1.0d, 1, (double) 4);
        double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 10.0, 1.0]");
    }

    @Test
    public void test06481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06481");
        java.lang.String[] strArray4 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray13 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray13);
        float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.remove(floatArray13, (int) (short) 1);
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray7, floatArray16);
        boolean boolean18 = strList5.equals((java.lang.Object) floatArray17);
        int int19 = strList5.size();
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray20, (int) (byte) 1);
        boolean boolean23 = strList5.contains((java.lang.Object) int22);
        char[] charArray29 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray33 = new char[] { '#', 'a', 'a' };
        char[] charArray34 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray33);
        java.lang.String str35 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray29);
        char[] charArray41 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray45 = new char[] { '#', 'a', 'a' };
        char[] charArray46 = org.apache.commons.lang3.ArrayUtils.addAll(charArray41, charArray45);
        boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray29, charArray45);
        boolean boolean48 = strList5.equals((java.lang.Object) charArray45);
        java.lang.String[] strArray51 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.stream.Stream<java.lang.String> strStream54 = strList52.parallelStream();
        java.lang.String[] strArray59 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray68 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray68);
        float[] floatArray71 = org.apache.commons.lang3.ArrayUtils.remove(floatArray68, (int) (short) 1);
        float[] floatArray72 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray62, floatArray71);
        boolean boolean73 = strList60.equals((java.lang.Object) floatArray72);
        int int74 = strList60.size();
        java.util.stream.Stream<java.lang.String> strStream75 = strList60.parallelStream();
        boolean boolean76 = strList52.addAll((java.util.Collection<java.lang.String>) strList60);
        strList60.clear();
        boolean boolean78 = strList5.removeAll((java.util.Collection<java.lang.String>) strList60);
        int int79 = strList5.size();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]");
        org.junit.Assert.assertNotNull(floatArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{4,#,a,4,#}" + "'", str35, "{4,#,a,4,#}");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strStream54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[]");
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray68), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray69);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray71), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray72), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 4 + "'", int74 == 4);
        org.junit.Assert.assertNotNull(strStream75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 4 + "'", int79 == 4);
    }

    @Test
    public void test06482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06482");
        boolean[] booleanArray6 = new boolean[] { false, false, false, true, false, false };
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6);
        boolean[] booleanArray14 = new boolean[] { false, false, false, true, false, false };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray14);
        int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, false);
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, false);
        boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray6, (int) (byte) 100, 100);
        java.lang.Boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray23);
        double[] doubleArray28 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (byte) 100, 1.0d);
        double[] doubleArray36 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray36);
        float[] floatArray42 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray45 = new float[] { (byte) -1, 1L };
        int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray45, (float) 10L);
        boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray42, floatArray45);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray36, (java.lang.Object) boolean48);
        double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36);
        java.lang.Double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray50);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray51, (double) (-1));
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray51);
        double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray51, (double) '#');
        java.lang.Double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray51);
        double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray57);
        int int60 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray24, (java.lang.Object) doubleArray57, 3);
        java.lang.Object obj61 = null;
        int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray24, obj61);
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray24);
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true, false, false]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 10.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[]");
    }

    @Test
    public void test06483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06483");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        java.lang.Boolean boolean32 = equalsBuilder31.build();
        boolean boolean33 = equalsBuilder31.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder36 = equalsBuilder31.append(true, true);
        long[] longArray38 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray38);
        boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(longArray38, 0L);
        long[] longArray43 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray43);
        long[] longArray45 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray43);
        int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray45, (long) 5, 10);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder49 = equalsBuilder31.append(longArray38, longArray45);
        java.lang.Byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY;
        float[] floatArray56 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray56);
        int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray56, 0.0f);
        java.lang.Float[] floatArray60 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray56);
        java.lang.Object[] objArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray60);
        float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray60);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder49.append((java.lang.Object[]) byteArray50, (java.lang.Object[]) floatArray60);
        byte[] byteArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray50, (byte) 0);
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray65);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(equalsBuilder36);
        org.junit.Assert.assertNotNull(longArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(longArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[-1]");
        org.junit.Assert.assertNotNull(longArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray62), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test06484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06484");
        char[] charArray6 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[] charArray13 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[] charArray20 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[] charArray27 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[] charArray34 = new char[] { 'a', ' ', '#', '#', 'a', 'a' };
        char[][] charArray35 = new char[][] { charArray6, charArray13, charArray20, charArray27, charArray34 };
        char[] charArray42 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray46 = new char[] { '#', 'a', 'a' };
        char[] charArray47 = org.apache.commons.lang3.ArrayUtils.addAll(charArray42, charArray46);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.subarray(charArray46, (int) 'a', (int) (short) 10);
        char[][] charArray51 = org.apache.commons.lang3.ArrayUtils.add(charArray35, (int) (short) 1, charArray50);
        char[] charArray52 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse(charArray52);
        org.apache.commons.lang3.ArrayUtils.reverse(charArray52);
        char[] charArray56 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray52, '#');
        char[] charArray62 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray66 = new char[] { '#', 'a', 'a' };
        char[] charArray67 = org.apache.commons.lang3.ArrayUtils.addAll(charArray62, charArray66);
        char[] charArray69 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray62, ' ');
        char[] charArray70 = org.apache.commons.lang3.ArrayUtils.addAll(charArray52, charArray62);
        char[] charArray72 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray70, 'a');
        char[] charArray73 = org.apache.commons.lang3.ArrayUtils.addAll(charArray50, charArray70);
        java.lang.Character[] charArray74 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY;
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray74, '4');
        java.lang.Character[] charArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray74);
        char[] charArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray77, ' ');
        char[] charArray80 = org.apache.commons.lang3.ArrayUtils.addAll(charArray73, charArray79);
        char[] charArray81 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray73);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a ##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a ##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a,  , #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "4#4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "4#4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[4, #, 4, #]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[4, #, a, 4, #]");
    }

    @Test
    public void test06485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06485");
        char[] charArray5 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray9 = new char[] { '#', 'a', 'a' };
        char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray9);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray9, (int) 'a', (int) (short) 10);
        char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray9, '4');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray15);
        char[] charArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15);
        char[] charArray18 = org.apache.commons.lang3.ArrayUtils.clone(charArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray15);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, a, a, #]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "4aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "4aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[4, a, a, #]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "4aa#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "4aa#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[4, a, a, #]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test06486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06486");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        double[] doubleArray11 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray11);
        float[] floatArray17 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray20 = new float[] { (byte) -1, 1L };
        int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray20, (float) 10L);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray17, floatArray20);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray11, (java.lang.Object) boolean23);
        double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11);
        java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25);
        double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) 100);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray28);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) 0, (double) 0L);
        double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (int) (byte) 1, 10);
        java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36, 100.0d);
        java.lang.Double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test06487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06487");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        long[] longArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray5, (long) 2, (int) 'a');
        long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray5, (long) 1);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray15 = org.apache.commons.lang3.ArrayUtils.add(longArray5, 2, (long) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[-1]");
    }

    @Test
    public void test06488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06488");
        java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0);
        long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        java.lang.Long[] longArray8 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray8);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray8, (long) (short) 10);
        long[] longArray12 = org.apache.commons.lang3.ArrayUtils.clone(longArray11);
        int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray0, (java.lang.Object) longArray11, (int) (byte) 100);
        long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0, 1L);
        long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0, (long) '#');
        java.lang.Object[] objArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray0);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0);
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) 9);
        org.junit.Assert.assertNotNull(longArray0);
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]");
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertNotNull(longArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(longArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[9]");
    }

    @Test
    public void test06489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06489");
        double[] doubleArray0 = new double[] {};
        double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray0, (int) '#', (int) (short) -1);
        int int4 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) doubleArray3);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) 3, 10, (double) (short) 0);
        double[] doubleArray12 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray12, (double) (byte) 100, 1.0d);
        double[] doubleArray20 = new double[] { (byte) 1, (byte) 0, 10, (-1.0f) };
        double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray12, doubleArray20);
        float[] floatArray26 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray29 = new float[] { (byte) -1, 1L };
        int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray29, (float) 10L);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray26, floatArray29);
        boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) doubleArray20, (java.lang.Object) boolean32);
        double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, (int) (short) 0, 1);
        double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray36, (double) (byte) -1);
        double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray38, (int) (byte) 100, 1);
        int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray41, (double) (-1L), (int) (short) 100, (double) 100.0f);
        double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray41);
        double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray46, (int) 'a', 3);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray49);
        double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.add(doubleArray49, (int) (short) 0, (double) 100);
        boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray3, doubleArray49);
        boolean boolean57 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) '#', 0.0d);
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray0), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 10.0, 52.0, 1.0, 0.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test06490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06490");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        java.lang.Long[] longArray34 = new java.lang.Long[] { 0L, 1L, 100L, 100L, 0L };
        long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray34);
        java.lang.Long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) longArray36);
        char[] charArray41 = new char[] { 'a', '#', ' ' };
        char[][] charArray42 = new char[][] { charArray41 };
        char[][] charArray43 = org.apache.commons.lang3.ArrayUtils.toArray(charArray42);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder44 = equalsBuilder28.append((java.lang.Object[]) longArray36, (java.lang.Object[]) charArray43);
        long[] longArray49 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray49, 1L);
        int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray49, 0L);
        long[] longArray58 = new long[] { ' ', 1, (short) -1, 0 };
        long[] longArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray58, 1L);
        int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray58, 0L);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder63 = equalsBuilder28.append(longArray49, longArray58);
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) shortArray64);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64);
        java.lang.Short[] shortArray67 = new java.lang.Short[] {};
        short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67);
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray67, (short) 1);
        short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70);
        int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray71, (short) (byte) -1, (int) (short) 100);
        short[] shortArray75 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray71);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder76 = equalsBuilder28.append(shortArray66, shortArray71);
        short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray66, 5, 100);
        java.lang.Short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray79);
        short[] shortArray82 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray80, (short) 0);
        short[] shortArray85 = org.apache.commons.lang3.ArrayUtils.add(shortArray82, (int) (short) 0, (short) 1);
        boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray85);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(longArray34);
        org.junit.Assert.assertNotNull(longArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[0, 1, 100, 100, 0]");
        org.junit.Assert.assertNotNull(longArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a# ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, #,  ]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertNotNull(equalsBuilder44);
        org.junit.Assert.assertNotNull(longArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(longArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[32, 1, -1, 0]");
        org.junit.Assert.assertNotNull(longArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[32, -1, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(equalsBuilder63);
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[]");
        org.junit.Assert.assertNotNull(shortArray67);
        org.junit.Assert.assertNotNull(shortArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]");
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(shortArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray75), "[]");
        org.junit.Assert.assertNotNull(equalsBuilder76);
        org.junit.Assert.assertNotNull(shortArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]");
        org.junit.Assert.assertNotNull(shortArray80);
        org.junit.Assert.assertNotNull(shortArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray82), "[]");
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[1]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test06491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06491");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.util.stream.Stream<java.lang.String> strStream13 = strList3.parallelStream();
        boolean boolean15 = strList3.add("{{#,#,#, ,#}}");
        java.lang.String[] strArray20 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray29 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29);
        float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.remove(floatArray29, (int) (short) 1);
        float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray23, floatArray32);
        boolean boolean34 = strList21.equals((java.lang.Object) floatArray33);
        int int35 = strList21.size();
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY;
        int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray36, (int) (byte) 1);
        boolean boolean39 = strList21.contains((java.lang.Object) int38);
        boolean boolean40 = strList3.addAll((java.util.Collection<java.lang.String>) strList21);
        java.lang.String[] strArray45 = new java.lang.String[] { "{}", "{}", "1", "{4,#,a,4,#}" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY;
        float[] floatArray54 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray54);
        float[] floatArray57 = org.apache.commons.lang3.ArrayUtils.remove(floatArray54, (int) (short) 1);
        float[] floatArray58 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray48, floatArray57);
        boolean boolean59 = strList46.equals((java.lang.Object) floatArray58);
        int int60 = strList46.size();
        boolean boolean61 = strList3.removeAll((java.util.Collection<java.lang.String>) strList46);
        java.util.stream.Stream<java.lang.String> strStream62 = strList3.parallelStream();
        java.lang.String[] strArray64 = new java.lang.String[] { "{true,true}" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.lang.String[] strArray69 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.stream.Stream<java.lang.String> strStream72 = strList70.parallelStream();
        java.lang.String[] strArray75 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.stream.Stream<java.lang.String> strStream78 = strList76.parallelStream();
        boolean boolean79 = strList70.addAll((java.util.Collection<java.lang.String>) strList76);
        java.lang.Object obj80 = null;
        boolean boolean81 = strList76.equals(obj80);
        int int82 = strList76.size();
        boolean boolean83 = strList65.removeAll((java.util.Collection<java.lang.String>) strList76);
        java.util.stream.Stream<java.lang.String> strStream84 = strList76.parallelStream();
        boolean boolean85 = strList3.retainAll((java.util.Collection<java.lang.String>) strList76);
        double[] doubleArray86 = null;
        double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.add(doubleArray86, 0, (double) 0L);
        java.lang.Double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray89);
        double[] doubleArray91 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray90);
        boolean boolean92 = strList3.remove((java.lang.Object) doubleArray90);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]");
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[]");
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray54), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray57), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray58), "[-1.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strStream62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strStream72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strStream78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test06492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06492");
        float[] floatArray5 = new float[] { (-1), (byte) 100, 100.0f, 10, '#' };
        java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5);
        float[] floatArray12 = new float[] { 100, (byte) 10, (-1L), 'a' };
        float[] floatArray15 = new float[] { (byte) -1, 1L };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray15, (float) 10L);
        boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray12, floatArray15);
        boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray15);
        java.lang.Float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5);
        java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray20);
        java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray20);
        float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray20);
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.add(floatArray23, (int) (short) 1, (float) 5);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.remove(floatArray26, 5);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(floatArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0, 10.0, -1.0, 97.0]");
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[-1.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[-1.0, 5.0, 100.0, 100.0, 10.0, 35.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 5.0, 100.0, 100.0, 10.0]");
    }

    @Test
    public void test06493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06493");
        short[] shortArray4 = new short[] { (short) 1, (short) -1, (short) 1, (short) 0 };
        short[] shortArray9 = new short[] { (short) 1, (short) -1, (short) 1, (short) 0 };
        short[] shortArray14 = new short[] { (short) 1, (short) -1, (short) 1, (short) 0 };
        short[] shortArray19 = new short[] { (short) 1, (short) -1, (short) 1, (short) 0 };
        short[] shortArray24 = new short[] { (short) 1, (short) -1, (short) 1, (short) 0 };
        short[][] shortArray25 = new short[][] { shortArray4, shortArray9, shortArray14, shortArray19, shortArray24 };
        short[] shortArray30 = new short[] { (short) 1, (short) -1, (short) 1, (short) 0 };
        short[] shortArray35 = new short[] { (short) 1, (short) -1, (short) 1, (short) 0 };
        short[] shortArray40 = new short[] { (short) 1, (short) -1, (short) 1, (short) 0 };
        short[] shortArray45 = new short[] { (short) 1, (short) -1, (short) 1, (short) 0 };
        short[] shortArray50 = new short[] { (short) 1, (short) -1, (short) 1, (short) 0 };
        short[][] shortArray51 = new short[][] { shortArray30, shortArray35, shortArray40, shortArray45, shortArray50 };
        short[] shortArray56 = new short[] { (short) 1, (short) -1, (short) 1, (short) 0 };
        short[] shortArray61 = new short[] { (short) 1, (short) -1, (short) 1, (short) 0 };
        short[] shortArray66 = new short[] { (short) 1, (short) -1, (short) 1, (short) 0 };
        short[] shortArray71 = new short[] { (short) 1, (short) -1, (short) 1, (short) 0 };
        short[] shortArray76 = new short[] { (short) 1, (short) -1, (short) 1, (short) 0 };
        short[][] shortArray77 = new short[][] { shortArray56, shortArray61, shortArray66, shortArray71, shortArray76 };
        short[][][] shortArray78 = new short[][][] { shortArray25, shortArray51, shortArray77 };
        short[] shortArray81 = new short[] { (short) 10 };
        short[] shortArray83 = new short[] { (short) 10 };
        short[] shortArray85 = new short[] { (short) 10 };
        short[] shortArray87 = new short[] { (short) 10 };
        short[][] shortArray88 = new short[][] { shortArray81, shortArray83, shortArray85, shortArray87 };
        short[][] shortArray89 = org.apache.commons.lang3.ArrayUtils.clone(shortArray88);
        short[][][] shortArray90 = org.apache.commons.lang3.ArrayUtils.add(shortArray78, (int) (short) 1, shortArray89);
        boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) shortArray90);
        boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) shortArray90);
        java.lang.Object obj93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) shortArray90, obj93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The Array must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1, -1, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1, -1, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, -1, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1, -1, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1, -1, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[1, -1, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[1, -1, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[1, -1, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray45), "[1, -1, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[1, -1, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[1, -1, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray61), "[1, -1, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[1, -1, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[1, -1, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[1, -1, 1, 0]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertNotNull(shortArray78);
        org.junit.Assert.assertNotNull(shortArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray81), "[10]");
        org.junit.Assert.assertNotNull(shortArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[10]");
        org.junit.Assert.assertNotNull(shortArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[10]");
        org.junit.Assert.assertNotNull(shortArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[10]");
        org.junit.Assert.assertNotNull(shortArray88);
        org.junit.Assert.assertNotNull(shortArray89);
        org.junit.Assert.assertNotNull(shortArray90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test06494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06494");
        long[] longArray1 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, 0L);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        org.apache.commons.lang3.ArrayUtils.reverse(longArray1);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray1);
        boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(longArray1, (long) (short) 100);
        long[] longArray11 = org.apache.commons.lang3.ArrayUtils.clone(longArray1);
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray11);
        int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray11, (long) (-1), (int) '4');
        long[] longArray16 = null;
        long[] longArray17 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray16);
        java.lang.Long[] longArray18 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY;
        java.lang.Long[] longArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray18);
        long[] longArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray18);
        java.lang.Long[] longArray21 = org.apache.commons.lang3.ArrayUtils.toObject(longArray20);
        long[] longArray24 = org.apache.commons.lang3.ArrayUtils.subarray(longArray20, (int) '4', (int) (short) 0);
        long[] longArray26 = new long[] { (short) -1 };
        org.apache.commons.lang3.ArrayUtils.reverse(longArray26);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(longArray26, 0L);
        long[] longArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray26);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray30, (long) (byte) 1, (int) (short) 1);
        int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray30, (long) 3, (int) 'a');
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains(longArray30, (long) 7);
        long[] longArray40 = org.apache.commons.lang3.ArrayUtils.remove(longArray30, (int) (byte) 0);
        long[] longArray41 = org.apache.commons.lang3.ArrayUtils.addAll(longArray20, longArray40);
        long[] longArray42 = org.apache.commons.lang3.ArrayUtils.addAll(longArray11, longArray41);
        // The following exception was thrown during execution in test generation
        try {
            long[] longArray45 = org.apache.commons.lang3.ArrayUtils.add(longArray42, (int) ' ', (long) 9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(longArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(longArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1]");
        org.junit.Assert.assertNotNull(longArray18);
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertNotNull(longArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[]");
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[]");
        org.junit.Assert.assertNotNull(longArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[-1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(longArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[]");
        org.junit.Assert.assertNotNull(longArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[]");
        org.junit.Assert.assertNotNull(longArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[-1]");
    }

    @Test
    public void test06495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06495");
        double[] doubleArray3 = new double[] { (-1.0f), 10.0d, '4' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) (byte) 100, 1.0d);
        org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3);
        int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) 1, (int) (short) 100);
        int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 10, (double) (byte) 100);
        java.lang.Double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3);
        boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray3);
        double[] doubleArray16 = null;
        double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[52.0, 10.0, -1.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    }

    @Test
    public void test06496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06496");
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder0 = new org.apache.commons.lang3.builder.EqualsBuilder();
        char[] charArray6 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray10 = new char[] { '#', 'a', 'a' };
        char[] charArray11 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray10);
        char[] charArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' ');
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        char[] charArray23 = new char[] { '#', 'a', 'a' };
        char[] charArray24 = org.apache.commons.lang3.ArrayUtils.addAll(charArray19, charArray23);
        int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray23, ' ', 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder28 = equalsBuilder0.append((java.lang.Object) ' ', (java.lang.Object) charArray23);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder31 = equalsBuilder0.append((int) (short) 1, 10);
        boolean boolean32 = equalsBuilder0.isEquals();
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder34 = equalsBuilder0.appendSuper(false);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) 100, (byte) 100, (byte) 1, (byte) 1, (byte) 1 };
        java.lang.Byte[][] byteArray47 = new java.lang.Byte[][] { byteArray40, byteArray46 };
        java.lang.Byte[][] byteArray50 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray47, (int) '#', 10);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray57);
        java.lang.Byte[][] byteArray59 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray47, (java.lang.Object) intArray57);
        java.lang.Integer[] intArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray57);
        java.lang.Short[] shortArray61 = null;
        java.lang.Short[] shortArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray61);
        java.lang.Short[] shortArray63 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray62);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder64 = equalsBuilder34.append((java.lang.Object[]) intArray57, (java.lang.Object[]) shortArray63);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder67 = equalsBuilder64.append((byte) 100, (byte) 1);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder70 = equalsBuilder64.append(true, true);
        org.apache.commons.lang3.builder.EqualsBuilder equalsBuilder73 = equalsBuilder70.append((long) 2, 0L);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#a4#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, a, 4, #]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a, a]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4#a4##aa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, #, a, 4, #, #, a, a]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(equalsBuilder28);
        org.junit.Assert.assertNotNull(equalsBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(equalsBuilder34);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertNotNull(shortArray62);
        org.junit.Assert.assertNotNull(shortArray63);
        org.junit.Assert.assertNotNull(equalsBuilder64);
        org.junit.Assert.assertNotNull(equalsBuilder67);
        org.junit.Assert.assertNotNull(equalsBuilder70);
        org.junit.Assert.assertNotNull(equalsBuilder73);
    }

    @Test
    public void test06497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06497");
        java.lang.String[] strArray2 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.stream.Stream<java.lang.String> strStream5 = strList3.parallelStream();
        java.lang.String[] strArray8 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.stream.Stream<java.lang.String> strStream11 = strList9.parallelStream();
        boolean boolean12 = strList3.addAll((java.util.Collection<java.lang.String>) strList9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strList9.equals(obj13);
        java.util.stream.Stream<java.lang.String> strStream15 = strList9.parallelStream();
        java.lang.Byte[] byteArray22 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray22, (byte) 1);
        boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Object[]) byteArray22);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 1, (byte) -1 };
        java.lang.Byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray31);
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 1, 0, 10, (-1), 1 };
        int[] intArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray39);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray39);
        int int42 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray32, (java.lang.Object) intArray39);
        byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32, (byte) 10);
        int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray44, (byte) 10);
        java.lang.String[] strArray50 = new java.lang.String[] { "{}", "1", "{}" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        boolean boolean53 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) boolean25, (java.lang.Object) (byte) 10, (java.util.Collection<java.lang.String>) strList51);
        boolean boolean54 = strList9.retainAll((java.util.Collection<java.lang.String>) strList51);
        strList9.clear();
        short[] shortArray60 = new short[] { (short) -1, (byte) 0, (byte) 0, (byte) 1 };
        int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray60, (short) (byte) 100, (int) 'a');
        java.lang.Short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray60);
        short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray64, (short) (byte) 0);
        int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray66, (short) (byte) 100);
        java.lang.Short[] shortArray69 = new java.lang.Short[] {};
        short[] shortArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray69);
        short[] shortArray72 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray69, (short) 1);
        int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray72, (short) 0);
        boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray72);
        short[] shortArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray72);
        short[] shortArray77 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray66, shortArray72);
        boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) strList9, (java.lang.Object) shortArray77);
        boolean boolean79 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray77);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strStream15);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 1, 0, 10, -1, 1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, 1, 100, 1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(shortArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray60), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(shortArray64);
        org.junit.Assert.assertNotNull(shortArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(shortArray69);
        org.junit.Assert.assertNotNull(shortArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[]");
        org.junit.Assert.assertNotNull(shortArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray72), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(shortArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[]");
        org.junit.Assert.assertNotNull(shortArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray77), "[-1, 0, 0, 1]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test06498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06498");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.clone(byteArray10);
        byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.add(byteArray10, (byte) 10);
        java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray20, (byte) 1);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(byteArray22, (byte) 100);
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(byteArray22, (byte) 1);
        java.lang.Byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray22);
        byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray27, (byte) 100);
        byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.add(byteArray29, (byte) 10);
        byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.clone(byteArray31);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray31);
        byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.add(byteArray31, (byte) 100);
        byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray35, (byte) 0);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray37);
        byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.add(byteArray37, 0, (byte) 10);
        byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray13, byteArray37);
        java.lang.String str43 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) byteArray37);
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, 100, -1, -1, 0]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 0, -1, -1, 100, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 0, 100, -1, -1, 0, 10]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 0, -1, -1, 100, 0, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100, 0, 0, 100, -1, -1, 10]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 100, 0, 0, 100, -1, -1, 10]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[10, 100, 0, 0, 100, -1, -1, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{100,0,0,100,-1,-1,10}" + "'", str43, "{100,0,0,100,-1,-1,10}");
    }

    @Test
    public void test06499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06499");
        byte[] byteArray0 = new byte[] {};
        byte[] byteArray5 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray0, byteArray5);
        int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) -1);
        byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (byte) -1);
        int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 1);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray0);
        int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 0);
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray0);
        byte[] byteArray17 = new byte[] {};
        byte[] byteArray22 = new byte[] { (byte) 10, (byte) 1, (byte) -1, (byte) 10 };
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray17, byteArray22);
        int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray17, (byte) -1);
        short[] shortArray27 = new short[] { (short) 10 };
        short[] shortArray29 = new short[] { (short) 10 };
        short[] shortArray31 = new short[] { (short) 10 };
        short[] shortArray33 = new short[] { (short) 10 };
        short[][] shortArray34 = new short[][] { shortArray27, shortArray29, shortArray31, shortArray33 };
        short[][] shortArray35 = org.apache.commons.lang3.ArrayUtils.clone(shortArray34);
        java.lang.String[] strArray38 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.stream.Stream<java.lang.String> strStream41 = strList39.parallelStream();
        java.lang.String[] strArray44 = new java.lang.String[] { "4", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.stream.Stream<java.lang.String> strStream47 = strList45.parallelStream();
        boolean boolean48 = strList39.addAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean50 = strList45.add("{4,#,a,4,#}");
        boolean boolean51 = org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals((java.lang.Object) byteArray17, (java.lang.Object) shortArray34, (java.util.Collection<java.lang.String>) strList45);
        byte[] byteArray52 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray17);
        org.apache.commons.lang3.ArrayUtils.reverse(byteArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray52, (byte) 0);
        int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray52, (byte) 10, (int) 'a');
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 1, -1, 10]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[10]");
        org.junit.Assert.assertNotNull(shortArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[10]");
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[10]");
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[10]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strStream47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test06500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06500");
        boolean[] booleanArray3 = new boolean[] { true, true, true };
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, true);
        boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray3, false);
        boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray3);
        int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false, 1);
        java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray8);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) booleanArray12);
        java.lang.Float[] floatArray15 = new java.lang.Float[] { 10.0f };
        java.lang.Float[] floatArray17 = new java.lang.Float[] { 10.0f };
        java.lang.Float[][] floatArray18 = new java.lang.Float[][] { floatArray15, floatArray17 };
        java.lang.Float[] floatArray20 = new java.lang.Float[] { 10.0f };
        java.lang.Float[] floatArray22 = new java.lang.Float[] { 10.0f };
        java.lang.Float[][] floatArray23 = new java.lang.Float[][] { floatArray20, floatArray22 };
        java.lang.Float[] floatArray25 = new java.lang.Float[] { 10.0f };
        java.lang.Float[] floatArray27 = new java.lang.Float[] { 10.0f };
        java.lang.Float[][] floatArray28 = new java.lang.Float[][] { floatArray25, floatArray27 };
        java.lang.Float[][][] floatArray29 = new java.lang.Float[][][] { floatArray18, floatArray23, floatArray28 };
        java.lang.Float[] floatArray31 = new java.lang.Float[] { 10.0f };
        java.lang.Float[] floatArray33 = new java.lang.Float[] { 10.0f };
        java.lang.Float[][] floatArray34 = new java.lang.Float[][] { floatArray31, floatArray33 };
        java.lang.Float[] floatArray36 = new java.lang.Float[] { 10.0f };
        java.lang.Float[] floatArray38 = new java.lang.Float[] { 10.0f };
        java.lang.Float[][] floatArray39 = new java.lang.Float[][] { floatArray36, floatArray38 };
        java.lang.Float[] floatArray41 = new java.lang.Float[] { 10.0f };
        java.lang.Float[] floatArray43 = new java.lang.Float[] { 10.0f };
        java.lang.Float[][] floatArray44 = new java.lang.Float[][] { floatArray41, floatArray43 };
        java.lang.Float[][][] floatArray45 = new java.lang.Float[][][] { floatArray34, floatArray39, floatArray44 };
        java.lang.Float[] floatArray47 = new java.lang.Float[] { 10.0f };
        java.lang.Float[] floatArray49 = new java.lang.Float[] { 10.0f };
        java.lang.Float[][] floatArray50 = new java.lang.Float[][] { floatArray47, floatArray49 };
        java.lang.Float[] floatArray52 = new java.lang.Float[] { 10.0f };
        java.lang.Float[] floatArray54 = new java.lang.Float[] { 10.0f };
        java.lang.Float[][] floatArray55 = new java.lang.Float[][] { floatArray52, floatArray54 };
        java.lang.Float[] floatArray57 = new java.lang.Float[] { 10.0f };
        java.lang.Float[] floatArray59 = new java.lang.Float[] { 10.0f };
        java.lang.Float[][] floatArray60 = new java.lang.Float[][] { floatArray57, floatArray59 };
        java.lang.Float[][][] floatArray61 = new java.lang.Float[][][] { floatArray50, floatArray55, floatArray60 };
        java.lang.Float[] floatArray63 = new java.lang.Float[] { 10.0f };
        java.lang.Float[] floatArray65 = new java.lang.Float[] { 10.0f };
        java.lang.Float[][] floatArray66 = new java.lang.Float[][] { floatArray63, floatArray65 };
        java.lang.Float[] floatArray68 = new java.lang.Float[] { 10.0f };
        java.lang.Float[] floatArray70 = new java.lang.Float[] { 10.0f };
        java.lang.Float[][] floatArray71 = new java.lang.Float[][] { floatArray68, floatArray70 };
        java.lang.Float[] floatArray73 = new java.lang.Float[] { 10.0f };
        java.lang.Float[] floatArray75 = new java.lang.Float[] { 10.0f };
        java.lang.Float[][] floatArray76 = new java.lang.Float[][] { floatArray73, floatArray75 };
        java.lang.Float[][][] floatArray77 = new java.lang.Float[][][] { floatArray66, floatArray71, floatArray76 };
        java.lang.Float[][][][] floatArray78 = new java.lang.Float[][][][] { floatArray29, floatArray45, floatArray61, floatArray77 };
        java.lang.Float[][][][] floatArray79 = org.apache.commons.lang3.ArrayUtils.toArray(floatArray78);
        int int81 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray12, (java.lang.Object) floatArray79, (int) (byte) 1);
        java.lang.Boolean[] booleanArray82 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray12);
        java.lang.Boolean[] booleanArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray82);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[true, true, true]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, true]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(floatArray15);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertNotNull(floatArray33);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertNotNull(floatArray38);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertNotNull(floatArray44);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertNotNull(floatArray55);
        org.junit.Assert.assertNotNull(floatArray57);
        org.junit.Assert.assertNotNull(floatArray59);
        org.junit.Assert.assertNotNull(floatArray60);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertNotNull(floatArray63);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertNotNull(floatArray66);
        org.junit.Assert.assertNotNull(floatArray68);
        org.junit.Assert.assertNotNull(floatArray70);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertNotNull(floatArray73);
        org.junit.Assert.assertNotNull(floatArray75);
        org.junit.Assert.assertNotNull(floatArray76);
        org.junit.Assert.assertNotNull(floatArray77);
        org.junit.Assert.assertNotNull(floatArray78);
        org.junit.Assert.assertNotNull(floatArray79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertNotNull(booleanArray83);
    }
}

